import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest10 {

    public static boolean debug = false;

    @Test
    public void test05001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05001");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (byte) 100, (int) (short) 1);
        java.io.Writer writer4 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean5 = unicodeEscaper2.translate(0, writer4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
    }

    @Test
    public void test05002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05002");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 100, (int) (byte) 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) (byte) 10);
        java.lang.String str7 = unicodeEscaper5.translate((java.lang.CharSequence) "java.io.IOException");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper9 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) (short) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper12 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '#', 100);
        java.lang.String str14 = unicodeEscaper12.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper17 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) '4', (int) (short) 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper20 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper23 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', (int) (short) 0);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray24 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper23 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator25 = unicodeEscaper20.with(charSequenceTranslatorArray24);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator26 = unicodeEscaper17.with(charSequenceTranslatorArray24);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator27 = unicodeEscaper12.with(charSequenceTranslatorArray24);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator28 = unicodeEscaper9.with(charSequenceTranslatorArray24);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper31 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper34 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer36 = null;
        boolean boolean37 = unicodeEscaper34.translate((int) '4', writer36);
        java.io.Writer writer39 = null;
        boolean boolean40 = unicodeEscaper34.translate((int) (byte) -1, writer39);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper43 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper45 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper47 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str49 = unicodeEscaper47.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray50 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper43, unicodeEscaper45, unicodeEscaper47 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator51 = unicodeEscaper34.with(charSequenceTranslatorArray50);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator52 = unicodeEscaper31.with(charSequenceTranslatorArray50);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator53 = unicodeEscaper9.with(charSequenceTranslatorArray50);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator54 = unicodeEscaper5.with(charSequenceTranslatorArray50);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper57 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 10, (-1));
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper60 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 100, (int) (short) 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper63 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer65 = null;
        boolean boolean66 = unicodeEscaper63.translate((int) (short) 10, writer65);
        java.lang.String str68 = unicodeEscaper63.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper71 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer73 = null;
        boolean boolean74 = unicodeEscaper71.translate((int) '4', writer73);
        java.io.Writer writer76 = null;
        boolean boolean77 = unicodeEscaper71.translate((int) (byte) -1, writer76);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper80 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper82 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper84 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str86 = unicodeEscaper84.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray87 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper80, unicodeEscaper82, unicodeEscaper84 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator88 = unicodeEscaper71.with(charSequenceTranslatorArray87);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator89 = unicodeEscaper63.with(charSequenceTranslatorArray87);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator90 = unicodeEscaper60.with(charSequenceTranslatorArray87);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator91 = unicodeEscaper57.with(charSequenceTranslatorArray87);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator92 = unicodeEscaper5.with(charSequenceTranslatorArray87);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator93 = unicodeEscaper2.with(charSequenceTranslatorArray87);
        java.io.Writer writer96 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int97 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (-1), writer96);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str7, "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertNotNull(unicodeEscaper9);
        org.junit.Assert.assertNotNull(unicodeEscaper12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str14, "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertNotNull(unicodeEscaper17);
        org.junit.Assert.assertNotNull(unicodeEscaper20);
        org.junit.Assert.assertNotNull(unicodeEscaper23);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray24);
        org.junit.Assert.assertNotNull(charSequenceTranslator25);
        org.junit.Assert.assertNotNull(charSequenceTranslator26);
        org.junit.Assert.assertNotNull(charSequenceTranslator27);
        org.junit.Assert.assertNotNull(charSequenceTranslator28);
        org.junit.Assert.assertNotNull(unicodeEscaper31);
        org.junit.Assert.assertNotNull(unicodeEscaper34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper43);
        org.junit.Assert.assertNotNull(unicodeEscaper45);
        org.junit.Assert.assertNotNull(unicodeEscaper47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str49, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray50);
        org.junit.Assert.assertNotNull(charSequenceTranslator51);
        org.junit.Assert.assertNotNull(charSequenceTranslator52);
        org.junit.Assert.assertNotNull(charSequenceTranslator53);
        org.junit.Assert.assertNotNull(charSequenceTranslator54);
        org.junit.Assert.assertNotNull(unicodeEscaper57);
        org.junit.Assert.assertNotNull(unicodeEscaper60);
        org.junit.Assert.assertNotNull(unicodeEscaper63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "0" + "'", str68, "0");
        org.junit.Assert.assertNotNull(unicodeEscaper71);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper80);
        org.junit.Assert.assertNotNull(unicodeEscaper82);
        org.junit.Assert.assertNotNull(unicodeEscaper84);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str86, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray87);
        org.junit.Assert.assertNotNull(charSequenceTranslator88);
        org.junit.Assert.assertNotNull(charSequenceTranslator89);
        org.junit.Assert.assertNotNull(charSequenceTranslator90);
        org.junit.Assert.assertNotNull(charSequenceTranslator91);
        org.junit.Assert.assertNotNull(charSequenceTranslator92);
        org.junit.Assert.assertNotNull(charSequenceTranslator93);
    }

    @Test
    public void test05003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05003");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (byte) 100, (int) (byte) 0);
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: \\u0036\\u0034");
        java.io.Writer writer6 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate((java.lang.CharSequence) "\\u006A\\u005C\\u0075\\u0030\\u0030\\u0036\\u0031\\u0076\\u005C\\u0075\\u0030\\u0030\\u0036\\u0031\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u005C\\u0075\\u0030\\u0030\\u0036\\u0033\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u005C\\u0075\\u0030\\u0030\\u0036\\u0031\\u0076\\u005C\\u0075\\u0030\\u0030\\u0036\\u0031\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u005C\\u0075\\u0030\\u0030\\u0036\\u0033\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", writer6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034" + "'", str4, "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034");
    }

    @Test
    public void test05004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05004");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper1 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (short) 1);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray2 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator3 = unicodeEscaper1.with(charSequenceTranslatorArray2);
        java.io.Writer writer5 = null;
        boolean boolean6 = unicodeEscaper1.translate((int) '#', writer5);
        java.io.Writer writer8 = null;
        boolean boolean9 = unicodeEscaper1.translate(10, writer8);
        java.io.Writer writer12 = null;
        int int13 = unicodeEscaper1.translate((java.lang.CharSequence) "\\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\u0063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E:\\\\u00750020\\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\u0063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E", 1, writer12);
        java.lang.String str15 = unicodeEscaper1.translate((java.lang.CharSequence) "\\u005C\\u0075\\u0030\\u0030\\u0033\\u0032\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper18 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer20 = null;
        boolean boolean21 = unicodeEscaper18.translate((int) (short) 10, writer20);
        java.lang.String str23 = unicodeEscaper18.translate((java.lang.CharSequence) "0");
        java.io.Writer writer25 = null;
        boolean boolean26 = unicodeEscaper18.translate((int) ' ', writer25);
        java.io.Writer writer28 = null;
        boolean boolean29 = unicodeEscaper18.translate(1, writer28);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper32 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer34 = null;
        boolean boolean35 = unicodeEscaper32.translate((int) '4', writer34);
        java.io.Writer writer37 = null;
        boolean boolean38 = unicodeEscaper32.translate((int) (byte) -1, writer37);
        java.lang.String str40 = unicodeEscaper32.translate((java.lang.CharSequence) "java.io.IOException");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper43 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, 10);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper46 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper48 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer50 = null;
        boolean boolean51 = unicodeEscaper48.translate((int) ' ', writer50);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper54 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str56 = unicodeEscaper54.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray57 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator58 = unicodeEscaper54.with(charSequenceTranslatorArray57);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator59 = unicodeEscaper48.with(charSequenceTranslatorArray57);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator60 = unicodeEscaper46.with(charSequenceTranslatorArray57);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator61 = unicodeEscaper43.with(charSequenceTranslatorArray57);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator62 = unicodeEscaper32.with(charSequenceTranslatorArray57);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator63 = unicodeEscaper18.with(charSequenceTranslatorArray57);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator64 = unicodeEscaper1.with(charSequenceTranslatorArray57);
        java.io.Writer writer66 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceTranslator64.translate((java.lang.CharSequence) "java.io.IOException: \\u006A\\u0061\\u0076\\u0061.\\u0069\\u006F.\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A \\u005C\\u0075003\\u0036\\u005C\\u00750034", writer66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper1);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray2);
        org.junit.Assert.assertNotNull(charSequenceTranslator3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\\u005C\\u0075\\u0030\\u0030\\u0033\\u0032\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030" + "'", str15, "\\u005C\\u0075\\u0030\\u0030\\u0033\\u0032\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030");
        org.junit.Assert.assertNotNull(unicodeEscaper18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "0" + "'", str23, "0");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "java.io.IOException" + "'", str40, "java.io.IOException");
        org.junit.Assert.assertNotNull(unicodeEscaper43);
        org.junit.Assert.assertNotNull(unicodeEscaper46);
        org.junit.Assert.assertNotNull(unicodeEscaper48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "0" + "'", str56, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray57);
        org.junit.Assert.assertNotNull(charSequenceTranslator58);
        org.junit.Assert.assertNotNull(charSequenceTranslator59);
        org.junit.Assert.assertNotNull(charSequenceTranslator60);
        org.junit.Assert.assertNotNull(charSequenceTranslator61);
        org.junit.Assert.assertNotNull(charSequenceTranslator62);
        org.junit.Assert.assertNotNull(charSequenceTranslator63);
        org.junit.Assert.assertNotNull(charSequenceTranslator64);
    }

    @Test
    public void test05005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05005");
        java.lang.Throwable throwable1 = null;
        java.io.IOException iOException2 = new java.io.IOException("\\\\u00750068\\\\u00750069\\\\u00750021", throwable1);
        java.io.IOException iOException3 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException5 = new java.io.IOException("java.io.IOException: java.io.IOException: java.io.IOException: \\\\u00750068\\\\u00750069\\\\u00750021");
        iOException3.addSuppressed((java.lang.Throwable) iOException5);
        java.lang.Throwable[] throwableArray7 = iOException3.getSuppressed();
        java.lang.String str8 = iOException3.toString();
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "java.io.IOException: java.io.IOException: \\\\u00750068\\\\u00750069\\\\u00750021" + "'", str8, "java.io.IOException: java.io.IOException: \\\\u00750068\\\\u00750069\\\\u00750021");
    }

    @Test
    public void test05006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05006");
        java.io.IOException iOException3 = new java.io.IOException();
        java.io.IOException iOException4 = new java.io.IOException();
        iOException3.addSuppressed((java.lang.Throwable) iOException4);
        java.io.IOException iOException6 = new java.io.IOException("0", (java.lang.Throwable) iOException3);
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.io.IOException iOException9 = new java.io.IOException((java.lang.Throwable) iOException8);
        java.lang.Throwable[] throwableArray10 = iOException9.getSuppressed();
        java.io.IOException iOException11 = new java.io.IOException("java.io.IOException: java.io.IOException", (java.lang.Throwable) iOException9);
        java.io.IOException iOException12 = new java.io.IOException("\\u005Cu\\u0030\\u0030\\u0036\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0032\\u0031", (java.lang.Throwable) iOException9);
        java.io.IOException iOException13 = new java.io.IOException((java.lang.Throwable) iOException9);
        java.io.IOException iOException15 = new java.io.IOException("\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034");
        java.io.IOException iOException17 = new java.io.IOException();
        java.io.IOException iOException18 = new java.io.IOException();
        iOException17.addSuppressed((java.lang.Throwable) iOException18);
        java.io.IOException iOException20 = new java.io.IOException("0", (java.lang.Throwable) iOException17);
        java.io.IOException iOException21 = new java.io.IOException((java.lang.Throwable) iOException20);
        java.io.IOException iOException22 = new java.io.IOException((java.lang.Throwable) iOException21);
        java.io.IOException iOException23 = new java.io.IOException();
        java.io.IOException iOException24 = new java.io.IOException();
        iOException23.addSuppressed((java.lang.Throwable) iOException24);
        java.io.IOException iOException26 = new java.io.IOException();
        java.io.IOException iOException27 = new java.io.IOException();
        iOException26.addSuppressed((java.lang.Throwable) iOException27);
        java.lang.Throwable[] throwableArray29 = iOException27.getSuppressed();
        java.io.IOException iOException30 = new java.io.IOException((java.lang.Throwable) iOException27);
        java.io.IOException iOException32 = new java.io.IOException("");
        java.io.IOException iOException33 = new java.io.IOException((java.lang.Throwable) iOException32);
        iOException27.addSuppressed((java.lang.Throwable) iOException33);
        iOException24.addSuppressed((java.lang.Throwable) iOException33);
        iOException22.addSuppressed((java.lang.Throwable) iOException33);
        java.io.IOException iOException37 = new java.io.IOException((java.lang.Throwable) iOException22);
        iOException15.addSuppressed((java.lang.Throwable) iOException37);
        java.io.IOException iOException40 = new java.io.IOException("java.io.IOException: \\u005C\\u007500\\u0035\\u0043\\u0075\\u005C\\u00750030\\u005C\\u00750030\\u005C\\u00750033\\u005C\\u00750030");
        java.io.IOException iOException44 = new java.io.IOException("");
        java.io.IOException iOException45 = new java.io.IOException("A", (java.lang.Throwable) iOException44);
        java.io.IOException iOException46 = new java.io.IOException((java.lang.Throwable) iOException44);
        java.io.IOException iOException47 = new java.io.IOException((java.lang.Throwable) iOException46);
        java.io.IOException iOException48 = new java.io.IOException("\\u0036\\u0034", (java.lang.Throwable) iOException46);
        java.io.IOException iOException50 = new java.io.IOException();
        java.io.IOException iOException51 = new java.io.IOException();
        iOException50.addSuppressed((java.lang.Throwable) iOException51);
        java.io.IOException iOException53 = new java.io.IOException("0", (java.lang.Throwable) iOException50);
        java.io.IOException iOException54 = new java.io.IOException((java.lang.Throwable) iOException53);
        java.io.IOException iOException55 = new java.io.IOException((java.lang.Throwable) iOException54);
        iOException46.addSuppressed((java.lang.Throwable) iOException54);
        java.io.IOException iOException57 = new java.io.IOException();
        java.io.IOException iOException58 = new java.io.IOException();
        iOException57.addSuppressed((java.lang.Throwable) iOException58);
        java.io.IOException iOException60 = new java.io.IOException();
        java.io.IOException iOException61 = new java.io.IOException();
        iOException60.addSuppressed((java.lang.Throwable) iOException61);
        java.lang.Throwable[] throwableArray63 = iOException61.getSuppressed();
        java.io.IOException iOException64 = new java.io.IOException((java.lang.Throwable) iOException61);
        java.io.IOException iOException66 = new java.io.IOException("");
        java.io.IOException iOException67 = new java.io.IOException((java.lang.Throwable) iOException66);
        iOException61.addSuppressed((java.lang.Throwable) iOException67);
        iOException58.addSuppressed((java.lang.Throwable) iOException67);
        java.lang.Throwable[] throwableArray70 = iOException58.getSuppressed();
        java.lang.Throwable[] throwableArray71 = iOException58.getSuppressed();
        java.lang.Throwable[] throwableArray72 = iOException58.getSuppressed();
        java.io.IOException iOException74 = new java.io.IOException("0");
        java.io.IOException iOException75 = new java.io.IOException((java.lang.Throwable) iOException74);
        iOException58.addSuppressed((java.lang.Throwable) iOException74);
        iOException54.addSuppressed((java.lang.Throwable) iOException58);
        iOException40.addSuppressed((java.lang.Throwable) iOException58);
        java.lang.Throwable[] throwableArray79 = iOException40.getSuppressed();
        iOException37.addSuppressed((java.lang.Throwable) iOException40);
        iOException13.addSuppressed((java.lang.Throwable) iOException40);
        java.lang.String str82 = iOException13.toString();
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(throwableArray70);
        org.junit.Assert.assertNotNull(throwableArray71);
        org.junit.Assert.assertNotNull(throwableArray72);
        org.junit.Assert.assertNotNull(throwableArray79);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: 0" + "'", str82, "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: 0");
    }

    @Test
    public void test05007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05007");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        java.io.Writer writer6 = null;
        boolean boolean7 = unicodeEscaper2.translate((int) (byte) -1, writer6);
        java.io.Writer writer10 = null;
        int int11 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: \\u005C\\u0075\\u0030\\u0030\\u0036\\u0041\\u0061\\u005C\\u0075\\u0030\\u0030\\u0037\\u0036\\u0061\\u002E\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u005C\\u0075\\u0030\\u0030\\u0036\\u0046\\u002E\\u0049\\u004F\\u0045\\u005C\\u0075\\u0030\\u0030\\u0037\\u0038\\u005C\\u0075\\u0030\\u0030\\u0036\\u0033\\u005C\\u0075\\u0030\\u0030\\u0036\\u0035\\u005C\\u0075\\u0030\\u0030\\u0037\\u0030\\u005C\\u0075\\u0030\\u0030\\u0037\\u0034\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u005C\\u0075\\u0030\\u0030\\u0036\\u0046\\u005C\\u0075\\u0030\\u0030\\u0036\\u0045\\u003A\\u0020\\u0030", (int) '4', writer10);
        java.io.Writer writer14 = null;
        int int15 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u0068\\u0069\\u005C\\u0075\\u0030\\u0030\\u0032\\u0031", (int) (byte) 10, writer14);
        java.io.Writer writer17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = unicodeEscaper2.translate((int) (byte) 1, writer17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str4, "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test05008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05008");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) '#', (int) 'a');
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) (short) -1, writer4);
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper2.translate((int) (byte) 1, writer7);
        java.io.Writer writer10 = null;
        boolean boolean11 = unicodeEscaper2.translate((int) (short) 0, writer10);
        java.io.Writer writer14 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int15 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u005C\\u0075\\u0030\\u0030\\u0036\\u0041\\u0061\\u005C\\u0075\\u0030\\u0030\\u0037\\u0036\\u0061\\u002E\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u005C\\u0075\\u0030\\u0030\\u0036\\u0046\\u002E\\u0049\\u004F\\u0045\\u005C\\u0075\\u0030\\u0030\\u0037\\u0038\\u0063\\u005C\\u0075\\u0030\\u0030\\u0036\\u0035\\u005C\\u0075\\u0030\\u0030\\u0037\\u0030\\u005C\\u0075\\u0030\\u0030\\u0037\\u0034\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u005C\\u0075\\u0030\\u0030\\u0036\\u0046\\u005C\\u0075\\u0030\\u0030\\u0036\\u0045\\u003A\\u0020\\u0036\\u0031", (int) (byte) 0, writer14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test05009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05009");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper1 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 1);
        java.lang.String str3 = unicodeEscaper1.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: 0");
        java.io.Writer writer5 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper1.translate((java.lang.CharSequence) "\\\\u00750068\\\\u00750069\\\\u00750021", writer5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: 0" + "'", str3, "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: 0");
    }

    @Test
    public void test05010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05010");
        java.io.IOException iOException1 = new java.io.IOException("java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030");
        java.io.IOException iOException2 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.lang.Throwable[] throwableArray3 = iOException1.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray3);
    }

    @Test
    public void test05011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05011");
        java.io.IOException iOException2 = new java.io.IOException();
        java.io.IOException iOException3 = new java.io.IOException();
        iOException2.addSuppressed((java.lang.Throwable) iOException3);
        java.io.IOException iOException5 = new java.io.IOException("0", (java.lang.Throwable) iOException2);
        java.lang.Throwable[] throwableArray6 = iOException5.getSuppressed();
        java.io.IOException iOException7 = new java.io.IOException("", (java.lang.Throwable) iOException5);
        java.io.IOException iOException10 = new java.io.IOException("");
        java.io.IOException iOException11 = new java.io.IOException((java.lang.Throwable) iOException10);
        java.io.IOException iOException13 = new java.io.IOException("");
        iOException11.addSuppressed((java.lang.Throwable) iOException13);
        java.io.IOException iOException15 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException13);
        java.io.IOException iOException17 = new java.io.IOException("");
        java.io.IOException iOException18 = new java.io.IOException((java.lang.Throwable) iOException17);
        java.io.IOException iOException19 = new java.io.IOException((java.lang.Throwable) iOException17);
        iOException15.addSuppressed((java.lang.Throwable) iOException17);
        iOException5.addSuppressed((java.lang.Throwable) iOException15);
        java.lang.String str22 = iOException15.toString();
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "java.io.IOException: java.io.IOException" + "'", str22, "java.io.IOException: java.io.IOException");
    }

    @Test
    public void test05012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05012");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 100, 1);
        java.io.Writer writer5 = null;
        int int6 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: ", (int) (byte) 0, writer5);
        java.io.Writer writer8 = null;
        boolean boolean9 = unicodeEscaper2.translate((int) ' ', writer8);
        java.io.Writer writer11 = null;
        boolean boolean12 = unicodeEscaper2.translate((int) (byte) 10, writer11);
        java.lang.String str14 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u00200");
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u00200" + "'", str14, "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u00200");
    }

    @Test
    public void test05013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05013");
        java.io.IOException iOException5 = new java.io.IOException("0");
        java.lang.Throwable[] throwableArray6 = iOException5.getSuppressed();
        java.io.IOException iOException7 = new java.io.IOException("hi!", (java.lang.Throwable) iOException5);
        java.io.IOException iOException9 = new java.io.IOException("");
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException9);
        java.io.IOException iOException12 = new java.io.IOException("");
        iOException10.addSuppressed((java.lang.Throwable) iOException12);
        java.io.IOException iOException15 = new java.io.IOException("");
        java.io.IOException iOException16 = new java.io.IOException((java.lang.Throwable) iOException15);
        java.io.IOException iOException18 = new java.io.IOException("");
        iOException16.addSuppressed((java.lang.Throwable) iOException18);
        iOException10.addSuppressed((java.lang.Throwable) iOException16);
        iOException7.addSuppressed((java.lang.Throwable) iOException10);
        java.io.IOException iOException22 = new java.io.IOException("java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception", (java.lang.Throwable) iOException10);
        java.io.IOException iOException23 = new java.io.IOException("\\u0068\\u0069\\u0021", (java.lang.Throwable) iOException10);
        java.lang.Throwable[] throwableArray24 = iOException23.getSuppressed();
        java.io.IOException iOException25 = new java.io.IOException("java.io.IOException: java.io.IOException: java.io.IOException", (java.lang.Throwable) iOException23);
        java.io.IOException iOException26 = new java.io.IOException((java.lang.Throwable) iOException25);
        java.io.IOException iOException28 = new java.io.IOException("64");
        java.io.IOException iOException29 = new java.io.IOException((java.lang.Throwable) iOException28);
        iOException25.addSuppressed((java.lang.Throwable) iOException29);
        java.io.IOException iOException31 = new java.io.IOException((java.lang.Throwable) iOException25);
        java.lang.Throwable throwable32 = null;
        // The following exception was thrown during execution in test generation
        try {
            iOException31.addSuppressed(throwable32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray24);
    }

    @Test
    public void test05014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05014");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (short) -1, (int) (short) 10);
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        java.io.Writer writer6 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException:\\u0020java.io.IOException:\\u0020\\u005Cu\\u0030\\u0030\\u0036\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0032\\u0031", writer6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "java.io.IOException: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str4, "java.io.IOException: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
    }

    @Test
    public void test05015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05015");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 100, (int) (short) 100);
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) (short) 1, writer4);
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper2.translate((int) (short) -1, writer7);
        java.io.Writer writer10 = null;
        boolean boolean11 = unicodeEscaper2.translate((int) (byte) 1, writer10);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper14 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) '4', (int) (short) 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper17 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper20 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', (int) (short) 0);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray21 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper20 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator22 = unicodeEscaper17.with(charSequenceTranslatorArray21);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator23 = unicodeEscaper14.with(charSequenceTranslatorArray21);
        java.io.Writer writer25 = null;
        boolean boolean26 = unicodeEscaper14.translate((int) (byte) 1, writer25);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper29 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) 'a');
        java.io.Writer writer31 = null;
        boolean boolean32 = unicodeEscaper29.translate((int) '4', writer31);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper35 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 0, (int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper38 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper41 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer43 = null;
        boolean boolean44 = unicodeEscaper41.translate((int) '4', writer43);
        java.io.Writer writer46 = null;
        boolean boolean47 = unicodeEscaper41.translate((int) (byte) -1, writer46);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper50 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper52 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper54 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str56 = unicodeEscaper54.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray57 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper50, unicodeEscaper52, unicodeEscaper54 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator58 = unicodeEscaper41.with(charSequenceTranslatorArray57);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator59 = unicodeEscaper38.with(charSequenceTranslatorArray57);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator60 = unicodeEscaper35.with(charSequenceTranslatorArray57);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator61 = unicodeEscaper29.with(charSequenceTranslatorArray57);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator62 = unicodeEscaper14.with(charSequenceTranslatorArray57);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator63 = unicodeEscaper2.with(charSequenceTranslatorArray57);
        java.lang.Class<?> wildcardClass64 = charSequenceTranslatorArray57.getClass();
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper14);
        org.junit.Assert.assertNotNull(unicodeEscaper17);
        org.junit.Assert.assertNotNull(unicodeEscaper20);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray21);
        org.junit.Assert.assertNotNull(charSequenceTranslator22);
        org.junit.Assert.assertNotNull(charSequenceTranslator23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper35);
        org.junit.Assert.assertNotNull(unicodeEscaper38);
        org.junit.Assert.assertNotNull(unicodeEscaper41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper50);
        org.junit.Assert.assertNotNull(unicodeEscaper52);
        org.junit.Assert.assertNotNull(unicodeEscaper54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str56, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray57);
        org.junit.Assert.assertNotNull(charSequenceTranslator58);
        org.junit.Assert.assertNotNull(charSequenceTranslator59);
        org.junit.Assert.assertNotNull(charSequenceTranslator60);
        org.junit.Assert.assertNotNull(charSequenceTranslator61);
        org.junit.Assert.assertNotNull(charSequenceTranslator62);
        org.junit.Assert.assertNotNull(charSequenceTranslator63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test05016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05016");
        java.io.IOException iOException2 = new java.io.IOException();
        java.io.IOException iOException3 = new java.io.IOException();
        iOException2.addSuppressed((java.lang.Throwable) iOException3);
        java.lang.Throwable[] throwableArray5 = iOException3.getSuppressed();
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException3);
        java.io.IOException iOException8 = new java.io.IOException("");
        java.io.IOException iOException9 = new java.io.IOException((java.lang.Throwable) iOException8);
        iOException3.addSuppressed((java.lang.Throwable) iOException9);
        java.lang.Throwable[] throwableArray11 = iOException3.getSuppressed();
        java.lang.Throwable[] throwableArray12 = iOException3.getSuppressed();
        java.io.IOException iOException13 = new java.io.IOException("java.io.IOException: java.io.IOException", (java.lang.Throwable) iOException3);
        java.io.IOException iOException14 = new java.io.IOException((java.lang.Throwable) iOException13);
        java.io.IOException iOException15 = new java.io.IOException((java.lang.Throwable) iOException13);
        java.io.IOException iOException16 = new java.io.IOException("java.io.IOException: java.io.IOException: \\u005Cu\\u0030\\u0030\\u0036\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0032\\u0031", (java.lang.Throwable) iOException15);
        java.io.IOException iOException17 = new java.io.IOException((java.lang.Throwable) iOException16);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray12);
    }

    @Test
    public void test05017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05017");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (short) 100, (int) (short) 1);
        java.io.Writer writer5 = null;
        int int6 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030", (int) (short) 10, writer5);
        java.lang.String str8 = unicodeEscaper2.translate((java.lang.CharSequence) "\\\\u0075\\\\u00750030\\\\u007500305C\\u0075\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075\\\\u00750030\\\\u00750030\\\\u007500336\\\\u0075\\\\u00750030\\\\u00750030\\\\u007500338\\\\u0075\\\\u00750030\\\\u007500305C\\u0075\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075\\\\u00750030\\\\u00750030\\\\u007500336\\\\u0075\\\\u00750030\\\\u00750030\\\\u007500339\\\\u0075\\\\u00750030\\\\u007500305C\\u0075\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750032\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750031");
        java.io.Writer writer10 = null;
        boolean boolean11 = unicodeEscaper2.translate((int) (short) 0, writer10);
        java.lang.CharSequence charSequence12 = null;
        java.io.Writer writer13 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate(charSequence12, writer13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\\\u0075\\\\u00750030\\\\u007500305C\\u0075\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075\\\\u00750030\\\\u00750030\\\\u007500336\\\\u0075\\\\u00750030\\\\u00750030\\\\u007500338\\\\u0075\\\\u00750030\\\\u007500305C\\u0075\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075\\\\u00750030\\\\u00750030\\\\u007500336\\\\u0075\\\\u00750030\\\\u00750030\\\\u007500339\\\\u0075\\\\u00750030\\\\u007500305C\\u0075\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750032\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750031" + "'", str8, "\\\\u0075\\\\u00750030\\\\u007500305C\\u0075\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075\\\\u00750030\\\\u00750030\\\\u007500336\\\\u0075\\\\u00750030\\\\u00750030\\\\u007500338\\\\u0075\\\\u00750030\\\\u007500305C\\u0075\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075\\\\u00750030\\\\u00750030\\\\u007500336\\\\u0075\\\\u00750030\\\\u00750030\\\\u007500339\\\\u0075\\\\u00750030\\\\u007500305C\\u0075\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750032\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750031");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test05018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05018");
        java.io.IOException iOException2 = new java.io.IOException();
        java.io.IOException iOException3 = new java.io.IOException();
        iOException2.addSuppressed((java.lang.Throwable) iOException3);
        java.io.IOException iOException5 = new java.io.IOException("0", (java.lang.Throwable) iOException2);
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.lang.Throwable[] throwableArray9 = iOException8.getSuppressed();
        java.io.IOException iOException13 = new java.io.IOException("0");
        java.lang.Throwable[] throwableArray14 = iOException13.getSuppressed();
        java.io.IOException iOException15 = new java.io.IOException("hi!", (java.lang.Throwable) iOException13);
        java.io.IOException iOException17 = new java.io.IOException("");
        java.io.IOException iOException18 = new java.io.IOException((java.lang.Throwable) iOException17);
        java.io.IOException iOException20 = new java.io.IOException("");
        iOException18.addSuppressed((java.lang.Throwable) iOException20);
        java.io.IOException iOException23 = new java.io.IOException("");
        java.io.IOException iOException24 = new java.io.IOException((java.lang.Throwable) iOException23);
        java.io.IOException iOException26 = new java.io.IOException("");
        iOException24.addSuppressed((java.lang.Throwable) iOException26);
        iOException18.addSuppressed((java.lang.Throwable) iOException24);
        iOException15.addSuppressed((java.lang.Throwable) iOException18);
        java.io.IOException iOException30 = new java.io.IOException("java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception", (java.lang.Throwable) iOException18);
        iOException8.addSuppressed((java.lang.Throwable) iOException30);
        java.io.IOException iOException32 = new java.io.IOException((java.lang.Throwable) iOException30);
        java.lang.Throwable[] throwableArray33 = iOException30.getSuppressed();
        java.io.IOException iOException34 = new java.io.IOException("\\u006A\\\\u00750061\\u0076\\\\u00750061\\\\u0075002E\\u0069\\u006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\\\u0075003A\\u0020\\\\u00750036\\\\u00750034", (java.lang.Throwable) iOException30);
        java.lang.Class<?> wildcardClass35 = iOException34.getClass();
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test05019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05019");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) (byte) 100);
        java.io.Writer writer5 = null;
        int int6 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030", (int) (byte) 0, writer5);
        java.io.Writer writer9 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int10 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: \\u005Cu\\u0030\\u0030\\u0036\\u0041\\u005Cu\\u0030\\u0030\\u0036\\u0031\\u005Cu\\u0030\\u0030\\u0037\\u0036\\u005Cu\\u0030\\u0030\\u0036\\u0031\\u005Cu\\u0030\\u0030\\u0032\\u0045\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0036\\u0046\\u005Cu\\u0030\\u0030\\u0032\\u0045\\u005Cu\\u0030\\u0030\\u0034\\u0039\\u005Cu\\u0030\\u0030\\u0034\\u0046\\u005Cu\\u0030\\u0030\\u0034\\u0035\\u005Cu\\u0030\\u0030\\u0037\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0033\\u005Cu\\u0030\\u0030\\u0036\\u0035\\u005Cu\\u0030\\u0030\\u0037\\u0030\\u005Cu\\u0030\\u0030\\u0037\\u0034\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0036\\u0046\\u005Cu\\u0030\\u0030\\u0036\\u0045", (int) (byte) 0, writer9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test05020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05020");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) (byte) 100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper5.translate((int) (short) 10, writer7);
        java.lang.String str10 = unicodeEscaper5.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper13 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer15 = null;
        boolean boolean16 = unicodeEscaper13.translate((int) '4', writer15);
        java.io.Writer writer18 = null;
        boolean boolean19 = unicodeEscaper13.translate((int) (byte) -1, writer18);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper22 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper24 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper26 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str28 = unicodeEscaper26.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray29 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper22, unicodeEscaper24, unicodeEscaper26 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator30 = unicodeEscaper13.with(charSequenceTranslatorArray29);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator31 = unicodeEscaper5.with(charSequenceTranslatorArray29);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper34 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.lang.String str36 = unicodeEscaper34.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray37 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper34 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator38 = unicodeEscaper5.with(charSequenceTranslatorArray37);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator39 = unicodeEscaper2.with(charSequenceTranslatorArray37);
        java.lang.Class<?> wildcardClass40 = charSequenceTranslatorArray37.getClass();
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "0" + "'", str10, "0");
        org.junit.Assert.assertNotNull(unicodeEscaper13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper22);
        org.junit.Assert.assertNotNull(unicodeEscaper24);
        org.junit.Assert.assertNotNull(unicodeEscaper26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str28, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray29);
        org.junit.Assert.assertNotNull(charSequenceTranslator30);
        org.junit.Assert.assertNotNull(charSequenceTranslator31);
        org.junit.Assert.assertNotNull(unicodeEscaper34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str36, "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray37);
        org.junit.Assert.assertNotNull(charSequenceTranslator38);
        org.junit.Assert.assertNotNull(charSequenceTranslator39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test05021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05021");
        java.io.IOException iOException1 = new java.io.IOException("");
        java.io.IOException iOException2 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.io.IOException iOException3 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.io.IOException iOException5 = new java.io.IOException();
        java.io.IOException iOException6 = new java.io.IOException();
        iOException5.addSuppressed((java.lang.Throwable) iOException6);
        java.io.IOException iOException8 = new java.io.IOException("0", (java.lang.Throwable) iOException5);
        java.io.IOException iOException9 = new java.io.IOException((java.lang.Throwable) iOException8);
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException8);
        iOException1.addSuppressed((java.lang.Throwable) iOException8);
        java.io.IOException iOException12 = new java.io.IOException((java.lang.Throwable) iOException8);
        java.io.IOException iOException15 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030");
        java.io.IOException iOException17 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        java.io.IOException iOException18 = new java.io.IOException((java.lang.Throwable) iOException17);
        java.io.IOException iOException19 = new java.io.IOException((java.lang.Throwable) iOException17);
        iOException15.addSuppressed((java.lang.Throwable) iOException19);
        java.io.IOException iOException21 = new java.io.IOException("\\\\u0075006A\\\\u00750061\\\\u00750076\\\\u00750061\\\\u0075002E\\\\u00750069\\\\u0075006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E\\\\u0075003A\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750032\\\\u00750030\\\\u00750068\\\\u00750069\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750032\\\\u00750031", (java.lang.Throwable) iOException19);
        iOException12.addSuppressed((java.lang.Throwable) iOException19);
        java.lang.String str23 = iOException12.toString();
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "java.io.IOException: java.io.IOException: 0" + "'", str23, "java.io.IOException: java.io.IOException: 0");
    }

    @Test
    public void test05022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05022");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper0 = new org.apache.commons.lang3.text.translate.UnicodeEscaper();
        java.io.Writer writer2 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper0.translate((java.lang.CharSequence) "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020\\u005Cu\\u0030\\u0030\\u0033\\u0036\\u005Cu\\u0030\\u0030\\u0033\\u0034", writer2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05023");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(10, 10);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) -1, (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper7 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper9 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer11 = null;
        boolean boolean12 = unicodeEscaper9.translate((int) ' ', writer11);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper15 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str17 = unicodeEscaper15.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray18 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator19 = unicodeEscaper15.with(charSequenceTranslatorArray18);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator20 = unicodeEscaper9.with(charSequenceTranslatorArray18);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator21 = unicodeEscaper7.with(charSequenceTranslatorArray18);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper24 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer26 = null;
        boolean boolean27 = unicodeEscaper24.translate((int) '4', writer26);
        java.io.Writer writer29 = null;
        boolean boolean30 = unicodeEscaper24.translate((int) (byte) -1, writer29);
        java.io.Writer writer32 = null;
        boolean boolean33 = unicodeEscaper24.translate((int) (byte) -1, writer32);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray34 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator35 = unicodeEscaper24.with(charSequenceTranslatorArray34);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator36 = charSequenceTranslator21.with(charSequenceTranslatorArray34);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator37 = unicodeEscaper5.with(charSequenceTranslatorArray34);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator38 = unicodeEscaper2.with(charSequenceTranslatorArray34);
        java.io.Writer writer40 = null;
        boolean boolean41 = unicodeEscaper2.translate((int) (byte) 10, writer40);
        java.io.Writer writer44 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int45 = unicodeEscaper2.translate((java.lang.CharSequence) "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u005Cu\\u0030\\u0030\\u0032\\u0030\\u0031", 10, writer44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertNotNull(unicodeEscaper7);
        org.junit.Assert.assertNotNull(unicodeEscaper9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "0" + "'", str17, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray18);
        org.junit.Assert.assertNotNull(charSequenceTranslator19);
        org.junit.Assert.assertNotNull(charSequenceTranslator20);
        org.junit.Assert.assertNotNull(charSequenceTranslator21);
        org.junit.Assert.assertNotNull(unicodeEscaper24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray34);
        org.junit.Assert.assertNotNull(charSequenceTranslator35);
        org.junit.Assert.assertNotNull(charSequenceTranslator36);
        org.junit.Assert.assertNotNull(charSequenceTranslator37);
        org.junit.Assert.assertNotNull(charSequenceTranslator38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test05024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05024");
        java.io.IOException iOException1 = new java.io.IOException("j\\u005Cu\\u0030\\u0030\\u0036\\u0031v\\u005Cu\\u0030\\u0030\\u0036\\u0031\\u005Cu\\u0030\\u0030\\u0032\\u0045io\\u005Cu\\u0030\\u0030\\u0032\\u0045\\u005Cu\\u0030\\u0030\\u0034\\u0039\\u005Cu\\u0030\\u0030\\u0034\\u0046\\u005Cu\\u0030\\u0030\\u0034\\u0035x\\u0063eption");
        java.lang.String str2 = iOException1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "java.io.IOException: j\\u005Cu\\u0030\\u0030\\u0036\\u0031v\\u005Cu\\u0030\\u0030\\u0036\\u0031\\u005Cu\\u0030\\u0030\\u0032\\u0045io\\u005Cu\\u0030\\u0030\\u0032\\u0045\\u005Cu\\u0030\\u0030\\u0034\\u0039\\u005Cu\\u0030\\u0030\\u0034\\u0046\\u005Cu\\u0030\\u0030\\u0034\\u0035x\\u0063eption" + "'", str2, "java.io.IOException: j\\u005Cu\\u0030\\u0030\\u0036\\u0031v\\u005Cu\\u0030\\u0030\\u0036\\u0031\\u005Cu\\u0030\\u0030\\u0032\\u0045io\\u005Cu\\u0030\\u0030\\u0032\\u0045\\u005Cu\\u0030\\u0030\\u0034\\u0039\\u005Cu\\u0030\\u0030\\u0034\\u0046\\u005Cu\\u0030\\u0030\\u0034\\u0035x\\u0063eption");
    }

    @Test
    public void test05025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05025");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (short) 100, (int) ' ');
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) 'a', writer4);
        java.io.Writer writer8 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int9 = unicodeEscaper2.translate((java.lang.CharSequence) "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020\\u0036\\u0034", (int) (short) 100, writer8);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test05026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05026");
        java.io.IOException iOException1 = new java.io.IOException("j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020\\u005C\\u005Cu\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0036\\u0038\\u005C\\u005Cu\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0036\\u0039\\u005C\\u005Cu\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0032\\u0031");
        java.io.IOException iOException3 = new java.io.IOException();
        java.io.IOException iOException4 = new java.io.IOException();
        iOException3.addSuppressed((java.lang.Throwable) iOException4);
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException3);
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException8 = new java.io.IOException("", (java.lang.Throwable) iOException6);
        java.io.IOException iOException12 = new java.io.IOException("");
        java.io.IOException iOException13 = new java.io.IOException((java.lang.Throwable) iOException12);
        java.io.IOException iOException15 = new java.io.IOException("");
        iOException13.addSuppressed((java.lang.Throwable) iOException15);
        java.io.IOException iOException17 = new java.io.IOException("java.io.IOException: 0", (java.lang.Throwable) iOException15);
        java.io.IOException iOException18 = new java.io.IOException("java.io.IOException: java.io.IOException: java.io.IOException", (java.lang.Throwable) iOException15);
        iOException8.addSuppressed((java.lang.Throwable) iOException18);
        java.io.IOException iOException23 = new java.io.IOException();
        java.io.IOException iOException24 = new java.io.IOException();
        iOException23.addSuppressed((java.lang.Throwable) iOException24);
        java.io.IOException iOException26 = new java.io.IOException("0", (java.lang.Throwable) iOException23);
        java.io.IOException iOException27 = new java.io.IOException((java.lang.Throwable) iOException26);
        java.io.IOException iOException28 = new java.io.IOException((java.lang.Throwable) iOException27);
        java.io.IOException iOException29 = new java.io.IOException((java.lang.Throwable) iOException28);
        java.lang.Throwable[] throwableArray30 = iOException29.getSuppressed();
        java.io.IOException iOException31 = new java.io.IOException("java.io.IOException: java.io.IOException", (java.lang.Throwable) iOException29);
        java.io.IOException iOException32 = new java.io.IOException("\\u005Cu\\u0030\\u0030\\u0036\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0032\\u0031", (java.lang.Throwable) iOException29);
        java.io.IOException iOException33 = new java.io.IOException((java.lang.Throwable) iOException32);
        java.io.IOException iOException35 = new java.io.IOException();
        java.io.IOException iOException36 = new java.io.IOException();
        iOException35.addSuppressed((java.lang.Throwable) iOException36);
        java.io.IOException iOException38 = new java.io.IOException();
        java.io.IOException iOException39 = new java.io.IOException();
        iOException38.addSuppressed((java.lang.Throwable) iOException39);
        java.lang.Throwable[] throwableArray41 = iOException39.getSuppressed();
        java.io.IOException iOException42 = new java.io.IOException((java.lang.Throwable) iOException39);
        java.io.IOException iOException44 = new java.io.IOException("");
        java.io.IOException iOException45 = new java.io.IOException((java.lang.Throwable) iOException44);
        iOException39.addSuppressed((java.lang.Throwable) iOException45);
        iOException36.addSuppressed((java.lang.Throwable) iOException45);
        java.io.IOException iOException48 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException45);
        java.io.IOException iOException51 = new java.io.IOException("");
        java.io.IOException iOException52 = new java.io.IOException((java.lang.Throwable) iOException51);
        java.io.IOException iOException54 = new java.io.IOException("");
        iOException52.addSuppressed((java.lang.Throwable) iOException54);
        java.io.IOException iOException56 = new java.io.IOException("java.io.IOException: 0", (java.lang.Throwable) iOException54);
        iOException45.addSuppressed((java.lang.Throwable) iOException54);
        java.io.IOException iOException58 = new java.io.IOException((java.lang.Throwable) iOException45);
        iOException33.addSuppressed((java.lang.Throwable) iOException45);
        java.io.IOException iOException60 = new java.io.IOException((java.lang.Throwable) iOException33);
        iOException8.addSuppressed((java.lang.Throwable) iOException33);
        java.io.IOException iOException62 = new java.io.IOException((java.lang.Throwable) iOException33);
        iOException1.addSuppressed((java.lang.Throwable) iOException33);
        java.io.IOException iOException64 = new java.io.IOException((java.lang.Throwable) iOException33);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray41);
    }

    @Test
    public void test05027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05027");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) (short) 10, writer4);
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper2.translate((int) (short) 10, writer7);
        java.io.Writer writer11 = null;
        int int12 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", 10, writer11);
        java.lang.String str14 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u005C\\u0075\\u0030\\u0030\\u0033\\u0032\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030");
        java.io.Writer writer16 = null;
        boolean boolean17 = unicodeEscaper2.translate(1, writer16);
        java.io.Writer writer19 = null;
        boolean boolean20 = unicodeEscaper2.translate((int) '4', writer19);
        java.lang.String str22 = unicodeEscaper2.translate((java.lang.CharSequence) "A");
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750032\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030" + "'", str14, "\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750032\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "A" + "'", str22, "A");
    }

    @Test
    public void test05028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05028");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) (short) 10, writer4);
        java.io.Writer writer8 = null;
        int int9 = unicodeEscaper2.translate((java.lang.CharSequence) "0", (int) (byte) 0, writer8);
        java.lang.String str11 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        java.io.Writer writer13 = null;
        boolean boolean14 = unicodeEscaper2.translate(0, writer13);
        java.io.Writer writer16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = unicodeEscaper2.translate((int) (short) -1, writer16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str11, "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test05029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05029");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 0, (-1));
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException:\\u0020A");
        java.lang.Class<?> wildcardClass5 = unicodeEscaper2.getClass();
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u0041" + "'", str4, "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u0041");
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test05030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05030");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (short) 0, 1);
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750035\\\\u00750043\\\\u00750075\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750033\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750033\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750035\\\\u00750043\\\\u00750075\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750033\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750034");
        java.io.Writer writer6 = null;
        boolean boolean7 = unicodeEscaper2.translate((int) 'a', writer6);
        java.io.Writer writer9 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = unicodeEscaper2.translate((int) (short) 0, writer9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750035\\\\u00750043\\\\u00750075\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750033\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750033\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750035\\\\u00750043\\\\u00750075\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750033\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750034" + "'", str4, "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750035\\\\u00750043\\\\u00750075\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750033\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750033\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750035\\\\u00750043\\\\u00750075\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750033\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750034");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test05031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05031");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 0, 100);
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: ");
        java.lang.String str6 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        java.io.Writer writer9 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int10 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u005C\\u0075\\u0030\\u0030\\u0033\\u0032\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030", (int) 'a', writer9);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 97");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: " + "'", str4, "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: ");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\\\u0075006A\\\\u00750061\\\\u00750076\\\\u00750061\\\\u0075002E\\\\u00750069\\\\u0075006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E\\\\u0075003A\\\\u00750020\\\\u0075006A\\\\u00750061\\\\u00750076\\\\u00750061\\\\u0075002E\\\\u00750069\\\\u0075006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E" + "'", str6, "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\\\u0075006A\\\\u00750061\\\\u00750076\\\\u00750061\\\\u0075002E\\\\u00750069\\\\u0075006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E\\\\u0075003A\\\\u00750020\\\\u0075006A\\\\u00750061\\\\u00750076\\\\u00750061\\\\u0075002E\\\\u00750069\\\\u0075006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E");
    }

    @Test
    public void test05032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05032");
        java.io.IOException iOException3 = new java.io.IOException("");
        java.io.IOException iOException4 = new java.io.IOException((java.lang.Throwable) iOException3);
        java.io.IOException iOException6 = new java.io.IOException("");
        iOException4.addSuppressed((java.lang.Throwable) iOException6);
        java.lang.Throwable[] throwableArray8 = iOException6.getSuppressed();
        java.io.IOException iOException9 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException6);
        java.io.IOException iOException10 = new java.io.IOException("64", (java.lang.Throwable) iOException9);
        java.lang.Class<?> wildcardClass11 = iOException9.getClass();
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test05033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05033");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) ' ', 0);
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) (short) 1, writer4);
        java.io.Writer writer8 = null;
        int int9 = unicodeEscaper2.translate((java.lang.CharSequence) "FFFFFFFF", (int) (byte) 1, writer8);
        java.io.Writer writer11 = null;
        boolean boolean12 = unicodeEscaper2.translate((int) (short) 100, writer11);
        java.io.Writer writer14 = null;
        boolean boolean15 = unicodeEscaper2.translate((int) (short) -1, writer14);
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test05034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05034");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper1 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) 'a');
        java.lang.String str3 = unicodeEscaper1.translate((java.lang.CharSequence) "java.io.IOException: \\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper6 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) -1, (int) (byte) 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper9 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (byte) 1, (int) ' ');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper12 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper14 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer16 = null;
        boolean boolean17 = unicodeEscaper14.translate((int) ' ', writer16);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper20 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str22 = unicodeEscaper20.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray23 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator24 = unicodeEscaper20.with(charSequenceTranslatorArray23);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator25 = unicodeEscaper14.with(charSequenceTranslatorArray23);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator26 = unicodeEscaper12.with(charSequenceTranslatorArray23);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator27 = unicodeEscaper9.with(charSequenceTranslatorArray23);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator28 = unicodeEscaper6.with(charSequenceTranslatorArray23);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper31 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) 'a', (int) (byte) 0);
        java.lang.String str33 = unicodeEscaper31.translate((java.lang.CharSequence) "20");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper36 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '#', 100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper39 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (byte) 1, (int) ' ');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper42 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper44 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer46 = null;
        boolean boolean47 = unicodeEscaper44.translate((int) ' ', writer46);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper50 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str52 = unicodeEscaper50.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray53 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator54 = unicodeEscaper50.with(charSequenceTranslatorArray53);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator55 = unicodeEscaper44.with(charSequenceTranslatorArray53);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator56 = unicodeEscaper42.with(charSequenceTranslatorArray53);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator57 = unicodeEscaper39.with(charSequenceTranslatorArray53);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator58 = unicodeEscaper36.with(charSequenceTranslatorArray53);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator59 = unicodeEscaper31.with(charSequenceTranslatorArray53);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator60 = charSequenceTranslator28.with(charSequenceTranslatorArray53);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator61 = unicodeEscaper1.with(charSequenceTranslatorArray53);
        java.lang.String str63 = unicodeEscaper1.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0068\\u0069\\u0021");
        org.junit.Assert.assertNotNull(unicodeEscaper1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750035\\\\u00750043\\\\u00750075\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750033\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750033\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750035\\\\u00750043\\\\u00750075\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750033\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750034" + "'", str3, "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750035\\\\u00750043\\\\u00750075\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750033\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750033\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750035\\\\u00750043\\\\u00750075\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750033\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750034");
        org.junit.Assert.assertNotNull(unicodeEscaper6);
        org.junit.Assert.assertNotNull(unicodeEscaper9);
        org.junit.Assert.assertNotNull(unicodeEscaper12);
        org.junit.Assert.assertNotNull(unicodeEscaper14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "0" + "'", str22, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray23);
        org.junit.Assert.assertNotNull(charSequenceTranslator24);
        org.junit.Assert.assertNotNull(charSequenceTranslator25);
        org.junit.Assert.assertNotNull(charSequenceTranslator26);
        org.junit.Assert.assertNotNull(charSequenceTranslator27);
        org.junit.Assert.assertNotNull(charSequenceTranslator28);
        org.junit.Assert.assertNotNull(unicodeEscaper31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "20" + "'", str33, "20");
        org.junit.Assert.assertNotNull(unicodeEscaper36);
        org.junit.Assert.assertNotNull(unicodeEscaper39);
        org.junit.Assert.assertNotNull(unicodeEscaper42);
        org.junit.Assert.assertNotNull(unicodeEscaper44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "0" + "'", str52, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray53);
        org.junit.Assert.assertNotNull(charSequenceTranslator54);
        org.junit.Assert.assertNotNull(charSequenceTranslator55);
        org.junit.Assert.assertNotNull(charSequenceTranslator56);
        org.junit.Assert.assertNotNull(charSequenceTranslator57);
        org.junit.Assert.assertNotNull(charSequenceTranslator58);
        org.junit.Assert.assertNotNull(charSequenceTranslator59);
        org.junit.Assert.assertNotNull(charSequenceTranslator60);
        org.junit.Assert.assertNotNull(charSequenceTranslator61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "\\\\u0075006A\\\\u00750061\\\\u00750076\\\\u00750061\\\\u0075002E\\\\u00750069\\\\u0075006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E\\\\u0075003A\\\\u00750020\\\\u00750068\\\\u00750069\\\\u00750021" + "'", str63, "\\\\u0075006A\\\\u00750061\\\\u00750076\\\\u00750061\\\\u0075002E\\\\u00750069\\\\u0075006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E\\\\u0075003A\\\\u00750020\\\\u00750068\\\\u00750069\\\\u00750021");
    }

    @Test
    public void test05035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05035");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(100, (-1));
        java.io.Writer writer5 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int6 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", 100, writer5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
    }

    @Test
    public void test05036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05036");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 0, 1);
        java.lang.String str7 = unicodeEscaper5.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: java.io.IOException: 0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper9 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper12 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer14 = null;
        boolean boolean15 = unicodeEscaper12.translate((int) '4', writer14);
        java.io.Writer writer17 = null;
        boolean boolean18 = unicodeEscaper12.translate((int) (byte) -1, writer17);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper21 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper23 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper25 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str27 = unicodeEscaper25.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray28 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper21, unicodeEscaper23, unicodeEscaper25 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator29 = unicodeEscaper12.with(charSequenceTranslatorArray28);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper32 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer34 = null;
        boolean boolean35 = unicodeEscaper32.translate((int) (short) 10, writer34);
        java.lang.String str37 = unicodeEscaper32.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper40 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer42 = null;
        boolean boolean43 = unicodeEscaper40.translate((int) '4', writer42);
        java.io.Writer writer45 = null;
        boolean boolean46 = unicodeEscaper40.translate((int) (byte) -1, writer45);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper49 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper51 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper53 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str55 = unicodeEscaper53.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray56 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper49, unicodeEscaper51, unicodeEscaper53 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator57 = unicodeEscaper40.with(charSequenceTranslatorArray56);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator58 = unicodeEscaper32.with(charSequenceTranslatorArray56);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator59 = unicodeEscaper12.with(charSequenceTranslatorArray56);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator60 = unicodeEscaper9.with(charSequenceTranslatorArray56);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator61 = unicodeEscaper5.with(charSequenceTranslatorArray56);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator62 = unicodeEscaper2.with(charSequenceTranslatorArray56);
        java.io.Writer writer64 = null;
        boolean boolean65 = unicodeEscaper2.translate(0, writer64);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray66 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator67 = unicodeEscaper2.with(charSequenceTranslatorArray66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030" + "'", str7, "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030");
        org.junit.Assert.assertNotNull(unicodeEscaper9);
        org.junit.Assert.assertNotNull(unicodeEscaper12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper21);
        org.junit.Assert.assertNotNull(unicodeEscaper23);
        org.junit.Assert.assertNotNull(unicodeEscaper25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str27, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray28);
        org.junit.Assert.assertNotNull(charSequenceTranslator29);
        org.junit.Assert.assertNotNull(unicodeEscaper32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "0" + "'", str37, "0");
        org.junit.Assert.assertNotNull(unicodeEscaper40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper49);
        org.junit.Assert.assertNotNull(unicodeEscaper51);
        org.junit.Assert.assertNotNull(unicodeEscaper53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str55, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray56);
        org.junit.Assert.assertNotNull(charSequenceTranslator57);
        org.junit.Assert.assertNotNull(charSequenceTranslator58);
        org.junit.Assert.assertNotNull(charSequenceTranslator59);
        org.junit.Assert.assertNotNull(charSequenceTranslator60);
        org.junit.Assert.assertNotNull(charSequenceTranslator61);
        org.junit.Assert.assertNotNull(charSequenceTranslator62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test05037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05037");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) 'a', 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) (byte) 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper8 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer10 = null;
        boolean boolean11 = unicodeEscaper8.translate((int) (short) 10, writer10);
        java.io.Writer writer13 = null;
        boolean boolean14 = unicodeEscaper8.translate((int) '#', writer13);
        java.io.Writer writer17 = null;
        int int18 = unicodeEscaper8.translate((java.lang.CharSequence) "\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034", (int) (byte) 0, writer17);
        java.io.Writer writer20 = null;
        boolean boolean21 = unicodeEscaper8.translate((int) (byte) 10, writer20);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper24 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 10, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper27 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 0, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper29 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer31 = null;
        boolean boolean32 = unicodeEscaper29.translate((int) ' ', writer31);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper35 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str37 = unicodeEscaper35.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray38 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator39 = unicodeEscaper35.with(charSequenceTranslatorArray38);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator40 = unicodeEscaper29.with(charSequenceTranslatorArray38);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator41 = unicodeEscaper27.with(charSequenceTranslatorArray38);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator42 = unicodeEscaper24.with(charSequenceTranslatorArray38);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator43 = unicodeEscaper8.with(charSequenceTranslatorArray38);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper46 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) ' ', (int) (byte) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper48 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) (short) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper51 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '#', 100);
        java.lang.String str53 = unicodeEscaper51.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper56 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) '4', (int) (short) 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper59 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper62 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', (int) (short) 0);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray63 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper62 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator64 = unicodeEscaper59.with(charSequenceTranslatorArray63);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator65 = unicodeEscaper56.with(charSequenceTranslatorArray63);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator66 = unicodeEscaper51.with(charSequenceTranslatorArray63);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator67 = unicodeEscaper48.with(charSequenceTranslatorArray63);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper70 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper73 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer75 = null;
        boolean boolean76 = unicodeEscaper73.translate((int) '4', writer75);
        java.io.Writer writer78 = null;
        boolean boolean79 = unicodeEscaper73.translate((int) (byte) -1, writer78);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper82 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper84 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper86 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str88 = unicodeEscaper86.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray89 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper82, unicodeEscaper84, unicodeEscaper86 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator90 = unicodeEscaper73.with(charSequenceTranslatorArray89);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator91 = unicodeEscaper70.with(charSequenceTranslatorArray89);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator92 = unicodeEscaper48.with(charSequenceTranslatorArray89);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator93 = unicodeEscaper46.with(charSequenceTranslatorArray89);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator94 = unicodeEscaper8.with(charSequenceTranslatorArray89);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator95 = unicodeEscaper5.with(charSequenceTranslatorArray89);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator96 = unicodeEscaper2.with(charSequenceTranslatorArray89);
        java.io.Writer writer98 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceTranslator96.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: hi!", writer98);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertNotNull(unicodeEscaper8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper24);
        org.junit.Assert.assertNotNull(unicodeEscaper27);
        org.junit.Assert.assertNotNull(unicodeEscaper29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "0" + "'", str37, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray38);
        org.junit.Assert.assertNotNull(charSequenceTranslator39);
        org.junit.Assert.assertNotNull(charSequenceTranslator40);
        org.junit.Assert.assertNotNull(charSequenceTranslator41);
        org.junit.Assert.assertNotNull(charSequenceTranslator42);
        org.junit.Assert.assertNotNull(charSequenceTranslator43);
        org.junit.Assert.assertNotNull(unicodeEscaper46);
        org.junit.Assert.assertNotNull(unicodeEscaper48);
        org.junit.Assert.assertNotNull(unicodeEscaper51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str53, "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertNotNull(unicodeEscaper56);
        org.junit.Assert.assertNotNull(unicodeEscaper59);
        org.junit.Assert.assertNotNull(unicodeEscaper62);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray63);
        org.junit.Assert.assertNotNull(charSequenceTranslator64);
        org.junit.Assert.assertNotNull(charSequenceTranslator65);
        org.junit.Assert.assertNotNull(charSequenceTranslator66);
        org.junit.Assert.assertNotNull(charSequenceTranslator67);
        org.junit.Assert.assertNotNull(unicodeEscaper70);
        org.junit.Assert.assertNotNull(unicodeEscaper73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper82);
        org.junit.Assert.assertNotNull(unicodeEscaper84);
        org.junit.Assert.assertNotNull(unicodeEscaper86);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str88, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray89);
        org.junit.Assert.assertNotNull(charSequenceTranslator90);
        org.junit.Assert.assertNotNull(charSequenceTranslator91);
        org.junit.Assert.assertNotNull(charSequenceTranslator92);
        org.junit.Assert.assertNotNull(charSequenceTranslator93);
        org.junit.Assert.assertNotNull(charSequenceTranslator94);
        org.junit.Assert.assertNotNull(charSequenceTranslator95);
        org.junit.Assert.assertNotNull(charSequenceTranslator96);
    }

    @Test
    public void test05038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05038");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 0, 1);
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u0030");
        java.io.Writer writer7 = null;
        int int8 = unicodeEscaper2.translate((java.lang.CharSequence) "\\\\u0075006A\\\\u00750061\\\\u00750076\\\\u00750061\\\\u0075002E\\\\u00750069\\\\u0075006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E\\\\u0075003A\\\\u00750020", (int) (byte) 1, writer7);
        java.io.Writer writer10 = null;
        boolean boolean11 = unicodeEscaper2.translate(10, writer10);
        java.io.Writer writer14 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int15 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0036\\u0038\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0036\\u0039\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0032\\u0031", (int) (short) -1, writer14);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\u0030" + "'", str4, "\\u0030");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test05039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05039");
        java.io.IOException iOException1 = new java.io.IOException();
        java.io.IOException iOException2 = new java.io.IOException();
        iOException1.addSuppressed((java.lang.Throwable) iOException2);
        java.lang.Throwable[] throwableArray4 = iOException2.getSuppressed();
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.lang.Throwable[] throwableArray7 = iOException6.getSuppressed();
        java.io.IOException iOException8 = new java.io.IOException("java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: 0", (java.lang.Throwable) iOException6);
        java.lang.Throwable[] throwableArray9 = iOException6.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray9);
    }

    @Test
    public void test05040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05040");
        java.io.IOException iOException3 = new java.io.IOException("0");
        java.lang.Throwable[] throwableArray4 = iOException3.getSuppressed();
        java.io.IOException iOException5 = new java.io.IOException("hi!", (java.lang.Throwable) iOException3);
        java.io.IOException iOException7 = new java.io.IOException("");
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.io.IOException iOException10 = new java.io.IOException("");
        iOException8.addSuppressed((java.lang.Throwable) iOException10);
        java.io.IOException iOException13 = new java.io.IOException("");
        java.io.IOException iOException14 = new java.io.IOException((java.lang.Throwable) iOException13);
        java.io.IOException iOException16 = new java.io.IOException("");
        iOException14.addSuppressed((java.lang.Throwable) iOException16);
        iOException8.addSuppressed((java.lang.Throwable) iOException14);
        iOException5.addSuppressed((java.lang.Throwable) iOException8);
        java.io.IOException iOException20 = new java.io.IOException("hi!", (java.lang.Throwable) iOException8);
        java.lang.Throwable throwable23 = null;
        java.io.IOException iOException24 = new java.io.IOException("java.io.IOException: \\u0068\\u0069\\u0021", throwable23);
        java.io.IOException iOException27 = new java.io.IOException("");
        java.io.IOException iOException28 = new java.io.IOException((java.lang.Throwable) iOException27);
        java.io.IOException iOException30 = new java.io.IOException("");
        iOException28.addSuppressed((java.lang.Throwable) iOException30);
        java.io.IOException iOException32 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException30);
        iOException24.addSuppressed((java.lang.Throwable) iOException30);
        java.io.IOException iOException34 = new java.io.IOException((java.lang.Throwable) iOException30);
        java.io.IOException iOException35 = new java.io.IOException("\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034", (java.lang.Throwable) iOException30);
        iOException20.addSuppressed((java.lang.Throwable) iOException35);
        java.io.IOException iOException38 = new java.io.IOException("34");
        iOException35.addSuppressed((java.lang.Throwable) iOException38);
        java.lang.String str40 = iOException38.toString();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "java.io.IOException: 34" + "'", str40, "java.io.IOException: 34");
    }

    @Test
    public void test05041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05041");
        java.io.IOException iOException1 = new java.io.IOException();
        java.io.IOException iOException2 = new java.io.IOException();
        iOException1.addSuppressed((java.lang.Throwable) iOException2);
        java.lang.Throwable[] throwableArray4 = iOException2.getSuppressed();
        java.lang.Throwable[] throwableArray5 = iOException2.getSuppressed();
        java.io.IOException iOException6 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException2);
        java.io.IOException iOException7 = new java.io.IOException();
        java.io.IOException iOException8 = new java.io.IOException();
        iOException7.addSuppressed((java.lang.Throwable) iOException8);
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.lang.Throwable[] throwableArray11 = iOException10.getSuppressed();
        iOException6.addSuppressed((java.lang.Throwable) iOException10);
        java.io.IOException iOException14 = new java.io.IOException();
        java.io.IOException iOException15 = new java.io.IOException();
        iOException14.addSuppressed((java.lang.Throwable) iOException15);
        java.io.IOException iOException17 = new java.io.IOException();
        java.io.IOException iOException18 = new java.io.IOException();
        iOException17.addSuppressed((java.lang.Throwable) iOException18);
        java.lang.Throwable[] throwableArray20 = iOException18.getSuppressed();
        java.io.IOException iOException21 = new java.io.IOException((java.lang.Throwable) iOException18);
        java.io.IOException iOException23 = new java.io.IOException("");
        java.io.IOException iOException24 = new java.io.IOException((java.lang.Throwable) iOException23);
        iOException18.addSuppressed((java.lang.Throwable) iOException24);
        iOException15.addSuppressed((java.lang.Throwable) iOException24);
        java.io.IOException iOException27 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException24);
        iOException10.addSuppressed((java.lang.Throwable) iOException27);
        java.io.IOException iOException30 = new java.io.IOException("");
        java.io.IOException iOException31 = new java.io.IOException((java.lang.Throwable) iOException30);
        java.io.IOException iOException33 = new java.io.IOException("");
        iOException31.addSuppressed((java.lang.Throwable) iOException33);
        java.io.IOException iOException36 = new java.io.IOException("");
        java.io.IOException iOException37 = new java.io.IOException((java.lang.Throwable) iOException36);
        java.io.IOException iOException39 = new java.io.IOException("");
        iOException37.addSuppressed((java.lang.Throwable) iOException39);
        iOException31.addSuppressed((java.lang.Throwable) iOException37);
        iOException10.addSuppressed((java.lang.Throwable) iOException37);
        java.lang.Throwable[] throwableArray43 = iOException37.getSuppressed();
        java.lang.Throwable[] throwableArray44 = iOException37.getSuppressed();
        java.lang.Class<?> wildcardClass45 = iOException37.getClass();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test05042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05042");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper1 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) (short) 100);
        java.io.Writer writer3 = null;
        boolean boolean4 = unicodeEscaper1.translate((int) 'a', writer3);
        java.io.Writer writer6 = null;
        boolean boolean7 = unicodeEscaper1.translate((int) '#', writer6);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper10 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((-1), (int) (short) 100);
        java.io.Writer writer12 = null;
        boolean boolean13 = unicodeEscaper10.translate((int) (short) 1, writer12);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper16 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(10, 10);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper19 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) -1, (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper21 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper23 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer25 = null;
        boolean boolean26 = unicodeEscaper23.translate((int) ' ', writer25);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper29 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str31 = unicodeEscaper29.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray32 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator33 = unicodeEscaper29.with(charSequenceTranslatorArray32);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator34 = unicodeEscaper23.with(charSequenceTranslatorArray32);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator35 = unicodeEscaper21.with(charSequenceTranslatorArray32);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper38 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer40 = null;
        boolean boolean41 = unicodeEscaper38.translate((int) '4', writer40);
        java.io.Writer writer43 = null;
        boolean boolean44 = unicodeEscaper38.translate((int) (byte) -1, writer43);
        java.io.Writer writer46 = null;
        boolean boolean47 = unicodeEscaper38.translate((int) (byte) -1, writer46);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray48 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator49 = unicodeEscaper38.with(charSequenceTranslatorArray48);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator50 = charSequenceTranslator35.with(charSequenceTranslatorArray48);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator51 = unicodeEscaper19.with(charSequenceTranslatorArray48);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator52 = unicodeEscaper16.with(charSequenceTranslatorArray48);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator53 = unicodeEscaper10.with(charSequenceTranslatorArray48);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator54 = unicodeEscaper1.with(charSequenceTranslatorArray48);
        java.lang.String str56 = unicodeEscaper1.translate((java.lang.CharSequence) "java.io.IOException: 1");
        java.io.Writer writer58 = null;
        boolean boolean59 = unicodeEscaper1.translate((int) (byte) 10, writer58);
        java.io.Writer writer62 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int63 = unicodeEscaper1.translate((java.lang.CharSequence) "\\\\u0075005C\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030", (-1), writer62);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper16);
        org.junit.Assert.assertNotNull(unicodeEscaper19);
        org.junit.Assert.assertNotNull(unicodeEscaper21);
        org.junit.Assert.assertNotNull(unicodeEscaper23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "0" + "'", str31, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray32);
        org.junit.Assert.assertNotNull(charSequenceTranslator33);
        org.junit.Assert.assertNotNull(charSequenceTranslator34);
        org.junit.Assert.assertNotNull(charSequenceTranslator35);
        org.junit.Assert.assertNotNull(unicodeEscaper38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray48);
        org.junit.Assert.assertNotNull(charSequenceTranslator49);
        org.junit.Assert.assertNotNull(charSequenceTranslator50);
        org.junit.Assert.assertNotNull(charSequenceTranslator51);
        org.junit.Assert.assertNotNull(charSequenceTranslator52);
        org.junit.Assert.assertNotNull(charSequenceTranslator53);
        org.junit.Assert.assertNotNull(charSequenceTranslator54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: 1" + "'", str56, "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: 1");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test05043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05043");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper1 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (short) 10);
        java.lang.String str3 = unicodeEscaper1.translate((java.lang.CharSequence) "\\u0068\\u0069\\u0021");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper6 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 10, (-1));
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper9 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 100, (int) (short) 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper12 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer14 = null;
        boolean boolean15 = unicodeEscaper12.translate((int) (short) 10, writer14);
        java.lang.String str17 = unicodeEscaper12.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper20 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer22 = null;
        boolean boolean23 = unicodeEscaper20.translate((int) '4', writer22);
        java.io.Writer writer25 = null;
        boolean boolean26 = unicodeEscaper20.translate((int) (byte) -1, writer25);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper29 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper31 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper33 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str35 = unicodeEscaper33.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray36 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper29, unicodeEscaper31, unicodeEscaper33 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator37 = unicodeEscaper20.with(charSequenceTranslatorArray36);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator38 = unicodeEscaper12.with(charSequenceTranslatorArray36);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator39 = unicodeEscaper9.with(charSequenceTranslatorArray36);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator40 = unicodeEscaper6.with(charSequenceTranslatorArray36);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator41 = unicodeEscaper1.with(charSequenceTranslatorArray36);
        java.io.Writer writer43 = null;
        boolean boolean44 = unicodeEscaper1.translate((int) (byte) 10, writer43);
        org.junit.Assert.assertNotNull(unicodeEscaper1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\u0068\\u0069\\u0021" + "'", str3, "\\u0068\\u0069\\u0021");
        org.junit.Assert.assertNotNull(unicodeEscaper6);
        org.junit.Assert.assertNotNull(unicodeEscaper9);
        org.junit.Assert.assertNotNull(unicodeEscaper12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "0" + "'", str17, "0");
        org.junit.Assert.assertNotNull(unicodeEscaper20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper29);
        org.junit.Assert.assertNotNull(unicodeEscaper31);
        org.junit.Assert.assertNotNull(unicodeEscaper33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str35, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray36);
        org.junit.Assert.assertNotNull(charSequenceTranslator37);
        org.junit.Assert.assertNotNull(charSequenceTranslator38);
        org.junit.Assert.assertNotNull(charSequenceTranslator39);
        org.junit.Assert.assertNotNull(charSequenceTranslator40);
        org.junit.Assert.assertNotNull(charSequenceTranslator41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test05044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05044");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 10, (-1));
        java.io.Writer writer4 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception", writer4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
    }

    @Test
    public void test05045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05045");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (short) -1, (int) '4');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 0, 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper8 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 0, (int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper11 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper14 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer16 = null;
        boolean boolean17 = unicodeEscaper14.translate((int) '4', writer16);
        java.io.Writer writer19 = null;
        boolean boolean20 = unicodeEscaper14.translate((int) (byte) -1, writer19);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper23 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper25 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper27 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str29 = unicodeEscaper27.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray30 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper23, unicodeEscaper25, unicodeEscaper27 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator31 = unicodeEscaper14.with(charSequenceTranslatorArray30);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator32 = unicodeEscaper11.with(charSequenceTranslatorArray30);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator33 = unicodeEscaper8.with(charSequenceTranslatorArray30);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator34 = unicodeEscaper5.with(charSequenceTranslatorArray30);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator35 = unicodeEscaper2.with(charSequenceTranslatorArray30);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper38 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str40 = unicodeEscaper38.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray41 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator42 = unicodeEscaper38.with(charSequenceTranslatorArray41);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator43 = charSequenceTranslator35.with(charSequenceTranslatorArray41);
        java.io.Writer writer46 = null;
        int int47 = charSequenceTranslator35.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030", 1, writer46);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper50 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) 'a', (int) '4');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper53 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str55 = unicodeEscaper53.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray56 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator57 = unicodeEscaper53.with(charSequenceTranslatorArray56);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator58 = unicodeEscaper50.with(charSequenceTranslatorArray56);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator59 = charSequenceTranslator35.with(charSequenceTranslatorArray56);
        java.io.Writer writer62 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int63 = charSequenceTranslator35.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: 64", (-1), writer62);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertNotNull(unicodeEscaper8);
        org.junit.Assert.assertNotNull(unicodeEscaper11);
        org.junit.Assert.assertNotNull(unicodeEscaper14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper23);
        org.junit.Assert.assertNotNull(unicodeEscaper25);
        org.junit.Assert.assertNotNull(unicodeEscaper27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str29, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray30);
        org.junit.Assert.assertNotNull(charSequenceTranslator31);
        org.junit.Assert.assertNotNull(charSequenceTranslator32);
        org.junit.Assert.assertNotNull(charSequenceTranslator33);
        org.junit.Assert.assertNotNull(charSequenceTranslator34);
        org.junit.Assert.assertNotNull(charSequenceTranslator35);
        org.junit.Assert.assertNotNull(unicodeEscaper38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "0" + "'", str40, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray41);
        org.junit.Assert.assertNotNull(charSequenceTranslator42);
        org.junit.Assert.assertNotNull(charSequenceTranslator43);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(unicodeEscaper50);
        org.junit.Assert.assertNotNull(unicodeEscaper53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "0" + "'", str55, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray56);
        org.junit.Assert.assertNotNull(charSequenceTranslator57);
        org.junit.Assert.assertNotNull(charSequenceTranslator58);
        org.junit.Assert.assertNotNull(charSequenceTranslator59);
    }

    @Test
    public void test05046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05046");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (byte) 1, (int) ' ');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper7 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer9 = null;
        boolean boolean10 = unicodeEscaper7.translate((int) ' ', writer9);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper13 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str15 = unicodeEscaper13.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray16 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator17 = unicodeEscaper13.with(charSequenceTranslatorArray16);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator18 = unicodeEscaper7.with(charSequenceTranslatorArray16);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator19 = unicodeEscaper5.with(charSequenceTranslatorArray16);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator20 = unicodeEscaper2.with(charSequenceTranslatorArray16);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper23 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper26 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer28 = null;
        boolean boolean29 = unicodeEscaper26.translate((int) (short) 10, writer28);
        java.lang.String str31 = unicodeEscaper26.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper34 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer36 = null;
        boolean boolean37 = unicodeEscaper34.translate((int) '4', writer36);
        java.io.Writer writer39 = null;
        boolean boolean40 = unicodeEscaper34.translate((int) (byte) -1, writer39);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper43 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper45 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper47 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str49 = unicodeEscaper47.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray50 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper43, unicodeEscaper45, unicodeEscaper47 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator51 = unicodeEscaper34.with(charSequenceTranslatorArray50);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator52 = unicodeEscaper26.with(charSequenceTranslatorArray50);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper55 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.lang.String str57 = unicodeEscaper55.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray58 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper55 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator59 = unicodeEscaper26.with(charSequenceTranslatorArray58);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper61 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer63 = null;
        boolean boolean64 = unicodeEscaper61.translate((int) ' ', writer63);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper67 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str69 = unicodeEscaper67.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray70 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator71 = unicodeEscaper67.with(charSequenceTranslatorArray70);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator72 = unicodeEscaper61.with(charSequenceTranslatorArray70);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator73 = unicodeEscaper26.with(charSequenceTranslatorArray70);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator74 = unicodeEscaper23.with(charSequenceTranslatorArray70);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator75 = charSequenceTranslator20.with(charSequenceTranslatorArray70);
        java.io.Writer writer77 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceTranslator75.translate((java.lang.CharSequence) "\\u005C\\u0075\\u0030\\u0030\\u0033\\u0032\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033", writer77);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertNotNull(unicodeEscaper7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "0" + "'", str15, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray16);
        org.junit.Assert.assertNotNull(charSequenceTranslator17);
        org.junit.Assert.assertNotNull(charSequenceTranslator18);
        org.junit.Assert.assertNotNull(charSequenceTranslator19);
        org.junit.Assert.assertNotNull(charSequenceTranslator20);
        org.junit.Assert.assertNotNull(unicodeEscaper23);
        org.junit.Assert.assertNotNull(unicodeEscaper26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "0" + "'", str31, "0");
        org.junit.Assert.assertNotNull(unicodeEscaper34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper43);
        org.junit.Assert.assertNotNull(unicodeEscaper45);
        org.junit.Assert.assertNotNull(unicodeEscaper47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str49, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray50);
        org.junit.Assert.assertNotNull(charSequenceTranslator51);
        org.junit.Assert.assertNotNull(charSequenceTranslator52);
        org.junit.Assert.assertNotNull(unicodeEscaper55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str57, "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray58);
        org.junit.Assert.assertNotNull(charSequenceTranslator59);
        org.junit.Assert.assertNotNull(unicodeEscaper61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper67);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "0" + "'", str69, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray70);
        org.junit.Assert.assertNotNull(charSequenceTranslator71);
        org.junit.Assert.assertNotNull(charSequenceTranslator72);
        org.junit.Assert.assertNotNull(charSequenceTranslator73);
        org.junit.Assert.assertNotNull(charSequenceTranslator74);
        org.junit.Assert.assertNotNull(charSequenceTranslator75);
    }

    @Test
    public void test05047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05047");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper1 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (short) 100);
        java.io.Writer writer4 = null;
        int int5 = unicodeEscaper1.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException", 0, writer4);
        java.io.Writer writer7 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper1.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030", writer7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test05048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05048");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper1 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (short) 1);
        java.io.Writer writer3 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean4 = unicodeEscaper1.translate((int) (short) -1, writer3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper1);
    }

    @Test
    public void test05049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05049");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between(100, 10);
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) (byte) 10, writer4);
        java.io.Writer writer7 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException:\\u0020java.io.IOException:\\u0020java.io.IOException:\\u0020", writer7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test05050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05050");
        java.io.IOException iOException2 = new java.io.IOException("java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        java.io.IOException iOException4 = new java.io.IOException();
        java.io.IOException iOException5 = new java.io.IOException();
        iOException4.addSuppressed((java.lang.Throwable) iOException5);
        java.lang.Throwable[] throwableArray7 = iOException5.getSuppressed();
        java.lang.Throwable[] throwableArray8 = iOException5.getSuppressed();
        java.io.IOException iOException10 = new java.io.IOException();
        java.io.IOException iOException11 = new java.io.IOException();
        iOException10.addSuppressed((java.lang.Throwable) iOException11);
        java.io.IOException iOException13 = new java.io.IOException("0", (java.lang.Throwable) iOException10);
        java.io.IOException iOException14 = new java.io.IOException((java.lang.Throwable) iOException13);
        iOException5.addSuppressed((java.lang.Throwable) iOException14);
        java.lang.Throwable[] throwableArray16 = iOException14.getSuppressed();
        java.io.IOException iOException17 = new java.io.IOException("A", (java.lang.Throwable) iOException14);
        java.lang.Throwable[] throwableArray18 = iOException14.getSuppressed();
        iOException2.addSuppressed((java.lang.Throwable) iOException14);
        java.io.IOException iOException22 = new java.io.IOException("0");
        java.lang.Throwable[] throwableArray23 = iOException22.getSuppressed();
        java.io.IOException iOException24 = new java.io.IOException("hi!", (java.lang.Throwable) iOException22);
        iOException2.addSuppressed((java.lang.Throwable) iOException24);
        java.io.IOException iOException26 = new java.io.IOException("\\\\u0075005C\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750033\\\\u0075005C\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750034", (java.lang.Throwable) iOException2);
        java.lang.String str27 = iOException2.toString();
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "java.io.IOException: java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str27, "java.io.IOException: java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
    }

    @Test
    public void test05051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05051");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) '4', (int) (byte) 0);
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020\\u0030");
        java.io.Writer writer6 = null;
        boolean boolean7 = unicodeEscaper2.translate(0, writer6);
        java.lang.String str9 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006A\\u005C\\u0075\\u0030\\u0030\\u0036\\u0031\\u0076\\u005C\\u0075\\u0030\\u0030\\u0036\\u0031\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u005C\\u0075\\u0030\\u0030\\u0036\\u0033\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u005C\\u0075\\u0030\\u0030\\u0036\\u0031\\u0076\\u005C\\u0075\\u0030\\u0030\\u0036\\u0031\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u005C\\u0075\\u0030\\u0030\\u0036\\u0033\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        java.lang.CharSequence charSequence10 = null;
        java.io.Writer writer11 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate(charSequence10, writer11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020\\u0030" + "'", str4, "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020\\u0030");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\u006A\\u005C\\u0075\\u0030\\u0030\\u0036\\u0031\\u0076\\u005C\\u0075\\u0030\\u0030\\u0036\\u0031\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u005C\\u0075\\u0030\\u0030\\u0036\\u0033\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u005C\\u0075\\u0030\\u0030\\u0036\\u0031\\u0076\\u005C\\u0075\\u0030\\u0030\\u0036\\u0031\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u005C\\u0075\\u0030\\u0030\\u0036\\u0033\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str9, "\\u006A\\u005C\\u0075\\u0030\\u0030\\u0036\\u0031\\u0076\\u005C\\u0075\\u0030\\u0030\\u0036\\u0031\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u005C\\u0075\\u0030\\u0030\\u0036\\u0033\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u005C\\u0075\\u0030\\u0030\\u0036\\u0031\\u0076\\u005C\\u0075\\u0030\\u0030\\u0036\\u0031\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u005C\\u0075\\u0030\\u0030\\u0036\\u0033\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
    }

    @Test
    public void test05052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05052");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) (short) 10, writer4);
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper2.translate((int) (short) 10, writer7);
        java.lang.String str10 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: java.io.IOException: 0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper12 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer14 = null;
        boolean boolean15 = unicodeEscaper12.translate((int) ' ', writer14);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper16 = new org.apache.commons.lang3.text.translate.UnicodeEscaper();
        java.lang.String str18 = unicodeEscaper16.translate((java.lang.CharSequence) "hi!");
        java.io.Writer writer20 = null;
        boolean boolean21 = unicodeEscaper16.translate((int) (byte) -1, writer20);
        java.io.Writer writer23 = null;
        boolean boolean24 = unicodeEscaper16.translate((int) (byte) -1, writer23);
        java.lang.String str26 = unicodeEscaper16.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: 0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper29 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (short) 1, (int) ' ');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper31 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper34 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer36 = null;
        boolean boolean37 = unicodeEscaper34.translate((int) '4', writer36);
        java.io.Writer writer39 = null;
        boolean boolean40 = unicodeEscaper34.translate((int) (byte) -1, writer39);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper43 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper45 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper47 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str49 = unicodeEscaper47.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray50 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper43, unicodeEscaper45, unicodeEscaper47 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator51 = unicodeEscaper34.with(charSequenceTranslatorArray50);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper54 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer56 = null;
        boolean boolean57 = unicodeEscaper54.translate((int) (short) 10, writer56);
        java.lang.String str59 = unicodeEscaper54.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper62 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer64 = null;
        boolean boolean65 = unicodeEscaper62.translate((int) '4', writer64);
        java.io.Writer writer67 = null;
        boolean boolean68 = unicodeEscaper62.translate((int) (byte) -1, writer67);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper71 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper73 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper75 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str77 = unicodeEscaper75.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray78 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper71, unicodeEscaper73, unicodeEscaper75 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator79 = unicodeEscaper62.with(charSequenceTranslatorArray78);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator80 = unicodeEscaper54.with(charSequenceTranslatorArray78);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator81 = unicodeEscaper34.with(charSequenceTranslatorArray78);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator82 = unicodeEscaper31.with(charSequenceTranslatorArray78);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator83 = unicodeEscaper29.with(charSequenceTranslatorArray78);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator84 = unicodeEscaper16.with(charSequenceTranslatorArray78);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator85 = unicodeEscaper12.with(charSequenceTranslatorArray78);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator86 = unicodeEscaper2.with(charSequenceTranslatorArray78);
        java.io.Writer writer89 = null;
        int int90 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0036\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0034", (int) (byte) 100, writer89);
        java.io.Writer writer92 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean93 = unicodeEscaper2.translate((int) (short) 100, writer92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: 0" + "'", str10, "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: 0");
        org.junit.Assert.assertNotNull(unicodeEscaper12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\\u0068\\u0069\\u0021" + "'", str18, "\\u0068\\u0069\\u0021");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030" + "'", str26, "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030");
        org.junit.Assert.assertNotNull(unicodeEscaper29);
        org.junit.Assert.assertNotNull(unicodeEscaper31);
        org.junit.Assert.assertNotNull(unicodeEscaper34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper43);
        org.junit.Assert.assertNotNull(unicodeEscaper45);
        org.junit.Assert.assertNotNull(unicodeEscaper47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str49, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray50);
        org.junit.Assert.assertNotNull(charSequenceTranslator51);
        org.junit.Assert.assertNotNull(unicodeEscaper54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "0" + "'", str59, "0");
        org.junit.Assert.assertNotNull(unicodeEscaper62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper71);
        org.junit.Assert.assertNotNull(unicodeEscaper73);
        org.junit.Assert.assertNotNull(unicodeEscaper75);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str77, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray78);
        org.junit.Assert.assertNotNull(charSequenceTranslator79);
        org.junit.Assert.assertNotNull(charSequenceTranslator80);
        org.junit.Assert.assertNotNull(charSequenceTranslator81);
        org.junit.Assert.assertNotNull(charSequenceTranslator82);
        org.junit.Assert.assertNotNull(charSequenceTranslator83);
        org.junit.Assert.assertNotNull(charSequenceTranslator84);
        org.junit.Assert.assertNotNull(charSequenceTranslator85);
        org.junit.Assert.assertNotNull(charSequenceTranslator86);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
    }

    @Test
    public void test05053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05053");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(100, (int) ' ');
        java.io.Writer writer5 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int6 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030", 10, writer5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
    }

    @Test
    public void test05054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05054");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', (int) (short) 100);
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) (byte) 100, writer4);
        java.io.Writer writer8 = null;
        int int9 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", 1, writer8);
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test05055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05055");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '#', 100);
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "\\\\u0075006A\\\\u00750061\\\\u00750076\\\\u00750061\\\\u0075002E\\\\u00750069\\\\u0075006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E\\\\u0075003A\\\\u00750020\\\\u0075006A\\\\u00750061\\\\u00750076\\\\u00750061\\\\u0075002E\\\\u00750069\\\\u0075006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E");
        java.io.Writer writer7 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int8 = unicodeEscaper2.translate((java.lang.CharSequence) "\\\\u00750036\\\\u00750034", (int) (byte) 100, writer7);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\\\\\u00750075006A\\\\\\u007500750061\\\\\\u007500750076\\\\\\u007500750061\\\\\\u00750075002E\\\\\\u007500750069\\\\\\u00750075006F\\\\\\u00750075002E\\\\\\u007500750049\\\\\\u00750075004F\\\\\\u007500750045\\\\\\u007500750078\\\\\\u007500750063\\\\\\u007500750065\\\\\\u007500750070\\\\\\u007500750074\\\\\\u007500750069\\\\\\u00750075006F\\\\\\u00750075006E\\\\\\u00750075003A\\\\\\u007500750020\\\\\\u00750075006A\\\\\\u007500750061\\\\\\u007500750076\\\\\\u007500750061\\\\\\u00750075002E\\\\\\u007500750069\\\\\\u00750075006F\\\\\\u00750075002E\\\\\\u007500750049\\\\\\u00750075004F\\\\\\u007500750045\\\\\\u007500750078\\\\\\u007500750063\\\\\\u007500750065\\\\\\u007500750070\\\\\\u007500750074\\\\\\u007500750069\\\\\\u00750075006F\\\\\\u00750075006E" + "'", str4, "\\\\\\u00750075006A\\\\\\u007500750061\\\\\\u007500750076\\\\\\u007500750061\\\\\\u00750075002E\\\\\\u007500750069\\\\\\u00750075006F\\\\\\u00750075002E\\\\\\u007500750049\\\\\\u00750075004F\\\\\\u007500750045\\\\\\u007500750078\\\\\\u007500750063\\\\\\u007500750065\\\\\\u007500750070\\\\\\u007500750074\\\\\\u007500750069\\\\\\u00750075006F\\\\\\u00750075006E\\\\\\u00750075003A\\\\\\u007500750020\\\\\\u00750075006A\\\\\\u007500750061\\\\\\u007500750076\\\\\\u007500750061\\\\\\u00750075002E\\\\\\u007500750069\\\\\\u00750075006F\\\\\\u00750075002E\\\\\\u007500750049\\\\\\u00750075004F\\\\\\u007500750045\\\\\\u007500750078\\\\\\u007500750063\\\\\\u007500750065\\\\\\u007500750070\\\\\\u007500750074\\\\\\u007500750069\\\\\\u00750075006F\\\\\\u00750075006E");
    }

    @Test
    public void test05056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05056");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray5 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator6 = unicodeEscaper2.with(charSequenceTranslatorArray5);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper8 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (short) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper11 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '#', 100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper14 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 0, 1);
        java.lang.String str16 = unicodeEscaper14.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: java.io.IOException: 0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper18 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper21 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer23 = null;
        boolean boolean24 = unicodeEscaper21.translate((int) '4', writer23);
        java.io.Writer writer26 = null;
        boolean boolean27 = unicodeEscaper21.translate((int) (byte) -1, writer26);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper30 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper32 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper34 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str36 = unicodeEscaper34.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray37 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper30, unicodeEscaper32, unicodeEscaper34 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator38 = unicodeEscaper21.with(charSequenceTranslatorArray37);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper41 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer43 = null;
        boolean boolean44 = unicodeEscaper41.translate((int) (short) 10, writer43);
        java.lang.String str46 = unicodeEscaper41.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper49 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer51 = null;
        boolean boolean52 = unicodeEscaper49.translate((int) '4', writer51);
        java.io.Writer writer54 = null;
        boolean boolean55 = unicodeEscaper49.translate((int) (byte) -1, writer54);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper58 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper60 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper62 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str64 = unicodeEscaper62.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray65 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper58, unicodeEscaper60, unicodeEscaper62 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator66 = unicodeEscaper49.with(charSequenceTranslatorArray65);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator67 = unicodeEscaper41.with(charSequenceTranslatorArray65);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator68 = unicodeEscaper21.with(charSequenceTranslatorArray65);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator69 = unicodeEscaper18.with(charSequenceTranslatorArray65);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator70 = unicodeEscaper14.with(charSequenceTranslatorArray65);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator71 = unicodeEscaper11.with(charSequenceTranslatorArray65);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator72 = unicodeEscaper8.with(charSequenceTranslatorArray65);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator73 = unicodeEscaper2.with(charSequenceTranslatorArray65);
        java.lang.String str75 = unicodeEscaper2.translate((java.lang.CharSequence) "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020");
        java.io.Writer writer77 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean78 = unicodeEscaper2.translate((int) (byte) 0, writer77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0" + "'", str4, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray5);
        org.junit.Assert.assertNotNull(charSequenceTranslator6);
        org.junit.Assert.assertNotNull(unicodeEscaper8);
        org.junit.Assert.assertNotNull(unicodeEscaper11);
        org.junit.Assert.assertNotNull(unicodeEscaper14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030" + "'", str16, "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030");
        org.junit.Assert.assertNotNull(unicodeEscaper18);
        org.junit.Assert.assertNotNull(unicodeEscaper21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper30);
        org.junit.Assert.assertNotNull(unicodeEscaper32);
        org.junit.Assert.assertNotNull(unicodeEscaper34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str36, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray37);
        org.junit.Assert.assertNotNull(charSequenceTranslator38);
        org.junit.Assert.assertNotNull(unicodeEscaper41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "0" + "'", str46, "0");
        org.junit.Assert.assertNotNull(unicodeEscaper49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper58);
        org.junit.Assert.assertNotNull(unicodeEscaper60);
        org.junit.Assert.assertNotNull(unicodeEscaper62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str64, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray65);
        org.junit.Assert.assertNotNull(charSequenceTranslator66);
        org.junit.Assert.assertNotNull(charSequenceTranslator67);
        org.junit.Assert.assertNotNull(charSequenceTranslator68);
        org.junit.Assert.assertNotNull(charSequenceTranslator69);
        org.junit.Assert.assertNotNull(charSequenceTranslator70);
        org.junit.Assert.assertNotNull(charSequenceTranslator71);
        org.junit.Assert.assertNotNull(charSequenceTranslator72);
        org.junit.Assert.assertNotNull(charSequenceTranslator73);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020" + "'", str75, "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020");
    }

    @Test
    public void test05057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05057");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) 'a', 0);
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) (short) 1, writer4);
        java.io.Writer writer8 = null;
        int int9 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u005Cu\\u0030\\u0030\\u0036\\u0041\\u0061\\u005Cu\\u0030\\u0030\\u0037\\u0036\\u0061\\u002E\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0036\\u0046\\u002E\\u0049\\u004F\\u0045\\u005Cu\\u0030\\u0030\\u0037\\u0038\\u0063\\u005Cu\\u0030\\u0030\\u0036\\u0035\\u005Cu\\u0030\\u0030\\u0037\\u0030\\u005Cu\\u0030\\u0030\\u0037\\u0034\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0036\\u0046\\u005Cu\\u0030\\u0030\\u0036\\u0045\\u003A\\u0020\\u0036\\u0031", (int) (byte) 0, writer8);
        java.io.Writer writer11 = null;
        boolean boolean12 = unicodeEscaper2.translate((int) (short) 100, writer11);
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test05058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05058");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (byte) 100, (int) (byte) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str7 = unicodeEscaper5.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray8 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator9 = unicodeEscaper5.with(charSequenceTranslatorArray8);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator10 = unicodeEscaper2.with(charSequenceTranslatorArray8);
        java.lang.Class<?> wildcardClass11 = charSequenceTranslatorArray8.getClass();
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0" + "'", str7, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray8);
        org.junit.Assert.assertNotNull(charSequenceTranslator9);
        org.junit.Assert.assertNotNull(charSequenceTranslator10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test05059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05059");
        java.io.IOException iOException6 = new java.io.IOException("");
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException9 = new java.io.IOException("");
        iOException7.addSuppressed((java.lang.Throwable) iOException9);
        java.io.IOException iOException11 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException9);
        java.io.IOException iOException12 = new java.io.IOException("java.io.IOException: \\u0068\\u0069\\u0021", (java.lang.Throwable) iOException9);
        java.io.IOException iOException13 = new java.io.IOException();
        java.io.IOException iOException14 = new java.io.IOException();
        iOException13.addSuppressed((java.lang.Throwable) iOException14);
        java.lang.Throwable[] throwableArray16 = iOException14.getSuppressed();
        java.lang.Throwable[] throwableArray17 = iOException14.getSuppressed();
        java.io.IOException iOException19 = new java.io.IOException();
        java.io.IOException iOException20 = new java.io.IOException();
        iOException19.addSuppressed((java.lang.Throwable) iOException20);
        java.io.IOException iOException22 = new java.io.IOException("0", (java.lang.Throwable) iOException19);
        java.io.IOException iOException23 = new java.io.IOException((java.lang.Throwable) iOException22);
        iOException14.addSuppressed((java.lang.Throwable) iOException23);
        java.lang.Throwable[] throwableArray25 = iOException14.getSuppressed();
        iOException9.addSuppressed((java.lang.Throwable) iOException14);
        java.io.IOException iOException27 = new java.io.IOException("\\\\u00750068\\\\u00750069\\\\u00750021", (java.lang.Throwable) iOException14);
        java.io.IOException iOException28 = new java.io.IOException((java.lang.Throwable) iOException27);
        java.io.IOException iOException29 = new java.io.IOException((java.lang.Throwable) iOException27);
        java.io.IOException iOException30 = new java.io.IOException((java.lang.Throwable) iOException27);
        java.io.IOException iOException31 = new java.io.IOException("java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: 0", (java.lang.Throwable) iOException30);
        java.io.IOException iOException32 = new java.io.IOException((java.lang.Throwable) iOException30);
        java.io.IOException iOException33 = new java.io.IOException("\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u00200", (java.lang.Throwable) iOException30);
        java.lang.Throwable[] throwableArray34 = iOException33.getSuppressed();
        java.io.IOException iOException35 = new java.io.IOException((java.lang.Throwable) iOException33);
        java.lang.String str36 = iOException33.toString();
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "java.io.IOException: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u00200" + "'", str36, "java.io.IOException: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u00200");
    }

    @Test
    public void test05060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05060");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 0, (int) (byte) 0);
        java.io.Writer writer4 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean5 = unicodeEscaper2.translate(0, writer4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
    }

    @Test
    public void test05061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05061");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (byte) 10, (int) ' ');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper8 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', (int) (short) 0);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray9 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper8 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator10 = unicodeEscaper5.with(charSequenceTranslatorArray9);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator11 = unicodeEscaper2.with(charSequenceTranslatorArray9);
        java.lang.String str13 = charSequenceTranslator11.translate((java.lang.CharSequence) "java.io.IOException: 0");
        java.lang.String str15 = charSequenceTranslator11.translate((java.lang.CharSequence) "java.io.IOException: \\\\u00750068\\\\u00750069\\\\u00750021");
        java.io.Writer writer18 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int19 = charSequenceTranslator11.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: ", (int) '#', writer18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertNotNull(unicodeEscaper8);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray9);
        org.junit.Assert.assertNotNull(charSequenceTranslator10);
        org.junit.Assert.assertNotNull(charSequenceTranslator11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030" + "'", str13, "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0036\\u0038\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0036\\u0039\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0032\\u0031" + "'", str15, "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0036\\u0038\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0036\\u0039\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0032\\u0031");
    }

    @Test
    public void test05062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05062");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper1 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (short) 10);
        java.lang.String str3 = unicodeEscaper1.translate((java.lang.CharSequence) "\\u0068\\u0069\\u0021");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper6 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 10, (-1));
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper9 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 100, (int) (short) 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper12 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer14 = null;
        boolean boolean15 = unicodeEscaper12.translate((int) (short) 10, writer14);
        java.lang.String str17 = unicodeEscaper12.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper20 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer22 = null;
        boolean boolean23 = unicodeEscaper20.translate((int) '4', writer22);
        java.io.Writer writer25 = null;
        boolean boolean26 = unicodeEscaper20.translate((int) (byte) -1, writer25);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper29 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper31 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper33 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str35 = unicodeEscaper33.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray36 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper29, unicodeEscaper31, unicodeEscaper33 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator37 = unicodeEscaper20.with(charSequenceTranslatorArray36);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator38 = unicodeEscaper12.with(charSequenceTranslatorArray36);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator39 = unicodeEscaper9.with(charSequenceTranslatorArray36);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator40 = unicodeEscaper6.with(charSequenceTranslatorArray36);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator41 = unicodeEscaper1.with(charSequenceTranslatorArray36);
        java.io.Writer writer44 = null;
        int int45 = unicodeEscaper1.translate((java.lang.CharSequence) "\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750032\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030", (int) (short) 1, writer44);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper48 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (byte) 100, (int) (byte) 0);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray49 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator50 = unicodeEscaper48.with(charSequenceTranslatorArray49);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator51 = unicodeEscaper1.with(charSequenceTranslatorArray49);
        java.io.Writer writer53 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceTranslator51.translate((java.lang.CharSequence) "java.io.IOException: 64", writer53);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\u0068\\u0069\\u0021" + "'", str3, "\\u0068\\u0069\\u0021");
        org.junit.Assert.assertNotNull(unicodeEscaper6);
        org.junit.Assert.assertNotNull(unicodeEscaper9);
        org.junit.Assert.assertNotNull(unicodeEscaper12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "0" + "'", str17, "0");
        org.junit.Assert.assertNotNull(unicodeEscaper20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper29);
        org.junit.Assert.assertNotNull(unicodeEscaper31);
        org.junit.Assert.assertNotNull(unicodeEscaper33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str35, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray36);
        org.junit.Assert.assertNotNull(charSequenceTranslator37);
        org.junit.Assert.assertNotNull(charSequenceTranslator38);
        org.junit.Assert.assertNotNull(charSequenceTranslator39);
        org.junit.Assert.assertNotNull(charSequenceTranslator40);
        org.junit.Assert.assertNotNull(charSequenceTranslator41);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(unicodeEscaper48);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray49);
        org.junit.Assert.assertNotNull(charSequenceTranslator50);
        org.junit.Assert.assertNotNull(charSequenceTranslator51);
    }

    @Test
    public void test05063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05063");
        java.io.IOException iOException1 = new java.io.IOException();
        java.io.IOException iOException2 = new java.io.IOException();
        iOException1.addSuppressed((java.lang.Throwable) iOException2);
        java.io.IOException iOException4 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.io.IOException iOException6 = new java.io.IOException("", (java.lang.Throwable) iOException5);
        java.lang.String str7 = iOException5.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "java.io.IOException: java.io.IOException" + "'", str7, "java.io.IOException: java.io.IOException");
    }

    @Test
    public void test05064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05064");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 0, (int) (byte) -1);
        java.io.Writer writer4 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate((java.lang.CharSequence) "\\u005Cu\\u0030\\u0030\\u0036\\u0041\\u005Cu\\u0030\\u0030\\u0036\\u0031\\u005Cu\\u0030\\u0030\\u0037\\u0036\\u005Cu\\u0030\\u0030\\u0036\\u0031\\u005Cu\\u0030\\u0030\\u0032\\u0045\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0036\\u0046\\u005Cu\\u0030\\u0030\\u0032\\u0045\\u005Cu\\u0030\\u0030\\u0034\\u0039\\u005Cu\\u0030\\u0030\\u0034\\u0046\\u005Cu\\u0030\\u0030\\u0034\\u0035\\u005Cu\\u0030\\u0030\\u0037\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0033\\u005Cu\\u0030\\u0030\\u0036\\u0035\\u005Cu\\u0030\\u0030\\u0037\\u0030\\u005Cu\\u0030\\u0030\\u0037\\u0034\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0036\\u0046\\u005Cu\\u0030\\u0030\\u0036\\u0045\\u005Cu\\u0030\\u0030\\u0033\\u0041\\u0020", writer4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
    }

    @Test
    public void test05065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05065");
        java.io.IOException iOException3 = new java.io.IOException("");
        java.io.IOException iOException4 = new java.io.IOException("A", (java.lang.Throwable) iOException3);
        java.lang.Throwable[] throwableArray5 = iOException3.getSuppressed();
        java.io.IOException iOException6 = new java.io.IOException("java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception", (java.lang.Throwable) iOException3);
        java.io.IOException iOException8 = new java.io.IOException("hi!");
        java.lang.Throwable[] throwableArray9 = iOException8.getSuppressed();
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException8);
        java.io.IOException iOException11 = new java.io.IOException();
        java.io.IOException iOException12 = new java.io.IOException();
        iOException11.addSuppressed((java.lang.Throwable) iOException12);
        java.lang.Throwable[] throwableArray14 = iOException12.getSuppressed();
        java.io.IOException iOException15 = new java.io.IOException((java.lang.Throwable) iOException12);
        java.io.IOException iOException17 = new java.io.IOException("");
        java.io.IOException iOException18 = new java.io.IOException((java.lang.Throwable) iOException17);
        iOException12.addSuppressed((java.lang.Throwable) iOException18);
        iOException10.addSuppressed((java.lang.Throwable) iOException12);
        iOException6.addSuppressed((java.lang.Throwable) iOException10);
        java.io.IOException iOException22 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException25 = new java.io.IOException();
        java.io.IOException iOException26 = new java.io.IOException();
        iOException25.addSuppressed((java.lang.Throwable) iOException26);
        java.io.IOException iOException28 = new java.io.IOException("0", (java.lang.Throwable) iOException25);
        java.io.IOException iOException29 = new java.io.IOException((java.lang.Throwable) iOException28);
        java.io.IOException iOException30 = new java.io.IOException((java.lang.Throwable) iOException29);
        java.io.IOException iOException31 = new java.io.IOException("hi!", (java.lang.Throwable) iOException30);
        iOException6.addSuppressed((java.lang.Throwable) iOException30);
        java.io.IOException iOException33 = new java.io.IOException((java.lang.Throwable) iOException30);
        java.lang.String str34 = iOException30.toString();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "java.io.IOException: java.io.IOException: java.io.IOException: 0" + "'", str34, "java.io.IOException: java.io.IOException: java.io.IOException: 0");
    }

    @Test
    public void test05066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05066");
        java.io.IOException iOException3 = new java.io.IOException("");
        java.io.IOException iOException4 = new java.io.IOException((java.lang.Throwable) iOException3);
        java.io.IOException iOException6 = new java.io.IOException("");
        iOException4.addSuppressed((java.lang.Throwable) iOException6);
        java.io.IOException iOException8 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException6);
        java.io.IOException iOException10 = new java.io.IOException("");
        java.io.IOException iOException11 = new java.io.IOException((java.lang.Throwable) iOException10);
        java.io.IOException iOException12 = new java.io.IOException((java.lang.Throwable) iOException10);
        iOException8.addSuppressed((java.lang.Throwable) iOException10);
        java.io.IOException iOException14 = new java.io.IOException("\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034", (java.lang.Throwable) iOException8);
        java.io.IOException iOException16 = new java.io.IOException("");
        java.lang.Throwable[] throwableArray17 = iOException16.getSuppressed();
        java.io.IOException iOException18 = new java.io.IOException((java.lang.Throwable) iOException16);
        iOException8.addSuppressed((java.lang.Throwable) iOException16);
        java.io.IOException iOException20 = new java.io.IOException((java.lang.Throwable) iOException16);
        java.io.IOException iOException24 = new java.io.IOException();
        java.io.IOException iOException25 = new java.io.IOException();
        iOException24.addSuppressed((java.lang.Throwable) iOException25);
        java.io.IOException iOException27 = new java.io.IOException();
        java.io.IOException iOException28 = new java.io.IOException();
        iOException27.addSuppressed((java.lang.Throwable) iOException28);
        java.lang.Throwable[] throwableArray30 = iOException28.getSuppressed();
        java.io.IOException iOException31 = new java.io.IOException((java.lang.Throwable) iOException28);
        java.io.IOException iOException33 = new java.io.IOException("");
        java.io.IOException iOException34 = new java.io.IOException((java.lang.Throwable) iOException33);
        iOException28.addSuppressed((java.lang.Throwable) iOException34);
        iOException25.addSuppressed((java.lang.Throwable) iOException34);
        java.io.IOException iOException37 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException34);
        java.io.IOException iOException38 = new java.io.IOException((java.lang.Throwable) iOException34);
        java.io.IOException iOException41 = new java.io.IOException();
        java.io.IOException iOException42 = new java.io.IOException();
        iOException41.addSuppressed((java.lang.Throwable) iOException42);
        java.io.IOException iOException44 = new java.io.IOException("0", (java.lang.Throwable) iOException41);
        java.io.IOException iOException45 = new java.io.IOException((java.lang.Throwable) iOException44);
        java.io.IOException iOException46 = new java.io.IOException((java.lang.Throwable) iOException45);
        java.io.IOException iOException47 = new java.io.IOException((java.lang.Throwable) iOException46);
        java.lang.Throwable[] throwableArray48 = iOException47.getSuppressed();
        java.io.IOException iOException49 = new java.io.IOException("java.io.IOException: java.io.IOException", (java.lang.Throwable) iOException47);
        iOException34.addSuppressed((java.lang.Throwable) iOException47);
        java.io.IOException iOException51 = new java.io.IOException((java.lang.Throwable) iOException47);
        java.io.IOException iOException52 = new java.io.IOException("java.io.IOException: A", (java.lang.Throwable) iOException51);
        java.io.IOException iOException53 = new java.io.IOException("j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020\\u0030", (java.lang.Throwable) iOException51);
        iOException20.addSuppressed((java.lang.Throwable) iOException51);
        java.lang.Throwable[] throwableArray55 = iOException20.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray55);
    }

    @Test
    public void test05067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05067");
        java.io.IOException iOException2 = new java.io.IOException();
        java.io.IOException iOException3 = new java.io.IOException();
        iOException2.addSuppressed((java.lang.Throwable) iOException3);
        java.io.IOException iOException5 = new java.io.IOException();
        java.io.IOException iOException6 = new java.io.IOException();
        iOException5.addSuppressed((java.lang.Throwable) iOException6);
        java.lang.Throwable[] throwableArray8 = iOException6.getSuppressed();
        java.io.IOException iOException9 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException11 = new java.io.IOException("");
        java.io.IOException iOException12 = new java.io.IOException((java.lang.Throwable) iOException11);
        iOException6.addSuppressed((java.lang.Throwable) iOException12);
        iOException3.addSuppressed((java.lang.Throwable) iOException12);
        java.io.IOException iOException15 = new java.io.IOException("20", (java.lang.Throwable) iOException12);
        java.io.IOException iOException16 = new java.io.IOException("java.io.IOException:\\u0020hi\\u0021", (java.lang.Throwable) iOException12);
        java.io.IOException iOException17 = new java.io.IOException((java.lang.Throwable) iOException12);
        java.lang.String str18 = iOException12.toString();
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "java.io.IOException: java.io.IOException: " + "'", str18, "java.io.IOException: java.io.IOException: ");
    }

    @Test
    public void test05068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05068");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (short) 10, (int) 'a');
        java.io.Writer writer5 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int6 = unicodeEscaper2.translate((java.lang.CharSequence) "\\\\\\\\u007500750075006Aa\\\\\\\\u0075007500750076a.\\\\\\\\u0075007500750069\\\\\\\\u007500750075006F.IOE\\\\\\\\u0075007500750078\\\\\\\\u0075007500750063\\\\\\\\u0075007500750065\\\\\\\\u0075007500750070\\\\\\\\u0075007500750074\\\\\\\\u0075007500750069\\\\\\\\u007500750075006F\\\\\\\\u007500750075006E: \\\\\\\\u007500750075006Aa\\\\\\\\u0075007500750076a.\\\\\\\\u0075007500750069\\\\\\\\u007500750075006F.IOE\\\\\\\\u0075007500750078\\\\\\\\u0075007500750063\\\\\\\\u0075007500750065\\\\\\\\u0075007500750070\\\\\\\\u0075007500750074\\\\\\\\u0075007500750069\\\\\\\\u007500750075006F\\\\\\\\u007500750075006E: \\\\\\\\u007500750075006Aa\\\\\\\\u0075007500750076a.\\\\\\\\u0075007500750069\\\\\\\\u007500750075006F.IOE\\\\\\\\u0075007500750078\\\\\\\\u0075007500750063\\\\\\\\u0075007500750065\\\\\\\\u0075007500750070\\\\\\\\u0075007500750074\\\\\\\\u0075007500750069\\\\\\\\u007500750075006F\\\\\\\\u007500750075006E: 0", 100, writer5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
    }

    @Test
    public void test05069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05069");
        java.io.IOException iOException3 = new java.io.IOException("java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        java.lang.Throwable[] throwableArray4 = iOException3.getSuppressed();
        java.io.IOException iOException8 = new java.io.IOException("");
        java.io.IOException iOException9 = new java.io.IOException("A", (java.lang.Throwable) iOException8);
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException8);
        java.io.IOException iOException11 = new java.io.IOException((java.lang.Throwable) iOException10);
        java.io.IOException iOException12 = new java.io.IOException("\\u0036\\u0034", (java.lang.Throwable) iOException10);
        java.io.IOException iOException14 = new java.io.IOException();
        java.io.IOException iOException15 = new java.io.IOException();
        iOException14.addSuppressed((java.lang.Throwable) iOException15);
        java.io.IOException iOException17 = new java.io.IOException("0", (java.lang.Throwable) iOException14);
        java.io.IOException iOException18 = new java.io.IOException((java.lang.Throwable) iOException17);
        java.io.IOException iOException19 = new java.io.IOException((java.lang.Throwable) iOException18);
        iOException10.addSuppressed((java.lang.Throwable) iOException18);
        java.io.IOException iOException21 = new java.io.IOException();
        java.io.IOException iOException22 = new java.io.IOException();
        iOException21.addSuppressed((java.lang.Throwable) iOException22);
        java.io.IOException iOException24 = new java.io.IOException();
        java.io.IOException iOException25 = new java.io.IOException();
        iOException24.addSuppressed((java.lang.Throwable) iOException25);
        java.lang.Throwable[] throwableArray27 = iOException25.getSuppressed();
        java.io.IOException iOException28 = new java.io.IOException((java.lang.Throwable) iOException25);
        java.io.IOException iOException30 = new java.io.IOException("");
        java.io.IOException iOException31 = new java.io.IOException((java.lang.Throwable) iOException30);
        iOException25.addSuppressed((java.lang.Throwable) iOException31);
        iOException22.addSuppressed((java.lang.Throwable) iOException31);
        java.lang.Throwable[] throwableArray34 = iOException22.getSuppressed();
        java.lang.Throwable[] throwableArray35 = iOException22.getSuppressed();
        java.lang.Throwable[] throwableArray36 = iOException22.getSuppressed();
        java.io.IOException iOException38 = new java.io.IOException("0");
        java.io.IOException iOException39 = new java.io.IOException((java.lang.Throwable) iOException38);
        iOException22.addSuppressed((java.lang.Throwable) iOException38);
        iOException18.addSuppressed((java.lang.Throwable) iOException22);
        iOException3.addSuppressed((java.lang.Throwable) iOException22);
        java.io.IOException iOException43 = new java.io.IOException("23", (java.lang.Throwable) iOException3);
        java.io.IOException iOException44 = new java.io.IOException((java.lang.Throwable) iOException43);
        java.io.IOException iOException45 = new java.io.IOException("\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException43);
        java.lang.Class<?> wildcardClass46 = iOException43.getClass();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test05070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05070");
        java.io.IOException iOException2 = new java.io.IOException();
        java.io.IOException iOException3 = new java.io.IOException();
        iOException2.addSuppressed((java.lang.Throwable) iOException3);
        java.io.IOException iOException5 = new java.io.IOException();
        java.io.IOException iOException6 = new java.io.IOException();
        iOException5.addSuppressed((java.lang.Throwable) iOException6);
        java.lang.Throwable[] throwableArray8 = iOException6.getSuppressed();
        java.io.IOException iOException9 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException11 = new java.io.IOException("");
        java.io.IOException iOException12 = new java.io.IOException((java.lang.Throwable) iOException11);
        iOException6.addSuppressed((java.lang.Throwable) iOException12);
        iOException3.addSuppressed((java.lang.Throwable) iOException12);
        java.lang.Throwable[] throwableArray15 = iOException3.getSuppressed();
        java.io.IOException iOException16 = new java.io.IOException("", (java.lang.Throwable) iOException3);
        java.io.IOException iOException17 = new java.io.IOException((java.lang.Throwable) iOException16);
        java.io.IOException iOException18 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030", (java.lang.Throwable) iOException16);
        java.lang.String str19 = iOException16.toString();
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "java.io.IOException: " + "'", str19, "java.io.IOException: ");
    }

    @Test
    public void test05071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05071");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between(0, (int) (short) 0);
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A \\u0036\\u0034");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper7 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper9 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer11 = null;
        boolean boolean12 = unicodeEscaper9.translate((int) ' ', writer11);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper15 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str17 = unicodeEscaper15.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray18 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator19 = unicodeEscaper15.with(charSequenceTranslatorArray18);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator20 = unicodeEscaper9.with(charSequenceTranslatorArray18);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator21 = unicodeEscaper7.with(charSequenceTranslatorArray18);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper24 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer26 = null;
        boolean boolean27 = unicodeEscaper24.translate((int) (short) 10, writer26);
        java.lang.String str29 = unicodeEscaper24.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper32 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer34 = null;
        boolean boolean35 = unicodeEscaper32.translate((int) '4', writer34);
        java.io.Writer writer37 = null;
        boolean boolean38 = unicodeEscaper32.translate((int) (byte) -1, writer37);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper41 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper43 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper45 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str47 = unicodeEscaper45.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray48 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper41, unicodeEscaper43, unicodeEscaper45 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator49 = unicodeEscaper32.with(charSequenceTranslatorArray48);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator50 = unicodeEscaper24.with(charSequenceTranslatorArray48);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper53 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.lang.String str55 = unicodeEscaper53.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray56 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper53 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator57 = unicodeEscaper24.with(charSequenceTranslatorArray56);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator58 = unicodeEscaper7.with(charSequenceTranslatorArray56);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator59 = unicodeEscaper2.with(charSequenceTranslatorArray56);
        java.io.Writer writer61 = null;
        boolean boolean62 = unicodeEscaper2.translate((int) ' ', writer61);
        java.io.Writer writer65 = null;
        int int66 = unicodeEscaper2.translate((java.lang.CharSequence) "61", 0, writer65);
        java.io.Writer writer69 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int70 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034", (int) (byte) -1, writer69);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A \\u0036\\u0034" + "'", str4, "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A \\u0036\\u0034");
        org.junit.Assert.assertNotNull(unicodeEscaper7);
        org.junit.Assert.assertNotNull(unicodeEscaper9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "0" + "'", str17, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray18);
        org.junit.Assert.assertNotNull(charSequenceTranslator19);
        org.junit.Assert.assertNotNull(charSequenceTranslator20);
        org.junit.Assert.assertNotNull(charSequenceTranslator21);
        org.junit.Assert.assertNotNull(unicodeEscaper24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "0" + "'", str29, "0");
        org.junit.Assert.assertNotNull(unicodeEscaper32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper41);
        org.junit.Assert.assertNotNull(unicodeEscaper43);
        org.junit.Assert.assertNotNull(unicodeEscaper45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str47, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray48);
        org.junit.Assert.assertNotNull(charSequenceTranslator49);
        org.junit.Assert.assertNotNull(charSequenceTranslator50);
        org.junit.Assert.assertNotNull(unicodeEscaper53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str55, "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray56);
        org.junit.Assert.assertNotNull(charSequenceTranslator57);
        org.junit.Assert.assertNotNull(charSequenceTranslator58);
        org.junit.Assert.assertNotNull(charSequenceTranslator59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
    }

    @Test
    public void test05072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05072");
        java.io.IOException iOException3 = new java.io.IOException();
        java.io.IOException iOException4 = new java.io.IOException();
        iOException3.addSuppressed((java.lang.Throwable) iOException4);
        java.io.IOException iOException6 = new java.io.IOException();
        java.io.IOException iOException7 = new java.io.IOException();
        iOException6.addSuppressed((java.lang.Throwable) iOException7);
        java.lang.Throwable[] throwableArray9 = iOException7.getSuppressed();
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.io.IOException iOException12 = new java.io.IOException("");
        java.io.IOException iOException13 = new java.io.IOException((java.lang.Throwable) iOException12);
        iOException7.addSuppressed((java.lang.Throwable) iOException13);
        iOException4.addSuppressed((java.lang.Throwable) iOException13);
        java.io.IOException iOException16 = new java.io.IOException("java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception", (java.lang.Throwable) iOException4);
        java.io.IOException iOException17 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.lang.Throwable[] throwableArray18 = iOException4.getSuppressed();
        java.lang.Throwable[] throwableArray19 = iOException4.getSuppressed();
        java.io.IOException iOException20 = new java.io.IOException("\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750032\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030", (java.lang.Throwable) iOException4);
        java.io.IOException iOException21 = new java.io.IOException((java.lang.Throwable) iOException20);
        java.io.IOException iOException22 = new java.io.IOException("java.io.IOException: java.io.IOException: java.io.IOException: \\u0068\\u0069\\u0021", (java.lang.Throwable) iOException21);
        java.lang.String str23 = iOException21.toString();
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "java.io.IOException: java.io.IOException: \\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750032\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030" + "'", str23, "java.io.IOException: java.io.IOException: \\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750032\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030");
    }

    @Test
    public void test05073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05073");
        java.io.IOException iOException0 = new java.io.IOException();
        java.io.IOException iOException1 = new java.io.IOException();
        iOException0.addSuppressed((java.lang.Throwable) iOException1);
        java.io.IOException iOException3 = new java.io.IOException();
        java.io.IOException iOException4 = new java.io.IOException();
        iOException3.addSuppressed((java.lang.Throwable) iOException4);
        java.lang.Throwable[] throwableArray6 = iOException4.getSuppressed();
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.io.IOException iOException9 = new java.io.IOException("");
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException9);
        iOException4.addSuppressed((java.lang.Throwable) iOException10);
        iOException1.addSuppressed((java.lang.Throwable) iOException10);
        java.lang.Throwable[] throwableArray13 = iOException1.getSuppressed();
        java.lang.Throwable[] throwableArray14 = iOException1.getSuppressed();
        java.lang.Throwable[] throwableArray15 = iOException1.getSuppressed();
        java.io.IOException iOException17 = new java.io.IOException("0");
        java.io.IOException iOException18 = new java.io.IOException((java.lang.Throwable) iOException17);
        iOException1.addSuppressed((java.lang.Throwable) iOException17);
        java.io.IOException iOException25 = new java.io.IOException("");
        java.io.IOException iOException26 = new java.io.IOException((java.lang.Throwable) iOException25);
        java.io.IOException iOException28 = new java.io.IOException("");
        iOException26.addSuppressed((java.lang.Throwable) iOException28);
        java.io.IOException iOException30 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException28);
        java.io.IOException iOException31 = new java.io.IOException("java.io.IOException: \\u0068\\u0069\\u0021", (java.lang.Throwable) iOException28);
        java.io.IOException iOException32 = new java.io.IOException();
        java.io.IOException iOException33 = new java.io.IOException();
        iOException32.addSuppressed((java.lang.Throwable) iOException33);
        java.lang.Throwable[] throwableArray35 = iOException33.getSuppressed();
        java.lang.Throwable[] throwableArray36 = iOException33.getSuppressed();
        java.io.IOException iOException38 = new java.io.IOException();
        java.io.IOException iOException39 = new java.io.IOException();
        iOException38.addSuppressed((java.lang.Throwable) iOException39);
        java.io.IOException iOException41 = new java.io.IOException("0", (java.lang.Throwable) iOException38);
        java.io.IOException iOException42 = new java.io.IOException((java.lang.Throwable) iOException41);
        iOException33.addSuppressed((java.lang.Throwable) iOException42);
        java.lang.Throwable[] throwableArray44 = iOException33.getSuppressed();
        iOException28.addSuppressed((java.lang.Throwable) iOException33);
        java.io.IOException iOException46 = new java.io.IOException("java.io.IOException: java.io.IOException: java.io.IOException: 0", (java.lang.Throwable) iOException28);
        java.lang.Throwable[] throwableArray47 = iOException28.getSuppressed();
        java.io.IOException iOException48 = new java.io.IOException("java.io.IOException: java.io.IOException: hi!", (java.lang.Throwable) iOException28);
        java.lang.Throwable[] throwableArray49 = iOException48.getSuppressed();
        java.io.IOException iOException54 = new java.io.IOException("");
        java.io.IOException iOException55 = new java.io.IOException((java.lang.Throwable) iOException54);
        java.io.IOException iOException57 = new java.io.IOException("");
        iOException55.addSuppressed((java.lang.Throwable) iOException57);
        java.io.IOException iOException59 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException57);
        java.io.IOException iOException61 = new java.io.IOException("");
        java.io.IOException iOException62 = new java.io.IOException((java.lang.Throwable) iOException61);
        java.io.IOException iOException63 = new java.io.IOException((java.lang.Throwable) iOException61);
        iOException59.addSuppressed((java.lang.Throwable) iOException61);
        java.io.IOException iOException65 = new java.io.IOException("\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034", (java.lang.Throwable) iOException59);
        java.io.IOException iOException67 = new java.io.IOException("");
        java.lang.Throwable[] throwableArray68 = iOException67.getSuppressed();
        java.io.IOException iOException69 = new java.io.IOException((java.lang.Throwable) iOException67);
        iOException59.addSuppressed((java.lang.Throwable) iOException67);
        java.io.IOException iOException72 = new java.io.IOException("java.io.IOException: java.io.IOException: java.io.IOException");
        iOException67.addSuppressed((java.lang.Throwable) iOException72);
        java.io.IOException iOException74 = new java.io.IOException("\\u005Cu\\u0030\\u0030\\u0036\\u0041\\u005Cu\\u0030\\u0030\\u0036\\u0031\\u005Cu\\u0030\\u0030\\u0037\\u0036\\u005Cu\\u0030\\u0030\\u0036\\u0031\\u005Cu\\u0030\\u0030\\u0032\\u0045\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0036\\u0046\\u005Cu\\u0030\\u0030\\u0032\\u0045\\u005Cu\\u0030\\u0030\\u0034\\u0039\\u005Cu\\u0030\\u0030\\u0034\\u0046\\u005Cu\\u0030\\u0030\\u0034\\u0035\\u005Cu\\u0030\\u0030\\u0037\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0033\\u005Cu\\u0030\\u0030\\u0036\\u0035\\u005Cu\\u0030\\u0030\\u0037\\u0030\\u005Cu\\u0030\\u0030\\u0037\\u0034\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0036\\u0046\\u005Cu\\u0030\\u0030\\u0036\\u0045\\u005Cu\\u0030\\u0030\\u0033\\u0041\\u005Cu\\u0030\\u0030\\u0032\\u0030", (java.lang.Throwable) iOException72);
        iOException48.addSuppressed((java.lang.Throwable) iOException72);
        iOException1.addSuppressed((java.lang.Throwable) iOException72);
        java.io.IOException iOException77 = new java.io.IOException((java.lang.Throwable) iOException72);
        java.lang.Class<?> wildcardClass78 = iOException72.getClass();
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test05074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05074");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) '#', (int) (short) 100);
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) (short) 10, writer4);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper8 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer10 = null;
        boolean boolean11 = unicodeEscaper8.translate((int) '4', writer10);
        java.io.Writer writer14 = null;
        int int15 = unicodeEscaper8.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (int) '#', writer14);
        java.io.Writer writer17 = null;
        boolean boolean18 = unicodeEscaper8.translate((int) (byte) 0, writer17);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper21 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer23 = null;
        boolean boolean24 = unicodeEscaper21.translate((int) '4', writer23);
        java.lang.String str26 = unicodeEscaper21.translate((java.lang.CharSequence) "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper29 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) ' ', 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper32 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (short) 100, (int) (byte) 10);
        java.io.Writer writer34 = null;
        boolean boolean35 = unicodeEscaper32.translate((int) (byte) 0, writer34);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper37 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) (short) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper40 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '#', 100);
        java.lang.String str42 = unicodeEscaper40.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper45 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) '4', (int) (short) 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper48 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper51 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', (int) (short) 0);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray52 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper51 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator53 = unicodeEscaper48.with(charSequenceTranslatorArray52);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator54 = unicodeEscaper45.with(charSequenceTranslatorArray52);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator55 = unicodeEscaper40.with(charSequenceTranslatorArray52);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator56 = unicodeEscaper37.with(charSequenceTranslatorArray52);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper59 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper62 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer64 = null;
        boolean boolean65 = unicodeEscaper62.translate((int) '4', writer64);
        java.io.Writer writer67 = null;
        boolean boolean68 = unicodeEscaper62.translate((int) (byte) -1, writer67);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper71 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper73 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper75 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str77 = unicodeEscaper75.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray78 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper71, unicodeEscaper73, unicodeEscaper75 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator79 = unicodeEscaper62.with(charSequenceTranslatorArray78);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator80 = unicodeEscaper59.with(charSequenceTranslatorArray78);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator81 = unicodeEscaper37.with(charSequenceTranslatorArray78);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator82 = unicodeEscaper32.with(charSequenceTranslatorArray78);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator83 = unicodeEscaper29.with(charSequenceTranslatorArray78);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator84 = unicodeEscaper21.with(charSequenceTranslatorArray78);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator85 = unicodeEscaper8.with(charSequenceTranslatorArray78);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator86 = unicodeEscaper2.with(charSequenceTranslatorArray78);
        java.io.Writer writer89 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int90 = charSequenceTranslator86.translate((java.lang.CharSequence) "\\u006Aa\\u0076a\\\\u0075002E\\u0069\\u006F\\\\u0075002EIOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\\\u00750020\\u006Aa\\u0076a\\\\u0075002E\\u0069\\u006F\\\\u0075002EIOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\\\u00750020\\u006Aa\\u0076a\\\\u0075002E\\u0069\\u006F\\\\u0075002EIOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\\\u00750020\\u006Aa\\u0076a\\\\u0075002E\\u0069\\u006F\\\\u0075002EIOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\\\u00750020\\u006Aa\\u0076a\\\\u0075002E\\u0069\\u006F\\\\u0075002EIOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\\\u00750020\\\\u00750030", (int) '#', writer89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\u0063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E: \\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\u0063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E" + "'", str26, "\\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\u0063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E: \\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\u0063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E");
        org.junit.Assert.assertNotNull(unicodeEscaper29);
        org.junit.Assert.assertNotNull(unicodeEscaper32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper37);
        org.junit.Assert.assertNotNull(unicodeEscaper40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str42, "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertNotNull(unicodeEscaper45);
        org.junit.Assert.assertNotNull(unicodeEscaper48);
        org.junit.Assert.assertNotNull(unicodeEscaper51);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray52);
        org.junit.Assert.assertNotNull(charSequenceTranslator53);
        org.junit.Assert.assertNotNull(charSequenceTranslator54);
        org.junit.Assert.assertNotNull(charSequenceTranslator55);
        org.junit.Assert.assertNotNull(charSequenceTranslator56);
        org.junit.Assert.assertNotNull(unicodeEscaper59);
        org.junit.Assert.assertNotNull(unicodeEscaper62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper71);
        org.junit.Assert.assertNotNull(unicodeEscaper73);
        org.junit.Assert.assertNotNull(unicodeEscaper75);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str77, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray78);
        org.junit.Assert.assertNotNull(charSequenceTranslator79);
        org.junit.Assert.assertNotNull(charSequenceTranslator80);
        org.junit.Assert.assertNotNull(charSequenceTranslator81);
        org.junit.Assert.assertNotNull(charSequenceTranslator82);
        org.junit.Assert.assertNotNull(charSequenceTranslator83);
        org.junit.Assert.assertNotNull(charSequenceTranslator84);
        org.junit.Assert.assertNotNull(charSequenceTranslator85);
        org.junit.Assert.assertNotNull(charSequenceTranslator86);
    }

    @Test
    public void test05075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05075");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (short) -1, (int) (byte) 10);
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "\\\\\\u00750075006A\\\\\\u007500750061\\\\\\u007500750076\\\\\\u007500750061\\\\\\u00750075002E\\\\\\u007500750069\\\\\\u00750075006F\\\\\\u00750075002E\\\\\\u007500750049\\\\\\u00750075004F\\\\\\u007500750045\\\\\\u007500750078\\\\\\u007500750063\\\\\\u007500750065\\\\\\u007500750070\\\\\\u007500750074\\\\\\u007500750069\\\\\\u00750075006F\\\\\\u00750075006E\\\\\\u00750075003A\\\\\\u007500750020");
        java.io.Writer writer7 = null;
        int int8 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", 0, writer7);
        java.lang.String str10 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException:\\u0020java.io.IOException:\\u0020java.io.IOException:\\u0020\\u0068\\u0069\\u0021");
        java.io.Writer writer13 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int14 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java\\u005Cu\\u0030\\u0030\\u0032\\u0045io\\u005Cu\\u0030\\u0030\\u0032\\u0045\\u005Cu\\u0030\\u0030\\u0034\\u0039\\u005Cu\\u0030\\u0030\\u0034\\u0046\\u005Cu\\u0030\\u0030\\u0034\\u0035xception\\u005Cu\\u0030\\u0030\\u0033\\u0041\\u005Cu\\u0030\\u0030\\u0032\\u0030java\\u005Cu\\u0030\\u0030\\u0032\\u0045io\\u005Cu\\u0030\\u0030\\u0032\\u0045\\u005Cu\\u0030\\u0030\\u0034\\u0039\\u005Cu\\u0030\\u0030\\u0034\\u0046\\u005Cu\\u0030\\u0030\\u0034\\u0035xception", (int) (short) -1, writer13);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\\\\\u00750075006A\\\\\\u007500750061\\\\\\u007500750076\\\\\\u007500750061\\\\\\u00750075002E\\\\\\u007500750069\\\\\\u00750075006F\\\\\\u00750075002E\\\\\\u007500750049\\\\\\u00750075004F\\\\\\u007500750045\\\\\\u007500750078\\\\\\u007500750063\\\\\\u007500750065\\\\\\u007500750070\\\\\\u007500750074\\\\\\u007500750069\\\\\\u00750075006F\\\\\\u00750075006E\\\\\\u00750075003A\\\\\\u007500750020" + "'", str4, "\\\\\\u00750075006A\\\\\\u007500750061\\\\\\u007500750076\\\\\\u007500750061\\\\\\u00750075002E\\\\\\u007500750069\\\\\\u00750075006F\\\\\\u00750075002E\\\\\\u007500750049\\\\\\u00750075004F\\\\\\u007500750045\\\\\\u007500750078\\\\\\u007500750063\\\\\\u007500750065\\\\\\u007500750070\\\\\\u007500750074\\\\\\u007500750069\\\\\\u00750075006F\\\\\\u00750075006E\\\\\\u00750075003A\\\\\\u007500750020");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "java.io.IOException:\\u0020java.io.IOException:\\u0020java.io.IOException:\\u0020\\u0068\\u0069\\u0021" + "'", str10, "java.io.IOException:\\u0020java.io.IOException:\\u0020java.io.IOException:\\u0020\\u0068\\u0069\\u0021");
    }

    @Test
    public void test05076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05076");
        java.io.IOException iOException0 = new java.io.IOException();
        java.io.IOException iOException4 = new java.io.IOException();
        java.io.IOException iOException5 = new java.io.IOException();
        iOException4.addSuppressed((java.lang.Throwable) iOException5);
        java.io.IOException iOException7 = new java.io.IOException();
        java.io.IOException iOException8 = new java.io.IOException();
        iOException7.addSuppressed((java.lang.Throwable) iOException8);
        java.lang.Throwable[] throwableArray10 = iOException8.getSuppressed();
        java.io.IOException iOException11 = new java.io.IOException((java.lang.Throwable) iOException8);
        java.io.IOException iOException13 = new java.io.IOException("");
        java.io.IOException iOException14 = new java.io.IOException((java.lang.Throwable) iOException13);
        iOException8.addSuppressed((java.lang.Throwable) iOException14);
        iOException5.addSuppressed((java.lang.Throwable) iOException14);
        java.lang.Throwable[] throwableArray17 = iOException5.getSuppressed();
        java.io.IOException iOException18 = new java.io.IOException("", (java.lang.Throwable) iOException5);
        java.io.IOException iOException19 = new java.io.IOException("FFFFFFFF", (java.lang.Throwable) iOException18);
        java.io.IOException iOException20 = new java.io.IOException("64", (java.lang.Throwable) iOException18);
        iOException0.addSuppressed((java.lang.Throwable) iOException20);
        java.lang.Throwable[] throwableArray22 = iOException0.getSuppressed();
        java.lang.String str23 = iOException0.toString();
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "java.io.IOException" + "'", str23, "java.io.IOException");
    }

    @Test
    public void test05077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05077");
        java.lang.Throwable throwable0 = null;
        java.io.IOException iOException1 = new java.io.IOException(throwable0);
        java.lang.Throwable[] throwableArray2 = iOException1.getSuppressed();
        java.lang.Throwable throwable4 = null;
        java.io.IOException iOException5 = new java.io.IOException(throwable4);
        java.io.IOException iOException6 = new java.io.IOException("java.io.IOException: \\u0068\\u0069\\u0021", (java.lang.Throwable) iOException5);
        java.io.IOException iOException9 = new java.io.IOException("0");
        java.lang.Throwable[] throwableArray10 = iOException9.getSuppressed();
        java.io.IOException iOException11 = new java.io.IOException("hi!", (java.lang.Throwable) iOException9);
        java.io.IOException iOException13 = new java.io.IOException("");
        java.io.IOException iOException14 = new java.io.IOException((java.lang.Throwable) iOException13);
        java.io.IOException iOException16 = new java.io.IOException("");
        iOException14.addSuppressed((java.lang.Throwable) iOException16);
        java.io.IOException iOException19 = new java.io.IOException("");
        java.io.IOException iOException20 = new java.io.IOException((java.lang.Throwable) iOException19);
        java.io.IOException iOException22 = new java.io.IOException("");
        iOException20.addSuppressed((java.lang.Throwable) iOException22);
        iOException14.addSuppressed((java.lang.Throwable) iOException20);
        iOException11.addSuppressed((java.lang.Throwable) iOException14);
        iOException6.addSuppressed((java.lang.Throwable) iOException14);
        iOException1.addSuppressed((java.lang.Throwable) iOException6);
        java.lang.Throwable[] throwableArray28 = iOException1.getSuppressed();
        java.lang.Throwable[] throwableArray29 = iOException1.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray29);
    }

    @Test
    public void test05078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05078");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (byte) 10, (int) (byte) 10);
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u0041");
        java.io.Writer writer7 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int8 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030", (int) (short) 0, writer7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\u005C\\u0075\\u0030\\u0030\\u0034\\u0031" + "'", str4, "\\u005C\\u0075\\u0030\\u0030\\u0034\\u0031");
    }

    @Test
    public void test05079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05079");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between(10, (int) (byte) 10);
        java.io.Writer writer5 = null;
        int int6 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u0068\\u0069\\u005C\\u0075\\u0030\\u0030\\u0032\\u0031", 1, writer5);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper9 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (byte) 1, (int) ' ');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper12 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper14 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer16 = null;
        boolean boolean17 = unicodeEscaper14.translate((int) ' ', writer16);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper20 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str22 = unicodeEscaper20.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray23 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator24 = unicodeEscaper20.with(charSequenceTranslatorArray23);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator25 = unicodeEscaper14.with(charSequenceTranslatorArray23);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator26 = unicodeEscaper12.with(charSequenceTranslatorArray23);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator27 = unicodeEscaper9.with(charSequenceTranslatorArray23);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator28 = unicodeEscaper2.with(charSequenceTranslatorArray23);
        java.lang.Class<?> wildcardClass29 = charSequenceTranslator28.getClass();
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(unicodeEscaper9);
        org.junit.Assert.assertNotNull(unicodeEscaper12);
        org.junit.Assert.assertNotNull(unicodeEscaper14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "0" + "'", str22, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray23);
        org.junit.Assert.assertNotNull(charSequenceTranslator24);
        org.junit.Assert.assertNotNull(charSequenceTranslator25);
        org.junit.Assert.assertNotNull(charSequenceTranslator26);
        org.junit.Assert.assertNotNull(charSequenceTranslator27);
        org.junit.Assert.assertNotNull(charSequenceTranslator28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test05080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05080");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) (short) 10, writer4);
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper2.translate((int) '#', writer7);
        java.io.Writer writer11 = null;
        int int12 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException", (int) (byte) 1, writer11);
        java.io.Writer writer15 = null;
        int int16 = unicodeEscaper2.translate((java.lang.CharSequence) "FFFFFFFF", (int) (byte) 0, writer15);
        java.io.Writer writer19 = null;
        int int20 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030", (int) (byte) 100, writer19);
        java.io.Writer writer22 = null;
        boolean boolean23 = unicodeEscaper2.translate((int) (short) 0, writer22);
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test05081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05081");
        java.io.IOException iOException5 = new java.io.IOException();
        java.io.IOException iOException6 = new java.io.IOException();
        iOException5.addSuppressed((java.lang.Throwable) iOException6);
        java.io.IOException iOException8 = new java.io.IOException("0", (java.lang.Throwable) iOException5);
        java.io.IOException iOException9 = new java.io.IOException((java.lang.Throwable) iOException8);
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException9);
        java.io.IOException iOException11 = new java.io.IOException((java.lang.Throwable) iOException10);
        java.lang.Throwable[] throwableArray12 = iOException11.getSuppressed();
        java.io.IOException iOException13 = new java.io.IOException("java.io.IOException: java.io.IOException", (java.lang.Throwable) iOException11);
        java.io.IOException iOException14 = new java.io.IOException((java.lang.Throwable) iOException13);
        java.io.IOException iOException18 = new java.io.IOException("0");
        java.lang.Throwable[] throwableArray19 = iOException18.getSuppressed();
        java.io.IOException iOException20 = new java.io.IOException("hi!", (java.lang.Throwable) iOException18);
        java.io.IOException iOException21 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException18);
        iOException13.addSuppressed((java.lang.Throwable) iOException21);
        java.io.IOException iOException23 = new java.io.IOException("\\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\u0063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E: \\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\u0063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E", (java.lang.Throwable) iOException21);
        java.io.IOException iOException24 = new java.io.IOException("\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\\\u00750068\\\\u00750069\\\\u00750021", (java.lang.Throwable) iOException23);
        java.io.IOException iOException27 = new java.io.IOException("");
        java.io.IOException iOException28 = new java.io.IOException((java.lang.Throwable) iOException27);
        java.io.IOException iOException30 = new java.io.IOException("");
        iOException28.addSuppressed((java.lang.Throwable) iOException30);
        java.io.IOException iOException33 = new java.io.IOException("");
        java.io.IOException iOException34 = new java.io.IOException((java.lang.Throwable) iOException33);
        java.io.IOException iOException36 = new java.io.IOException("");
        iOException34.addSuppressed((java.lang.Throwable) iOException36);
        iOException28.addSuppressed((java.lang.Throwable) iOException34);
        java.io.IOException iOException39 = new java.io.IOException("0", (java.lang.Throwable) iOException28);
        iOException23.addSuppressed((java.lang.Throwable) iOException28);
        java.io.IOException iOException41 = new java.io.IOException((java.lang.Throwable) iOException23);
        java.io.IOException iOException43 = new java.io.IOException();
        java.io.IOException iOException44 = new java.io.IOException();
        iOException43.addSuppressed((java.lang.Throwable) iOException44);
        java.lang.Throwable[] throwableArray46 = iOException44.getSuppressed();
        java.lang.Throwable[] throwableArray47 = iOException44.getSuppressed();
        java.io.IOException iOException49 = new java.io.IOException();
        java.io.IOException iOException50 = new java.io.IOException();
        iOException49.addSuppressed((java.lang.Throwable) iOException50);
        java.io.IOException iOException52 = new java.io.IOException("0", (java.lang.Throwable) iOException49);
        java.io.IOException iOException53 = new java.io.IOException((java.lang.Throwable) iOException52);
        iOException44.addSuppressed((java.lang.Throwable) iOException53);
        java.lang.Throwable[] throwableArray55 = iOException53.getSuppressed();
        java.io.IOException iOException56 = new java.io.IOException("A", (java.lang.Throwable) iOException53);
        iOException23.addSuppressed((java.lang.Throwable) iOException56);
        java.io.IOException iOException58 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException23);
        java.lang.String str59 = iOException58.toString();
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str59, "java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
    }

    @Test
    public void test05082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05082");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) (short) 100);
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate(100, writer4);
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper2.translate((int) (byte) 0, writer7);
        java.io.Writer writer11 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int12 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u005C\\u0075\\u0030\\u0030\\u0036\\u0041\\u0061\\u005C\\u0075\\u0030\\u0030\\u0037\\u0036\\u0061\\u002E\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u005C\\u0075\\u0030\\u0030\\u0036\\u0046\\u002E\\u0049\\u004F\\u0045\\u005C\\u0075\\u0030\\u0030\\u0037\\u0038\\u0063\\u005C\\u0075\\u0030\\u0030\\u0036\\u0035\\u005C\\u0075\\u0030\\u0030\\u0037\\u0030\\u005C\\u0075\\u0030\\u0030\\u0037\\u0034\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u005C\\u0075\\u0030\\u0030\\u0036\\u0046\\u005C\\u0075\\u0030\\u0030\\u0036\\u0045\\u003A \\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0036\\u0038\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0036\\u0039\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0032\\u0031", (int) (byte) -1, writer11);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test05083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05083");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper1 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper4 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between(0, (int) (byte) 100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper7 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(10, 10);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper10 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) -1, (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper12 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper14 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer16 = null;
        boolean boolean17 = unicodeEscaper14.translate((int) ' ', writer16);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper20 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str22 = unicodeEscaper20.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray23 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator24 = unicodeEscaper20.with(charSequenceTranslatorArray23);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator25 = unicodeEscaper14.with(charSequenceTranslatorArray23);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator26 = unicodeEscaper12.with(charSequenceTranslatorArray23);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper29 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer31 = null;
        boolean boolean32 = unicodeEscaper29.translate((int) '4', writer31);
        java.io.Writer writer34 = null;
        boolean boolean35 = unicodeEscaper29.translate((int) (byte) -1, writer34);
        java.io.Writer writer37 = null;
        boolean boolean38 = unicodeEscaper29.translate((int) (byte) -1, writer37);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray39 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator40 = unicodeEscaper29.with(charSequenceTranslatorArray39);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator41 = charSequenceTranslator26.with(charSequenceTranslatorArray39);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator42 = unicodeEscaper10.with(charSequenceTranslatorArray39);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator43 = unicodeEscaper7.with(charSequenceTranslatorArray39);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator44 = unicodeEscaper4.with(charSequenceTranslatorArray39);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator45 = unicodeEscaper1.with(charSequenceTranslatorArray39);
        java.io.Writer writer47 = null;
        boolean boolean48 = unicodeEscaper1.translate((int) ' ', writer47);
        java.io.Writer writer50 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean51 = unicodeEscaper1.translate(100, writer50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper1);
        org.junit.Assert.assertNotNull(unicodeEscaper4);
        org.junit.Assert.assertNotNull(unicodeEscaper7);
        org.junit.Assert.assertNotNull(unicodeEscaper10);
        org.junit.Assert.assertNotNull(unicodeEscaper12);
        org.junit.Assert.assertNotNull(unicodeEscaper14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "0" + "'", str22, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray23);
        org.junit.Assert.assertNotNull(charSequenceTranslator24);
        org.junit.Assert.assertNotNull(charSequenceTranslator25);
        org.junit.Assert.assertNotNull(charSequenceTranslator26);
        org.junit.Assert.assertNotNull(unicodeEscaper29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray39);
        org.junit.Assert.assertNotNull(charSequenceTranslator40);
        org.junit.Assert.assertNotNull(charSequenceTranslator41);
        org.junit.Assert.assertNotNull(charSequenceTranslator42);
        org.junit.Assert.assertNotNull(charSequenceTranslator43);
        org.junit.Assert.assertNotNull(charSequenceTranslator44);
        org.junit.Assert.assertNotNull(charSequenceTranslator45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test05084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05084");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) '4', writer4);
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper2.translate((int) (byte) -1, writer7);
        java.lang.String str10 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException");
        java.io.Writer writer12 = null;
        boolean boolean13 = unicodeEscaper2.translate(0, writer12);
        java.io.Writer writer16 = null;
        int int17 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: java.io.IOException: 0", 1, writer16);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper20 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) '4');
        java.lang.String str22 = unicodeEscaper20.translate((java.lang.CharSequence) "\\u0033\\u0034");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper24 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper26 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer28 = null;
        boolean boolean29 = unicodeEscaper26.translate((int) ' ', writer28);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper32 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str34 = unicodeEscaper32.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray35 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator36 = unicodeEscaper32.with(charSequenceTranslatorArray35);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator37 = unicodeEscaper26.with(charSequenceTranslatorArray35);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator38 = unicodeEscaper24.with(charSequenceTranslatorArray35);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper41 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer43 = null;
        boolean boolean44 = unicodeEscaper41.translate((int) '4', writer43);
        java.io.Writer writer46 = null;
        boolean boolean47 = unicodeEscaper41.translate((int) (byte) -1, writer46);
        java.io.Writer writer49 = null;
        boolean boolean50 = unicodeEscaper41.translate((int) (byte) -1, writer49);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray51 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator52 = unicodeEscaper41.with(charSequenceTranslatorArray51);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator53 = charSequenceTranslator38.with(charSequenceTranslatorArray51);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator54 = unicodeEscaper20.with(charSequenceTranslatorArray51);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator55 = unicodeEscaper2.with(charSequenceTranslatorArray51);
        java.io.Writer writer58 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int59 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: 1", (int) (short) 100, writer58);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "java.io.IOException" + "'", str10, "java.io.IOException");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(unicodeEscaper20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\\u005C\\u00750033\\u005C\\u00750034" + "'", str22, "\\u005C\\u00750033\\u005C\\u00750034");
        org.junit.Assert.assertNotNull(unicodeEscaper24);
        org.junit.Assert.assertNotNull(unicodeEscaper26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "0" + "'", str34, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray35);
        org.junit.Assert.assertNotNull(charSequenceTranslator36);
        org.junit.Assert.assertNotNull(charSequenceTranslator37);
        org.junit.Assert.assertNotNull(charSequenceTranslator38);
        org.junit.Assert.assertNotNull(unicodeEscaper41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray51);
        org.junit.Assert.assertNotNull(charSequenceTranslator52);
        org.junit.Assert.assertNotNull(charSequenceTranslator53);
        org.junit.Assert.assertNotNull(charSequenceTranslator54);
        org.junit.Assert.assertNotNull(charSequenceTranslator55);
    }

    @Test
    public void test05085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05085");
        java.io.IOException iOException1 = new java.io.IOException("java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: 0");
        java.io.IOException iOException3 = new java.io.IOException();
        java.io.IOException iOException4 = new java.io.IOException();
        iOException3.addSuppressed((java.lang.Throwable) iOException4);
        java.io.IOException iOException6 = new java.io.IOException("0", (java.lang.Throwable) iOException3);
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.io.IOException iOException9 = new java.io.IOException((java.lang.Throwable) iOException8);
        java.lang.Throwable[] throwableArray10 = iOException8.getSuppressed();
        java.io.IOException iOException12 = new java.io.IOException();
        java.io.IOException iOException13 = new java.io.IOException();
        iOException12.addSuppressed((java.lang.Throwable) iOException13);
        java.io.IOException iOException15 = new java.io.IOException("0", (java.lang.Throwable) iOException12);
        java.io.IOException iOException16 = new java.io.IOException((java.lang.Throwable) iOException15);
        java.io.IOException iOException17 = new java.io.IOException((java.lang.Throwable) iOException16);
        java.io.IOException iOException18 = new java.io.IOException((java.lang.Throwable) iOException17);
        iOException8.addSuppressed((java.lang.Throwable) iOException18);
        iOException1.addSuppressed((java.lang.Throwable) iOException8);
        java.io.IOException iOException24 = new java.io.IOException();
        java.io.IOException iOException25 = new java.io.IOException();
        iOException24.addSuppressed((java.lang.Throwable) iOException25);
        java.lang.Throwable[] throwableArray27 = iOException25.getSuppressed();
        java.lang.Throwable[] throwableArray28 = iOException25.getSuppressed();
        java.io.IOException iOException29 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException25);
        java.io.IOException iOException30 = new java.io.IOException();
        java.io.IOException iOException31 = new java.io.IOException();
        iOException30.addSuppressed((java.lang.Throwable) iOException31);
        java.io.IOException iOException33 = new java.io.IOException((java.lang.Throwable) iOException30);
        java.lang.Throwable[] throwableArray34 = iOException33.getSuppressed();
        iOException29.addSuppressed((java.lang.Throwable) iOException33);
        java.lang.Throwable[] throwableArray36 = iOException33.getSuppressed();
        java.io.IOException iOException37 = new java.io.IOException("\\\\u0075006A\\\\u00750061\\\\u00750076\\\\u00750061\\\\u0075002E\\\\u00750069\\\\u0075006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E\\\\u0075003A\\\\u00750020", (java.lang.Throwable) iOException33);
        java.io.IOException iOException38 = new java.io.IOException("\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u0068\\u0069!", (java.lang.Throwable) iOException33);
        java.io.IOException iOException40 = new java.io.IOException("java.io.IOException: java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030");
        java.io.IOException iOException41 = new java.io.IOException((java.lang.Throwable) iOException40);
        java.io.IOException iOException43 = new java.io.IOException();
        java.io.IOException iOException44 = new java.io.IOException();
        iOException43.addSuppressed((java.lang.Throwable) iOException44);
        java.io.IOException iOException46 = new java.io.IOException((java.lang.Throwable) iOException43);
        java.lang.Throwable[] throwableArray47 = iOException46.getSuppressed();
        java.io.IOException iOException50 = new java.io.IOException();
        java.io.IOException iOException51 = new java.io.IOException();
        iOException50.addSuppressed((java.lang.Throwable) iOException51);
        java.io.IOException iOException53 = new java.io.IOException();
        java.io.IOException iOException54 = new java.io.IOException();
        iOException53.addSuppressed((java.lang.Throwable) iOException54);
        java.lang.Throwable[] throwableArray56 = iOException54.getSuppressed();
        java.io.IOException iOException57 = new java.io.IOException((java.lang.Throwable) iOException54);
        java.io.IOException iOException59 = new java.io.IOException("");
        java.io.IOException iOException60 = new java.io.IOException((java.lang.Throwable) iOException59);
        iOException54.addSuppressed((java.lang.Throwable) iOException60);
        iOException51.addSuppressed((java.lang.Throwable) iOException60);
        java.io.IOException iOException63 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException60);
        java.io.IOException iOException64 = new java.io.IOException("64", (java.lang.Throwable) iOException63);
        iOException46.addSuppressed((java.lang.Throwable) iOException63);
        java.io.IOException iOException66 = new java.io.IOException("1", (java.lang.Throwable) iOException63);
        java.lang.Throwable[] throwableArray67 = iOException66.getSuppressed();
        java.lang.Throwable[] throwableArray68 = iOException66.getSuppressed();
        iOException40.addSuppressed((java.lang.Throwable) iOException66);
        iOException38.addSuppressed((java.lang.Throwable) iOException66);
        iOException8.addSuppressed((java.lang.Throwable) iOException66);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(throwableArray67);
        org.junit.Assert.assertNotNull(throwableArray68);
    }

    @Test
    public void test05086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05086");
        java.io.IOException iOException2 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030");
        java.io.IOException iOException3 = new java.io.IOException("java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException2);
        java.lang.Throwable[] throwableArray4 = iOException3.getSuppressed();
        java.io.IOException iOException7 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        java.io.IOException iOException8 = new java.io.IOException("", (java.lang.Throwable) iOException7);
        iOException3.addSuppressed((java.lang.Throwable) iOException8);
        java.lang.String str10 = iOException8.toString();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "java.io.IOException: " + "'", str10, "java.io.IOException: ");
    }

    @Test
    public void test05087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05087");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper1 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (short) 10);
        java.lang.String str3 = unicodeEscaper1.translate((java.lang.CharSequence) "java.io.IOException: 64");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper6 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) -1, (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper8 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper10 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer12 = null;
        boolean boolean13 = unicodeEscaper10.translate((int) ' ', writer12);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper16 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str18 = unicodeEscaper16.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray19 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator20 = unicodeEscaper16.with(charSequenceTranslatorArray19);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator21 = unicodeEscaper10.with(charSequenceTranslatorArray19);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator22 = unicodeEscaper8.with(charSequenceTranslatorArray19);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper25 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer27 = null;
        boolean boolean28 = unicodeEscaper25.translate((int) '4', writer27);
        java.io.Writer writer30 = null;
        boolean boolean31 = unicodeEscaper25.translate((int) (byte) -1, writer30);
        java.io.Writer writer33 = null;
        boolean boolean34 = unicodeEscaper25.translate((int) (byte) -1, writer33);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray35 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator36 = unicodeEscaper25.with(charSequenceTranslatorArray35);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator37 = charSequenceTranslator22.with(charSequenceTranslatorArray35);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator38 = unicodeEscaper6.with(charSequenceTranslatorArray35);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper41 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer43 = null;
        boolean boolean44 = unicodeEscaper41.translate((int) '4', writer43);
        java.io.Writer writer46 = null;
        boolean boolean47 = unicodeEscaper41.translate((int) (byte) -1, writer46);
        java.io.Writer writer49 = null;
        boolean boolean50 = unicodeEscaper41.translate(0, writer49);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper52 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper54 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer56 = null;
        boolean boolean57 = unicodeEscaper54.translate((int) ' ', writer56);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper60 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str62 = unicodeEscaper60.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray63 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator64 = unicodeEscaper60.with(charSequenceTranslatorArray63);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator65 = unicodeEscaper54.with(charSequenceTranslatorArray63);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator66 = unicodeEscaper52.with(charSequenceTranslatorArray63);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper69 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer71 = null;
        boolean boolean72 = unicodeEscaper69.translate((int) '4', writer71);
        java.io.Writer writer74 = null;
        boolean boolean75 = unicodeEscaper69.translate((int) (byte) -1, writer74);
        java.io.Writer writer77 = null;
        boolean boolean78 = unicodeEscaper69.translate((int) (byte) -1, writer77);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray79 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator80 = unicodeEscaper69.with(charSequenceTranslatorArray79);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator81 = charSequenceTranslator66.with(charSequenceTranslatorArray79);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator82 = unicodeEscaper41.with(charSequenceTranslatorArray79);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator83 = unicodeEscaper6.with(charSequenceTranslatorArray79);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator84 = unicodeEscaper1.with(charSequenceTranslatorArray79);
        java.lang.String str86 = charSequenceTranslator84.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: 64");
        org.junit.Assert.assertNotNull(unicodeEscaper1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "java.io.IOException: 64" + "'", str3, "java.io.IOException: 64");
        org.junit.Assert.assertNotNull(unicodeEscaper6);
        org.junit.Assert.assertNotNull(unicodeEscaper8);
        org.junit.Assert.assertNotNull(unicodeEscaper10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "0" + "'", str18, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray19);
        org.junit.Assert.assertNotNull(charSequenceTranslator20);
        org.junit.Assert.assertNotNull(charSequenceTranslator21);
        org.junit.Assert.assertNotNull(charSequenceTranslator22);
        org.junit.Assert.assertNotNull(unicodeEscaper25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray35);
        org.junit.Assert.assertNotNull(charSequenceTranslator36);
        org.junit.Assert.assertNotNull(charSequenceTranslator37);
        org.junit.Assert.assertNotNull(charSequenceTranslator38);
        org.junit.Assert.assertNotNull(unicodeEscaper41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper52);
        org.junit.Assert.assertNotNull(unicodeEscaper54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper60);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "0" + "'", str62, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray63);
        org.junit.Assert.assertNotNull(charSequenceTranslator64);
        org.junit.Assert.assertNotNull(charSequenceTranslator65);
        org.junit.Assert.assertNotNull(charSequenceTranslator66);
        org.junit.Assert.assertNotNull(unicodeEscaper69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray79);
        org.junit.Assert.assertNotNull(charSequenceTranslator80);
        org.junit.Assert.assertNotNull(charSequenceTranslator81);
        org.junit.Assert.assertNotNull(charSequenceTranslator82);
        org.junit.Assert.assertNotNull(charSequenceTranslator83);
        org.junit.Assert.assertNotNull(charSequenceTranslator84);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "java.io.IOException: java.io.IOException: 64" + "'", str86, "java.io.IOException: java.io.IOException: 64");
    }

    @Test
    public void test05088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05088");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (short) 100, (int) ' ');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper8 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(10, (int) (byte) 100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper10 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (short) 10);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper13 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) '4', (int) (short) 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper16 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper19 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', (int) (short) 0);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray20 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper19 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator21 = unicodeEscaper16.with(charSequenceTranslatorArray20);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator22 = unicodeEscaper13.with(charSequenceTranslatorArray20);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator23 = unicodeEscaper10.with(charSequenceTranslatorArray20);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator24 = unicodeEscaper8.with(charSequenceTranslatorArray20);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator25 = unicodeEscaper5.with(charSequenceTranslatorArray20);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator26 = unicodeEscaper2.with(charSequenceTranslatorArray20);
        java.lang.Class<?> wildcardClass27 = unicodeEscaper2.getClass();
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertNotNull(unicodeEscaper8);
        org.junit.Assert.assertNotNull(unicodeEscaper10);
        org.junit.Assert.assertNotNull(unicodeEscaper13);
        org.junit.Assert.assertNotNull(unicodeEscaper16);
        org.junit.Assert.assertNotNull(unicodeEscaper19);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray20);
        org.junit.Assert.assertNotNull(charSequenceTranslator21);
        org.junit.Assert.assertNotNull(charSequenceTranslator22);
        org.junit.Assert.assertNotNull(charSequenceTranslator23);
        org.junit.Assert.assertNotNull(charSequenceTranslator24);
        org.junit.Assert.assertNotNull(charSequenceTranslator25);
        org.junit.Assert.assertNotNull(charSequenceTranslator26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test05089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05089");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper1 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper4 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) 'a');
        java.io.Writer writer6 = null;
        boolean boolean7 = unicodeEscaper4.translate((int) '#', writer6);
        java.io.Writer writer10 = null;
        int int11 = unicodeEscaper4.translate((java.lang.CharSequence) "\\u0068\\u0069\\u0021", (int) (short) 10, writer10);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper14 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (short) 100, 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper17 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 100, (-1));
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper20 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer22 = null;
        boolean boolean23 = unicodeEscaper20.translate((int) (short) 10, writer22);
        java.lang.String str25 = unicodeEscaper20.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper28 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer30 = null;
        boolean boolean31 = unicodeEscaper28.translate((int) '4', writer30);
        java.io.Writer writer33 = null;
        boolean boolean34 = unicodeEscaper28.translate((int) (byte) -1, writer33);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper37 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper39 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper41 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str43 = unicodeEscaper41.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray44 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper37, unicodeEscaper39, unicodeEscaper41 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator45 = unicodeEscaper28.with(charSequenceTranslatorArray44);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator46 = unicodeEscaper20.with(charSequenceTranslatorArray44);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator47 = unicodeEscaper17.with(charSequenceTranslatorArray44);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator48 = unicodeEscaper14.with(charSequenceTranslatorArray44);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator49 = unicodeEscaper4.with(charSequenceTranslatorArray44);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator50 = unicodeEscaper1.with(charSequenceTranslatorArray44);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper53 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (short) 100, 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper56 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 100, (-1));
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper59 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer61 = null;
        boolean boolean62 = unicodeEscaper59.translate((int) (short) 10, writer61);
        java.lang.String str64 = unicodeEscaper59.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper67 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer69 = null;
        boolean boolean70 = unicodeEscaper67.translate((int) '4', writer69);
        java.io.Writer writer72 = null;
        boolean boolean73 = unicodeEscaper67.translate((int) (byte) -1, writer72);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper76 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper78 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper80 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str82 = unicodeEscaper80.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray83 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper76, unicodeEscaper78, unicodeEscaper80 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator84 = unicodeEscaper67.with(charSequenceTranslatorArray83);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator85 = unicodeEscaper59.with(charSequenceTranslatorArray83);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator86 = unicodeEscaper56.with(charSequenceTranslatorArray83);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator87 = unicodeEscaper53.with(charSequenceTranslatorArray83);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator88 = charSequenceTranslator50.with(charSequenceTranslatorArray83);
        java.io.Writer writer91 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int92 = charSequenceTranslator50.translate((java.lang.CharSequence) "\\u005C\\u0075\\u0030\\u0030\\u0033\\u0032\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033", (int) ' ', writer91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper1);
        org.junit.Assert.assertNotNull(unicodeEscaper4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(unicodeEscaper14);
        org.junit.Assert.assertNotNull(unicodeEscaper17);
        org.junit.Assert.assertNotNull(unicodeEscaper20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "0" + "'", str25, "0");
        org.junit.Assert.assertNotNull(unicodeEscaper28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper37);
        org.junit.Assert.assertNotNull(unicodeEscaper39);
        org.junit.Assert.assertNotNull(unicodeEscaper41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str43, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray44);
        org.junit.Assert.assertNotNull(charSequenceTranslator45);
        org.junit.Assert.assertNotNull(charSequenceTranslator46);
        org.junit.Assert.assertNotNull(charSequenceTranslator47);
        org.junit.Assert.assertNotNull(charSequenceTranslator48);
        org.junit.Assert.assertNotNull(charSequenceTranslator49);
        org.junit.Assert.assertNotNull(charSequenceTranslator50);
        org.junit.Assert.assertNotNull(unicodeEscaper53);
        org.junit.Assert.assertNotNull(unicodeEscaper56);
        org.junit.Assert.assertNotNull(unicodeEscaper59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "0" + "'", str64, "0");
        org.junit.Assert.assertNotNull(unicodeEscaper67);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper76);
        org.junit.Assert.assertNotNull(unicodeEscaper78);
        org.junit.Assert.assertNotNull(unicodeEscaper80);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str82, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray83);
        org.junit.Assert.assertNotNull(charSequenceTranslator84);
        org.junit.Assert.assertNotNull(charSequenceTranslator85);
        org.junit.Assert.assertNotNull(charSequenceTranslator86);
        org.junit.Assert.assertNotNull(charSequenceTranslator87);
        org.junit.Assert.assertNotNull(charSequenceTranslator88);
    }

    @Test
    public void test05090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05090");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) '4', writer4);
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper2.translate((int) (byte) -1, writer7);
        java.io.Writer writer10 = null;
        boolean boolean11 = unicodeEscaper2.translate((int) '4', writer10);
        java.io.Writer writer13 = null;
        boolean boolean14 = unicodeEscaper2.translate((int) (short) 100, writer13);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper17 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 0, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper19 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer21 = null;
        boolean boolean22 = unicodeEscaper19.translate((int) ' ', writer21);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper25 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str27 = unicodeEscaper25.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray28 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator29 = unicodeEscaper25.with(charSequenceTranslatorArray28);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator30 = unicodeEscaper19.with(charSequenceTranslatorArray28);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator31 = unicodeEscaper17.with(charSequenceTranslatorArray28);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator32 = unicodeEscaper2.with(charSequenceTranslatorArray28);
        java.io.Writer writer34 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceTranslator32.translate((java.lang.CharSequence) "\\\\u0075005C\\\\u0075007500\\\\u00750035\\\\u00750043\\\\u00750075\\\\u0075005C\\\\u007500750030\\\\u0075005C\\\\u007500750030\\\\u0075005C\\\\u007500750033\\\\u0075005C\\\\u007500750030", writer34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper17);
        org.junit.Assert.assertNotNull(unicodeEscaper19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "0" + "'", str27, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray28);
        org.junit.Assert.assertNotNull(charSequenceTranslator29);
        org.junit.Assert.assertNotNull(charSequenceTranslator30);
        org.junit.Assert.assertNotNull(charSequenceTranslator31);
        org.junit.Assert.assertNotNull(charSequenceTranslator32);
    }

    @Test
    public void test05091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05091");
        java.lang.Throwable throwable2 = null;
        java.io.IOException iOException3 = new java.io.IOException("java.io.IOException: \\u0068\\u0069\\u0021", throwable2);
        java.io.IOException iOException4 = new java.io.IOException("\\u005Cu\\u0030\\u0030\\u0036\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0032\\u0031", (java.lang.Throwable) iOException3);
        java.lang.Throwable[] throwableArray5 = iOException4.getSuppressed();
        java.lang.Throwable[] throwableArray6 = iOException4.getSuppressed();
        java.lang.Class<?> wildcardClass7 = iOException4.getClass();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test05092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05092");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (byte) 1, (int) ' ');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 100, (int) (short) 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper8 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '#', 100);
        java.lang.String str10 = unicodeEscaper8.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper13 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) '4', (int) (short) 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper16 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper19 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', (int) (short) 0);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray20 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper19 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator21 = unicodeEscaper16.with(charSequenceTranslatorArray20);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator22 = unicodeEscaper13.with(charSequenceTranslatorArray20);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator23 = unicodeEscaper8.with(charSequenceTranslatorArray20);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator24 = unicodeEscaper5.with(charSequenceTranslatorArray20);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator25 = unicodeEscaper2.with(charSequenceTranslatorArray20);
        java.io.Writer writer27 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean28 = unicodeEscaper2.translate((int) (short) 100, writer27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertNotNull(unicodeEscaper8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str10, "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertNotNull(unicodeEscaper13);
        org.junit.Assert.assertNotNull(unicodeEscaper16);
        org.junit.Assert.assertNotNull(unicodeEscaper19);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray20);
        org.junit.Assert.assertNotNull(charSequenceTranslator21);
        org.junit.Assert.assertNotNull(charSequenceTranslator22);
        org.junit.Assert.assertNotNull(charSequenceTranslator23);
        org.junit.Assert.assertNotNull(charSequenceTranslator24);
        org.junit.Assert.assertNotNull(charSequenceTranslator25);
    }

    @Test
    public void test05093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05093");
        java.io.IOException iOException1 = new java.io.IOException("java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: 0");
        java.io.IOException iOException5 = new java.io.IOException();
        java.io.IOException iOException6 = new java.io.IOException();
        iOException5.addSuppressed((java.lang.Throwable) iOException6);
        java.io.IOException iOException8 = new java.io.IOException();
        java.io.IOException iOException9 = new java.io.IOException();
        iOException8.addSuppressed((java.lang.Throwable) iOException9);
        java.lang.Throwable[] throwableArray11 = iOException9.getSuppressed();
        java.io.IOException iOException12 = new java.io.IOException((java.lang.Throwable) iOException9);
        java.io.IOException iOException14 = new java.io.IOException("");
        java.io.IOException iOException15 = new java.io.IOException((java.lang.Throwable) iOException14);
        iOException9.addSuppressed((java.lang.Throwable) iOException15);
        iOException6.addSuppressed((java.lang.Throwable) iOException15);
        java.io.IOException iOException18 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException15);
        java.io.IOException iOException19 = new java.io.IOException("64", (java.lang.Throwable) iOException18);
        java.io.IOException iOException20 = new java.io.IOException((java.lang.Throwable) iOException18);
        java.io.IOException iOException22 = new java.io.IOException("hi!");
        java.lang.Throwable[] throwableArray23 = iOException22.getSuppressed();
        java.io.IOException iOException24 = new java.io.IOException((java.lang.Throwable) iOException22);
        iOException18.addSuppressed((java.lang.Throwable) iOException22);
        java.io.IOException iOException26 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020", (java.lang.Throwable) iOException18);
        iOException1.addSuppressed((java.lang.Throwable) iOException26);
        java.lang.String str28 = iOException1.toString();
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: 0" + "'", str28, "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: 0");
    }

    @Test
    public void test05094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05094");
        java.io.IOException iOException3 = new java.io.IOException("0");
        java.io.IOException iOException4 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException3);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException3);
        java.io.IOException iOException6 = new java.io.IOException("\\\\\\u00750075005C\\\\u00750075\\\\\\u007500750030\\\\\\u007500750030\\\\\\u007500750033\\\\\\u007500750033\\\\\\u00750075005C\\\\u00750075\\\\\\u007500750030\\\\\\u007500750030\\\\\\u007500750033\\\\\\u007500750034", (java.lang.Throwable) iOException3);
        java.io.IOException iOException12 = new java.io.IOException();
        java.io.IOException iOException13 = new java.io.IOException();
        iOException12.addSuppressed((java.lang.Throwable) iOException13);
        java.io.IOException iOException15 = new java.io.IOException("0", (java.lang.Throwable) iOException12);
        java.io.IOException iOException16 = new java.io.IOException((java.lang.Throwable) iOException15);
        java.io.IOException iOException17 = new java.io.IOException((java.lang.Throwable) iOException16);
        java.io.IOException iOException18 = new java.io.IOException((java.lang.Throwable) iOException17);
        java.lang.Throwable[] throwableArray19 = iOException18.getSuppressed();
        java.io.IOException iOException20 = new java.io.IOException("\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException18);
        java.io.IOException iOException21 = new java.io.IOException((java.lang.Throwable) iOException18);
        java.io.IOException iOException22 = new java.io.IOException((java.lang.Throwable) iOException21);
        java.io.IOException iOException23 = new java.io.IOException("\\\\u00750068\\\\u00750069\\\\u00750021", (java.lang.Throwable) iOException21);
        java.io.IOException iOException24 = new java.io.IOException("java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException21);
        java.io.IOException iOException25 = new java.io.IOException("\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030", (java.lang.Throwable) iOException21);
        iOException3.addSuppressed((java.lang.Throwable) iOException21);
        org.junit.Assert.assertNotNull(throwableArray19);
    }

    @Test
    public void test05095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05095");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between(0, (int) '4');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between(100, (int) (short) 100);
        java.io.Writer writer8 = null;
        int int9 = unicodeEscaper5.translate((java.lang.CharSequence) "\\u005C\\u0075\\u0030\\u0030\\u0036\\u0041\\u0061\\u005C\\u0075\\u0030\\u0030\\u0037\\u0036\\u0061\\u002E\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u005C\\u0075\\u0030\\u0030\\u0036\\u0046\\u002E\\u0049\\u004F\\u0045\\u005C\\u0075\\u0030\\u0030\\u0037\\u0038\\u0063\\u005C\\u0075\\u0030\\u0030\\u0036\\u0035\\u005C\\u0075\\u0030\\u0030\\u0037\\u0030\\u005C\\u0075\\u0030\\u0030\\u0037\\u0034\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u005C\\u0075\\u0030\\u0030\\u0036\\u0046\\u005C\\u0075\\u0030\\u0030\\u0036\\u0045\\u003A\\u0020\\u0036\\u0034", (int) (byte) 10, writer8);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper12 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (short) -1, (int) (byte) 10);
        java.lang.String str14 = unicodeEscaper12.translate((java.lang.CharSequence) "\\\\\\u00750075006A\\\\\\u007500750061\\\\\\u007500750076\\\\\\u007500750061\\\\\\u00750075002E\\\\\\u007500750069\\\\\\u00750075006F\\\\\\u00750075002E\\\\\\u007500750049\\\\\\u00750075004F\\\\\\u007500750045\\\\\\u007500750078\\\\\\u007500750063\\\\\\u007500750065\\\\\\u007500750070\\\\\\u007500750074\\\\\\u007500750069\\\\\\u00750075006F\\\\\\u00750075006E\\\\\\u00750075003A\\\\\\u007500750020");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper17 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper20 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer22 = null;
        boolean boolean23 = unicodeEscaper20.translate((int) (short) 10, writer22);
        java.lang.String str25 = unicodeEscaper20.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper28 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer30 = null;
        boolean boolean31 = unicodeEscaper28.translate((int) '4', writer30);
        java.io.Writer writer33 = null;
        boolean boolean34 = unicodeEscaper28.translate((int) (byte) -1, writer33);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper37 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper39 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper41 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str43 = unicodeEscaper41.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray44 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper37, unicodeEscaper39, unicodeEscaper41 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator45 = unicodeEscaper28.with(charSequenceTranslatorArray44);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator46 = unicodeEscaper20.with(charSequenceTranslatorArray44);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator47 = unicodeEscaper17.with(charSequenceTranslatorArray44);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator48 = unicodeEscaper12.with(charSequenceTranslatorArray44);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator49 = unicodeEscaper5.with(charSequenceTranslatorArray44);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator50 = unicodeEscaper2.with(charSequenceTranslatorArray44);
        java.io.Writer writer52 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean53 = unicodeEscaper2.translate((int) (short) 1, writer52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(unicodeEscaper12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\\\\\\u00750075006A\\\\\\u007500750061\\\\\\u007500750076\\\\\\u007500750061\\\\\\u00750075002E\\\\\\u007500750069\\\\\\u00750075006F\\\\\\u00750075002E\\\\\\u007500750049\\\\\\u00750075004F\\\\\\u007500750045\\\\\\u007500750078\\\\\\u007500750063\\\\\\u007500750065\\\\\\u007500750070\\\\\\u007500750074\\\\\\u007500750069\\\\\\u00750075006F\\\\\\u00750075006E\\\\\\u00750075003A\\\\\\u007500750020" + "'", str14, "\\\\\\u00750075006A\\\\\\u007500750061\\\\\\u007500750076\\\\\\u007500750061\\\\\\u00750075002E\\\\\\u007500750069\\\\\\u00750075006F\\\\\\u00750075002E\\\\\\u007500750049\\\\\\u00750075004F\\\\\\u007500750045\\\\\\u007500750078\\\\\\u007500750063\\\\\\u007500750065\\\\\\u007500750070\\\\\\u007500750074\\\\\\u007500750069\\\\\\u00750075006F\\\\\\u00750075006E\\\\\\u00750075003A\\\\\\u007500750020");
        org.junit.Assert.assertNotNull(unicodeEscaper17);
        org.junit.Assert.assertNotNull(unicodeEscaper20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "0" + "'", str25, "0");
        org.junit.Assert.assertNotNull(unicodeEscaper28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper37);
        org.junit.Assert.assertNotNull(unicodeEscaper39);
        org.junit.Assert.assertNotNull(unicodeEscaper41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str43, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray44);
        org.junit.Assert.assertNotNull(charSequenceTranslator45);
        org.junit.Assert.assertNotNull(charSequenceTranslator46);
        org.junit.Assert.assertNotNull(charSequenceTranslator47);
        org.junit.Assert.assertNotNull(charSequenceTranslator48);
        org.junit.Assert.assertNotNull(charSequenceTranslator49);
        org.junit.Assert.assertNotNull(charSequenceTranslator50);
    }

    @Test
    public void test05096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05096");
        java.lang.Throwable throwable2 = null;
        java.io.IOException iOException3 = new java.io.IOException(throwable2);
        java.io.IOException iOException4 = new java.io.IOException("java.io.IOException: \\u0068\\u0069\\u0021", (java.lang.Throwable) iOException3);
        java.io.IOException iOException8 = new java.io.IOException();
        java.io.IOException iOException9 = new java.io.IOException();
        iOException8.addSuppressed((java.lang.Throwable) iOException9);
        java.io.IOException iOException11 = new java.io.IOException("0", (java.lang.Throwable) iOException8);
        java.io.IOException iOException12 = new java.io.IOException((java.lang.Throwable) iOException11);
        java.io.IOException iOException13 = new java.io.IOException((java.lang.Throwable) iOException12);
        java.io.IOException iOException14 = new java.io.IOException((java.lang.Throwable) iOException13);
        java.lang.Throwable[] throwableArray15 = iOException14.getSuppressed();
        java.io.IOException iOException16 = new java.io.IOException("java.io.IOException: java.io.IOException", (java.lang.Throwable) iOException14);
        java.io.IOException iOException17 = new java.io.IOException("\\u005Cu\\u0030\\u0030\\u0036\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0032\\u0031", (java.lang.Throwable) iOException14);
        java.io.IOException iOException18 = new java.io.IOException((java.lang.Throwable) iOException17);
        java.io.IOException iOException20 = new java.io.IOException();
        java.io.IOException iOException21 = new java.io.IOException();
        iOException20.addSuppressed((java.lang.Throwable) iOException21);
        java.io.IOException iOException23 = new java.io.IOException();
        java.io.IOException iOException24 = new java.io.IOException();
        iOException23.addSuppressed((java.lang.Throwable) iOException24);
        java.lang.Throwable[] throwableArray26 = iOException24.getSuppressed();
        java.io.IOException iOException27 = new java.io.IOException((java.lang.Throwable) iOException24);
        java.io.IOException iOException29 = new java.io.IOException("");
        java.io.IOException iOException30 = new java.io.IOException((java.lang.Throwable) iOException29);
        iOException24.addSuppressed((java.lang.Throwable) iOException30);
        iOException21.addSuppressed((java.lang.Throwable) iOException30);
        java.io.IOException iOException33 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException30);
        java.io.IOException iOException36 = new java.io.IOException("");
        java.io.IOException iOException37 = new java.io.IOException((java.lang.Throwable) iOException36);
        java.io.IOException iOException39 = new java.io.IOException("");
        iOException37.addSuppressed((java.lang.Throwable) iOException39);
        java.io.IOException iOException41 = new java.io.IOException("java.io.IOException: 0", (java.lang.Throwable) iOException39);
        iOException30.addSuppressed((java.lang.Throwable) iOException39);
        java.io.IOException iOException43 = new java.io.IOException((java.lang.Throwable) iOException30);
        iOException18.addSuppressed((java.lang.Throwable) iOException30);
        iOException4.addSuppressed((java.lang.Throwable) iOException30);
        java.io.IOException iOException46 = new java.io.IOException("", (java.lang.Throwable) iOException4);
        java.io.IOException iOException47 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.lang.String str48 = iOException4.toString();
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "java.io.IOException: java.io.IOException: \\u0068\\u0069\\u0021" + "'", str48, "java.io.IOException: java.io.IOException: \\u0068\\u0069\\u0021");
    }

    @Test
    public void test05097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05097");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper1 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) (byte) 10);
        java.io.Writer writer3 = null;
        boolean boolean4 = unicodeEscaper1.translate(1, writer3);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper7 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper10 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer12 = null;
        boolean boolean13 = unicodeEscaper10.translate((int) '4', writer12);
        java.io.Writer writer15 = null;
        boolean boolean16 = unicodeEscaper10.translate((int) (byte) -1, writer15);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper19 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper21 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper23 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str25 = unicodeEscaper23.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray26 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper19, unicodeEscaper21, unicodeEscaper23 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator27 = unicodeEscaper10.with(charSequenceTranslatorArray26);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator28 = unicodeEscaper7.with(charSequenceTranslatorArray26);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator29 = unicodeEscaper1.with(charSequenceTranslatorArray26);
        java.io.Writer writer32 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int33 = unicodeEscaper1.translate((java.lang.CharSequence) "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u00200", (int) '4', writer32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper7);
        org.junit.Assert.assertNotNull(unicodeEscaper10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper19);
        org.junit.Assert.assertNotNull(unicodeEscaper21);
        org.junit.Assert.assertNotNull(unicodeEscaper23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str25, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray26);
        org.junit.Assert.assertNotNull(charSequenceTranslator27);
        org.junit.Assert.assertNotNull(charSequenceTranslator28);
        org.junit.Assert.assertNotNull(charSequenceTranslator29);
    }

    @Test
    public void test05098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05098");
        java.io.IOException iOException3 = new java.io.IOException();
        java.io.IOException iOException4 = new java.io.IOException();
        iOException3.addSuppressed((java.lang.Throwable) iOException4);
        java.io.IOException iOException6 = new java.io.IOException();
        java.io.IOException iOException7 = new java.io.IOException();
        iOException6.addSuppressed((java.lang.Throwable) iOException7);
        java.lang.Throwable[] throwableArray9 = iOException7.getSuppressed();
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.io.IOException iOException12 = new java.io.IOException("");
        java.io.IOException iOException13 = new java.io.IOException((java.lang.Throwable) iOException12);
        iOException7.addSuppressed((java.lang.Throwable) iOException13);
        iOException4.addSuppressed((java.lang.Throwable) iOException13);
        java.io.IOException iOException16 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException13);
        java.io.IOException iOException17 = new java.io.IOException((java.lang.Throwable) iOException13);
        java.io.IOException iOException18 = new java.io.IOException("1", (java.lang.Throwable) iOException17);
        java.io.IOException iOException21 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030");
        java.io.IOException iOException22 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020", (java.lang.Throwable) iOException21);
        java.io.IOException iOException23 = new java.io.IOException((java.lang.Throwable) iOException21);
        iOException17.addSuppressed((java.lang.Throwable) iOException23);
        java.io.IOException iOException25 = new java.io.IOException("\\u006A\\\\u00750061\\u0076\\\\u00750061\\\\u0075002E\\u0069\\u006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException17);
        org.junit.Assert.assertNotNull(throwableArray9);
    }

    @Test
    public void test05099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05099");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 10, (int) 'a');
        java.io.Writer writer4 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: java.io.IOException: \\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034", writer4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
    }

    @Test
    public void test05100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05100");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper1 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above(1);
        java.lang.String str3 = unicodeEscaper1.translate((java.lang.CharSequence) "\\u0030");
        java.io.Writer writer5 = null;
        boolean boolean6 = unicodeEscaper1.translate((int) (short) 0, writer5);
        java.io.Writer writer9 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int10 = unicodeEscaper1.translate((java.lang.CharSequence) "java.io.IOException:\\u0020java.io.IOException:\\u0020java.io.IOException:\\u0020java.io.IOException:\\u0020java.io.IOException:\\u0020java.io.IOException", 10, writer9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030" + "'", str3, "\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test05101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05101");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) '4', writer4);
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper2.translate((int) (byte) -1, writer7);
        java.io.Writer writer10 = null;
        boolean boolean11 = unicodeEscaper2.translate((int) (byte) -1, writer10);
        java.io.Writer writer14 = null;
        int int15 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u0036\\u0034", 10, writer14);
        java.lang.String str17 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u005Cu\\u0030\\u0030\\u0036\\u0041\\u005Cu\\u0030\\u0030\\u0036\\u0031\\u005Cu\\u0030\\u0030\\u0037\\u0036\\u005Cu\\u0030\\u0030\\u0036\\u0031\\u005Cu\\u0030\\u0030\\u0032\\u0045\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0036\\u0046\\u005Cu\\u0030\\u0030\\u0032\\u0045\\u005Cu\\u0030\\u0030\\u0034\\u0039\\u005Cu\\u0030\\u0030\\u0034\\u0046\\u005Cu\\u0030\\u0030\\u0034\\u0035\\u005Cu\\u0030\\u0030\\u0037\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0033\\u005Cu\\u0030\\u0030\\u0036\\u0035\\u005Cu\\u0030\\u0030\\u0037\\u0030\\u005Cu\\u0030\\u0030\\u0037\\u0034\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0036\\u0046\\u005Cu\\u0030\\u0030\\u0036\\u0045\\u005Cu\\u0030\\u0030\\u0033\\u0041\\u005Cu\\u0030\\u0030\\u0032\\u0030");
        java.io.Writer writer19 = null;
        boolean boolean20 = unicodeEscaper2.translate((int) (short) -1, writer19);
        java.lang.String str22 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u0046\\u0046\\u0046\\u0046\\u0046\\u0046\\u0046\\u0046");
        java.io.Writer writer25 = null;
        int int26 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u005C\\u0075\\u0030\\u0030\\u0036\\u0041\\u0061\\u005C\\u0075\\u0030\\u0030\\u0037\\u0036\\u0061\\u002E\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u005C\\u0075\\u0030\\u0030\\u0036\\u0046\\u002E\\u0049\\u004F\\u0045\\u005C\\u0075\\u0030\\u0030\\u0037\\u0038\\u005C\\u0075\\u0030\\u0030\\u0036\\u0033\\u005C\\u0075\\u0030\\u0030\\u0036\\u0035\\u005C\\u0075\\u0030\\u0030\\u0037\\u0030\\u005C\\u0075\\u0030\\u0030\\u0037\\u0034\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u005C\\u0075\\u0030\\u0030\\u0036\\u0046\\u005C\\u0075\\u0030\\u0030\\u0036\\u0045\\u003A\\u0020\\u005C\\u0075\\u0030\\u0030\\u0036\\u0038\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u0021", 0, writer25);
        java.io.Writer writer28 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: ", writer28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\u005Cu\\u0030\\u0030\\u0036\\u0041\\u005Cu\\u0030\\u0030\\u0036\\u0031\\u005Cu\\u0030\\u0030\\u0037\\u0036\\u005Cu\\u0030\\u0030\\u0036\\u0031\\u005Cu\\u0030\\u0030\\u0032\\u0045\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0036\\u0046\\u005Cu\\u0030\\u0030\\u0032\\u0045\\u005Cu\\u0030\\u0030\\u0034\\u0039\\u005Cu\\u0030\\u0030\\u0034\\u0046\\u005Cu\\u0030\\u0030\\u0034\\u0035\\u005Cu\\u0030\\u0030\\u0037\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0033\\u005Cu\\u0030\\u0030\\u0036\\u0035\\u005Cu\\u0030\\u0030\\u0037\\u0030\\u005Cu\\u0030\\u0030\\u0037\\u0034\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0036\\u0046\\u005Cu\\u0030\\u0030\\u0036\\u0045\\u005Cu\\u0030\\u0030\\u0033\\u0041\\u005Cu\\u0030\\u0030\\u0032\\u0030" + "'", str17, "\\u005Cu\\u0030\\u0030\\u0036\\u0041\\u005Cu\\u0030\\u0030\\u0036\\u0031\\u005Cu\\u0030\\u0030\\u0037\\u0036\\u005Cu\\u0030\\u0030\\u0036\\u0031\\u005Cu\\u0030\\u0030\\u0032\\u0045\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0036\\u0046\\u005Cu\\u0030\\u0030\\u0032\\u0045\\u005Cu\\u0030\\u0030\\u0034\\u0039\\u005Cu\\u0030\\u0030\\u0034\\u0046\\u005Cu\\u0030\\u0030\\u0034\\u0035\\u005Cu\\u0030\\u0030\\u0037\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0033\\u005Cu\\u0030\\u0030\\u0036\\u0035\\u005Cu\\u0030\\u0030\\u0037\\u0030\\u005Cu\\u0030\\u0030\\u0037\\u0034\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0036\\u0046\\u005Cu\\u0030\\u0030\\u0036\\u0045\\u005Cu\\u0030\\u0030\\u0033\\u0041\\u005Cu\\u0030\\u0030\\u0032\\u0030");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\\u0046\\u0046\\u0046\\u0046\\u0046\\u0046\\u0046\\u0046" + "'", str22, "\\u0046\\u0046\\u0046\\u0046\\u0046\\u0046\\u0046\\u0046");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
    }

    @Test
    public void test05102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05102");
        java.io.IOException iOException2 = new java.io.IOException();
        java.io.IOException iOException3 = new java.io.IOException();
        iOException2.addSuppressed((java.lang.Throwable) iOException3);
        java.lang.Throwable[] throwableArray5 = iOException3.getSuppressed();
        java.lang.Throwable[] throwableArray6 = iOException3.getSuppressed();
        java.io.IOException iOException8 = new java.io.IOException();
        java.io.IOException iOException9 = new java.io.IOException();
        iOException8.addSuppressed((java.lang.Throwable) iOException9);
        java.io.IOException iOException11 = new java.io.IOException("0", (java.lang.Throwable) iOException8);
        java.io.IOException iOException12 = new java.io.IOException((java.lang.Throwable) iOException11);
        iOException3.addSuppressed((java.lang.Throwable) iOException12);
        java.lang.Throwable[] throwableArray14 = iOException12.getSuppressed();
        java.io.IOException iOException15 = new java.io.IOException("A", (java.lang.Throwable) iOException12);
        java.io.IOException iOException16 = new java.io.IOException((java.lang.Throwable) iOException12);
        java.io.IOException iOException19 = new java.io.IOException("");
        java.io.IOException iOException20 = new java.io.IOException("A", (java.lang.Throwable) iOException19);
        java.lang.Throwable[] throwableArray21 = iOException19.getSuppressed();
        java.io.IOException iOException22 = new java.io.IOException((java.lang.Throwable) iOException19);
        java.io.IOException iOException24 = new java.io.IOException();
        java.io.IOException iOException25 = new java.io.IOException();
        iOException24.addSuppressed((java.lang.Throwable) iOException25);
        java.io.IOException iOException27 = new java.io.IOException();
        java.io.IOException iOException28 = new java.io.IOException();
        iOException27.addSuppressed((java.lang.Throwable) iOException28);
        java.lang.Throwable[] throwableArray30 = iOException28.getSuppressed();
        java.io.IOException iOException31 = new java.io.IOException((java.lang.Throwable) iOException28);
        java.io.IOException iOException33 = new java.io.IOException("");
        java.io.IOException iOException34 = new java.io.IOException((java.lang.Throwable) iOException33);
        iOException28.addSuppressed((java.lang.Throwable) iOException34);
        iOException25.addSuppressed((java.lang.Throwable) iOException34);
        java.io.IOException iOException37 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException34);
        java.io.IOException iOException40 = new java.io.IOException("");
        java.io.IOException iOException41 = new java.io.IOException((java.lang.Throwable) iOException40);
        java.io.IOException iOException43 = new java.io.IOException("");
        iOException41.addSuppressed((java.lang.Throwable) iOException43);
        java.io.IOException iOException45 = new java.io.IOException("java.io.IOException: 0", (java.lang.Throwable) iOException43);
        iOException34.addSuppressed((java.lang.Throwable) iOException43);
        iOException19.addSuppressed((java.lang.Throwable) iOException34);
        iOException12.addSuppressed((java.lang.Throwable) iOException34);
        java.io.IOException iOException49 = new java.io.IOException("j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020\\u0030", (java.lang.Throwable) iOException34);
        java.lang.Throwable[] throwableArray50 = iOException49.getSuppressed();
        java.lang.Throwable[] throwableArray51 = iOException49.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray51);
    }

    @Test
    public void test05103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05103");
        java.io.IOException iOException2 = new java.io.IOException();
        java.io.IOException iOException3 = new java.io.IOException();
        iOException2.addSuppressed((java.lang.Throwable) iOException3);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.lang.Throwable[] throwableArray6 = iOException5.getSuppressed();
        java.io.IOException iOException9 = new java.io.IOException();
        java.io.IOException iOException10 = new java.io.IOException();
        iOException9.addSuppressed((java.lang.Throwable) iOException10);
        java.io.IOException iOException12 = new java.io.IOException();
        java.io.IOException iOException13 = new java.io.IOException();
        iOException12.addSuppressed((java.lang.Throwable) iOException13);
        java.lang.Throwable[] throwableArray15 = iOException13.getSuppressed();
        java.io.IOException iOException16 = new java.io.IOException((java.lang.Throwable) iOException13);
        java.io.IOException iOException18 = new java.io.IOException("");
        java.io.IOException iOException19 = new java.io.IOException((java.lang.Throwable) iOException18);
        iOException13.addSuppressed((java.lang.Throwable) iOException19);
        iOException10.addSuppressed((java.lang.Throwable) iOException19);
        java.io.IOException iOException22 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException19);
        java.io.IOException iOException23 = new java.io.IOException("64", (java.lang.Throwable) iOException22);
        iOException5.addSuppressed((java.lang.Throwable) iOException22);
        java.io.IOException iOException25 = new java.io.IOException("1", (java.lang.Throwable) iOException22);
        java.lang.Throwable[] throwableArray26 = iOException25.getSuppressed();
        java.lang.Throwable[] throwableArray27 = iOException25.getSuppressed();
        java.io.IOException iOException30 = new java.io.IOException("");
        java.io.IOException iOException31 = new java.io.IOException((java.lang.Throwable) iOException30);
        java.io.IOException iOException33 = new java.io.IOException("");
        iOException31.addSuppressed((java.lang.Throwable) iOException33);
        java.io.IOException iOException35 = new java.io.IOException("java.io.IOException: 0", (java.lang.Throwable) iOException33);
        java.io.IOException iOException36 = new java.io.IOException((java.lang.Throwable) iOException33);
        iOException25.addSuppressed((java.lang.Throwable) iOException36);
        java.io.IOException iOException38 = new java.io.IOException((java.lang.Throwable) iOException25);
        java.io.IOException iOException39 = new java.io.IOException("\\\\\\u00750075006Aa\\\\\\u007500750076a.\\\\\\u007500750069\\\\\\u00750075006F.IOE\\\\\\u007500750078\\\\u00750063\\\\\\u007500750065\\\\\\u007500750070\\\\\\u007500750074\\\\\\u007500750069\\\\\\u00750075006F\\\\\\u00750075006E:\\\\\\u007500750020\\\\\\u00750075006Aa\\\\\\u007500750076a.\\\\\\u007500750069\\\\\\u00750075006F.IOE\\\\\\u007500750078\\\\u00750063\\\\\\u007500750065\\\\\\u007500750070\\\\\\u007500750074\\\\\\u007500750069\\\\\\u00750075006F\\\\\\u00750075006E", (java.lang.Throwable) iOException38);
        java.lang.String str40 = iOException39.toString();
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "java.io.IOException: \\\\\\u00750075006Aa\\\\\\u007500750076a.\\\\\\u007500750069\\\\\\u00750075006F.IOE\\\\\\u007500750078\\\\u00750063\\\\\\u007500750065\\\\\\u007500750070\\\\\\u007500750074\\\\\\u007500750069\\\\\\u00750075006F\\\\\\u00750075006E:\\\\\\u007500750020\\\\\\u00750075006Aa\\\\\\u007500750076a.\\\\\\u007500750069\\\\\\u00750075006F.IOE\\\\\\u007500750078\\\\u00750063\\\\\\u007500750065\\\\\\u007500750070\\\\\\u007500750074\\\\\\u007500750069\\\\\\u00750075006F\\\\\\u00750075006E" + "'", str40, "java.io.IOException: \\\\\\u00750075006Aa\\\\\\u007500750076a.\\\\\\u007500750069\\\\\\u00750075006F.IOE\\\\\\u007500750078\\\\u00750063\\\\\\u007500750065\\\\\\u007500750070\\\\\\u007500750074\\\\\\u007500750069\\\\\\u00750075006F\\\\\\u00750075006E:\\\\\\u007500750020\\\\\\u00750075006Aa\\\\\\u007500750076a.\\\\\\u007500750069\\\\\\u00750075006F.IOE\\\\\\u007500750078\\\\u00750063\\\\\\u007500750065\\\\\\u007500750070\\\\\\u007500750074\\\\\\u007500750069\\\\\\u00750075006F\\\\\\u00750075006E");
    }

    @Test
    public void test05104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05104");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 100, (int) ' ');
        java.io.Writer writer5 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int6 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034", (-1), writer5);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
    }

    @Test
    public void test05105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05105");
        java.io.IOException iOException2 = new java.io.IOException();
        java.io.IOException iOException3 = new java.io.IOException();
        iOException2.addSuppressed((java.lang.Throwable) iOException3);
        java.io.IOException iOException5 = new java.io.IOException("0", (java.lang.Throwable) iOException2);
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.lang.Throwable[] throwableArray9 = iOException8.getSuppressed();
        java.io.IOException iOException10 = new java.io.IOException("\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException8);
        java.io.IOException iOException13 = new java.io.IOException();
        java.io.IOException iOException14 = new java.io.IOException();
        iOException13.addSuppressed((java.lang.Throwable) iOException14);
        java.io.IOException iOException16 = new java.io.IOException("0", (java.lang.Throwable) iOException13);
        java.io.IOException iOException17 = new java.io.IOException((java.lang.Throwable) iOException16);
        java.io.IOException iOException18 = new java.io.IOException("java.io.IOException:\\u0020java.io.IOException:\\u0020java.io.IOException:\\u0020java.io.IOException:\\u0020java.io.IOException:\\u00200", (java.lang.Throwable) iOException17);
        iOException8.addSuppressed((java.lang.Throwable) iOException18);
        java.io.IOException iOException22 = new java.io.IOException();
        java.io.IOException iOException23 = new java.io.IOException();
        iOException22.addSuppressed((java.lang.Throwable) iOException23);
        java.io.IOException iOException25 = new java.io.IOException("0", (java.lang.Throwable) iOException22);
        java.io.IOException iOException26 = new java.io.IOException((java.lang.Throwable) iOException25);
        java.io.IOException iOException27 = new java.io.IOException((java.lang.Throwable) iOException26);
        java.io.IOException iOException28 = new java.io.IOException((java.lang.Throwable) iOException27);
        java.lang.Throwable[] throwableArray29 = iOException28.getSuppressed();
        java.io.IOException iOException30 = new java.io.IOException("\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException28);
        java.io.IOException iOException31 = new java.io.IOException((java.lang.Throwable) iOException28);
        java.io.IOException iOException32 = new java.io.IOException((java.lang.Throwable) iOException31);
        java.io.IOException iOException34 = new java.io.IOException();
        java.io.IOException iOException35 = new java.io.IOException();
        iOException34.addSuppressed((java.lang.Throwable) iOException35);
        java.io.IOException iOException37 = new java.io.IOException("0", (java.lang.Throwable) iOException34);
        java.io.IOException iOException38 = new java.io.IOException((java.lang.Throwable) iOException37);
        java.io.IOException iOException39 = new java.io.IOException((java.lang.Throwable) iOException38);
        java.io.IOException iOException41 = new java.io.IOException();
        java.io.IOException iOException42 = new java.io.IOException();
        iOException41.addSuppressed((java.lang.Throwable) iOException42);
        java.lang.Throwable[] throwableArray44 = iOException42.getSuppressed();
        java.lang.Throwable[] throwableArray45 = iOException42.getSuppressed();
        java.io.IOException iOException46 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException42);
        java.io.IOException iOException47 = new java.io.IOException();
        java.io.IOException iOException48 = new java.io.IOException();
        iOException47.addSuppressed((java.lang.Throwable) iOException48);
        java.io.IOException iOException50 = new java.io.IOException((java.lang.Throwable) iOException47);
        java.lang.Throwable[] throwableArray51 = iOException50.getSuppressed();
        iOException46.addSuppressed((java.lang.Throwable) iOException50);
        iOException38.addSuppressed((java.lang.Throwable) iOException50);
        java.lang.Throwable[] throwableArray54 = iOException50.getSuppressed();
        iOException32.addSuppressed((java.lang.Throwable) iOException50);
        java.io.IOException iOException58 = new java.io.IOException("0");
        java.lang.Throwable[] throwableArray59 = iOException58.getSuppressed();
        java.io.IOException iOException60 = new java.io.IOException("hi!", (java.lang.Throwable) iOException58);
        java.lang.Throwable[] throwableArray61 = iOException58.getSuppressed();
        java.io.IOException iOException63 = new java.io.IOException("0");
        java.io.IOException iOException64 = new java.io.IOException();
        java.io.IOException iOException65 = new java.io.IOException();
        iOException64.addSuppressed((java.lang.Throwable) iOException65);
        java.io.IOException iOException67 = new java.io.IOException();
        java.io.IOException iOException68 = new java.io.IOException();
        iOException67.addSuppressed((java.lang.Throwable) iOException68);
        java.lang.Throwable[] throwableArray70 = iOException68.getSuppressed();
        java.io.IOException iOException71 = new java.io.IOException((java.lang.Throwable) iOException68);
        java.io.IOException iOException73 = new java.io.IOException("");
        java.io.IOException iOException74 = new java.io.IOException((java.lang.Throwable) iOException73);
        iOException68.addSuppressed((java.lang.Throwable) iOException74);
        iOException65.addSuppressed((java.lang.Throwable) iOException74);
        iOException63.addSuppressed((java.lang.Throwable) iOException74);
        iOException58.addSuppressed((java.lang.Throwable) iOException63);
        iOException32.addSuppressed((java.lang.Throwable) iOException58);
        iOException8.addSuppressed((java.lang.Throwable) iOException32);
        java.io.IOException iOException81 = new java.io.IOException((java.lang.Throwable) iOException32);
        java.lang.String str82 = iOException81.toString();
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(throwableArray70);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: 0" + "'", str82, "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: 0");
    }

    @Test
    public void test05106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05106");
        java.io.IOException iOException4 = new java.io.IOException();
        java.io.IOException iOException5 = new java.io.IOException();
        iOException4.addSuppressed((java.lang.Throwable) iOException5);
        java.io.IOException iOException7 = new java.io.IOException();
        java.io.IOException iOException8 = new java.io.IOException();
        iOException7.addSuppressed((java.lang.Throwable) iOException8);
        java.lang.Throwable[] throwableArray10 = iOException8.getSuppressed();
        java.io.IOException iOException11 = new java.io.IOException((java.lang.Throwable) iOException8);
        java.io.IOException iOException13 = new java.io.IOException("");
        java.io.IOException iOException14 = new java.io.IOException((java.lang.Throwable) iOException13);
        iOException8.addSuppressed((java.lang.Throwable) iOException14);
        iOException5.addSuppressed((java.lang.Throwable) iOException14);
        java.io.IOException iOException17 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException14);
        java.io.IOException iOException18 = new java.io.IOException((java.lang.Throwable) iOException14);
        java.io.IOException iOException19 = new java.io.IOException("1", (java.lang.Throwable) iOException18);
        java.io.IOException iOException22 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030");
        java.io.IOException iOException23 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020", (java.lang.Throwable) iOException22);
        java.io.IOException iOException24 = new java.io.IOException((java.lang.Throwable) iOException22);
        iOException18.addSuppressed((java.lang.Throwable) iOException24);
        java.io.IOException iOException26 = new java.io.IOException((java.lang.Throwable) iOException18);
        java.io.IOException iOException27 = new java.io.IOException("\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u0068\\u0069!", (java.lang.Throwable) iOException26);
        java.io.IOException iOException28 = new java.io.IOException((java.lang.Throwable) iOException27);
        java.io.IOException iOException29 = new java.io.IOException("java\\u002Eio\\u002EIOException", (java.lang.Throwable) iOException27);
        java.io.IOException iOException33 = new java.io.IOException("0");
        java.lang.Throwable[] throwableArray34 = iOException33.getSuppressed();
        java.io.IOException iOException35 = new java.io.IOException("hi!", (java.lang.Throwable) iOException33);
        java.io.IOException iOException37 = new java.io.IOException("");
        java.io.IOException iOException38 = new java.io.IOException((java.lang.Throwable) iOException37);
        java.io.IOException iOException40 = new java.io.IOException("");
        iOException38.addSuppressed((java.lang.Throwable) iOException40);
        java.io.IOException iOException43 = new java.io.IOException("");
        java.io.IOException iOException44 = new java.io.IOException((java.lang.Throwable) iOException43);
        java.io.IOException iOException46 = new java.io.IOException("");
        iOException44.addSuppressed((java.lang.Throwable) iOException46);
        iOException38.addSuppressed((java.lang.Throwable) iOException44);
        iOException35.addSuppressed((java.lang.Throwable) iOException38);
        java.io.IOException iOException50 = new java.io.IOException("hi!", (java.lang.Throwable) iOException38);
        java.lang.Throwable throwable53 = null;
        java.io.IOException iOException54 = new java.io.IOException("java.io.IOException: \\u0068\\u0069\\u0021", throwable53);
        java.io.IOException iOException55 = new java.io.IOException("\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException54);
        iOException50.addSuppressed((java.lang.Throwable) iOException55);
        java.io.IOException iOException57 = new java.io.IOException((java.lang.Throwable) iOException50);
        java.io.IOException iOException59 = new java.io.IOException("java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        iOException57.addSuppressed((java.lang.Throwable) iOException59);
        java.io.IOException iOException62 = new java.io.IOException("\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        java.io.IOException iOException63 = new java.io.IOException((java.lang.Throwable) iOException62);
        iOException57.addSuppressed((java.lang.Throwable) iOException63);
        iOException29.addSuppressed((java.lang.Throwable) iOException57);
        java.lang.Class<?> wildcardClass66 = iOException29.getClass();
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test05107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05107");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) ' ', (int) '4');
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate(0, writer4);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper8 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between(10, (int) (byte) 10);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper10 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer12 = null;
        boolean boolean13 = unicodeEscaper10.translate((int) ' ', writer12);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper16 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str18 = unicodeEscaper16.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray19 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator20 = unicodeEscaper16.with(charSequenceTranslatorArray19);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator21 = unicodeEscaper10.with(charSequenceTranslatorArray19);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator22 = unicodeEscaper8.with(charSequenceTranslatorArray19);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator23 = unicodeEscaper2.with(charSequenceTranslatorArray19);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper26 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (byte) 1, (int) ' ');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper29 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper31 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer33 = null;
        boolean boolean34 = unicodeEscaper31.translate((int) ' ', writer33);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper37 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str39 = unicodeEscaper37.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray40 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator41 = unicodeEscaper37.with(charSequenceTranslatorArray40);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator42 = unicodeEscaper31.with(charSequenceTranslatorArray40);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator43 = unicodeEscaper29.with(charSequenceTranslatorArray40);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator44 = unicodeEscaper26.with(charSequenceTranslatorArray40);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator45 = unicodeEscaper2.with(charSequenceTranslatorArray40);
        java.io.Writer writer47 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate((java.lang.CharSequence) "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A \\u0036\\u0034", writer47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper8);
        org.junit.Assert.assertNotNull(unicodeEscaper10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "0" + "'", str18, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray19);
        org.junit.Assert.assertNotNull(charSequenceTranslator20);
        org.junit.Assert.assertNotNull(charSequenceTranslator21);
        org.junit.Assert.assertNotNull(charSequenceTranslator22);
        org.junit.Assert.assertNotNull(charSequenceTranslator23);
        org.junit.Assert.assertNotNull(unicodeEscaper26);
        org.junit.Assert.assertNotNull(unicodeEscaper29);
        org.junit.Assert.assertNotNull(unicodeEscaper31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "0" + "'", str39, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray40);
        org.junit.Assert.assertNotNull(charSequenceTranslator41);
        org.junit.Assert.assertNotNull(charSequenceTranslator42);
        org.junit.Assert.assertNotNull(charSequenceTranslator43);
        org.junit.Assert.assertNotNull(charSequenceTranslator44);
        org.junit.Assert.assertNotNull(charSequenceTranslator45);
    }

    @Test
    public void test05108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05108");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (short) 1, (int) (short) 1);
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) (byte) 100, writer4);
        java.lang.Class<?> wildcardClass6 = unicodeEscaper2.getClass();
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test05109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05109");
        java.io.IOException iOException0 = new java.io.IOException();
        java.io.IOException iOException1 = new java.io.IOException();
        iOException0.addSuppressed((java.lang.Throwable) iOException1);
        java.lang.Throwable[] throwableArray3 = iOException1.getSuppressed();
        java.io.IOException iOException4 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.lang.Throwable[] throwableArray6 = iOException4.getSuppressed();
        java.io.IOException iOException9 = new java.io.IOException();
        java.io.IOException iOException10 = new java.io.IOException();
        iOException9.addSuppressed((java.lang.Throwable) iOException10);
        java.io.IOException iOException12 = new java.io.IOException();
        java.io.IOException iOException13 = new java.io.IOException();
        iOException12.addSuppressed((java.lang.Throwable) iOException13);
        java.lang.Throwable[] throwableArray15 = iOException13.getSuppressed();
        java.io.IOException iOException16 = new java.io.IOException((java.lang.Throwable) iOException13);
        java.io.IOException iOException18 = new java.io.IOException("");
        java.io.IOException iOException19 = new java.io.IOException((java.lang.Throwable) iOException18);
        iOException13.addSuppressed((java.lang.Throwable) iOException19);
        iOException10.addSuppressed((java.lang.Throwable) iOException19);
        java.io.IOException iOException22 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException19);
        java.io.IOException iOException23 = new java.io.IOException((java.lang.Throwable) iOException19);
        java.io.IOException iOException24 = new java.io.IOException((java.lang.Throwable) iOException19);
        java.io.IOException iOException25 = new java.io.IOException((java.lang.Throwable) iOException24);
        java.io.IOException iOException26 = new java.io.IOException("java.io.IOException: 20", (java.lang.Throwable) iOException25);
        iOException4.addSuppressed((java.lang.Throwable) iOException26);
        java.lang.Throwable[] throwableArray28 = iOException26.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray28);
    }

    @Test
    public void test05110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05110");
        java.io.IOException iOException5 = new java.io.IOException("");
        java.io.IOException iOException6 = new java.io.IOException("A", (java.lang.Throwable) iOException5);
        java.lang.Throwable[] throwableArray7 = iOException5.getSuppressed();
        java.io.IOException iOException8 = new java.io.IOException("java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception", (java.lang.Throwable) iOException5);
        java.io.IOException iOException10 = new java.io.IOException("hi!");
        java.lang.Throwable[] throwableArray11 = iOException10.getSuppressed();
        java.io.IOException iOException12 = new java.io.IOException((java.lang.Throwable) iOException10);
        java.io.IOException iOException13 = new java.io.IOException();
        java.io.IOException iOException14 = new java.io.IOException();
        iOException13.addSuppressed((java.lang.Throwable) iOException14);
        java.lang.Throwable[] throwableArray16 = iOException14.getSuppressed();
        java.io.IOException iOException17 = new java.io.IOException((java.lang.Throwable) iOException14);
        java.io.IOException iOException19 = new java.io.IOException("");
        java.io.IOException iOException20 = new java.io.IOException((java.lang.Throwable) iOException19);
        iOException14.addSuppressed((java.lang.Throwable) iOException20);
        iOException12.addSuppressed((java.lang.Throwable) iOException14);
        iOException8.addSuppressed((java.lang.Throwable) iOException12);
        java.io.IOException iOException24 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException8);
        java.io.IOException iOException27 = new java.io.IOException();
        java.io.IOException iOException28 = new java.io.IOException();
        iOException27.addSuppressed((java.lang.Throwable) iOException28);
        java.io.IOException iOException30 = new java.io.IOException("0", (java.lang.Throwable) iOException27);
        java.io.IOException iOException31 = new java.io.IOException((java.lang.Throwable) iOException30);
        java.io.IOException iOException32 = new java.io.IOException((java.lang.Throwable) iOException31);
        java.io.IOException iOException33 = new java.io.IOException((java.lang.Throwable) iOException32);
        java.lang.Throwable[] throwableArray34 = iOException33.getSuppressed();
        java.io.IOException iOException38 = new java.io.IOException("0");
        java.lang.Throwable[] throwableArray39 = iOException38.getSuppressed();
        java.io.IOException iOException40 = new java.io.IOException("hi!", (java.lang.Throwable) iOException38);
        java.io.IOException iOException42 = new java.io.IOException("");
        java.io.IOException iOException43 = new java.io.IOException((java.lang.Throwable) iOException42);
        java.io.IOException iOException45 = new java.io.IOException("");
        iOException43.addSuppressed((java.lang.Throwable) iOException45);
        java.io.IOException iOException48 = new java.io.IOException("");
        java.io.IOException iOException49 = new java.io.IOException((java.lang.Throwable) iOException48);
        java.io.IOException iOException51 = new java.io.IOException("");
        iOException49.addSuppressed((java.lang.Throwable) iOException51);
        iOException43.addSuppressed((java.lang.Throwable) iOException49);
        iOException40.addSuppressed((java.lang.Throwable) iOException43);
        java.io.IOException iOException55 = new java.io.IOException("java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception", (java.lang.Throwable) iOException43);
        iOException33.addSuppressed((java.lang.Throwable) iOException55);
        java.io.IOException iOException57 = new java.io.IOException("61", (java.lang.Throwable) iOException33);
        iOException24.addSuppressed((java.lang.Throwable) iOException57);
        java.io.IOException iOException59 = new java.io.IOException("j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption", (java.lang.Throwable) iOException57);
        java.lang.Class<?> wildcardClass60 = iOException59.getClass();
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test05111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05111");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (short) 0, (-1));
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate(100, writer4);
        java.io.Writer writer8 = null;
        int int9 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\\\u0075006A\\\\u00750061\\\\u00750076\\\\u00750061\\\\u0075002E\\\\u00750069\\\\u0075006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E\\\\u0075003A\\\\u00750020", (int) (short) 100, writer8);
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test05112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05112");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper0 = new org.apache.commons.lang3.text.translate.UnicodeEscaper();
        java.lang.String str2 = unicodeEscaper0.translate((java.lang.CharSequence) "hi!");
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper0.translate((int) (byte) -1, writer4);
        java.lang.String str7 = unicodeEscaper0.translate((java.lang.CharSequence) "");
        java.io.Writer writer9 = null;
        boolean boolean10 = unicodeEscaper0.translate((-1), writer9);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper13 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between(0, (int) (byte) 100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper16 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(10, 10);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper19 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) -1, (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper21 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper23 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer25 = null;
        boolean boolean26 = unicodeEscaper23.translate((int) ' ', writer25);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper29 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str31 = unicodeEscaper29.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray32 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator33 = unicodeEscaper29.with(charSequenceTranslatorArray32);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator34 = unicodeEscaper23.with(charSequenceTranslatorArray32);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator35 = unicodeEscaper21.with(charSequenceTranslatorArray32);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper38 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer40 = null;
        boolean boolean41 = unicodeEscaper38.translate((int) '4', writer40);
        java.io.Writer writer43 = null;
        boolean boolean44 = unicodeEscaper38.translate((int) (byte) -1, writer43);
        java.io.Writer writer46 = null;
        boolean boolean47 = unicodeEscaper38.translate((int) (byte) -1, writer46);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray48 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator49 = unicodeEscaper38.with(charSequenceTranslatorArray48);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator50 = charSequenceTranslator35.with(charSequenceTranslatorArray48);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator51 = unicodeEscaper19.with(charSequenceTranslatorArray48);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator52 = unicodeEscaper16.with(charSequenceTranslatorArray48);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator53 = unicodeEscaper13.with(charSequenceTranslatorArray48);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator54 = unicodeEscaper0.with(charSequenceTranslatorArray48);
        java.io.Writer writer57 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int58 = unicodeEscaper0.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: java.io.IOException: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\\\u00750068\\\\u00750069\\\\u00750021", 10, writer57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\\u0068\\u0069\\u0021" + "'", str2, "\\u0068\\u0069\\u0021");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper13);
        org.junit.Assert.assertNotNull(unicodeEscaper16);
        org.junit.Assert.assertNotNull(unicodeEscaper19);
        org.junit.Assert.assertNotNull(unicodeEscaper21);
        org.junit.Assert.assertNotNull(unicodeEscaper23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "0" + "'", str31, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray32);
        org.junit.Assert.assertNotNull(charSequenceTranslator33);
        org.junit.Assert.assertNotNull(charSequenceTranslator34);
        org.junit.Assert.assertNotNull(charSequenceTranslator35);
        org.junit.Assert.assertNotNull(unicodeEscaper38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray48);
        org.junit.Assert.assertNotNull(charSequenceTranslator49);
        org.junit.Assert.assertNotNull(charSequenceTranslator50);
        org.junit.Assert.assertNotNull(charSequenceTranslator51);
        org.junit.Assert.assertNotNull(charSequenceTranslator52);
        org.junit.Assert.assertNotNull(charSequenceTranslator53);
        org.junit.Assert.assertNotNull(charSequenceTranslator54);
    }

    @Test
    public void test05113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05113");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper1 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (short) 0);
        java.lang.String str3 = unicodeEscaper1.translate((java.lang.CharSequence) "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        java.io.Writer writer6 = null;
        int int7 = unicodeEscaper1.translate((java.lang.CharSequence) "\\u005Cu\\u0030\\u0030\\u0036\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0032\\u0031", 0, writer6);
        java.io.Writer writer10 = null;
        int int11 = unicodeEscaper1.translate((java.lang.CharSequence) "\\\\u00750068\\\\u00750069\\\\u00750021", 1, writer10);
        java.io.Writer writer13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = unicodeEscaper1.translate((int) (byte) -1, writer13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str3, "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test05114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05114");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) 'a', 0);
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) (short) 1, writer4);
        java.io.Writer writer7 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate((java.lang.CharSequence) "java\\u002Eio\\u002EIOException:\\u0020java\\u002Eio\\u002EIOException:\\u0020java\\u\\u0030\\u0030\\u0032Eio\\u\\u0030\\u0030\\u0032E\\u\\u0030\\u0030\\u00349\\u\\u0030\\u0030\\u0034F\\u\\u0030\\u0030\\u00345xception\\u\\u0030\\u0030\\u0033A\\u\\u0030\\u0030\\u0032\\u0030java\\u\\u0030\\u0030\\u0032Eio\\u\\u0030\\u0030\\u0032E\\u\\u0030\\u0030\\u00349\\u\\u0030\\u0030\\u0034F\\u\\u0030\\u0030\\u00345xception", writer7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test05115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05115");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) '4', (int) (byte) 0);
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020\\u0030");
        java.io.Writer writer6 = null;
        boolean boolean7 = unicodeEscaper2.translate(0, writer6);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper10 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) -1, (int) (short) 100);
        java.lang.String str12 = unicodeEscaper10.translate((java.lang.CharSequence) "java.io.IOException: 64");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper15 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper17 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer19 = null;
        boolean boolean20 = unicodeEscaper17.translate((int) ' ', writer19);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper23 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str25 = unicodeEscaper23.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray26 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator27 = unicodeEscaper23.with(charSequenceTranslatorArray26);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator28 = unicodeEscaper17.with(charSequenceTranslatorArray26);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator29 = unicodeEscaper15.with(charSequenceTranslatorArray26);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper32 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer34 = null;
        boolean boolean35 = unicodeEscaper32.translate((int) (short) 10, writer34);
        java.lang.String str37 = unicodeEscaper32.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper40 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer42 = null;
        boolean boolean43 = unicodeEscaper40.translate((int) '4', writer42);
        java.io.Writer writer45 = null;
        boolean boolean46 = unicodeEscaper40.translate((int) (byte) -1, writer45);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper49 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper51 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper53 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str55 = unicodeEscaper53.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray56 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper49, unicodeEscaper51, unicodeEscaper53 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator57 = unicodeEscaper40.with(charSequenceTranslatorArray56);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator58 = unicodeEscaper32.with(charSequenceTranslatorArray56);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper61 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.lang.String str63 = unicodeEscaper61.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray64 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper61 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator65 = unicodeEscaper32.with(charSequenceTranslatorArray64);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator66 = unicodeEscaper15.with(charSequenceTranslatorArray64);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator67 = unicodeEscaper10.with(charSequenceTranslatorArray64);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator68 = unicodeEscaper2.with(charSequenceTranslatorArray64);
        java.lang.String str70 = charSequenceTranslator68.translate((java.lang.CharSequence) "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption");
        java.lang.Class<?> wildcardClass71 = charSequenceTranslator68.getClass();
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020\\u0030" + "'", str4, "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020\\u0030");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: 64" + "'", str12, "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: 64");
        org.junit.Assert.assertNotNull(unicodeEscaper15);
        org.junit.Assert.assertNotNull(unicodeEscaper17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "0" + "'", str25, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray26);
        org.junit.Assert.assertNotNull(charSequenceTranslator27);
        org.junit.Assert.assertNotNull(charSequenceTranslator28);
        org.junit.Assert.assertNotNull(charSequenceTranslator29);
        org.junit.Assert.assertNotNull(unicodeEscaper32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "0" + "'", str37, "0");
        org.junit.Assert.assertNotNull(unicodeEscaper40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper49);
        org.junit.Assert.assertNotNull(unicodeEscaper51);
        org.junit.Assert.assertNotNull(unicodeEscaper53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str55, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray56);
        org.junit.Assert.assertNotNull(charSequenceTranslator57);
        org.junit.Assert.assertNotNull(charSequenceTranslator58);
        org.junit.Assert.assertNotNull(unicodeEscaper61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str63, "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray64);
        org.junit.Assert.assertNotNull(charSequenceTranslator65);
        org.junit.Assert.assertNotNull(charSequenceTranslator66);
        org.junit.Assert.assertNotNull(charSequenceTranslator67);
        org.junit.Assert.assertNotNull(charSequenceTranslator68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption" + "'", str70, "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption");
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test05116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05116");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) ' ', (int) (short) 10);
        java.io.Writer writer5 = null;
        int int6 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (int) (byte) 1, writer5);
        java.lang.String str8 = unicodeEscaper2.translate((java.lang.CharSequence) "61");
        java.io.Writer writer10 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", writer10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "61" + "'", str8, "61");
    }

    @Test
    public void test05117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05117");
        java.io.IOException iOException3 = new java.io.IOException("");
        java.io.IOException iOException4 = new java.io.IOException("A", (java.lang.Throwable) iOException3);
        java.lang.Throwable[] throwableArray5 = iOException3.getSuppressed();
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException3);
        java.io.IOException iOException7 = new java.io.IOException("java.io.IOException: java.io.IOException: java.io.IOException", (java.lang.Throwable) iOException6);
        java.lang.Throwable[] throwableArray8 = iOException7.getSuppressed();
        java.io.IOException iOException9 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.io.IOException iOException15 = new java.io.IOException("");
        java.io.IOException iOException16 = new java.io.IOException((java.lang.Throwable) iOException15);
        java.io.IOException iOException18 = new java.io.IOException("");
        iOException16.addSuppressed((java.lang.Throwable) iOException18);
        java.io.IOException iOException20 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException18);
        java.io.IOException iOException21 = new java.io.IOException("java.io.IOException: \\u0068\\u0069\\u0021", (java.lang.Throwable) iOException18);
        java.io.IOException iOException22 = new java.io.IOException();
        java.io.IOException iOException23 = new java.io.IOException();
        iOException22.addSuppressed((java.lang.Throwable) iOException23);
        java.lang.Throwable[] throwableArray25 = iOException23.getSuppressed();
        java.lang.Throwable[] throwableArray26 = iOException23.getSuppressed();
        java.io.IOException iOException28 = new java.io.IOException();
        java.io.IOException iOException29 = new java.io.IOException();
        iOException28.addSuppressed((java.lang.Throwable) iOException29);
        java.io.IOException iOException31 = new java.io.IOException("0", (java.lang.Throwable) iOException28);
        java.io.IOException iOException32 = new java.io.IOException((java.lang.Throwable) iOException31);
        iOException23.addSuppressed((java.lang.Throwable) iOException32);
        java.lang.Throwable[] throwableArray34 = iOException23.getSuppressed();
        iOException18.addSuppressed((java.lang.Throwable) iOException23);
        java.io.IOException iOException36 = new java.io.IOException("\\\\u00750068\\\\u00750069\\\\u00750021", (java.lang.Throwable) iOException23);
        java.io.IOException iOException37 = new java.io.IOException((java.lang.Throwable) iOException36);
        java.io.IOException iOException38 = new java.io.IOException("java.io.IOException: 23", (java.lang.Throwable) iOException37);
        java.lang.Throwable[] throwableArray39 = iOException38.getSuppressed();
        java.io.IOException iOException42 = new java.io.IOException("");
        java.io.IOException iOException43 = new java.io.IOException("A", (java.lang.Throwable) iOException42);
        java.lang.Throwable[] throwableArray44 = iOException42.getSuppressed();
        java.io.IOException iOException45 = new java.io.IOException((java.lang.Throwable) iOException42);
        iOException38.addSuppressed((java.lang.Throwable) iOException42);
        iOException7.addSuppressed((java.lang.Throwable) iOException38);
        java.lang.String str48 = iOException38.toString();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "java.io.IOException: java.io.IOException: 23" + "'", str48, "java.io.IOException: java.io.IOException: 23");
    }

    @Test
    public void test05118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05118");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper1 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) (short) 10);
        java.io.Writer writer3 = null;
        boolean boolean4 = unicodeEscaper1.translate((int) (short) 10, writer3);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper7 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper10 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper13 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer15 = null;
        boolean boolean16 = unicodeEscaper13.translate((int) (short) 10, writer15);
        java.lang.String str18 = unicodeEscaper13.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper21 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer23 = null;
        boolean boolean24 = unicodeEscaper21.translate((int) '4', writer23);
        java.io.Writer writer26 = null;
        boolean boolean27 = unicodeEscaper21.translate((int) (byte) -1, writer26);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper30 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper32 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper34 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str36 = unicodeEscaper34.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray37 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper30, unicodeEscaper32, unicodeEscaper34 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator38 = unicodeEscaper21.with(charSequenceTranslatorArray37);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator39 = unicodeEscaper13.with(charSequenceTranslatorArray37);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator40 = unicodeEscaper10.with(charSequenceTranslatorArray37);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator41 = unicodeEscaper7.with(charSequenceTranslatorArray37);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper44 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) -1, (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper46 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper48 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer50 = null;
        boolean boolean51 = unicodeEscaper48.translate((int) ' ', writer50);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper54 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str56 = unicodeEscaper54.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray57 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator58 = unicodeEscaper54.with(charSequenceTranslatorArray57);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator59 = unicodeEscaper48.with(charSequenceTranslatorArray57);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator60 = unicodeEscaper46.with(charSequenceTranslatorArray57);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper63 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer65 = null;
        boolean boolean66 = unicodeEscaper63.translate((int) '4', writer65);
        java.io.Writer writer68 = null;
        boolean boolean69 = unicodeEscaper63.translate((int) (byte) -1, writer68);
        java.io.Writer writer71 = null;
        boolean boolean72 = unicodeEscaper63.translate((int) (byte) -1, writer71);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray73 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator74 = unicodeEscaper63.with(charSequenceTranslatorArray73);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator75 = charSequenceTranslator60.with(charSequenceTranslatorArray73);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator76 = unicodeEscaper44.with(charSequenceTranslatorArray73);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator77 = charSequenceTranslator41.with(charSequenceTranslatorArray73);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator78 = unicodeEscaper1.with(charSequenceTranslatorArray73);
        java.io.Writer writer81 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int82 = unicodeEscaper1.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (int) (byte) -1, writer81);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper7);
        org.junit.Assert.assertNotNull(unicodeEscaper10);
        org.junit.Assert.assertNotNull(unicodeEscaper13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "0" + "'", str18, "0");
        org.junit.Assert.assertNotNull(unicodeEscaper21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper30);
        org.junit.Assert.assertNotNull(unicodeEscaper32);
        org.junit.Assert.assertNotNull(unicodeEscaper34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str36, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray37);
        org.junit.Assert.assertNotNull(charSequenceTranslator38);
        org.junit.Assert.assertNotNull(charSequenceTranslator39);
        org.junit.Assert.assertNotNull(charSequenceTranslator40);
        org.junit.Assert.assertNotNull(charSequenceTranslator41);
        org.junit.Assert.assertNotNull(unicodeEscaper44);
        org.junit.Assert.assertNotNull(unicodeEscaper46);
        org.junit.Assert.assertNotNull(unicodeEscaper48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "0" + "'", str56, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray57);
        org.junit.Assert.assertNotNull(charSequenceTranslator58);
        org.junit.Assert.assertNotNull(charSequenceTranslator59);
        org.junit.Assert.assertNotNull(charSequenceTranslator60);
        org.junit.Assert.assertNotNull(unicodeEscaper63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray73);
        org.junit.Assert.assertNotNull(charSequenceTranslator74);
        org.junit.Assert.assertNotNull(charSequenceTranslator75);
        org.junit.Assert.assertNotNull(charSequenceTranslator76);
        org.junit.Assert.assertNotNull(charSequenceTranslator77);
        org.junit.Assert.assertNotNull(charSequenceTranslator78);
    }

    @Test
    public void test05119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05119");
        java.io.IOException iOException6 = new java.io.IOException();
        java.io.IOException iOException7 = new java.io.IOException();
        iOException6.addSuppressed((java.lang.Throwable) iOException7);
        java.io.IOException iOException9 = new java.io.IOException();
        java.io.IOException iOException10 = new java.io.IOException();
        iOException9.addSuppressed((java.lang.Throwable) iOException10);
        java.lang.Throwable[] throwableArray12 = iOException10.getSuppressed();
        java.io.IOException iOException13 = new java.io.IOException((java.lang.Throwable) iOException10);
        java.io.IOException iOException15 = new java.io.IOException("");
        java.io.IOException iOException16 = new java.io.IOException((java.lang.Throwable) iOException15);
        iOException10.addSuppressed((java.lang.Throwable) iOException16);
        iOException7.addSuppressed((java.lang.Throwable) iOException16);
        java.io.IOException iOException19 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException16);
        java.io.IOException iOException20 = new java.io.IOException("64", (java.lang.Throwable) iOException19);
        java.io.IOException iOException21 = new java.io.IOException("java.io.IOException: java.io.IOException: ", (java.lang.Throwable) iOException20);
        java.io.IOException iOException22 = new java.io.IOException("\\u0036\\u0034", (java.lang.Throwable) iOException20);
        java.io.IOException iOException23 = new java.io.IOException((java.lang.Throwable) iOException20);
        java.io.IOException iOException24 = new java.io.IOException("java.io.IOException: java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception", (java.lang.Throwable) iOException20);
        java.io.IOException iOException25 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException20);
        java.io.IOException iOException26 = new java.io.IOException();
        java.io.IOException iOException27 = new java.io.IOException();
        iOException26.addSuppressed((java.lang.Throwable) iOException27);
        java.io.IOException iOException31 = new java.io.IOException("");
        java.io.IOException iOException32 = new java.io.IOException((java.lang.Throwable) iOException31);
        java.io.IOException iOException34 = new java.io.IOException("");
        iOException32.addSuppressed((java.lang.Throwable) iOException34);
        java.io.IOException iOException36 = new java.io.IOException("java.io.IOException: 0", (java.lang.Throwable) iOException34);
        iOException27.addSuppressed((java.lang.Throwable) iOException34);
        java.io.IOException iOException38 = new java.io.IOException((java.lang.Throwable) iOException27);
        java.io.IOException iOException39 = new java.io.IOException();
        java.io.IOException iOException40 = new java.io.IOException();
        iOException39.addSuppressed((java.lang.Throwable) iOException40);
        iOException27.addSuppressed((java.lang.Throwable) iOException39);
        iOException20.addSuppressed((java.lang.Throwable) iOException27);
        java.lang.String str44 = iOException27.toString();
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "java.io.IOException" + "'", str44, "java.io.IOException");
    }

    @Test
    public void test05120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05120");
        java.io.IOException iOException1 = new java.io.IOException("\\\\u0075005C\\\\u0075007500\\\\u00750035\\\\u00750043\\\\u00750075\\\\u0075005C\\\\u007500750030\\\\u0075005C\\\\u007500750030\\\\u0075005C\\\\u007500750033\\\\u0075005C\\\\u007500750030");
        java.io.IOException iOException2 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.io.IOException iOException4 = new java.io.IOException("hi!");
        java.lang.Throwable[] throwableArray5 = iOException4.getSuppressed();
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException11 = new java.io.IOException("");
        java.io.IOException iOException12 = new java.io.IOException((java.lang.Throwable) iOException11);
        java.io.IOException iOException13 = new java.io.IOException((java.lang.Throwable) iOException12);
        java.io.IOException iOException14 = new java.io.IOException("23", (java.lang.Throwable) iOException12);
        java.io.IOException iOException17 = new java.io.IOException("0");
        java.io.IOException iOException18 = new java.io.IOException();
        java.io.IOException iOException19 = new java.io.IOException();
        iOException18.addSuppressed((java.lang.Throwable) iOException19);
        java.io.IOException iOException21 = new java.io.IOException();
        java.io.IOException iOException22 = new java.io.IOException();
        iOException21.addSuppressed((java.lang.Throwable) iOException22);
        java.lang.Throwable[] throwableArray24 = iOException22.getSuppressed();
        java.io.IOException iOException25 = new java.io.IOException((java.lang.Throwable) iOException22);
        java.io.IOException iOException27 = new java.io.IOException("");
        java.io.IOException iOException28 = new java.io.IOException((java.lang.Throwable) iOException27);
        iOException22.addSuppressed((java.lang.Throwable) iOException28);
        iOException19.addSuppressed((java.lang.Throwable) iOException28);
        iOException17.addSuppressed((java.lang.Throwable) iOException28);
        java.io.IOException iOException32 = new java.io.IOException("61", (java.lang.Throwable) iOException28);
        iOException12.addSuppressed((java.lang.Throwable) iOException28);
        java.io.IOException iOException34 = new java.io.IOException("java.io.IOException: 0", (java.lang.Throwable) iOException12);
        iOException6.addSuppressed((java.lang.Throwable) iOException34);
        java.lang.Throwable[] throwableArray36 = iOException34.getSuppressed();
        iOException2.addSuppressed((java.lang.Throwable) iOException34);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray36);
    }

    @Test
    public void test05121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05121");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper1 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer4 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int5 = unicodeEscaper1.translate((java.lang.CharSequence) "\\\\\\u00750075006A\\\\\\u007500750061\\\\\\u007500750076\\\\\\u007500750061\\\\\\u00750075002E\\\\\\u007500750069\\\\\\u00750075006F\\\\\\u00750075002E\\\\\\u007500750049\\\\\\u00750075004F\\\\\\u007500750045\\\\\\u007500750078\\\\\\u007500750063\\\\\\u007500750065\\\\\\u007500750070\\\\\\u007500750074\\\\\\u007500750069\\\\\\u00750075006F\\\\\\u00750075006E\\\\\\u00750075003A\\\\\\u007500750020", (int) (byte) -1, writer4);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper1);
    }

    @Test
    public void test05122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05122");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) ' ', 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (short) 100, (int) (byte) 10);
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper5.translate((int) (byte) 0, writer7);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper10 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) (short) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper13 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '#', 100);
        java.lang.String str15 = unicodeEscaper13.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper18 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) '4', (int) (short) 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper21 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper24 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', (int) (short) 0);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray25 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper24 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator26 = unicodeEscaper21.with(charSequenceTranslatorArray25);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator27 = unicodeEscaper18.with(charSequenceTranslatorArray25);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator28 = unicodeEscaper13.with(charSequenceTranslatorArray25);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator29 = unicodeEscaper10.with(charSequenceTranslatorArray25);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper32 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper35 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer37 = null;
        boolean boolean38 = unicodeEscaper35.translate((int) '4', writer37);
        java.io.Writer writer40 = null;
        boolean boolean41 = unicodeEscaper35.translate((int) (byte) -1, writer40);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper44 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper46 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper48 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str50 = unicodeEscaper48.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray51 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper44, unicodeEscaper46, unicodeEscaper48 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator52 = unicodeEscaper35.with(charSequenceTranslatorArray51);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator53 = unicodeEscaper32.with(charSequenceTranslatorArray51);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator54 = unicodeEscaper10.with(charSequenceTranslatorArray51);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator55 = unicodeEscaper5.with(charSequenceTranslatorArray51);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator56 = unicodeEscaper2.with(charSequenceTranslatorArray51);
        java.io.Writer writer58 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean59 = unicodeEscaper2.translate((int) ' ', writer58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper10);
        org.junit.Assert.assertNotNull(unicodeEscaper13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str15, "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertNotNull(unicodeEscaper18);
        org.junit.Assert.assertNotNull(unicodeEscaper21);
        org.junit.Assert.assertNotNull(unicodeEscaper24);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray25);
        org.junit.Assert.assertNotNull(charSequenceTranslator26);
        org.junit.Assert.assertNotNull(charSequenceTranslator27);
        org.junit.Assert.assertNotNull(charSequenceTranslator28);
        org.junit.Assert.assertNotNull(charSequenceTranslator29);
        org.junit.Assert.assertNotNull(unicodeEscaper32);
        org.junit.Assert.assertNotNull(unicodeEscaper35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper44);
        org.junit.Assert.assertNotNull(unicodeEscaper46);
        org.junit.Assert.assertNotNull(unicodeEscaper48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str50, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray51);
        org.junit.Assert.assertNotNull(charSequenceTranslator52);
        org.junit.Assert.assertNotNull(charSequenceTranslator53);
        org.junit.Assert.assertNotNull(charSequenceTranslator54);
        org.junit.Assert.assertNotNull(charSequenceTranslator55);
        org.junit.Assert.assertNotNull(charSequenceTranslator56);
    }

    @Test
    public void test05123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05123");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (short) 1, (int) ' ');
        java.io.Writer writer4 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate((java.lang.CharSequence) "\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0035\\u005C\\u0075\\u0030\\u0030\\u0034\\u0033\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0030", writer4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
    }

    @Test
    public void test05124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05124");
        java.io.IOException iOException4 = new java.io.IOException();
        java.io.IOException iOException5 = new java.io.IOException();
        iOException4.addSuppressed((java.lang.Throwable) iOException5);
        java.io.IOException iOException7 = new java.io.IOException("0", (java.lang.Throwable) iOException4);
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.io.IOException iOException9 = new java.io.IOException((java.lang.Throwable) iOException8);
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException9);
        java.lang.Throwable[] throwableArray11 = iOException10.getSuppressed();
        java.io.IOException iOException12 = new java.io.IOException("java.io.IOException: java.io.IOException", (java.lang.Throwable) iOException10);
        java.io.IOException iOException13 = new java.io.IOException((java.lang.Throwable) iOException12);
        java.io.IOException iOException17 = new java.io.IOException("0");
        java.lang.Throwable[] throwableArray18 = iOException17.getSuppressed();
        java.io.IOException iOException19 = new java.io.IOException("hi!", (java.lang.Throwable) iOException17);
        java.io.IOException iOException20 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException17);
        iOException12.addSuppressed((java.lang.Throwable) iOException20);
        java.io.IOException iOException22 = new java.io.IOException("\\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\u0063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E: \\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\u0063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E", (java.lang.Throwable) iOException20);
        java.io.IOException iOException23 = new java.io.IOException("\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\\\u00750068\\\\u00750069\\\\u00750021", (java.lang.Throwable) iOException22);
        java.io.IOException iOException26 = new java.io.IOException();
        java.io.IOException iOException27 = new java.io.IOException();
        iOException26.addSuppressed((java.lang.Throwable) iOException27);
        java.io.IOException iOException29 = new java.io.IOException("0", (java.lang.Throwable) iOException26);
        java.io.IOException iOException30 = new java.io.IOException((java.lang.Throwable) iOException29);
        java.io.IOException iOException31 = new java.io.IOException((java.lang.Throwable) iOException29);
        java.io.IOException iOException32 = new java.io.IOException("java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030", (java.lang.Throwable) iOException31);
        iOException23.addSuppressed((java.lang.Throwable) iOException32);
        java.io.IOException iOException37 = new java.io.IOException("0");
        java.lang.Throwable[] throwableArray38 = iOException37.getSuppressed();
        java.io.IOException iOException39 = new java.io.IOException("hi!", (java.lang.Throwable) iOException37);
        java.io.IOException iOException41 = new java.io.IOException("");
        java.io.IOException iOException42 = new java.io.IOException((java.lang.Throwable) iOException41);
        java.io.IOException iOException44 = new java.io.IOException("");
        iOException42.addSuppressed((java.lang.Throwable) iOException44);
        java.io.IOException iOException47 = new java.io.IOException("");
        java.io.IOException iOException48 = new java.io.IOException((java.lang.Throwable) iOException47);
        java.io.IOException iOException50 = new java.io.IOException("");
        iOException48.addSuppressed((java.lang.Throwable) iOException50);
        iOException42.addSuppressed((java.lang.Throwable) iOException48);
        iOException39.addSuppressed((java.lang.Throwable) iOException42);
        java.io.IOException iOException54 = new java.io.IOException("hi!", (java.lang.Throwable) iOException42);
        java.lang.Throwable throwable57 = null;
        java.io.IOException iOException58 = new java.io.IOException("java.io.IOException: \\u0068\\u0069\\u0021", throwable57);
        java.io.IOException iOException59 = new java.io.IOException("\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException58);
        iOException54.addSuppressed((java.lang.Throwable) iOException59);
        java.io.IOException iOException61 = new java.io.IOException((java.lang.Throwable) iOException54);
        java.io.IOException iOException63 = new java.io.IOException("java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        iOException61.addSuppressed((java.lang.Throwable) iOException63);
        iOException32.addSuppressed((java.lang.Throwable) iOException61);
        java.lang.Class<?> wildcardClass66 = iOException32.getClass();
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test05125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05125");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) 'a');
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) '4', writer4);
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper2.translate((int) '#', writer7);
        java.io.Writer writer11 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int12 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: java.io.IOException: \\u0068\\u0069\\u0021", (int) '#', writer11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test05126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05126");
        java.io.IOException iOException2 = new java.io.IOException("");
        java.io.IOException iOException3 = new java.io.IOException("A", (java.lang.Throwable) iOException2);
        java.io.IOException iOException4 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException6 = new java.io.IOException();
        java.io.IOException iOException7 = new java.io.IOException();
        iOException6.addSuppressed((java.lang.Throwable) iOException7);
        java.lang.Throwable[] throwableArray9 = iOException7.getSuppressed();
        java.lang.Throwable[] throwableArray10 = iOException7.getSuppressed();
        java.io.IOException iOException11 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException7);
        java.io.IOException iOException12 = new java.io.IOException();
        java.io.IOException iOException13 = new java.io.IOException();
        iOException12.addSuppressed((java.lang.Throwable) iOException13);
        java.io.IOException iOException15 = new java.io.IOException((java.lang.Throwable) iOException12);
        java.lang.Throwable[] throwableArray16 = iOException15.getSuppressed();
        iOException11.addSuppressed((java.lang.Throwable) iOException15);
        iOException2.addSuppressed((java.lang.Throwable) iOException15);
        java.io.IOException iOException21 = new java.io.IOException("");
        java.io.IOException iOException22 = new java.io.IOException((java.lang.Throwable) iOException21);
        java.io.IOException iOException23 = new java.io.IOException((java.lang.Throwable) iOException22);
        java.io.IOException iOException24 = new java.io.IOException("23", (java.lang.Throwable) iOException22);
        java.io.IOException iOException27 = new java.io.IOException("0");
        java.io.IOException iOException28 = new java.io.IOException();
        java.io.IOException iOException29 = new java.io.IOException();
        iOException28.addSuppressed((java.lang.Throwable) iOException29);
        java.io.IOException iOException31 = new java.io.IOException();
        java.io.IOException iOException32 = new java.io.IOException();
        iOException31.addSuppressed((java.lang.Throwable) iOException32);
        java.lang.Throwable[] throwableArray34 = iOException32.getSuppressed();
        java.io.IOException iOException35 = new java.io.IOException((java.lang.Throwable) iOException32);
        java.io.IOException iOException37 = new java.io.IOException("");
        java.io.IOException iOException38 = new java.io.IOException((java.lang.Throwable) iOException37);
        iOException32.addSuppressed((java.lang.Throwable) iOException38);
        iOException29.addSuppressed((java.lang.Throwable) iOException38);
        iOException27.addSuppressed((java.lang.Throwable) iOException38);
        java.io.IOException iOException42 = new java.io.IOException("61", (java.lang.Throwable) iOException38);
        iOException22.addSuppressed((java.lang.Throwable) iOException38);
        java.lang.Throwable[] throwableArray44 = iOException38.getSuppressed();
        iOException2.addSuppressed((java.lang.Throwable) iOException38);
        java.io.IOException iOException46 = new java.io.IOException((java.lang.Throwable) iOException38);
        java.lang.Throwable[] throwableArray47 = iOException38.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray47);
    }

    @Test
    public void test05127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05127");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (byte) -1, 10);
        java.lang.CharSequence charSequence3 = null;
        java.lang.String str4 = unicodeEscaper2.translate(charSequence3);
        java.io.Writer writer7 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int8 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (int) 'a', writer7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test05128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05128");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (short) 100, (int) (short) 10);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper4 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (short) 10);
        java.lang.String str6 = unicodeEscaper4.translate((java.lang.CharSequence) "java.io.IOException: 64");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper9 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) -1, (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper11 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper13 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer15 = null;
        boolean boolean16 = unicodeEscaper13.translate((int) ' ', writer15);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper19 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str21 = unicodeEscaper19.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray22 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator23 = unicodeEscaper19.with(charSequenceTranslatorArray22);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator24 = unicodeEscaper13.with(charSequenceTranslatorArray22);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator25 = unicodeEscaper11.with(charSequenceTranslatorArray22);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper28 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer30 = null;
        boolean boolean31 = unicodeEscaper28.translate((int) '4', writer30);
        java.io.Writer writer33 = null;
        boolean boolean34 = unicodeEscaper28.translate((int) (byte) -1, writer33);
        java.io.Writer writer36 = null;
        boolean boolean37 = unicodeEscaper28.translate((int) (byte) -1, writer36);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray38 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator39 = unicodeEscaper28.with(charSequenceTranslatorArray38);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator40 = charSequenceTranslator25.with(charSequenceTranslatorArray38);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator41 = unicodeEscaper9.with(charSequenceTranslatorArray38);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper44 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer46 = null;
        boolean boolean47 = unicodeEscaper44.translate((int) '4', writer46);
        java.io.Writer writer49 = null;
        boolean boolean50 = unicodeEscaper44.translate((int) (byte) -1, writer49);
        java.io.Writer writer52 = null;
        boolean boolean53 = unicodeEscaper44.translate(0, writer52);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper55 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper57 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer59 = null;
        boolean boolean60 = unicodeEscaper57.translate((int) ' ', writer59);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper63 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str65 = unicodeEscaper63.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray66 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator67 = unicodeEscaper63.with(charSequenceTranslatorArray66);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator68 = unicodeEscaper57.with(charSequenceTranslatorArray66);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator69 = unicodeEscaper55.with(charSequenceTranslatorArray66);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper72 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer74 = null;
        boolean boolean75 = unicodeEscaper72.translate((int) '4', writer74);
        java.io.Writer writer77 = null;
        boolean boolean78 = unicodeEscaper72.translate((int) (byte) -1, writer77);
        java.io.Writer writer80 = null;
        boolean boolean81 = unicodeEscaper72.translate((int) (byte) -1, writer80);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray82 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator83 = unicodeEscaper72.with(charSequenceTranslatorArray82);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator84 = charSequenceTranslator69.with(charSequenceTranslatorArray82);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator85 = unicodeEscaper44.with(charSequenceTranslatorArray82);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator86 = unicodeEscaper9.with(charSequenceTranslatorArray82);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator87 = unicodeEscaper4.with(charSequenceTranslatorArray82);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator88 = unicodeEscaper2.with(charSequenceTranslatorArray82);
        java.io.Writer writer90 = null;
        boolean boolean91 = unicodeEscaper2.translate((int) (byte) 1, writer90);
        java.io.Writer writer94 = null;
        int int95 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: 0", (int) (byte) 1, writer94);
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "java.io.IOException: 64" + "'", str6, "java.io.IOException: 64");
        org.junit.Assert.assertNotNull(unicodeEscaper9);
        org.junit.Assert.assertNotNull(unicodeEscaper11);
        org.junit.Assert.assertNotNull(unicodeEscaper13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "0" + "'", str21, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray22);
        org.junit.Assert.assertNotNull(charSequenceTranslator23);
        org.junit.Assert.assertNotNull(charSequenceTranslator24);
        org.junit.Assert.assertNotNull(charSequenceTranslator25);
        org.junit.Assert.assertNotNull(unicodeEscaper28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray38);
        org.junit.Assert.assertNotNull(charSequenceTranslator39);
        org.junit.Assert.assertNotNull(charSequenceTranslator40);
        org.junit.Assert.assertNotNull(charSequenceTranslator41);
        org.junit.Assert.assertNotNull(unicodeEscaper44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper55);
        org.junit.Assert.assertNotNull(unicodeEscaper57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper63);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "0" + "'", str65, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray66);
        org.junit.Assert.assertNotNull(charSequenceTranslator67);
        org.junit.Assert.assertNotNull(charSequenceTranslator68);
        org.junit.Assert.assertNotNull(charSequenceTranslator69);
        org.junit.Assert.assertNotNull(unicodeEscaper72);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray82);
        org.junit.Assert.assertNotNull(charSequenceTranslator83);
        org.junit.Assert.assertNotNull(charSequenceTranslator84);
        org.junit.Assert.assertNotNull(charSequenceTranslator85);
        org.junit.Assert.assertNotNull(charSequenceTranslator86);
        org.junit.Assert.assertNotNull(charSequenceTranslator87);
        org.junit.Assert.assertNotNull(charSequenceTranslator88);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 0 + "'", int95 == 0);
    }

    @Test
    public void test05129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05129");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (-1));
        java.io.Writer writer4 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate((java.lang.CharSequence) "\\u005Cu\\u0030\\u0030\\u0036\\u0041\\u005Cu\\u0030\\u0030\\u0036\\u0031\\u005Cu\\u0030\\u0030\\u0037\\u0036\\u005Cu\\u0030\\u0030\\u0036\\u0031\\u005Cu\\u0030\\u0030\\u0032\\u0045\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0036\\u0046\\u005Cu\\u0030\\u0030\\u0032\\u0045\\u005Cu\\u0030\\u0030\\u0034\\u0039\\u005Cu\\u0030\\u0030\\u0034\\u0046\\u005Cu\\u0030\\u0030\\u0034\\u0035\\u005Cu\\u0030\\u0030\\u0037\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0033\\u005Cu\\u0030\\u0030\\u0036\\u0035\\u005Cu\\u0030\\u0030\\u0037\\u0030\\u005Cu\\u0030\\u0030\\u0037\\u0034\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0036\\u0046\\u005Cu\\u0030\\u0030\\u0036\\u0045\\u005Cu\\u0030\\u0030\\u0033\\u0041\\u005Cu\\u0030\\u0030\\u0032\\u0030\\u005Cu\\u0030\\u0030\\u0033\\u0030", writer4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
    }

    @Test
    public void test05130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05130");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between(100, (int) (short) 10);
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate(10, writer4);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper8 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) ' ', (int) '4');
        java.io.Writer writer10 = null;
        boolean boolean11 = unicodeEscaper8.translate(0, writer10);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper14 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between(10, (int) (byte) 10);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper16 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer18 = null;
        boolean boolean19 = unicodeEscaper16.translate((int) ' ', writer18);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper22 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str24 = unicodeEscaper22.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray25 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator26 = unicodeEscaper22.with(charSequenceTranslatorArray25);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator27 = unicodeEscaper16.with(charSequenceTranslatorArray25);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator28 = unicodeEscaper14.with(charSequenceTranslatorArray25);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator29 = unicodeEscaper8.with(charSequenceTranslatorArray25);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper32 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (byte) 1, (int) ' ');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper35 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper37 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer39 = null;
        boolean boolean40 = unicodeEscaper37.translate((int) ' ', writer39);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper43 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str45 = unicodeEscaper43.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray46 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator47 = unicodeEscaper43.with(charSequenceTranslatorArray46);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator48 = unicodeEscaper37.with(charSequenceTranslatorArray46);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator49 = unicodeEscaper35.with(charSequenceTranslatorArray46);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator50 = unicodeEscaper32.with(charSequenceTranslatorArray46);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator51 = unicodeEscaper8.with(charSequenceTranslatorArray46);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator52 = unicodeEscaper2.with(charSequenceTranslatorArray46);
        java.io.Writer writer55 = null;
        int int56 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u\\u0030\\u00306A\\u\\u0030\\u00306\\u0031\\u\\u0030\\u003076\\u\\u0030\\u00306\\u0031\\u\\u0030\\u0030\\u0032E\\u\\u0030\\u003069\\u\\u0030\\u00306F\\u\\u0030\\u0030\\u0032E\\u\\u0030\\u0030\\u00349\\u\\u0030\\u0030\\u0034F\\u\\u0030\\u0030\\u00345\\u\\u0030\\u003078\\u\\u0030\\u00306\\u0033\\u\\u0030\\u003065\\u\\u0030\\u00307\\u0030\\u\\u0030\\u00307\\u0034\\u\\u0030\\u003069\\u\\u0030\\u00306F\\u\\u0030\\u00306E\\u\\u0030\\u0030\\u0033A\\u\\u0030\\u0030\\u0032\\u0030\\u\\u0030\\u003068\\u\\u0030\\u003069\\u\\u0030\\u0030\\u0032\\u0031", (int) ' ', writer55);
        java.lang.CharSequence charSequence57 = null;
        java.io.Writer writer58 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate(charSequence57, writer58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper14);
        org.junit.Assert.assertNotNull(unicodeEscaper16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "0" + "'", str24, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray25);
        org.junit.Assert.assertNotNull(charSequenceTranslator26);
        org.junit.Assert.assertNotNull(charSequenceTranslator27);
        org.junit.Assert.assertNotNull(charSequenceTranslator28);
        org.junit.Assert.assertNotNull(charSequenceTranslator29);
        org.junit.Assert.assertNotNull(unicodeEscaper32);
        org.junit.Assert.assertNotNull(unicodeEscaper35);
        org.junit.Assert.assertNotNull(unicodeEscaper37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "0" + "'", str45, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray46);
        org.junit.Assert.assertNotNull(charSequenceTranslator47);
        org.junit.Assert.assertNotNull(charSequenceTranslator48);
        org.junit.Assert.assertNotNull(charSequenceTranslator49);
        org.junit.Assert.assertNotNull(charSequenceTranslator50);
        org.junit.Assert.assertNotNull(charSequenceTranslator51);
        org.junit.Assert.assertNotNull(charSequenceTranslator52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
    }

    @Test
    public void test05131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05131");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 100, (-1));
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper5.translate((int) (short) 10, writer7);
        java.io.Writer writer11 = null;
        int int12 = unicodeEscaper5.translate((java.lang.CharSequence) "0", (int) (byte) 0, writer11);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper15 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) 'a', (int) '4');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper18 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str20 = unicodeEscaper18.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray21 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator22 = unicodeEscaper18.with(charSequenceTranslatorArray21);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator23 = unicodeEscaper15.with(charSequenceTranslatorArray21);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator24 = unicodeEscaper5.with(charSequenceTranslatorArray21);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper27 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, 10);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper30 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper32 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer34 = null;
        boolean boolean35 = unicodeEscaper32.translate((int) ' ', writer34);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper38 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str40 = unicodeEscaper38.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray41 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator42 = unicodeEscaper38.with(charSequenceTranslatorArray41);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator43 = unicodeEscaper32.with(charSequenceTranslatorArray41);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator44 = unicodeEscaper30.with(charSequenceTranslatorArray41);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator45 = unicodeEscaper27.with(charSequenceTranslatorArray41);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator46 = charSequenceTranslator24.with(charSequenceTranslatorArray41);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator47 = unicodeEscaper2.with(charSequenceTranslatorArray41);
        java.io.Writer writer50 = null;
        int int51 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException:\\u0020java.io.IOException:\\u0020java.io.IOException:\\u0020java.io.IOException:\\u0020java.io.IOException:\\u00200", 1, writer50);
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(unicodeEscaper15);
        org.junit.Assert.assertNotNull(unicodeEscaper18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "0" + "'", str20, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray21);
        org.junit.Assert.assertNotNull(charSequenceTranslator22);
        org.junit.Assert.assertNotNull(charSequenceTranslator23);
        org.junit.Assert.assertNotNull(charSequenceTranslator24);
        org.junit.Assert.assertNotNull(unicodeEscaper27);
        org.junit.Assert.assertNotNull(unicodeEscaper30);
        org.junit.Assert.assertNotNull(unicodeEscaper32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "0" + "'", str40, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray41);
        org.junit.Assert.assertNotNull(charSequenceTranslator42);
        org.junit.Assert.assertNotNull(charSequenceTranslator43);
        org.junit.Assert.assertNotNull(charSequenceTranslator44);
        org.junit.Assert.assertNotNull(charSequenceTranslator45);
        org.junit.Assert.assertNotNull(charSequenceTranslator46);
        org.junit.Assert.assertNotNull(charSequenceTranslator47);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
    }

    @Test
    public void test05132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05132");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper1 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) '#');
        java.lang.String str3 = unicodeEscaper1.translate((java.lang.CharSequence) "1");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper6 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between(100, (int) (short) 100);
        java.io.Writer writer9 = null;
        int int10 = unicodeEscaper6.translate((java.lang.CharSequence) "\\u005C\\u0075\\u0030\\u0030\\u0036\\u0041\\u0061\\u005C\\u0075\\u0030\\u0030\\u0037\\u0036\\u0061\\u002E\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u005C\\u0075\\u0030\\u0030\\u0036\\u0046\\u002E\\u0049\\u004F\\u0045\\u005C\\u0075\\u0030\\u0030\\u0037\\u0038\\u0063\\u005C\\u0075\\u0030\\u0030\\u0036\\u0035\\u005C\\u0075\\u0030\\u0030\\u0037\\u0030\\u005C\\u0075\\u0030\\u0030\\u0037\\u0034\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u005C\\u0075\\u0030\\u0030\\u0036\\u0046\\u005C\\u0075\\u0030\\u0030\\u0036\\u0045\\u003A\\u0020\\u0036\\u0034", (int) (byte) 10, writer9);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper13 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (short) -1, (int) (byte) 10);
        java.lang.String str15 = unicodeEscaper13.translate((java.lang.CharSequence) "\\\\\\u00750075006A\\\\\\u007500750061\\\\\\u007500750076\\\\\\u007500750061\\\\\\u00750075002E\\\\\\u007500750069\\\\\\u00750075006F\\\\\\u00750075002E\\\\\\u007500750049\\\\\\u00750075004F\\\\\\u007500750045\\\\\\u007500750078\\\\\\u007500750063\\\\\\u007500750065\\\\\\u007500750070\\\\\\u007500750074\\\\\\u007500750069\\\\\\u00750075006F\\\\\\u00750075006E\\\\\\u00750075003A\\\\\\u007500750020");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper18 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper21 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer23 = null;
        boolean boolean24 = unicodeEscaper21.translate((int) (short) 10, writer23);
        java.lang.String str26 = unicodeEscaper21.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper29 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer31 = null;
        boolean boolean32 = unicodeEscaper29.translate((int) '4', writer31);
        java.io.Writer writer34 = null;
        boolean boolean35 = unicodeEscaper29.translate((int) (byte) -1, writer34);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper38 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper40 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper42 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str44 = unicodeEscaper42.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray45 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper38, unicodeEscaper40, unicodeEscaper42 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator46 = unicodeEscaper29.with(charSequenceTranslatorArray45);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator47 = unicodeEscaper21.with(charSequenceTranslatorArray45);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator48 = unicodeEscaper18.with(charSequenceTranslatorArray45);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator49 = unicodeEscaper13.with(charSequenceTranslatorArray45);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator50 = unicodeEscaper6.with(charSequenceTranslatorArray45);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator51 = unicodeEscaper1.with(charSequenceTranslatorArray45);
        java.io.Writer writer54 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int55 = unicodeEscaper1.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: java.io.IOException: ", (int) (short) 100, writer54);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "1" + "'", str3, "1");
        org.junit.Assert.assertNotNull(unicodeEscaper6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(unicodeEscaper13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\\\\\\u00750075006A\\\\\\u007500750061\\\\\\u007500750076\\\\\\u007500750061\\\\\\u00750075002E\\\\\\u007500750069\\\\\\u00750075006F\\\\\\u00750075002E\\\\\\u007500750049\\\\\\u00750075004F\\\\\\u007500750045\\\\\\u007500750078\\\\\\u007500750063\\\\\\u007500750065\\\\\\u007500750070\\\\\\u007500750074\\\\\\u007500750069\\\\\\u00750075006F\\\\\\u00750075006E\\\\\\u00750075003A\\\\\\u007500750020" + "'", str15, "\\\\\\u00750075006A\\\\\\u007500750061\\\\\\u007500750076\\\\\\u007500750061\\\\\\u00750075002E\\\\\\u007500750069\\\\\\u00750075006F\\\\\\u00750075002E\\\\\\u007500750049\\\\\\u00750075004F\\\\\\u007500750045\\\\\\u007500750078\\\\\\u007500750063\\\\\\u007500750065\\\\\\u007500750070\\\\\\u007500750074\\\\\\u007500750069\\\\\\u00750075006F\\\\\\u00750075006E\\\\\\u00750075003A\\\\\\u007500750020");
        org.junit.Assert.assertNotNull(unicodeEscaper18);
        org.junit.Assert.assertNotNull(unicodeEscaper21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "0" + "'", str26, "0");
        org.junit.Assert.assertNotNull(unicodeEscaper29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper38);
        org.junit.Assert.assertNotNull(unicodeEscaper40);
        org.junit.Assert.assertNotNull(unicodeEscaper42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str44, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray45);
        org.junit.Assert.assertNotNull(charSequenceTranslator46);
        org.junit.Assert.assertNotNull(charSequenceTranslator47);
        org.junit.Assert.assertNotNull(charSequenceTranslator48);
        org.junit.Assert.assertNotNull(charSequenceTranslator49);
        org.junit.Assert.assertNotNull(charSequenceTranslator50);
        org.junit.Assert.assertNotNull(charSequenceTranslator51);
    }

    @Test
    public void test05133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05133");
        java.io.IOException iOException3 = new java.io.IOException();
        java.io.IOException iOException4 = new java.io.IOException();
        iOException3.addSuppressed((java.lang.Throwable) iOException4);
        java.io.IOException iOException6 = new java.io.IOException("0", (java.lang.Throwable) iOException3);
        java.lang.Throwable[] throwableArray7 = iOException6.getSuppressed();
        java.io.IOException iOException8 = new java.io.IOException("", (java.lang.Throwable) iOException6);
        java.io.IOException iOException9 = new java.io.IOException("java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException", (java.lang.Throwable) iOException8);
        java.lang.Throwable[] throwableArray10 = iOException8.getSuppressed();
        java.lang.Throwable[] throwableArray11 = iOException8.getSuppressed();
        java.io.IOException iOException12 = new java.io.IOException();
        java.io.IOException iOException13 = new java.io.IOException();
        iOException12.addSuppressed((java.lang.Throwable) iOException13);
        java.lang.Throwable[] throwableArray15 = iOException13.getSuppressed();
        java.lang.Throwable[] throwableArray16 = iOException13.getSuppressed();
        java.io.IOException iOException18 = new java.io.IOException();
        java.io.IOException iOException19 = new java.io.IOException();
        iOException18.addSuppressed((java.lang.Throwable) iOException19);
        java.io.IOException iOException21 = new java.io.IOException("0", (java.lang.Throwable) iOException18);
        java.io.IOException iOException22 = new java.io.IOException((java.lang.Throwable) iOException21);
        iOException13.addSuppressed((java.lang.Throwable) iOException22);
        java.io.IOException iOException25 = new java.io.IOException();
        java.io.IOException iOException26 = new java.io.IOException();
        iOException25.addSuppressed((java.lang.Throwable) iOException26);
        java.lang.Throwable[] throwableArray28 = iOException26.getSuppressed();
        java.io.IOException iOException29 = new java.io.IOException((java.lang.Throwable) iOException26);
        java.io.IOException iOException31 = new java.io.IOException("");
        java.io.IOException iOException32 = new java.io.IOException((java.lang.Throwable) iOException31);
        iOException26.addSuppressed((java.lang.Throwable) iOException32);
        java.lang.Throwable[] throwableArray34 = iOException26.getSuppressed();
        java.io.IOException iOException35 = new java.io.IOException("\\u0068\\u0069\\u0021", (java.lang.Throwable) iOException26);
        iOException22.addSuppressed((java.lang.Throwable) iOException35);
        java.io.IOException iOException37 = new java.io.IOException((java.lang.Throwable) iOException35);
        iOException8.addSuppressed((java.lang.Throwable) iOException37);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray34);
    }

    @Test
    public void test05134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05134");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper5.translate((int) '4', writer7);
        java.io.Writer writer10 = null;
        boolean boolean11 = unicodeEscaper5.translate((int) (byte) -1, writer10);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper14 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper16 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper18 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str20 = unicodeEscaper18.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray21 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper14, unicodeEscaper16, unicodeEscaper18 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator22 = unicodeEscaper5.with(charSequenceTranslatorArray21);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator23 = unicodeEscaper2.with(charSequenceTranslatorArray21);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper26 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer28 = null;
        boolean boolean29 = unicodeEscaper26.translate((int) (short) 10, writer28);
        java.lang.String str31 = unicodeEscaper26.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper34 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer36 = null;
        boolean boolean37 = unicodeEscaper34.translate((int) '4', writer36);
        java.io.Writer writer39 = null;
        boolean boolean40 = unicodeEscaper34.translate((int) (byte) -1, writer39);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper43 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper45 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper47 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str49 = unicodeEscaper47.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray50 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper43, unicodeEscaper45, unicodeEscaper47 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator51 = unicodeEscaper34.with(charSequenceTranslatorArray50);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator52 = unicodeEscaper26.with(charSequenceTranslatorArray50);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper55 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.lang.String str57 = unicodeEscaper55.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray58 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper55 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator59 = unicodeEscaper26.with(charSequenceTranslatorArray58);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator60 = charSequenceTranslator23.with(charSequenceTranslatorArray58);
        java.lang.String str62 = charSequenceTranslator23.translate((java.lang.CharSequence) "\\u0033\\u0034");
        java.io.Writer writer64 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceTranslator23.translate((java.lang.CharSequence) "java.io.IOException: \\u006A\\u0061\\u0076\\u0061.\\u0069\\u006F.\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A \\u005C\\u0075003\\u0036\\u005C\\u00750034", writer64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper14);
        org.junit.Assert.assertNotNull(unicodeEscaper16);
        org.junit.Assert.assertNotNull(unicodeEscaper18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str20, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray21);
        org.junit.Assert.assertNotNull(charSequenceTranslator22);
        org.junit.Assert.assertNotNull(charSequenceTranslator23);
        org.junit.Assert.assertNotNull(unicodeEscaper26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "0" + "'", str31, "0");
        org.junit.Assert.assertNotNull(unicodeEscaper34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper43);
        org.junit.Assert.assertNotNull(unicodeEscaper45);
        org.junit.Assert.assertNotNull(unicodeEscaper47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str49, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray50);
        org.junit.Assert.assertNotNull(charSequenceTranslator51);
        org.junit.Assert.assertNotNull(charSequenceTranslator52);
        org.junit.Assert.assertNotNull(unicodeEscaper55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str57, "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray58);
        org.junit.Assert.assertNotNull(charSequenceTranslator59);
        org.junit.Assert.assertNotNull(charSequenceTranslator60);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "\\u005Cu\\u0030\\u0030\\u0033\\u0033\\u005Cu\\u0030\\u0030\\u0033\\u0034" + "'", str62, "\\u005Cu\\u0030\\u0030\\u0033\\u0033\\u005Cu\\u0030\\u0030\\u0033\\u0034");
    }

    @Test
    public void test05135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05135");
        java.io.IOException iOException2 = new java.io.IOException();
        java.io.IOException iOException3 = new java.io.IOException();
        iOException2.addSuppressed((java.lang.Throwable) iOException3);
        java.io.IOException iOException5 = new java.io.IOException("0", (java.lang.Throwable) iOException2);
        java.lang.Throwable[] throwableArray6 = iOException5.getSuppressed();
        java.io.IOException iOException7 = new java.io.IOException("", (java.lang.Throwable) iOException5);
        java.io.IOException iOException10 = new java.io.IOException("");
        java.io.IOException iOException11 = new java.io.IOException((java.lang.Throwable) iOException10);
        java.io.IOException iOException13 = new java.io.IOException("");
        iOException11.addSuppressed((java.lang.Throwable) iOException13);
        java.io.IOException iOException15 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException13);
        java.io.IOException iOException17 = new java.io.IOException("");
        java.io.IOException iOException18 = new java.io.IOException((java.lang.Throwable) iOException17);
        java.io.IOException iOException19 = new java.io.IOException((java.lang.Throwable) iOException17);
        iOException15.addSuppressed((java.lang.Throwable) iOException17);
        iOException5.addSuppressed((java.lang.Throwable) iOException15);
        java.io.IOException iOException24 = new java.io.IOException("java.io.IOException: hi!");
        java.io.IOException iOException25 = new java.io.IOException("\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException24);
        iOException5.addSuppressed((java.lang.Throwable) iOException24);
        java.io.IOException iOException27 = new java.io.IOException((java.lang.Throwable) iOException24);
        java.lang.Class<?> wildcardClass28 = iOException24.getClass();
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test05136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05136");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', 10);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) '#', (int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper7 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper10 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between(0, (int) (byte) 100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper13 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(10, 10);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper16 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) -1, (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper18 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper20 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer22 = null;
        boolean boolean23 = unicodeEscaper20.translate((int) ' ', writer22);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper26 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str28 = unicodeEscaper26.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray29 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator30 = unicodeEscaper26.with(charSequenceTranslatorArray29);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator31 = unicodeEscaper20.with(charSequenceTranslatorArray29);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator32 = unicodeEscaper18.with(charSequenceTranslatorArray29);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper35 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer37 = null;
        boolean boolean38 = unicodeEscaper35.translate((int) '4', writer37);
        java.io.Writer writer40 = null;
        boolean boolean41 = unicodeEscaper35.translate((int) (byte) -1, writer40);
        java.io.Writer writer43 = null;
        boolean boolean44 = unicodeEscaper35.translate((int) (byte) -1, writer43);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray45 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator46 = unicodeEscaper35.with(charSequenceTranslatorArray45);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator47 = charSequenceTranslator32.with(charSequenceTranslatorArray45);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator48 = unicodeEscaper16.with(charSequenceTranslatorArray45);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator49 = unicodeEscaper13.with(charSequenceTranslatorArray45);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator50 = unicodeEscaper10.with(charSequenceTranslatorArray45);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator51 = unicodeEscaper7.with(charSequenceTranslatorArray45);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator52 = unicodeEscaper5.with(charSequenceTranslatorArray45);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator53 = unicodeEscaper2.with(charSequenceTranslatorArray45);
        java.io.Writer writer55 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean56 = unicodeEscaper2.translate((int) (byte) 0, writer55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertNotNull(unicodeEscaper7);
        org.junit.Assert.assertNotNull(unicodeEscaper10);
        org.junit.Assert.assertNotNull(unicodeEscaper13);
        org.junit.Assert.assertNotNull(unicodeEscaper16);
        org.junit.Assert.assertNotNull(unicodeEscaper18);
        org.junit.Assert.assertNotNull(unicodeEscaper20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "0" + "'", str28, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray29);
        org.junit.Assert.assertNotNull(charSequenceTranslator30);
        org.junit.Assert.assertNotNull(charSequenceTranslator31);
        org.junit.Assert.assertNotNull(charSequenceTranslator32);
        org.junit.Assert.assertNotNull(unicodeEscaper35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray45);
        org.junit.Assert.assertNotNull(charSequenceTranslator46);
        org.junit.Assert.assertNotNull(charSequenceTranslator47);
        org.junit.Assert.assertNotNull(charSequenceTranslator48);
        org.junit.Assert.assertNotNull(charSequenceTranslator49);
        org.junit.Assert.assertNotNull(charSequenceTranslator50);
        org.junit.Assert.assertNotNull(charSequenceTranslator51);
        org.junit.Assert.assertNotNull(charSequenceTranslator52);
        org.junit.Assert.assertNotNull(charSequenceTranslator53);
    }

    @Test
    public void test05137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05137");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', (-1));
        java.io.Writer writer5 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int6 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: \\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750032\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030", 1, writer5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
    }

    @Test
    public void test05138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05138");
        java.io.IOException iOException2 = new java.io.IOException("java.io.IOException: hi!");
        java.io.IOException iOException3 = new java.io.IOException("\\u0032\\u0030", (java.lang.Throwable) iOException2);
        java.io.IOException iOException6 = new java.io.IOException("0");
        java.io.IOException iOException7 = new java.io.IOException();
        java.io.IOException iOException8 = new java.io.IOException();
        iOException7.addSuppressed((java.lang.Throwable) iOException8);
        java.io.IOException iOException10 = new java.io.IOException();
        java.io.IOException iOException11 = new java.io.IOException();
        iOException10.addSuppressed((java.lang.Throwable) iOException11);
        java.lang.Throwable[] throwableArray13 = iOException11.getSuppressed();
        java.io.IOException iOException14 = new java.io.IOException((java.lang.Throwable) iOException11);
        java.io.IOException iOException16 = new java.io.IOException("");
        java.io.IOException iOException17 = new java.io.IOException((java.lang.Throwable) iOException16);
        iOException11.addSuppressed((java.lang.Throwable) iOException17);
        iOException8.addSuppressed((java.lang.Throwable) iOException17);
        iOException6.addSuppressed((java.lang.Throwable) iOException8);
        java.io.IOException iOException21 = new java.io.IOException((java.lang.Throwable) iOException8);
        java.io.IOException iOException22 = new java.io.IOException("\\u0068\\u0069\\u0021", (java.lang.Throwable) iOException8);
        iOException2.addSuppressed((java.lang.Throwable) iOException22);
        java.io.IOException iOException26 = new java.io.IOException("java.io.IOException: java.io.IOException");
        java.io.IOException iOException29 = new java.io.IOException("0");
        java.lang.Throwable[] throwableArray30 = iOException29.getSuppressed();
        java.io.IOException iOException31 = new java.io.IOException("hi!", (java.lang.Throwable) iOException29);
        iOException26.addSuppressed((java.lang.Throwable) iOException29);
        java.lang.Throwable[] throwableArray33 = iOException29.getSuppressed();
        java.io.IOException iOException34 = new java.io.IOException("\\u005C\\u00750033\\u005C\\u00750034", (java.lang.Throwable) iOException29);
        iOException2.addSuppressed((java.lang.Throwable) iOException29);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray33);
    }

    @Test
    public void test05139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05139");
        java.io.IOException iOException2 = new java.io.IOException();
        java.io.IOException iOException3 = new java.io.IOException();
        iOException2.addSuppressed((java.lang.Throwable) iOException3);
        java.io.IOException iOException5 = new java.io.IOException("0", (java.lang.Throwable) iOException2);
        java.lang.Throwable[] throwableArray6 = iOException5.getSuppressed();
        java.io.IOException iOException7 = new java.io.IOException("", (java.lang.Throwable) iOException5);
        java.io.IOException iOException10 = new java.io.IOException("");
        java.io.IOException iOException11 = new java.io.IOException((java.lang.Throwable) iOException10);
        java.io.IOException iOException13 = new java.io.IOException("");
        iOException11.addSuppressed((java.lang.Throwable) iOException13);
        java.io.IOException iOException15 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException13);
        java.io.IOException iOException17 = new java.io.IOException("");
        java.io.IOException iOException18 = new java.io.IOException((java.lang.Throwable) iOException17);
        java.io.IOException iOException19 = new java.io.IOException((java.lang.Throwable) iOException17);
        iOException15.addSuppressed((java.lang.Throwable) iOException17);
        iOException5.addSuppressed((java.lang.Throwable) iOException15);
        java.io.IOException iOException25 = new java.io.IOException("0");
        java.lang.Throwable[] throwableArray26 = iOException25.getSuppressed();
        java.io.IOException iOException27 = new java.io.IOException("hi!", (java.lang.Throwable) iOException25);
        java.io.IOException iOException28 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException25);
        java.lang.Throwable[] throwableArray29 = iOException25.getSuppressed();
        java.io.IOException iOException31 = new java.io.IOException();
        java.io.IOException iOException32 = new java.io.IOException();
        iOException31.addSuppressed((java.lang.Throwable) iOException32);
        java.lang.Throwable[] throwableArray34 = iOException32.getSuppressed();
        java.lang.Throwable[] throwableArray35 = iOException32.getSuppressed();
        java.io.IOException iOException36 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException32);
        java.io.IOException iOException37 = new java.io.IOException();
        java.io.IOException iOException38 = new java.io.IOException();
        iOException37.addSuppressed((java.lang.Throwable) iOException38);
        java.io.IOException iOException40 = new java.io.IOException((java.lang.Throwable) iOException37);
        java.lang.Throwable[] throwableArray41 = iOException40.getSuppressed();
        iOException36.addSuppressed((java.lang.Throwable) iOException40);
        java.io.IOException iOException44 = new java.io.IOException();
        java.io.IOException iOException45 = new java.io.IOException();
        iOException44.addSuppressed((java.lang.Throwable) iOException45);
        java.io.IOException iOException47 = new java.io.IOException();
        java.io.IOException iOException48 = new java.io.IOException();
        iOException47.addSuppressed((java.lang.Throwable) iOException48);
        java.lang.Throwable[] throwableArray50 = iOException48.getSuppressed();
        java.io.IOException iOException51 = new java.io.IOException((java.lang.Throwable) iOException48);
        java.io.IOException iOException53 = new java.io.IOException("");
        java.io.IOException iOException54 = new java.io.IOException((java.lang.Throwable) iOException53);
        iOException48.addSuppressed((java.lang.Throwable) iOException54);
        iOException45.addSuppressed((java.lang.Throwable) iOException54);
        java.io.IOException iOException57 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException54);
        iOException40.addSuppressed((java.lang.Throwable) iOException57);
        java.io.IOException iOException60 = new java.io.IOException("");
        java.io.IOException iOException61 = new java.io.IOException((java.lang.Throwable) iOException60);
        java.io.IOException iOException63 = new java.io.IOException("");
        iOException61.addSuppressed((java.lang.Throwable) iOException63);
        java.io.IOException iOException66 = new java.io.IOException("");
        java.io.IOException iOException67 = new java.io.IOException((java.lang.Throwable) iOException66);
        java.io.IOException iOException69 = new java.io.IOException("");
        iOException67.addSuppressed((java.lang.Throwable) iOException69);
        iOException61.addSuppressed((java.lang.Throwable) iOException67);
        iOException40.addSuppressed((java.lang.Throwable) iOException67);
        java.io.IOException iOException73 = new java.io.IOException((java.lang.Throwable) iOException67);
        iOException25.addSuppressed((java.lang.Throwable) iOException67);
        iOException15.addSuppressed((java.lang.Throwable) iOException67);
        java.lang.Class<?> wildcardClass76 = iOException15.getClass();
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test05140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05140");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) '4', (int) (byte) -1);
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) (short) -1, writer4);
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper2.translate((int) (short) 0, writer7);
        java.io.Writer writer10 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate((java.lang.CharSequence) "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020", writer10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test05141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05141");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between(1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper5.translate((int) '4', writer7);
        java.io.Writer writer11 = null;
        int int12 = unicodeEscaper5.translate((java.lang.CharSequence) "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", 100, writer11);
        java.lang.String str14 = unicodeEscaper5.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper17 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) (byte) 10);
        java.lang.String str19 = unicodeEscaper17.translate((java.lang.CharSequence) "java.io.IOException");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper21 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) (short) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper24 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '#', 100);
        java.lang.String str26 = unicodeEscaper24.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper29 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) '4', (int) (short) 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper32 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper35 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', (int) (short) 0);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray36 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper35 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator37 = unicodeEscaper32.with(charSequenceTranslatorArray36);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator38 = unicodeEscaper29.with(charSequenceTranslatorArray36);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator39 = unicodeEscaper24.with(charSequenceTranslatorArray36);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator40 = unicodeEscaper21.with(charSequenceTranslatorArray36);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper43 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper46 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer48 = null;
        boolean boolean49 = unicodeEscaper46.translate((int) '4', writer48);
        java.io.Writer writer51 = null;
        boolean boolean52 = unicodeEscaper46.translate((int) (byte) -1, writer51);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper55 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper57 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper59 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str61 = unicodeEscaper59.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray62 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper55, unicodeEscaper57, unicodeEscaper59 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator63 = unicodeEscaper46.with(charSequenceTranslatorArray62);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator64 = unicodeEscaper43.with(charSequenceTranslatorArray62);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator65 = unicodeEscaper21.with(charSequenceTranslatorArray62);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator66 = unicodeEscaper17.with(charSequenceTranslatorArray62);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator67 = unicodeEscaper5.with(charSequenceTranslatorArray62);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator68 = unicodeEscaper2.with(charSequenceTranslatorArray62);
        java.lang.String str70 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: \\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034");
        java.io.Writer writer72 = null;
        boolean boolean73 = unicodeEscaper2.translate((int) (short) 0, writer72);
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030" + "'", str14, "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030");
        org.junit.Assert.assertNotNull(unicodeEscaper17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str19, "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertNotNull(unicodeEscaper21);
        org.junit.Assert.assertNotNull(unicodeEscaper24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str26, "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertNotNull(unicodeEscaper29);
        org.junit.Assert.assertNotNull(unicodeEscaper32);
        org.junit.Assert.assertNotNull(unicodeEscaper35);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray36);
        org.junit.Assert.assertNotNull(charSequenceTranslator37);
        org.junit.Assert.assertNotNull(charSequenceTranslator38);
        org.junit.Assert.assertNotNull(charSequenceTranslator39);
        org.junit.Assert.assertNotNull(charSequenceTranslator40);
        org.junit.Assert.assertNotNull(unicodeEscaper43);
        org.junit.Assert.assertNotNull(unicodeEscaper46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper55);
        org.junit.Assert.assertNotNull(unicodeEscaper57);
        org.junit.Assert.assertNotNull(unicodeEscaper59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str61, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray62);
        org.junit.Assert.assertNotNull(charSequenceTranslator63);
        org.junit.Assert.assertNotNull(charSequenceTranslator64);
        org.junit.Assert.assertNotNull(charSequenceTranslator65);
        org.junit.Assert.assertNotNull(charSequenceTranslator66);
        org.junit.Assert.assertNotNull(charSequenceTranslator67);
        org.junit.Assert.assertNotNull(charSequenceTranslator68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "java.io.IOException:\\u0020java.io.IOException:\\u0020\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034" + "'", str70, "java.io.IOException:\\u0020java.io.IOException:\\u0020\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test05142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05142");
        java.io.IOException iOException3 = new java.io.IOException();
        java.io.IOException iOException4 = new java.io.IOException();
        iOException3.addSuppressed((java.lang.Throwable) iOException4);
        java.io.IOException iOException6 = new java.io.IOException("0", (java.lang.Throwable) iOException3);
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.io.IOException iOException9 = new java.io.IOException((java.lang.Throwable) iOException8);
        java.lang.Throwable[] throwableArray10 = iOException9.getSuppressed();
        java.io.IOException iOException11 = new java.io.IOException("\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException9);
        java.io.IOException iOException14 = new java.io.IOException();
        java.io.IOException iOException15 = new java.io.IOException();
        iOException14.addSuppressed((java.lang.Throwable) iOException15);
        java.io.IOException iOException17 = new java.io.IOException("0", (java.lang.Throwable) iOException14);
        java.io.IOException iOException18 = new java.io.IOException((java.lang.Throwable) iOException17);
        java.io.IOException iOException19 = new java.io.IOException("java.io.IOException:\\u0020java.io.IOException:\\u0020java.io.IOException:\\u0020java.io.IOException:\\u0020java.io.IOException:\\u00200", (java.lang.Throwable) iOException18);
        iOException9.addSuppressed((java.lang.Throwable) iOException19);
        java.io.IOException iOException23 = new java.io.IOException();
        java.io.IOException iOException24 = new java.io.IOException();
        iOException23.addSuppressed((java.lang.Throwable) iOException24);
        java.io.IOException iOException26 = new java.io.IOException("0", (java.lang.Throwable) iOException23);
        java.io.IOException iOException27 = new java.io.IOException((java.lang.Throwable) iOException26);
        java.io.IOException iOException28 = new java.io.IOException((java.lang.Throwable) iOException27);
        java.io.IOException iOException29 = new java.io.IOException((java.lang.Throwable) iOException28);
        java.lang.Throwable[] throwableArray30 = iOException29.getSuppressed();
        java.io.IOException iOException31 = new java.io.IOException("\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException29);
        java.io.IOException iOException32 = new java.io.IOException((java.lang.Throwable) iOException29);
        java.io.IOException iOException33 = new java.io.IOException((java.lang.Throwable) iOException32);
        java.io.IOException iOException35 = new java.io.IOException();
        java.io.IOException iOException36 = new java.io.IOException();
        iOException35.addSuppressed((java.lang.Throwable) iOException36);
        java.io.IOException iOException38 = new java.io.IOException("0", (java.lang.Throwable) iOException35);
        java.io.IOException iOException39 = new java.io.IOException((java.lang.Throwable) iOException38);
        java.io.IOException iOException40 = new java.io.IOException((java.lang.Throwable) iOException39);
        java.io.IOException iOException42 = new java.io.IOException();
        java.io.IOException iOException43 = new java.io.IOException();
        iOException42.addSuppressed((java.lang.Throwable) iOException43);
        java.lang.Throwable[] throwableArray45 = iOException43.getSuppressed();
        java.lang.Throwable[] throwableArray46 = iOException43.getSuppressed();
        java.io.IOException iOException47 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException43);
        java.io.IOException iOException48 = new java.io.IOException();
        java.io.IOException iOException49 = new java.io.IOException();
        iOException48.addSuppressed((java.lang.Throwable) iOException49);
        java.io.IOException iOException51 = new java.io.IOException((java.lang.Throwable) iOException48);
        java.lang.Throwable[] throwableArray52 = iOException51.getSuppressed();
        iOException47.addSuppressed((java.lang.Throwable) iOException51);
        iOException39.addSuppressed((java.lang.Throwable) iOException51);
        java.lang.Throwable[] throwableArray55 = iOException51.getSuppressed();
        iOException33.addSuppressed((java.lang.Throwable) iOException51);
        java.io.IOException iOException59 = new java.io.IOException("0");
        java.lang.Throwable[] throwableArray60 = iOException59.getSuppressed();
        java.io.IOException iOException61 = new java.io.IOException("hi!", (java.lang.Throwable) iOException59);
        java.lang.Throwable[] throwableArray62 = iOException59.getSuppressed();
        java.io.IOException iOException64 = new java.io.IOException("0");
        java.io.IOException iOException65 = new java.io.IOException();
        java.io.IOException iOException66 = new java.io.IOException();
        iOException65.addSuppressed((java.lang.Throwable) iOException66);
        java.io.IOException iOException68 = new java.io.IOException();
        java.io.IOException iOException69 = new java.io.IOException();
        iOException68.addSuppressed((java.lang.Throwable) iOException69);
        java.lang.Throwable[] throwableArray71 = iOException69.getSuppressed();
        java.io.IOException iOException72 = new java.io.IOException((java.lang.Throwable) iOException69);
        java.io.IOException iOException74 = new java.io.IOException("");
        java.io.IOException iOException75 = new java.io.IOException((java.lang.Throwable) iOException74);
        iOException69.addSuppressed((java.lang.Throwable) iOException75);
        iOException66.addSuppressed((java.lang.Throwable) iOException75);
        iOException64.addSuppressed((java.lang.Throwable) iOException75);
        iOException59.addSuppressed((java.lang.Throwable) iOException64);
        iOException33.addSuppressed((java.lang.Throwable) iOException59);
        iOException9.addSuppressed((java.lang.Throwable) iOException33);
        java.io.IOException iOException82 = new java.io.IOException((java.lang.Throwable) iOException33);
        java.io.IOException iOException83 = new java.io.IOException("java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException82);
        java.lang.Class<?> wildcardClass84 = iOException83.getClass();
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(throwableArray71);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test05143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05143");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper1 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (short) 100);
        java.io.Writer writer4 = null;
        int int5 = unicodeEscaper1.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException", 0, writer4);
        java.lang.String str7 = unicodeEscaper1.translate((java.lang.CharSequence) "java.io.IOException: ");
        java.io.Writer writer9 = null;
        boolean boolean10 = unicodeEscaper1.translate(100, writer9);
        java.io.Writer writer12 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper1.translate((java.lang.CharSequence) "\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030", writer12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020" + "'", str7, "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test05144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05144");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) '4', writer4);
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper2.translate((int) (byte) -1, writer7);
        java.lang.String str10 = unicodeEscaper2.translate((java.lang.CharSequence) "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020");
        java.io.Writer writer12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = unicodeEscaper2.translate((int) '#', writer12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020" + "'", str10, "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020");
    }

    @Test
    public void test05145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05145");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: 23");
        java.lang.String str6 = unicodeEscaper2.translate((java.lang.CharSequence) "34");
        java.lang.String str8 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        java.io.Writer writer10 = null;
        boolean boolean11 = unicodeEscaper2.translate((int) '4', writer10);
        java.lang.String str13 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030");
        java.io.Writer writer15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = unicodeEscaper2.translate((int) (short) -1, writer15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "java.io.IOException: java.io.IOException: 23" + "'", str4, "java.io.IOException: java.io.IOException: 23");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "34" + "'", str6, "34");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "java.io.IOException: java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str8, "java.io.IOException: java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "java.io.IOException: java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030" + "'", str13, "java.io.IOException: java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030");
    }

    @Test
    public void test05146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05146");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper1 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (short) 100);
        java.io.Writer writer4 = null;
        int int5 = unicodeEscaper1.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException", 0, writer4);
        java.lang.String str7 = unicodeEscaper1.translate((java.lang.CharSequence) "java.io.IOException: ");
        java.io.Writer writer9 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper1.translate((java.lang.CharSequence) "java.io.IOException: A", writer9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020" + "'", str7, "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020");
    }

    @Test
    public void test05147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05147");
        java.io.IOException iOException2 = new java.io.IOException("0");
        java.lang.Throwable[] throwableArray3 = iOException2.getSuppressed();
        java.io.IOException iOException4 = new java.io.IOException("hi!", (java.lang.Throwable) iOException2);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.lang.Throwable[] throwableArray7 = iOException6.getSuppressed();
        java.lang.Class<?> wildcardClass8 = iOException6.getClass();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test05148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05148");
        java.io.IOException iOException5 = new java.io.IOException("");
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.io.IOException iOException8 = new java.io.IOException("");
        iOException6.addSuppressed((java.lang.Throwable) iOException8);
        java.io.IOException iOException10 = new java.io.IOException("java.io.IOException: 0", (java.lang.Throwable) iOException8);
        java.io.IOException iOException11 = new java.io.IOException("java.io.IOException: java.io.IOException: java.io.IOException", (java.lang.Throwable) iOException8);
        java.io.IOException iOException14 = new java.io.IOException();
        java.io.IOException iOException15 = new java.io.IOException();
        iOException14.addSuppressed((java.lang.Throwable) iOException15);
        java.io.IOException iOException17 = new java.io.IOException();
        java.io.IOException iOException18 = new java.io.IOException();
        iOException17.addSuppressed((java.lang.Throwable) iOException18);
        java.lang.Throwable[] throwableArray20 = iOException18.getSuppressed();
        java.io.IOException iOException21 = new java.io.IOException((java.lang.Throwable) iOException18);
        java.io.IOException iOException23 = new java.io.IOException("");
        java.io.IOException iOException24 = new java.io.IOException((java.lang.Throwable) iOException23);
        iOException18.addSuppressed((java.lang.Throwable) iOException24);
        iOException15.addSuppressed((java.lang.Throwable) iOException24);
        java.io.IOException iOException27 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException24);
        java.io.IOException iOException28 = new java.io.IOException((java.lang.Throwable) iOException24);
        java.io.IOException iOException31 = new java.io.IOException();
        java.io.IOException iOException32 = new java.io.IOException();
        iOException31.addSuppressed((java.lang.Throwable) iOException32);
        java.io.IOException iOException34 = new java.io.IOException("0", (java.lang.Throwable) iOException31);
        java.io.IOException iOException35 = new java.io.IOException((java.lang.Throwable) iOException34);
        java.io.IOException iOException36 = new java.io.IOException((java.lang.Throwable) iOException35);
        java.io.IOException iOException37 = new java.io.IOException((java.lang.Throwable) iOException36);
        java.lang.Throwable[] throwableArray38 = iOException37.getSuppressed();
        java.io.IOException iOException39 = new java.io.IOException("java.io.IOException: java.io.IOException", (java.lang.Throwable) iOException37);
        iOException24.addSuppressed((java.lang.Throwable) iOException37);
        java.io.IOException iOException41 = new java.io.IOException((java.lang.Throwable) iOException37);
        java.io.IOException iOException42 = new java.io.IOException("java.io.IOException: A", (java.lang.Throwable) iOException41);
        iOException11.addSuppressed((java.lang.Throwable) iOException42);
        java.io.IOException iOException44 = new java.io.IOException("20", (java.lang.Throwable) iOException11);
        java.io.IOException iOException45 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0032\\u0033", (java.lang.Throwable) iOException11);
        java.lang.Throwable[] throwableArray46 = iOException45.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray46);
    }

    @Test
    public void test05149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05149");
        java.lang.Throwable throwable2 = null;
        java.io.IOException iOException3 = new java.io.IOException("java.io.IOException: \\u0068\\u0069\\u0021", throwable2);
        java.io.IOException iOException4 = new java.io.IOException("\\u005Cu\\u0030\\u0030\\u0036\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0032\\u0031", (java.lang.Throwable) iOException3);
        java.io.IOException iOException8 = new java.io.IOException("0");
        java.lang.Throwable[] throwableArray9 = iOException8.getSuppressed();
        java.io.IOException iOException10 = new java.io.IOException("hi!", (java.lang.Throwable) iOException8);
        java.io.IOException iOException12 = new java.io.IOException("");
        java.io.IOException iOException13 = new java.io.IOException((java.lang.Throwable) iOException12);
        java.io.IOException iOException15 = new java.io.IOException("");
        iOException13.addSuppressed((java.lang.Throwable) iOException15);
        java.io.IOException iOException18 = new java.io.IOException("");
        java.io.IOException iOException19 = new java.io.IOException((java.lang.Throwable) iOException18);
        java.io.IOException iOException21 = new java.io.IOException("");
        iOException19.addSuppressed((java.lang.Throwable) iOException21);
        iOException13.addSuppressed((java.lang.Throwable) iOException19);
        iOException10.addSuppressed((java.lang.Throwable) iOException13);
        java.io.IOException iOException25 = new java.io.IOException("0", (java.lang.Throwable) iOException10);
        java.io.IOException iOException27 = new java.io.IOException("");
        iOException10.addSuppressed((java.lang.Throwable) iOException27);
        iOException4.addSuppressed((java.lang.Throwable) iOException10);
        java.io.IOException iOException31 = new java.io.IOException("\\u0068\\u0069\\u0021");
        java.io.IOException iOException32 = new java.io.IOException((java.lang.Throwable) iOException31);
        java.io.IOException iOException36 = new java.io.IOException("");
        java.io.IOException iOException37 = new java.io.IOException((java.lang.Throwable) iOException36);
        java.io.IOException iOException39 = new java.io.IOException("");
        iOException37.addSuppressed((java.lang.Throwable) iOException39);
        java.io.IOException iOException41 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException39);
        java.io.IOException iOException42 = new java.io.IOException("java.io.IOException: \\u0068\\u0069\\u0021", (java.lang.Throwable) iOException39);
        java.io.IOException iOException43 = new java.io.IOException((java.lang.Throwable) iOException39);
        java.io.IOException iOException44 = new java.io.IOException((java.lang.Throwable) iOException43);
        java.io.IOException iOException45 = new java.io.IOException((java.lang.Throwable) iOException44);
        java.io.IOException iOException46 = new java.io.IOException((java.lang.Throwable) iOException44);
        iOException31.addSuppressed((java.lang.Throwable) iOException46);
        java.lang.Throwable[] throwableArray48 = iOException31.getSuppressed();
        iOException4.addSuppressed((java.lang.Throwable) iOException31);
        java.lang.Class<?> wildcardClass50 = iOException31.getClass();
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test05150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05150");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between(0, (int) (byte) 1);
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) (byte) 100, writer4);
        java.io.Writer writer7 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate((java.lang.CharSequence) "61", writer7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test05151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05151");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between(1, (int) 'a');
        java.io.Writer writer5 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int6 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException:\\u0020java.io.IOException:\\u0020java.io.IOException:\\u0020java.io.IOException:\\u0020java.io.IOException:\\u00200", (int) 'a', writer5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
    }

    @Test
    public void test05152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05152");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', (int) (short) -1);
        java.io.Writer writer4 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean5 = unicodeEscaper2.translate((int) (short) 0, writer4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
    }

    @Test
    public void test05153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05153");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, 100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper4 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) (short) 10);
        java.io.Writer writer6 = null;
        boolean boolean7 = unicodeEscaper4.translate((int) (short) 10, writer6);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper10 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (short) 100, 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper13 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 100, (-1));
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper16 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer18 = null;
        boolean boolean19 = unicodeEscaper16.translate((int) (short) 10, writer18);
        java.lang.String str21 = unicodeEscaper16.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper24 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer26 = null;
        boolean boolean27 = unicodeEscaper24.translate((int) '4', writer26);
        java.io.Writer writer29 = null;
        boolean boolean30 = unicodeEscaper24.translate((int) (byte) -1, writer29);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper33 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper35 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper37 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str39 = unicodeEscaper37.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray40 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper33, unicodeEscaper35, unicodeEscaper37 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator41 = unicodeEscaper24.with(charSequenceTranslatorArray40);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator42 = unicodeEscaper16.with(charSequenceTranslatorArray40);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator43 = unicodeEscaper13.with(charSequenceTranslatorArray40);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator44 = unicodeEscaper10.with(charSequenceTranslatorArray40);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator45 = unicodeEscaper4.with(charSequenceTranslatorArray40);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator46 = unicodeEscaper2.with(charSequenceTranslatorArray40);
        java.io.Writer writer48 = null;
        boolean boolean49 = unicodeEscaper2.translate(1, writer48);
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper10);
        org.junit.Assert.assertNotNull(unicodeEscaper13);
        org.junit.Assert.assertNotNull(unicodeEscaper16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "0" + "'", str21, "0");
        org.junit.Assert.assertNotNull(unicodeEscaper24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper33);
        org.junit.Assert.assertNotNull(unicodeEscaper35);
        org.junit.Assert.assertNotNull(unicodeEscaper37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str39, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray40);
        org.junit.Assert.assertNotNull(charSequenceTranslator41);
        org.junit.Assert.assertNotNull(charSequenceTranslator42);
        org.junit.Assert.assertNotNull(charSequenceTranslator43);
        org.junit.Assert.assertNotNull(charSequenceTranslator44);
        org.junit.Assert.assertNotNull(charSequenceTranslator45);
        org.junit.Assert.assertNotNull(charSequenceTranslator46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test05154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05154");
        java.io.IOException iOException2 = new java.io.IOException("java.io.IOException: \\u005Cu\\u0030\\u0030\\u0036\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0032\\u0031");
        java.io.IOException iOException3 = new java.io.IOException("java.io.IOException: \\\\u00750068\\\\u00750069\\\\u00750021", (java.lang.Throwable) iOException2);
        java.io.IOException iOException5 = new java.io.IOException();
        java.io.IOException iOException6 = new java.io.IOException();
        iOException5.addSuppressed((java.lang.Throwable) iOException6);
        java.lang.Throwable[] throwableArray8 = iOException6.getSuppressed();
        java.lang.Throwable[] throwableArray9 = iOException6.getSuppressed();
        java.io.IOException iOException10 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException6);
        java.io.IOException iOException11 = new java.io.IOException();
        java.io.IOException iOException12 = new java.io.IOException();
        iOException11.addSuppressed((java.lang.Throwable) iOException12);
        java.io.IOException iOException14 = new java.io.IOException((java.lang.Throwable) iOException11);
        java.lang.Throwable[] throwableArray15 = iOException14.getSuppressed();
        iOException10.addSuppressed((java.lang.Throwable) iOException14);
        java.io.IOException iOException18 = new java.io.IOException();
        java.io.IOException iOException19 = new java.io.IOException();
        iOException18.addSuppressed((java.lang.Throwable) iOException19);
        java.io.IOException iOException21 = new java.io.IOException();
        java.io.IOException iOException22 = new java.io.IOException();
        iOException21.addSuppressed((java.lang.Throwable) iOException22);
        java.lang.Throwable[] throwableArray24 = iOException22.getSuppressed();
        java.io.IOException iOException25 = new java.io.IOException((java.lang.Throwable) iOException22);
        java.io.IOException iOException27 = new java.io.IOException("");
        java.io.IOException iOException28 = new java.io.IOException((java.lang.Throwable) iOException27);
        iOException22.addSuppressed((java.lang.Throwable) iOException28);
        iOException19.addSuppressed((java.lang.Throwable) iOException28);
        java.io.IOException iOException31 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException28);
        iOException14.addSuppressed((java.lang.Throwable) iOException31);
        java.io.IOException iOException34 = new java.io.IOException();
        java.io.IOException iOException35 = new java.io.IOException();
        iOException34.addSuppressed((java.lang.Throwable) iOException35);
        java.lang.Throwable[] throwableArray37 = iOException35.getSuppressed();
        java.io.IOException iOException38 = new java.io.IOException((java.lang.Throwable) iOException35);
        java.io.IOException iOException40 = new java.io.IOException("");
        java.io.IOException iOException41 = new java.io.IOException((java.lang.Throwable) iOException40);
        iOException35.addSuppressed((java.lang.Throwable) iOException41);
        java.lang.Throwable[] throwableArray43 = iOException35.getSuppressed();
        java.io.IOException iOException44 = new java.io.IOException("\\u0068\\u0069\\u0021", (java.lang.Throwable) iOException35);
        java.io.IOException iOException47 = new java.io.IOException();
        java.io.IOException iOException48 = new java.io.IOException();
        iOException47.addSuppressed((java.lang.Throwable) iOException48);
        java.io.IOException iOException50 = new java.io.IOException("0", (java.lang.Throwable) iOException47);
        java.io.IOException iOException51 = new java.io.IOException((java.lang.Throwable) iOException50);
        java.io.IOException iOException52 = new java.io.IOException((java.lang.Throwable) iOException51);
        java.io.IOException iOException53 = new java.io.IOException((java.lang.Throwable) iOException52);
        java.lang.Throwable[] throwableArray54 = iOException53.getSuppressed();
        java.io.IOException iOException55 = new java.io.IOException("java.io.IOException: java.io.IOException", (java.lang.Throwable) iOException53);
        java.io.IOException iOException56 = new java.io.IOException((java.lang.Throwable) iOException55);
        iOException35.addSuppressed((java.lang.Throwable) iOException56);
        iOException14.addSuppressed((java.lang.Throwable) iOException56);
        iOException3.addSuppressed((java.lang.Throwable) iOException56);
        java.lang.Throwable[] throwableArray60 = iOException3.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(throwableArray60);
    }

    @Test
    public void test05155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05155");
        java.io.IOException iOException4 = new java.io.IOException();
        java.io.IOException iOException5 = new java.io.IOException();
        iOException4.addSuppressed((java.lang.Throwable) iOException5);
        java.io.IOException iOException7 = new java.io.IOException();
        java.io.IOException iOException8 = new java.io.IOException();
        iOException7.addSuppressed((java.lang.Throwable) iOException8);
        java.lang.Throwable[] throwableArray10 = iOException8.getSuppressed();
        java.io.IOException iOException11 = new java.io.IOException((java.lang.Throwable) iOException8);
        java.io.IOException iOException13 = new java.io.IOException("");
        java.io.IOException iOException14 = new java.io.IOException((java.lang.Throwable) iOException13);
        iOException8.addSuppressed((java.lang.Throwable) iOException14);
        iOException5.addSuppressed((java.lang.Throwable) iOException14);
        java.io.IOException iOException17 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException14);
        java.io.IOException iOException18 = new java.io.IOException((java.lang.Throwable) iOException14);
        java.io.IOException iOException19 = new java.io.IOException("1", (java.lang.Throwable) iOException18);
        java.io.IOException iOException22 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030");
        java.io.IOException iOException23 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020", (java.lang.Throwable) iOException22);
        java.io.IOException iOException24 = new java.io.IOException((java.lang.Throwable) iOException22);
        iOException18.addSuppressed((java.lang.Throwable) iOException24);
        java.io.IOException iOException26 = new java.io.IOException((java.lang.Throwable) iOException18);
        java.io.IOException iOException27 = new java.io.IOException("\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u0068\\u0069!", (java.lang.Throwable) iOException26);
        java.io.IOException iOException28 = new java.io.IOException((java.lang.Throwable) iOException27);
        java.io.IOException iOException29 = new java.io.IOException("java\\u002Eio\\u002EIOException", (java.lang.Throwable) iOException27);
        java.io.IOException iOException33 = new java.io.IOException("0");
        java.lang.Throwable[] throwableArray34 = iOException33.getSuppressed();
        java.io.IOException iOException35 = new java.io.IOException("hi!", (java.lang.Throwable) iOException33);
        java.io.IOException iOException37 = new java.io.IOException("");
        java.io.IOException iOException38 = new java.io.IOException((java.lang.Throwable) iOException37);
        java.io.IOException iOException40 = new java.io.IOException("");
        iOException38.addSuppressed((java.lang.Throwable) iOException40);
        java.io.IOException iOException43 = new java.io.IOException("");
        java.io.IOException iOException44 = new java.io.IOException((java.lang.Throwable) iOException43);
        java.io.IOException iOException46 = new java.io.IOException("");
        iOException44.addSuppressed((java.lang.Throwable) iOException46);
        iOException38.addSuppressed((java.lang.Throwable) iOException44);
        iOException35.addSuppressed((java.lang.Throwable) iOException38);
        java.io.IOException iOException50 = new java.io.IOException("hi!", (java.lang.Throwable) iOException38);
        java.lang.Throwable throwable53 = null;
        java.io.IOException iOException54 = new java.io.IOException("java.io.IOException: \\u0068\\u0069\\u0021", throwable53);
        java.io.IOException iOException55 = new java.io.IOException("\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException54);
        iOException50.addSuppressed((java.lang.Throwable) iOException55);
        java.io.IOException iOException57 = new java.io.IOException((java.lang.Throwable) iOException50);
        java.io.IOException iOException59 = new java.io.IOException("java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        iOException57.addSuppressed((java.lang.Throwable) iOException59);
        java.io.IOException iOException62 = new java.io.IOException("\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        java.io.IOException iOException63 = new java.io.IOException((java.lang.Throwable) iOException62);
        iOException57.addSuppressed((java.lang.Throwable) iOException63);
        iOException29.addSuppressed((java.lang.Throwable) iOException57);
        java.io.IOException iOException67 = new java.io.IOException();
        java.io.IOException iOException68 = new java.io.IOException();
        iOException67.addSuppressed((java.lang.Throwable) iOException68);
        java.io.IOException iOException70 = new java.io.IOException("0", (java.lang.Throwable) iOException67);
        java.io.IOException iOException71 = new java.io.IOException((java.lang.Throwable) iOException70);
        java.io.IOException iOException72 = new java.io.IOException((java.lang.Throwable) iOException71);
        java.io.IOException iOException74 = new java.io.IOException();
        java.io.IOException iOException75 = new java.io.IOException();
        iOException74.addSuppressed((java.lang.Throwable) iOException75);
        java.lang.Throwable[] throwableArray77 = iOException75.getSuppressed();
        java.lang.Throwable[] throwableArray78 = iOException75.getSuppressed();
        java.io.IOException iOException79 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException75);
        java.io.IOException iOException80 = new java.io.IOException();
        java.io.IOException iOException81 = new java.io.IOException();
        iOException80.addSuppressed((java.lang.Throwable) iOException81);
        java.io.IOException iOException83 = new java.io.IOException((java.lang.Throwable) iOException80);
        java.lang.Throwable[] throwableArray84 = iOException83.getSuppressed();
        iOException79.addSuppressed((java.lang.Throwable) iOException83);
        iOException71.addSuppressed((java.lang.Throwable) iOException83);
        iOException57.addSuppressed((java.lang.Throwable) iOException71);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray77);
        org.junit.Assert.assertNotNull(throwableArray78);
        org.junit.Assert.assertNotNull(throwableArray84);
    }

    @Test
    public void test05156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05156");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (byte) -1, (int) (short) -1);
        java.io.Writer writer5 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int6 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: 0", (int) (byte) 0, writer5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
    }

    @Test
    public void test05157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05157");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper7 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between(0, (int) (short) 0);
        java.io.Writer writer9 = null;
        boolean boolean10 = unicodeEscaper7.translate((int) (byte) 100, writer9);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper13 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer15 = null;
        boolean boolean16 = unicodeEscaper13.translate((int) '4', writer15);
        java.io.Writer writer18 = null;
        boolean boolean19 = unicodeEscaper13.translate((int) (byte) -1, writer18);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper22 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper24 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper26 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str28 = unicodeEscaper26.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray29 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper22, unicodeEscaper24, unicodeEscaper26 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator30 = unicodeEscaper13.with(charSequenceTranslatorArray29);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper33 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer35 = null;
        boolean boolean36 = unicodeEscaper33.translate((int) '4', writer35);
        java.io.Writer writer38 = null;
        boolean boolean39 = unicodeEscaper33.translate((int) (byte) -1, writer38);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper42 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper44 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper46 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str48 = unicodeEscaper46.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray49 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper42, unicodeEscaper44, unicodeEscaper46 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator50 = unicodeEscaper33.with(charSequenceTranslatorArray49);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper53 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer55 = null;
        boolean boolean56 = unicodeEscaper53.translate((int) (short) 10, writer55);
        java.lang.String str58 = unicodeEscaper53.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper61 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer63 = null;
        boolean boolean64 = unicodeEscaper61.translate((int) '4', writer63);
        java.io.Writer writer66 = null;
        boolean boolean67 = unicodeEscaper61.translate((int) (byte) -1, writer66);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper70 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper72 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper74 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str76 = unicodeEscaper74.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray77 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper70, unicodeEscaper72, unicodeEscaper74 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator78 = unicodeEscaper61.with(charSequenceTranslatorArray77);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator79 = unicodeEscaper53.with(charSequenceTranslatorArray77);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator80 = unicodeEscaper33.with(charSequenceTranslatorArray77);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator81 = unicodeEscaper13.with(charSequenceTranslatorArray77);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator82 = unicodeEscaper7.with(charSequenceTranslatorArray77);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator83 = unicodeEscaper2.with(charSequenceTranslatorArray77);
        java.io.Writer writer86 = null;
        int int87 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (int) '#', writer86);
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0" + "'", str4, "0");
        org.junit.Assert.assertNotNull(unicodeEscaper7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper22);
        org.junit.Assert.assertNotNull(unicodeEscaper24);
        org.junit.Assert.assertNotNull(unicodeEscaper26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str28, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray29);
        org.junit.Assert.assertNotNull(charSequenceTranslator30);
        org.junit.Assert.assertNotNull(unicodeEscaper33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper42);
        org.junit.Assert.assertNotNull(unicodeEscaper44);
        org.junit.Assert.assertNotNull(unicodeEscaper46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str48, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray49);
        org.junit.Assert.assertNotNull(charSequenceTranslator50);
        org.junit.Assert.assertNotNull(unicodeEscaper53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "0" + "'", str58, "0");
        org.junit.Assert.assertNotNull(unicodeEscaper61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper70);
        org.junit.Assert.assertNotNull(unicodeEscaper72);
        org.junit.Assert.assertNotNull(unicodeEscaper74);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str76, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray77);
        org.junit.Assert.assertNotNull(charSequenceTranslator78);
        org.junit.Assert.assertNotNull(charSequenceTranslator79);
        org.junit.Assert.assertNotNull(charSequenceTranslator80);
        org.junit.Assert.assertNotNull(charSequenceTranslator81);
        org.junit.Assert.assertNotNull(charSequenceTranslator82);
        org.junit.Assert.assertNotNull(charSequenceTranslator83);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
    }

    @Test
    public void test05158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05158");
        java.io.IOException iOException4 = new java.io.IOException("0");
        java.lang.Throwable[] throwableArray5 = iOException4.getSuppressed();
        java.io.IOException iOException6 = new java.io.IOException("hi!", (java.lang.Throwable) iOException4);
        java.io.IOException iOException8 = new java.io.IOException("");
        java.io.IOException iOException9 = new java.io.IOException((java.lang.Throwable) iOException8);
        java.io.IOException iOException11 = new java.io.IOException("");
        iOException9.addSuppressed((java.lang.Throwable) iOException11);
        java.io.IOException iOException14 = new java.io.IOException("");
        java.io.IOException iOException15 = new java.io.IOException((java.lang.Throwable) iOException14);
        java.io.IOException iOException17 = new java.io.IOException("");
        iOException15.addSuppressed((java.lang.Throwable) iOException17);
        iOException9.addSuppressed((java.lang.Throwable) iOException15);
        iOException6.addSuppressed((java.lang.Throwable) iOException9);
        java.io.IOException iOException21 = new java.io.IOException("java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception", (java.lang.Throwable) iOException9);
        java.io.IOException iOException23 = new java.io.IOException();
        java.io.IOException iOException24 = new java.io.IOException();
        iOException23.addSuppressed((java.lang.Throwable) iOException24);
        java.io.IOException iOException26 = new java.io.IOException();
        java.io.IOException iOException27 = new java.io.IOException();
        iOException26.addSuppressed((java.lang.Throwable) iOException27);
        java.lang.Throwable[] throwableArray29 = iOException27.getSuppressed();
        java.io.IOException iOException30 = new java.io.IOException((java.lang.Throwable) iOException27);
        java.io.IOException iOException32 = new java.io.IOException("");
        java.io.IOException iOException33 = new java.io.IOException((java.lang.Throwable) iOException32);
        iOException27.addSuppressed((java.lang.Throwable) iOException33);
        iOException24.addSuppressed((java.lang.Throwable) iOException33);
        java.io.IOException iOException36 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException33);
        java.io.IOException iOException39 = new java.io.IOException("");
        java.io.IOException iOException40 = new java.io.IOException((java.lang.Throwable) iOException39);
        java.io.IOException iOException42 = new java.io.IOException("");
        iOException40.addSuppressed((java.lang.Throwable) iOException42);
        java.io.IOException iOException44 = new java.io.IOException("java.io.IOException: 0", (java.lang.Throwable) iOException42);
        iOException33.addSuppressed((java.lang.Throwable) iOException42);
        iOException21.addSuppressed((java.lang.Throwable) iOException42);
        java.lang.Throwable[] throwableArray47 = iOException21.getSuppressed();
        java.lang.Throwable[] throwableArray48 = iOException21.getSuppressed();
        java.io.IOException iOException49 = new java.io.IOException((java.lang.Throwable) iOException21);
        java.io.IOException iOException50 = new java.io.IOException("\\u006A\\\\u0075005C\\u0075\\\\u00750030\\\\u00750030\\\\u00750036\\\\u00750031\\u0076\\\\u0075005C\\u0075\\\\u00750030\\\\u00750030\\\\u00750036\\\\u00750031\\\\u0075005C\\u0075\\\\u00750030\\\\u00750030\\\\u00750032\\\\u00750045\\u0069\\u006F\\\\u0075005C\\u0075\\\\u00750030\\\\u00750030\\\\u00750032\\\\u00750045\\\\u0075005C\\u0075\\\\u00750030\\\\u00750030\\\\u00750034\\\\u00750039\\\\u0075005C\\u0075\\\\u00750030\\\\u00750030\\\\u00750034\\\\u00750046\\\\u0075005C\\u0075\\\\u00750030\\\\u00750030\\\\u00750034\\\\u00750035\\u0078\\\\u0075005C\\u0075\\\\u00750030\\\\u00750030\\\\u00750036\\\\u00750033\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\\\u0075005C\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750041\\\\u0075005C\\u0075\\\\u00750030\\\\u00750030\\\\u00750032\\\\u00750030", (java.lang.Throwable) iOException49);
        java.lang.Class<?> wildcardClass51 = iOException49.getClass();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test05159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05159");
        java.io.IOException iOException2 = new java.io.IOException("23");
        java.io.IOException iOException3 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException4 = new java.io.IOException("\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034", (java.lang.Throwable) iOException3);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.lang.Throwable[] throwableArray6 = iOException5.getSuppressed();
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException5);
        org.junit.Assert.assertNotNull(throwableArray6);
    }

    @Test
    public void test05160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05160");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between(1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper5.translate((int) '4', writer7);
        java.io.Writer writer11 = null;
        int int12 = unicodeEscaper5.translate((java.lang.CharSequence) "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", 100, writer11);
        java.lang.String str14 = unicodeEscaper5.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper17 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) (byte) 10);
        java.lang.String str19 = unicodeEscaper17.translate((java.lang.CharSequence) "java.io.IOException");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper21 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) (short) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper24 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '#', 100);
        java.lang.String str26 = unicodeEscaper24.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper29 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) '4', (int) (short) 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper32 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper35 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', (int) (short) 0);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray36 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper35 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator37 = unicodeEscaper32.with(charSequenceTranslatorArray36);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator38 = unicodeEscaper29.with(charSequenceTranslatorArray36);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator39 = unicodeEscaper24.with(charSequenceTranslatorArray36);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator40 = unicodeEscaper21.with(charSequenceTranslatorArray36);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper43 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper46 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer48 = null;
        boolean boolean49 = unicodeEscaper46.translate((int) '4', writer48);
        java.io.Writer writer51 = null;
        boolean boolean52 = unicodeEscaper46.translate((int) (byte) -1, writer51);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper55 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper57 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper59 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str61 = unicodeEscaper59.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray62 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper55, unicodeEscaper57, unicodeEscaper59 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator63 = unicodeEscaper46.with(charSequenceTranslatorArray62);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator64 = unicodeEscaper43.with(charSequenceTranslatorArray62);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator65 = unicodeEscaper21.with(charSequenceTranslatorArray62);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator66 = unicodeEscaper17.with(charSequenceTranslatorArray62);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator67 = unicodeEscaper5.with(charSequenceTranslatorArray62);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator68 = unicodeEscaper2.with(charSequenceTranslatorArray62);
        java.lang.String str70 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: \\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper72 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (short) 1);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray73 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator74 = unicodeEscaper72.with(charSequenceTranslatorArray73);
        java.lang.String str76 = unicodeEscaper72.translate((java.lang.CharSequence) "java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper79 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) 'a', (int) (short) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper81 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer83 = null;
        boolean boolean84 = unicodeEscaper81.translate((int) ' ', writer83);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper87 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str89 = unicodeEscaper87.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray90 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator91 = unicodeEscaper87.with(charSequenceTranslatorArray90);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator92 = unicodeEscaper81.with(charSequenceTranslatorArray90);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator93 = unicodeEscaper79.with(charSequenceTranslatorArray90);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator94 = unicodeEscaper72.with(charSequenceTranslatorArray90);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator95 = unicodeEscaper2.with(charSequenceTranslatorArray90);
        java.io.Writer writer97 = null;
        boolean boolean98 = unicodeEscaper2.translate(0, writer97);
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030" + "'", str14, "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030");
        org.junit.Assert.assertNotNull(unicodeEscaper17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str19, "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertNotNull(unicodeEscaper21);
        org.junit.Assert.assertNotNull(unicodeEscaper24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str26, "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertNotNull(unicodeEscaper29);
        org.junit.Assert.assertNotNull(unicodeEscaper32);
        org.junit.Assert.assertNotNull(unicodeEscaper35);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray36);
        org.junit.Assert.assertNotNull(charSequenceTranslator37);
        org.junit.Assert.assertNotNull(charSequenceTranslator38);
        org.junit.Assert.assertNotNull(charSequenceTranslator39);
        org.junit.Assert.assertNotNull(charSequenceTranslator40);
        org.junit.Assert.assertNotNull(unicodeEscaper43);
        org.junit.Assert.assertNotNull(unicodeEscaper46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper55);
        org.junit.Assert.assertNotNull(unicodeEscaper57);
        org.junit.Assert.assertNotNull(unicodeEscaper59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str61, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray62);
        org.junit.Assert.assertNotNull(charSequenceTranslator63);
        org.junit.Assert.assertNotNull(charSequenceTranslator64);
        org.junit.Assert.assertNotNull(charSequenceTranslator65);
        org.junit.Assert.assertNotNull(charSequenceTranslator66);
        org.junit.Assert.assertNotNull(charSequenceTranslator67);
        org.junit.Assert.assertNotNull(charSequenceTranslator68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "java.io.IOException:\\u0020java.io.IOException:\\u0020\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034" + "'", str70, "java.io.IOException:\\u0020java.io.IOException:\\u0020\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034");
        org.junit.Assert.assertNotNull(unicodeEscaper72);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray73);
        org.junit.Assert.assertNotNull(charSequenceTranslator74);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030" + "'", str76, "java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030");
        org.junit.Assert.assertNotNull(unicodeEscaper79);
        org.junit.Assert.assertNotNull(unicodeEscaper81);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper87);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "0" + "'", str89, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray90);
        org.junit.Assert.assertNotNull(charSequenceTranslator91);
        org.junit.Assert.assertNotNull(charSequenceTranslator92);
        org.junit.Assert.assertNotNull(charSequenceTranslator93);
        org.junit.Assert.assertNotNull(charSequenceTranslator94);
        org.junit.Assert.assertNotNull(charSequenceTranslator95);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test05161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05161");
        java.io.IOException iOException2 = new java.io.IOException();
        java.io.IOException iOException3 = new java.io.IOException();
        iOException2.addSuppressed((java.lang.Throwable) iOException3);
        java.io.IOException iOException5 = new java.io.IOException("0", (java.lang.Throwable) iOException2);
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.lang.Throwable[] throwableArray9 = iOException8.getSuppressed();
        java.io.IOException iOException10 = new java.io.IOException("java.io.IOException: java.io.IOException", (java.lang.Throwable) iOException8);
        java.io.IOException iOException11 = new java.io.IOException((java.lang.Throwable) iOException10);
        java.lang.Throwable throwable13 = null;
        java.io.IOException iOException14 = new java.io.IOException("java.io.IOException: \\u0068\\u0069\\u0021", throwable13);
        java.io.IOException iOException17 = new java.io.IOException("");
        java.io.IOException iOException18 = new java.io.IOException((java.lang.Throwable) iOException17);
        java.io.IOException iOException20 = new java.io.IOException("");
        iOException18.addSuppressed((java.lang.Throwable) iOException20);
        java.io.IOException iOException22 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException20);
        iOException14.addSuppressed((java.lang.Throwable) iOException20);
        java.io.IOException iOException24 = new java.io.IOException((java.lang.Throwable) iOException20);
        iOException10.addSuppressed((java.lang.Throwable) iOException24);
        java.io.IOException iOException27 = new java.io.IOException();
        java.io.IOException iOException28 = new java.io.IOException();
        iOException27.addSuppressed((java.lang.Throwable) iOException28);
        java.lang.Throwable[] throwableArray30 = iOException28.getSuppressed();
        java.lang.Throwable[] throwableArray31 = iOException28.getSuppressed();
        java.io.IOException iOException32 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException28);
        java.io.IOException iOException33 = new java.io.IOException();
        java.io.IOException iOException34 = new java.io.IOException();
        iOException33.addSuppressed((java.lang.Throwable) iOException34);
        java.io.IOException iOException36 = new java.io.IOException((java.lang.Throwable) iOException33);
        java.lang.Throwable[] throwableArray37 = iOException36.getSuppressed();
        iOException32.addSuppressed((java.lang.Throwable) iOException36);
        iOException24.addSuppressed((java.lang.Throwable) iOException32);
        java.io.IOException iOException40 = new java.io.IOException((java.lang.Throwable) iOException24);
        java.lang.String str41 = iOException24.toString();
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "java.io.IOException: java.io.IOException: " + "'", str41, "java.io.IOException: java.io.IOException: ");
    }

    @Test
    public void test05162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05162");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 100, (int) (short) 100);
        java.io.Writer writer5 = null;
        int int6 = unicodeEscaper2.translate((java.lang.CharSequence) "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception", (int) (byte) 0, writer5);
        java.lang.String str8 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u005C\\u00750033\\u005C\\u00750034");
        java.io.Writer writer10 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException:\\u0020hi\\u0021", writer10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\u005C\\u00750033\\u005C\\u00750034" + "'", str8, "\\u005C\\u00750033\\u005C\\u00750034");
    }

    @Test
    public void test05163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05163");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) ' ');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.io.Writer writer8 = null;
        int int9 = unicodeEscaper5.translate((java.lang.CharSequence) "23", (int) (short) 0, writer8);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper11 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper13 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer15 = null;
        boolean boolean16 = unicodeEscaper13.translate((int) ' ', writer15);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper19 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str21 = unicodeEscaper19.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray22 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator23 = unicodeEscaper19.with(charSequenceTranslatorArray22);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator24 = unicodeEscaper13.with(charSequenceTranslatorArray22);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator25 = unicodeEscaper11.with(charSequenceTranslatorArray22);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator26 = unicodeEscaper5.with(charSequenceTranslatorArray22);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator27 = unicodeEscaper2.with(charSequenceTranslatorArray22);
        java.io.Writer writer30 = null;
        int int31 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: \\\\u0075006A\\\\u00750061\\\\u00750076\\\\u00750061\\\\u0075002E\\\\u00750069\\\\u0075006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E\\\\u0075003A\\\\u00750020", (int) '4', writer30);
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(unicodeEscaper11);
        org.junit.Assert.assertNotNull(unicodeEscaper13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "0" + "'", str21, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray22);
        org.junit.Assert.assertNotNull(charSequenceTranslator23);
        org.junit.Assert.assertNotNull(charSequenceTranslator24);
        org.junit.Assert.assertNotNull(charSequenceTranslator25);
        org.junit.Assert.assertNotNull(charSequenceTranslator26);
        org.junit.Assert.assertNotNull(charSequenceTranslator27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test05164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05164");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) ' ', 0);
        java.io.Writer writer5 = null;
        int int6 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u0068\\u0069\\u0021", (int) (short) 1, writer5);
        java.lang.String str8 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        java.io.Writer writer10 = null;
        boolean boolean11 = unicodeEscaper2.translate((int) '4', writer10);
        java.io.Writer writer13 = null;
        boolean boolean14 = unicodeEscaper2.translate(0, writer13);
        java.io.Writer writer16 = null;
        boolean boolean17 = unicodeEscaper2.translate((int) (byte) 100, writer16);
        java.io.Writer writer19 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate((java.lang.CharSequence) "\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034", writer19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str8, "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test05165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05165");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) 'a');
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) '4', writer4);
        java.io.Writer writer8 = null;
        int int9 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (int) (short) 10, writer8);
        java.io.Writer writer11 = null;
        boolean boolean12 = unicodeEscaper2.translate((int) (byte) 1, writer11);
        java.lang.String str14 = unicodeEscaper2.translate((java.lang.CharSequence) "64");
        java.io.Writer writer16 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", writer16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "64" + "'", str14, "64");
    }

    @Test
    public void test05166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05166");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper1 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) (short) 100);
        java.io.Writer writer4 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int5 = unicodeEscaper1.translate((java.lang.CharSequence) "j\\u005Cu\\u0030\\u0030\\u0036\\u0031v\\u005Cu\\u0030\\u0030\\u0036\\u0031\\u005Cu\\u0030\\u0030\\u0032\\u0045io\\u005Cu\\u0030\\u0030\\u0032\\u0045\\u005Cu\\u0030\\u0030\\u0034\\u0039\\u005Cu\\u0030\\u0030\\u0034\\u0046\\u005Cu\\u0030\\u0030\\u0034\\u0035x\\u005Cu\\u0030\\u0030\\u0036\\u0033eption\\u005Cu\\u0030\\u0030\\u0033\\u0041\\u005Cu\\u0030\\u0030\\u0032\\u0030", 0, writer4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper1);
    }

    @Test
    public void test05167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05167");
        java.io.IOException iOException1 = new java.io.IOException("\\u0041");
        java.io.IOException iOException6 = new java.io.IOException();
        java.io.IOException iOException7 = new java.io.IOException();
        iOException6.addSuppressed((java.lang.Throwable) iOException7);
        java.io.IOException iOException9 = new java.io.IOException();
        java.io.IOException iOException10 = new java.io.IOException();
        iOException9.addSuppressed((java.lang.Throwable) iOException10);
        java.lang.Throwable[] throwableArray12 = iOException10.getSuppressed();
        java.io.IOException iOException13 = new java.io.IOException((java.lang.Throwable) iOException10);
        java.io.IOException iOException15 = new java.io.IOException("");
        java.io.IOException iOException16 = new java.io.IOException((java.lang.Throwable) iOException15);
        iOException10.addSuppressed((java.lang.Throwable) iOException16);
        iOException7.addSuppressed((java.lang.Throwable) iOException16);
        java.io.IOException iOException19 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException16);
        java.io.IOException iOException20 = new java.io.IOException("64", (java.lang.Throwable) iOException19);
        java.io.IOException iOException21 = new java.io.IOException("java.io.IOException: java.io.IOException: ", (java.lang.Throwable) iOException20);
        java.io.IOException iOException22 = new java.io.IOException("\\u0036\\u0034", (java.lang.Throwable) iOException20);
        java.io.IOException iOException23 = new java.io.IOException((java.lang.Throwable) iOException20);
        java.lang.Throwable[] throwableArray24 = iOException20.getSuppressed();
        iOException1.addSuppressed((java.lang.Throwable) iOException20);
        java.io.IOException iOException27 = new java.io.IOException("0");
        java.io.IOException iOException28 = new java.io.IOException((java.lang.Throwable) iOException27);
        java.lang.Throwable[] throwableArray29 = iOException28.getSuppressed();
        java.lang.Throwable[] throwableArray30 = iOException28.getSuppressed();
        java.io.IOException iOException31 = new java.io.IOException((java.lang.Throwable) iOException28);
        iOException1.addSuppressed((java.lang.Throwable) iOException31);
        java.io.IOException iOException33 = new java.io.IOException((java.lang.Throwable) iOException31);
        java.io.IOException iOException34 = new java.io.IOException((java.lang.Throwable) iOException31);
        java.io.IOException iOException35 = new java.io.IOException((java.lang.Throwable) iOException34);
        java.lang.Class<?> wildcardClass36 = iOException34.getClass();
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test05168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05168");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (short) -1, 10);
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) ' ', writer4);
        java.lang.String str7 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "java.io.IOException: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str7, "java.io.IOException: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
    }

    @Test
    public void test05169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05169");
        java.io.IOException iOException1 = new java.io.IOException("j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020\\u005C\\u005Cu\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0036\\u0038\\u005C\\u005Cu\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0036\\u0039\\u005C\\u005Cu\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0032\\u0031");
        java.io.IOException iOException3 = new java.io.IOException();
        java.io.IOException iOException4 = new java.io.IOException();
        iOException3.addSuppressed((java.lang.Throwable) iOException4);
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException3);
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException8 = new java.io.IOException("", (java.lang.Throwable) iOException6);
        java.io.IOException iOException12 = new java.io.IOException("");
        java.io.IOException iOException13 = new java.io.IOException((java.lang.Throwable) iOException12);
        java.io.IOException iOException15 = new java.io.IOException("");
        iOException13.addSuppressed((java.lang.Throwable) iOException15);
        java.io.IOException iOException17 = new java.io.IOException("java.io.IOException: 0", (java.lang.Throwable) iOException15);
        java.io.IOException iOException18 = new java.io.IOException("java.io.IOException: java.io.IOException: java.io.IOException", (java.lang.Throwable) iOException15);
        iOException8.addSuppressed((java.lang.Throwable) iOException18);
        java.io.IOException iOException23 = new java.io.IOException();
        java.io.IOException iOException24 = new java.io.IOException();
        iOException23.addSuppressed((java.lang.Throwable) iOException24);
        java.io.IOException iOException26 = new java.io.IOException("0", (java.lang.Throwable) iOException23);
        java.io.IOException iOException27 = new java.io.IOException((java.lang.Throwable) iOException26);
        java.io.IOException iOException28 = new java.io.IOException((java.lang.Throwable) iOException27);
        java.io.IOException iOException29 = new java.io.IOException((java.lang.Throwable) iOException28);
        java.lang.Throwable[] throwableArray30 = iOException29.getSuppressed();
        java.io.IOException iOException31 = new java.io.IOException("java.io.IOException: java.io.IOException", (java.lang.Throwable) iOException29);
        java.io.IOException iOException32 = new java.io.IOException("\\u005Cu\\u0030\\u0030\\u0036\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0032\\u0031", (java.lang.Throwable) iOException29);
        java.io.IOException iOException33 = new java.io.IOException((java.lang.Throwable) iOException32);
        java.io.IOException iOException35 = new java.io.IOException();
        java.io.IOException iOException36 = new java.io.IOException();
        iOException35.addSuppressed((java.lang.Throwable) iOException36);
        java.io.IOException iOException38 = new java.io.IOException();
        java.io.IOException iOException39 = new java.io.IOException();
        iOException38.addSuppressed((java.lang.Throwable) iOException39);
        java.lang.Throwable[] throwableArray41 = iOException39.getSuppressed();
        java.io.IOException iOException42 = new java.io.IOException((java.lang.Throwable) iOException39);
        java.io.IOException iOException44 = new java.io.IOException("");
        java.io.IOException iOException45 = new java.io.IOException((java.lang.Throwable) iOException44);
        iOException39.addSuppressed((java.lang.Throwable) iOException45);
        iOException36.addSuppressed((java.lang.Throwable) iOException45);
        java.io.IOException iOException48 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException45);
        java.io.IOException iOException51 = new java.io.IOException("");
        java.io.IOException iOException52 = new java.io.IOException((java.lang.Throwable) iOException51);
        java.io.IOException iOException54 = new java.io.IOException("");
        iOException52.addSuppressed((java.lang.Throwable) iOException54);
        java.io.IOException iOException56 = new java.io.IOException("java.io.IOException: 0", (java.lang.Throwable) iOException54);
        iOException45.addSuppressed((java.lang.Throwable) iOException54);
        java.io.IOException iOException58 = new java.io.IOException((java.lang.Throwable) iOException45);
        iOException33.addSuppressed((java.lang.Throwable) iOException45);
        java.io.IOException iOException60 = new java.io.IOException((java.lang.Throwable) iOException33);
        iOException8.addSuppressed((java.lang.Throwable) iOException33);
        java.io.IOException iOException62 = new java.io.IOException((java.lang.Throwable) iOException33);
        iOException1.addSuppressed((java.lang.Throwable) iOException33);
        java.io.IOException iOException64 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.lang.Throwable[] throwableArray65 = iOException64.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray65);
    }

    @Test
    public void test05170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05170");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) ' ', (int) (short) 10);
        java.io.Writer writer5 = null;
        int int6 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (int) (byte) 1, writer5);
        java.io.Writer writer9 = null;
        int int10 = unicodeEscaper2.translate((java.lang.CharSequence) "\\\\u0075006A\\\\u00750061\\\\u00750076\\\\u00750061\\\\u0075002E\\\\u00750069\\\\u0075006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E\\\\u0075003A\\\\u00750020", (int) 'a', writer9);
        java.io.Writer writer12 = null;
        boolean boolean13 = unicodeEscaper2.translate((int) ' ', writer12);
        java.io.Writer writer15 = null;
        boolean boolean16 = unicodeEscaper2.translate(10, writer15);
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test05171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05171");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '4');
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: 0");
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\u\\u0030\\u00306Aa\\u\\u0030\\u003076a\\u002E\\u\\u0030\\u003069\\u\\u0030\\u00306F\\u002EIOE\\u\\u0030\\u003078\\u\\u0030\\u00306\\u0033\\u\\u0030\\u003065\\u\\u0030\\u00307\\u0030\\u\\u0030\\u00307\\u0034\\u\\u0030\\u003069\\u\\u0030\\u00306F\\u\\u0030\\u00306E:\\u0020\\u\\u0030\\u00306Aa\\u\\u0030\\u003076a\\u002E\\u\\u0030\\u003069\\u\\u0030\\u00306F\\u002EIOE\\u\\u0030\\u003078\\u\\u0030\\u00306\\u0033\\u\\u0030\\u003065\\u\\u0030\\u00307\\u0030\\u\\u0030\\u00307\\u0034\\u\\u0030\\u003069\\u\\u0030\\u00306F\\u\\u0030\\u00306E:\\u0020\\u\\u0030\\u00306Aa\\u\\u0030\\u003076a\\u002E\\u\\u0030\\u003069\\u\\u0030\\u00306F\\u002EIOE\\u\\u0030\\u003078\\u\\u0030\\u00306\\u0033\\u\\u0030\\u003065\\u\\u0030\\u00307\\u0030\\u\\u0030\\u00307\\u0034\\u\\u0030\\u003069\\u\\u0030\\u00306F\\u\\u0030\\u00306E:\\u0020\\u0030" + "'", str4, "\\u\\u0030\\u00306Aa\\u\\u0030\\u003076a\\u002E\\u\\u0030\\u003069\\u\\u0030\\u00306F\\u002EIOE\\u\\u0030\\u003078\\u\\u0030\\u00306\\u0033\\u\\u0030\\u003065\\u\\u0030\\u00307\\u0030\\u\\u0030\\u00307\\u0034\\u\\u0030\\u003069\\u\\u0030\\u00306F\\u\\u0030\\u00306E:\\u0020\\u\\u0030\\u00306Aa\\u\\u0030\\u003076a\\u002E\\u\\u0030\\u003069\\u\\u0030\\u00306F\\u002EIOE\\u\\u0030\\u003078\\u\\u0030\\u00306\\u0033\\u\\u0030\\u003065\\u\\u0030\\u00307\\u0030\\u\\u0030\\u00307\\u0034\\u\\u0030\\u003069\\u\\u0030\\u00306F\\u\\u0030\\u00306E:\\u0020\\u\\u0030\\u00306Aa\\u\\u0030\\u003076a\\u002E\\u\\u0030\\u003069\\u\\u0030\\u00306F\\u002EIOE\\u\\u0030\\u003078\\u\\u0030\\u00306\\u0033\\u\\u0030\\u003065\\u\\u0030\\u00307\\u0030\\u\\u0030\\u00307\\u0034\\u\\u0030\\u003069\\u\\u0030\\u00306F\\u\\u0030\\u00306E:\\u0020\\u0030");
    }

    @Test
    public void test05172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05172");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between(0, (int) (byte) 100);
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "");
        java.io.Writer writer6 = null;
        boolean boolean7 = unicodeEscaper2.translate((int) (byte) -1, writer6);
        java.io.Writer writer9 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = unicodeEscaper2.translate((int) (short) 0, writer9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test05173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05173");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper8 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer10 = null;
        boolean boolean11 = unicodeEscaper8.translate((int) (short) 10, writer10);
        java.lang.String str13 = unicodeEscaper8.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper16 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer18 = null;
        boolean boolean19 = unicodeEscaper16.translate((int) '4', writer18);
        java.io.Writer writer21 = null;
        boolean boolean22 = unicodeEscaper16.translate((int) (byte) -1, writer21);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper25 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper27 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper29 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str31 = unicodeEscaper29.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray32 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper25, unicodeEscaper27, unicodeEscaper29 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator33 = unicodeEscaper16.with(charSequenceTranslatorArray32);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator34 = unicodeEscaper8.with(charSequenceTranslatorArray32);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator35 = unicodeEscaper5.with(charSequenceTranslatorArray32);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator36 = unicodeEscaper2.with(charSequenceTranslatorArray32);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper39 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (byte) 1, (int) (byte) 100);
        java.io.Writer writer41 = null;
        boolean boolean42 = unicodeEscaper39.translate((int) (short) 1, writer41);
        java.lang.String str44 = unicodeEscaper39.translate((java.lang.CharSequence) "java.io.IOException");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper47 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer49 = null;
        boolean boolean50 = unicodeEscaper47.translate((int) (short) 10, writer49);
        java.io.Writer writer53 = null;
        int int54 = unicodeEscaper47.translate((java.lang.CharSequence) "0", (int) (byte) 0, writer53);
        java.lang.String str56 = unicodeEscaper47.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper59 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '#', 100);
        java.lang.String str61 = unicodeEscaper59.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper64 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) '4', (int) (short) 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper67 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper70 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', (int) (short) 0);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray71 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper70 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator72 = unicodeEscaper67.with(charSequenceTranslatorArray71);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator73 = unicodeEscaper64.with(charSequenceTranslatorArray71);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator74 = unicodeEscaper59.with(charSequenceTranslatorArray71);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator75 = unicodeEscaper47.with(charSequenceTranslatorArray71);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator76 = unicodeEscaper39.with(charSequenceTranslatorArray71);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator77 = unicodeEscaper2.with(charSequenceTranslatorArray71);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper80 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper82 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer84 = null;
        boolean boolean85 = unicodeEscaper82.translate((int) ' ', writer84);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper88 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str90 = unicodeEscaper88.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray91 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator92 = unicodeEscaper88.with(charSequenceTranslatorArray91);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator93 = unicodeEscaper82.with(charSequenceTranslatorArray91);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator94 = unicodeEscaper80.with(charSequenceTranslatorArray91);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator95 = charSequenceTranslator77.with(charSequenceTranslatorArray91);
        java.lang.String str97 = charSequenceTranslator95.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: 20");
        java.lang.Class<?> wildcardClass98 = charSequenceTranslator95.getClass();
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertNotNull(unicodeEscaper8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "0" + "'", str13, "0");
        org.junit.Assert.assertNotNull(unicodeEscaper16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper25);
        org.junit.Assert.assertNotNull(unicodeEscaper27);
        org.junit.Assert.assertNotNull(unicodeEscaper29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str31, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray32);
        org.junit.Assert.assertNotNull(charSequenceTranslator33);
        org.junit.Assert.assertNotNull(charSequenceTranslator34);
        org.junit.Assert.assertNotNull(charSequenceTranslator35);
        org.junit.Assert.assertNotNull(charSequenceTranslator36);
        org.junit.Assert.assertNotNull(unicodeEscaper39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str44, "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertNotNull(unicodeEscaper47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str56, "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertNotNull(unicodeEscaper59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str61, "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertNotNull(unicodeEscaper64);
        org.junit.Assert.assertNotNull(unicodeEscaper67);
        org.junit.Assert.assertNotNull(unicodeEscaper70);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray71);
        org.junit.Assert.assertNotNull(charSequenceTranslator72);
        org.junit.Assert.assertNotNull(charSequenceTranslator73);
        org.junit.Assert.assertNotNull(charSequenceTranslator74);
        org.junit.Assert.assertNotNull(charSequenceTranslator75);
        org.junit.Assert.assertNotNull(charSequenceTranslator76);
        org.junit.Assert.assertNotNull(charSequenceTranslator77);
        org.junit.Assert.assertNotNull(unicodeEscaper80);
        org.junit.Assert.assertNotNull(unicodeEscaper82);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper88);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "0" + "'", str90, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray91);
        org.junit.Assert.assertNotNull(charSequenceTranslator92);
        org.junit.Assert.assertNotNull(charSequenceTranslator93);
        org.junit.Assert.assertNotNull(charSequenceTranslator94);
        org.junit.Assert.assertNotNull(charSequenceTranslator95);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0032\\u0030" + "'", str97, "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0032\\u0030");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test05174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05174");
        java.io.IOException iOException1 = new java.io.IOException();
        java.io.IOException iOException2 = new java.io.IOException();
        iOException1.addSuppressed((java.lang.Throwable) iOException2);
        java.io.IOException iOException4 = new java.io.IOException();
        java.io.IOException iOException5 = new java.io.IOException();
        iOException4.addSuppressed((java.lang.Throwable) iOException5);
        java.lang.Throwable[] throwableArray7 = iOException5.getSuppressed();
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.io.IOException iOException10 = new java.io.IOException("");
        java.io.IOException iOException11 = new java.io.IOException((java.lang.Throwable) iOException10);
        iOException5.addSuppressed((java.lang.Throwable) iOException11);
        iOException2.addSuppressed((java.lang.Throwable) iOException11);
        java.io.IOException iOException14 = new java.io.IOException("java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception", (java.lang.Throwable) iOException2);
        java.lang.Throwable[] throwableArray15 = iOException14.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray15);
    }

    @Test
    public void test05175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05175");
        java.io.IOException iOException2 = new java.io.IOException();
        java.io.IOException iOException3 = new java.io.IOException();
        iOException2.addSuppressed((java.lang.Throwable) iOException3);
        java.lang.Throwable[] throwableArray5 = iOException3.getSuppressed();
        java.lang.Throwable[] throwableArray6 = iOException3.getSuppressed();
        java.io.IOException iOException7 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException3);
        java.io.IOException iOException8 = new java.io.IOException();
        java.io.IOException iOException9 = new java.io.IOException();
        iOException8.addSuppressed((java.lang.Throwable) iOException9);
        java.io.IOException iOException11 = new java.io.IOException((java.lang.Throwable) iOException8);
        java.lang.Throwable[] throwableArray12 = iOException11.getSuppressed();
        iOException7.addSuppressed((java.lang.Throwable) iOException11);
        java.io.IOException iOException15 = new java.io.IOException();
        java.io.IOException iOException16 = new java.io.IOException();
        iOException15.addSuppressed((java.lang.Throwable) iOException16);
        java.io.IOException iOException18 = new java.io.IOException();
        java.io.IOException iOException19 = new java.io.IOException();
        iOException18.addSuppressed((java.lang.Throwable) iOException19);
        java.lang.Throwable[] throwableArray21 = iOException19.getSuppressed();
        java.io.IOException iOException22 = new java.io.IOException((java.lang.Throwable) iOException19);
        java.io.IOException iOException24 = new java.io.IOException("");
        java.io.IOException iOException25 = new java.io.IOException((java.lang.Throwable) iOException24);
        iOException19.addSuppressed((java.lang.Throwable) iOException25);
        iOException16.addSuppressed((java.lang.Throwable) iOException25);
        java.io.IOException iOException28 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException25);
        iOException11.addSuppressed((java.lang.Throwable) iOException28);
        java.io.IOException iOException31 = new java.io.IOException("");
        java.io.IOException iOException32 = new java.io.IOException((java.lang.Throwable) iOException31);
        java.io.IOException iOException34 = new java.io.IOException("");
        iOException32.addSuppressed((java.lang.Throwable) iOException34);
        java.io.IOException iOException37 = new java.io.IOException("");
        java.io.IOException iOException38 = new java.io.IOException((java.lang.Throwable) iOException37);
        java.io.IOException iOException40 = new java.io.IOException("");
        iOException38.addSuppressed((java.lang.Throwable) iOException40);
        iOException32.addSuppressed((java.lang.Throwable) iOException38);
        iOException11.addSuppressed((java.lang.Throwable) iOException38);
        java.io.IOException iOException44 = new java.io.IOException((java.lang.Throwable) iOException11);
        java.io.IOException iOException45 = new java.io.IOException("java.io.IOException: java.io.IOException: \\u005Cu\\u0030\\u0030\\u0036\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0032\\u0031", (java.lang.Throwable) iOException44);
        java.io.IOException iOException46 = new java.io.IOException();
        java.io.IOException iOException47 = new java.io.IOException();
        iOException46.addSuppressed((java.lang.Throwable) iOException47);
        java.lang.Throwable[] throwableArray49 = iOException47.getSuppressed();
        java.io.IOException iOException50 = new java.io.IOException((java.lang.Throwable) iOException47);
        java.io.IOException iOException52 = new java.io.IOException("");
        java.io.IOException iOException53 = new java.io.IOException((java.lang.Throwable) iOException52);
        iOException47.addSuppressed((java.lang.Throwable) iOException53);
        java.io.IOException iOException56 = new java.io.IOException("0");
        java.io.IOException iOException57 = new java.io.IOException((java.lang.Throwable) iOException56);
        iOException47.addSuppressed((java.lang.Throwable) iOException56);
        java.io.IOException iOException59 = new java.io.IOException();
        java.io.IOException iOException60 = new java.io.IOException();
        iOException59.addSuppressed((java.lang.Throwable) iOException60);
        java.lang.Throwable[] throwableArray62 = iOException60.getSuppressed();
        java.lang.Throwable[] throwableArray63 = iOException60.getSuppressed();
        java.io.IOException iOException65 = new java.io.IOException();
        java.io.IOException iOException66 = new java.io.IOException();
        iOException65.addSuppressed((java.lang.Throwable) iOException66);
        java.io.IOException iOException68 = new java.io.IOException("0", (java.lang.Throwable) iOException65);
        java.io.IOException iOException69 = new java.io.IOException((java.lang.Throwable) iOException68);
        iOException60.addSuppressed((java.lang.Throwable) iOException69);
        java.io.IOException iOException72 = new java.io.IOException();
        java.io.IOException iOException73 = new java.io.IOException();
        iOException72.addSuppressed((java.lang.Throwable) iOException73);
        java.lang.Throwable[] throwableArray75 = iOException73.getSuppressed();
        java.io.IOException iOException76 = new java.io.IOException((java.lang.Throwable) iOException73);
        java.io.IOException iOException78 = new java.io.IOException("");
        java.io.IOException iOException79 = new java.io.IOException((java.lang.Throwable) iOException78);
        iOException73.addSuppressed((java.lang.Throwable) iOException79);
        java.lang.Throwable[] throwableArray81 = iOException73.getSuppressed();
        java.io.IOException iOException82 = new java.io.IOException("\\u0068\\u0069\\u0021", (java.lang.Throwable) iOException73);
        iOException69.addSuppressed((java.lang.Throwable) iOException82);
        iOException56.addSuppressed((java.lang.Throwable) iOException69);
        iOException45.addSuppressed((java.lang.Throwable) iOException56);
        java.lang.Class<?> wildcardClass86 = iOException56.getClass();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(throwableArray75);
        org.junit.Assert.assertNotNull(throwableArray81);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test05176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05176");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) '4', writer4);
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper2.translate((int) (byte) -1, writer7);
        java.io.Writer writer10 = null;
        boolean boolean11 = unicodeEscaper2.translate((int) '4', writer10);
        java.io.Writer writer13 = null;
        boolean boolean14 = unicodeEscaper2.translate(0, writer13);
        java.lang.String str16 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        java.lang.String str18 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030");
        java.lang.String str20 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u0068\\u0069!");
        java.io.Writer writer22 = null;
        boolean boolean23 = unicodeEscaper2.translate(100, writer22);
        java.io.Writer writer26 = null;
        int int27 = unicodeEscaper2.translate((java.lang.CharSequence) "j\\u0061v\\u0061.io.IOEx\\u0063eption:\\u0020j\\u0061v\\u0061.io.IOEx\\u0063eption:\\u0020j\\u0061v\\u0061.io.IOEx\\u0063eption:\\u0020j\\u0061v\\u0061.io.IOEx\\u0063eption:\\u0020j\\u0061v\\u0061.io.IOEx\\u0063eption:\\u00200", 0, writer26);
        java.lang.Class<?> wildcardClass28 = unicodeEscaper2.getClass();
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str16, "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030" + "'", str18, "\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u0068\\u0069\\u0021" + "'", str20, "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u0068\\u0069\\u0021");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test05177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05177");
        java.io.IOException iOException4 = new java.io.IOException();
        java.io.IOException iOException5 = new java.io.IOException();
        iOException4.addSuppressed((java.lang.Throwable) iOException5);
        java.io.IOException iOException7 = new java.io.IOException("0", (java.lang.Throwable) iOException4);
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.io.IOException iOException9 = new java.io.IOException((java.lang.Throwable) iOException8);
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException9);
        java.lang.Throwable[] throwableArray11 = iOException10.getSuppressed();
        java.io.IOException iOException12 = new java.io.IOException("java.io.IOException: java.io.IOException", (java.lang.Throwable) iOException10);
        java.io.IOException iOException13 = new java.io.IOException((java.lang.Throwable) iOException12);
        java.io.IOException iOException17 = new java.io.IOException("0");
        java.lang.Throwable[] throwableArray18 = iOException17.getSuppressed();
        java.io.IOException iOException19 = new java.io.IOException("hi!", (java.lang.Throwable) iOException17);
        java.io.IOException iOException20 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException17);
        iOException12.addSuppressed((java.lang.Throwable) iOException20);
        java.io.IOException iOException22 = new java.io.IOException("\\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\u0063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E: \\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\u0063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E", (java.lang.Throwable) iOException20);
        java.io.IOException iOException23 = new java.io.IOException("\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\\\u00750068\\\\u00750069\\\\u00750021", (java.lang.Throwable) iOException22);
        java.io.IOException iOException26 = new java.io.IOException("");
        java.io.IOException iOException27 = new java.io.IOException((java.lang.Throwable) iOException26);
        java.io.IOException iOException29 = new java.io.IOException("");
        iOException27.addSuppressed((java.lang.Throwable) iOException29);
        java.io.IOException iOException32 = new java.io.IOException("");
        java.io.IOException iOException33 = new java.io.IOException((java.lang.Throwable) iOException32);
        java.io.IOException iOException35 = new java.io.IOException("");
        iOException33.addSuppressed((java.lang.Throwable) iOException35);
        iOException27.addSuppressed((java.lang.Throwable) iOException33);
        java.io.IOException iOException38 = new java.io.IOException("0", (java.lang.Throwable) iOException27);
        iOException22.addSuppressed((java.lang.Throwable) iOException27);
        java.io.IOException iOException40 = new java.io.IOException((java.lang.Throwable) iOException22);
        java.io.IOException iOException42 = new java.io.IOException();
        java.io.IOException iOException43 = new java.io.IOException();
        iOException42.addSuppressed((java.lang.Throwable) iOException43);
        java.lang.Throwable[] throwableArray45 = iOException43.getSuppressed();
        java.lang.Throwable[] throwableArray46 = iOException43.getSuppressed();
        java.io.IOException iOException48 = new java.io.IOException();
        java.io.IOException iOException49 = new java.io.IOException();
        iOException48.addSuppressed((java.lang.Throwable) iOException49);
        java.io.IOException iOException51 = new java.io.IOException("0", (java.lang.Throwable) iOException48);
        java.io.IOException iOException52 = new java.io.IOException((java.lang.Throwable) iOException51);
        iOException43.addSuppressed((java.lang.Throwable) iOException52);
        java.lang.Throwable[] throwableArray54 = iOException52.getSuppressed();
        java.io.IOException iOException55 = new java.io.IOException("A", (java.lang.Throwable) iOException52);
        iOException22.addSuppressed((java.lang.Throwable) iOException55);
        java.lang.Throwable throwable57 = null;
        // The following exception was thrown during execution in test generation
        try {
            iOException22.addSuppressed(throwable57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray54);
    }

    @Test
    public void test05178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05178");
        java.io.IOException iOException1 = new java.io.IOException();
        java.io.IOException iOException2 = new java.io.IOException();
        iOException1.addSuppressed((java.lang.Throwable) iOException2);
        java.lang.Throwable[] throwableArray4 = iOException2.getSuppressed();
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException7 = new java.io.IOException("");
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        iOException2.addSuppressed((java.lang.Throwable) iOException8);
        java.lang.Throwable[] throwableArray10 = iOException2.getSuppressed();
        java.lang.Throwable[] throwableArray11 = iOException2.getSuppressed();
        java.io.IOException iOException12 = new java.io.IOException("java.io.IOException: java.io.IOException", (java.lang.Throwable) iOException2);
        java.io.IOException iOException13 = new java.io.IOException();
        java.io.IOException iOException14 = new java.io.IOException();
        iOException13.addSuppressed((java.lang.Throwable) iOException14);
        java.lang.Throwable[] throwableArray16 = iOException14.getSuppressed();
        java.lang.Throwable[] throwableArray17 = iOException14.getSuppressed();
        java.io.IOException iOException19 = new java.io.IOException();
        java.io.IOException iOException20 = new java.io.IOException();
        iOException19.addSuppressed((java.lang.Throwable) iOException20);
        java.io.IOException iOException22 = new java.io.IOException("0", (java.lang.Throwable) iOException19);
        java.io.IOException iOException23 = new java.io.IOException((java.lang.Throwable) iOException22);
        iOException14.addSuppressed((java.lang.Throwable) iOException23);
        java.lang.Throwable[] throwableArray25 = iOException23.getSuppressed();
        iOException12.addSuppressed((java.lang.Throwable) iOException23);
        java.lang.Throwable throwable28 = null;
        java.io.IOException iOException29 = new java.io.IOException("j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u005Cu\\u0030\\u0030\\u0032\\u0045io\\u005Cu\\u0030\\u0030\\u0032\\u0045\\u005Cu\\u0030\\u0030\\u0034\\u0039\\u005Cu\\u0030\\u0030\\u0034\\u0046\\u005Cu\\u0030\\u0030\\u0034\\u0035x\\u0063eption\\u005Cu\\u0030\\u0030\\u0033\\u0041\\u005Cu\\u0030\\u0030\\u0032\\u0030j\\u0061v\\u0061\\u005Cu\\u0030\\u0030\\u0032\\u0045io\\u005Cu\\u0030\\u0030\\u0032\\u0045\\u005Cu\\u0030\\u0030\\u0034\\u0039\\u005Cu\\u0030\\u0030\\u0034\\u0046\\u005Cu\\u0030\\u0030\\u0034\\u0035x\\u0063eption", throwable28);
        java.io.IOException iOException30 = new java.io.IOException(throwable28);
        java.io.IOException iOException31 = new java.io.IOException((java.lang.Throwable) iOException30);
        iOException12.addSuppressed((java.lang.Throwable) iOException30);
        java.lang.String str33 = iOException30.toString();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "java.io.IOException" + "'", str33, "java.io.IOException");
    }

    @Test
    public void test05179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05179");
        java.io.IOException iOException2 = new java.io.IOException();
        java.io.IOException iOException3 = new java.io.IOException();
        iOException2.addSuppressed((java.lang.Throwable) iOException3);
        java.io.IOException iOException5 = new java.io.IOException();
        java.io.IOException iOException6 = new java.io.IOException();
        iOException5.addSuppressed((java.lang.Throwable) iOException6);
        java.lang.Throwable[] throwableArray8 = iOException6.getSuppressed();
        java.io.IOException iOException9 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException11 = new java.io.IOException("");
        java.io.IOException iOException12 = new java.io.IOException((java.lang.Throwable) iOException11);
        iOException6.addSuppressed((java.lang.Throwable) iOException12);
        iOException3.addSuppressed((java.lang.Throwable) iOException12);
        java.io.IOException iOException15 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException12);
        java.io.IOException iOException18 = new java.io.IOException("");
        java.io.IOException iOException19 = new java.io.IOException((java.lang.Throwable) iOException18);
        java.io.IOException iOException21 = new java.io.IOException("");
        iOException19.addSuppressed((java.lang.Throwable) iOException21);
        java.io.IOException iOException23 = new java.io.IOException("java.io.IOException: 0", (java.lang.Throwable) iOException21);
        iOException12.addSuppressed((java.lang.Throwable) iOException21);
        java.io.IOException iOException25 = new java.io.IOException((java.lang.Throwable) iOException21);
        java.io.IOException iOException26 = new java.io.IOException("\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\\\u0075006A\\\\u00750061\\\\u00750076\\\\u00750061\\\\u0075002E\\\\u00750069\\\\u0075006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E\\\\u0075003A\\\\u00750020\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750036\\\\u00750038\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750036\\\\u00750039\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750032\\\\u00750031", (java.lang.Throwable) iOException25);
        java.lang.String str27 = iOException26.toString();
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "java.io.IOException: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\\\u0075006A\\\\u00750061\\\\u00750076\\\\u00750061\\\\u0075002E\\\\u00750069\\\\u0075006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E\\\\u0075003A\\\\u00750020\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750036\\\\u00750038\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750036\\\\u00750039\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750032\\\\u00750031" + "'", str27, "java.io.IOException: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\\\u0075006A\\\\u00750061\\\\u00750076\\\\u00750061\\\\u0075002E\\\\u00750069\\\\u0075006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E\\\\u0075003A\\\\u00750020\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750036\\\\u00750038\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750036\\\\u00750039\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750032\\\\u00750031");
    }

    @Test
    public void test05180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05180");
        java.io.IOException iOException1 = new java.io.IOException("java.io.IOException:\\u0020java.io.IOException:\\u002023");
    }

    @Test
    public void test05181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05181");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '#', (int) (short) 100);
        java.io.Writer writer5 = null;
        int int6 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: hi!", (int) (short) 10, writer5);
        java.io.Writer writer9 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int10 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750035\\\\u00750043\\\\u00750075\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750033\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750033\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750035\\\\u00750043\\\\u00750075\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750033\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750034", (int) (byte) 1, writer9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test05182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05182");
        java.io.IOException iOException1 = new java.io.IOException();
        java.io.IOException iOException2 = new java.io.IOException();
        iOException1.addSuppressed((java.lang.Throwable) iOException2);
        java.lang.Throwable[] throwableArray4 = iOException2.getSuppressed();
        java.lang.Throwable[] throwableArray5 = iOException2.getSuppressed();
        java.io.IOException iOException6 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException2);
        java.io.IOException iOException7 = new java.io.IOException();
        java.io.IOException iOException8 = new java.io.IOException();
        iOException7.addSuppressed((java.lang.Throwable) iOException8);
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.lang.Throwable[] throwableArray11 = iOException10.getSuppressed();
        iOException6.addSuppressed((java.lang.Throwable) iOException10);
        java.io.IOException iOException14 = new java.io.IOException();
        java.io.IOException iOException15 = new java.io.IOException();
        iOException14.addSuppressed((java.lang.Throwable) iOException15);
        java.io.IOException iOException17 = new java.io.IOException();
        java.io.IOException iOException18 = new java.io.IOException();
        iOException17.addSuppressed((java.lang.Throwable) iOException18);
        java.lang.Throwable[] throwableArray20 = iOException18.getSuppressed();
        java.io.IOException iOException21 = new java.io.IOException((java.lang.Throwable) iOException18);
        java.io.IOException iOException23 = new java.io.IOException("");
        java.io.IOException iOException24 = new java.io.IOException((java.lang.Throwable) iOException23);
        iOException18.addSuppressed((java.lang.Throwable) iOException24);
        iOException15.addSuppressed((java.lang.Throwable) iOException24);
        java.io.IOException iOException27 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException24);
        iOException10.addSuppressed((java.lang.Throwable) iOException27);
        java.io.IOException iOException30 = new java.io.IOException("");
        java.io.IOException iOException31 = new java.io.IOException((java.lang.Throwable) iOException30);
        java.io.IOException iOException33 = new java.io.IOException("");
        iOException31.addSuppressed((java.lang.Throwable) iOException33);
        java.io.IOException iOException36 = new java.io.IOException("");
        java.io.IOException iOException37 = new java.io.IOException((java.lang.Throwable) iOException36);
        java.io.IOException iOException39 = new java.io.IOException("");
        iOException37.addSuppressed((java.lang.Throwable) iOException39);
        iOException31.addSuppressed((java.lang.Throwable) iOException37);
        iOException10.addSuppressed((java.lang.Throwable) iOException37);
        java.lang.Throwable[] throwableArray43 = iOException37.getSuppressed();
        java.io.IOException iOException45 = new java.io.IOException();
        java.io.IOException iOException46 = new java.io.IOException();
        iOException45.addSuppressed((java.lang.Throwable) iOException46);
        java.io.IOException iOException48 = new java.io.IOException("0", (java.lang.Throwable) iOException45);
        java.io.IOException iOException49 = new java.io.IOException((java.lang.Throwable) iOException48);
        java.io.IOException iOException50 = new java.io.IOException((java.lang.Throwable) iOException49);
        java.io.IOException iOException51 = new java.io.IOException((java.lang.Throwable) iOException50);
        java.lang.Throwable[] throwableArray52 = iOException50.getSuppressed();
        iOException37.addSuppressed((java.lang.Throwable) iOException50);
        java.io.IOException iOException54 = new java.io.IOException((java.lang.Throwable) iOException50);
        java.lang.String str55 = iOException54.toString();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: 0" + "'", str55, "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: 0");
    }

    @Test
    public void test05183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05183");
        java.lang.Throwable throwable3 = null;
        java.io.IOException iOException4 = new java.io.IOException("java.io.IOException: \\u0068\\u0069\\u0021", throwable3);
        java.io.IOException iOException7 = new java.io.IOException("");
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.io.IOException iOException10 = new java.io.IOException("");
        iOException8.addSuppressed((java.lang.Throwable) iOException10);
        java.io.IOException iOException12 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException10);
        iOException4.addSuppressed((java.lang.Throwable) iOException10);
        java.io.IOException iOException14 = new java.io.IOException((java.lang.Throwable) iOException10);
        java.io.IOException iOException18 = new java.io.IOException();
        java.io.IOException iOException19 = new java.io.IOException();
        iOException18.addSuppressed((java.lang.Throwable) iOException19);
        java.io.IOException iOException21 = new java.io.IOException("0", (java.lang.Throwable) iOException18);
        java.io.IOException iOException22 = new java.io.IOException((java.lang.Throwable) iOException21);
        java.io.IOException iOException23 = new java.io.IOException((java.lang.Throwable) iOException22);
        java.io.IOException iOException24 = new java.io.IOException((java.lang.Throwable) iOException23);
        java.lang.Throwable[] throwableArray25 = iOException24.getSuppressed();
        java.io.IOException iOException26 = new java.io.IOException("java.io.IOException: java.io.IOException", (java.lang.Throwable) iOException24);
        java.io.IOException iOException27 = new java.io.IOException("\\u0068\\u0069\\u0021", (java.lang.Throwable) iOException24);
        iOException10.addSuppressed((java.lang.Throwable) iOException24);
        java.io.IOException iOException29 = new java.io.IOException("java.io.IOException: j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020", (java.lang.Throwable) iOException10);
        java.io.IOException iOException30 = new java.io.IOException("java.io.IOException: java.io.IOException: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\\\u00750068\\\\u00750069\\\\u00750021", (java.lang.Throwable) iOException29);
        java.io.IOException iOException33 = new java.io.IOException("0");
        java.lang.Throwable[] throwableArray34 = iOException33.getSuppressed();
        java.io.IOException iOException35 = new java.io.IOException("hi!", (java.lang.Throwable) iOException33);
        java.lang.Throwable[] throwableArray36 = iOException33.getSuppressed();
        iOException29.addSuppressed((java.lang.Throwable) iOException33);
        java.lang.String str38 = iOException29.toString();
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "java.io.IOException: java.io.IOException: j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020" + "'", str38, "java.io.IOException: java.io.IOException: j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020");
    }

    @Test
    public void test05184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05184");
        java.io.IOException iOException2 = new java.io.IOException();
        java.io.IOException iOException3 = new java.io.IOException();
        iOException2.addSuppressed((java.lang.Throwable) iOException3);
        java.lang.Throwable[] throwableArray5 = iOException3.getSuppressed();
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException3);
        java.io.IOException iOException8 = new java.io.IOException("");
        java.io.IOException iOException9 = new java.io.IOException((java.lang.Throwable) iOException8);
        iOException3.addSuppressed((java.lang.Throwable) iOException9);
        java.lang.Throwable[] throwableArray11 = iOException3.getSuppressed();
        java.lang.Throwable[] throwableArray12 = iOException3.getSuppressed();
        java.io.IOException iOException13 = new java.io.IOException("java.io.IOException: java.io.IOException", (java.lang.Throwable) iOException3);
        java.io.IOException iOException14 = new java.io.IOException((java.lang.Throwable) iOException13);
        java.io.IOException iOException15 = new java.io.IOException((java.lang.Throwable) iOException13);
        java.io.IOException iOException16 = new java.io.IOException("java.io.IOException: java.io.IOException: \\u005Cu\\u0030\\u0030\\u0036\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0032\\u0031", (java.lang.Throwable) iOException15);
        java.lang.Class<?> wildcardClass17 = iOException16.getClass();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test05185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05185");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) '4', writer4);
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper2.translate((int) (byte) -1, writer7);
        java.io.Writer writer10 = null;
        boolean boolean11 = unicodeEscaper2.translate((int) (byte) -1, writer10);
        java.io.Writer writer14 = null;
        int int15 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u0036\\u0034", 10, writer14);
        java.lang.String str17 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u005Cu\\u0030\\u0030\\u0036\\u0041\\u005Cu\\u0030\\u0030\\u0036\\u0031\\u005Cu\\u0030\\u0030\\u0037\\u0036\\u005Cu\\u0030\\u0030\\u0036\\u0031\\u005Cu\\u0030\\u0030\\u0032\\u0045\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0036\\u0046\\u005Cu\\u0030\\u0030\\u0032\\u0045\\u005Cu\\u0030\\u0030\\u0034\\u0039\\u005Cu\\u0030\\u0030\\u0034\\u0046\\u005Cu\\u0030\\u0030\\u0034\\u0035\\u005Cu\\u0030\\u0030\\u0037\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0033\\u005Cu\\u0030\\u0030\\u0036\\u0035\\u005Cu\\u0030\\u0030\\u0037\\u0030\\u005Cu\\u0030\\u0030\\u0037\\u0034\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0036\\u0046\\u005Cu\\u0030\\u0030\\u0036\\u0045\\u005Cu\\u0030\\u0030\\u0033\\u0041\\u005Cu\\u0030\\u0030\\u0032\\u0030");
        java.io.Writer writer19 = null;
        boolean boolean20 = unicodeEscaper2.translate((int) (short) -1, writer19);
        java.lang.String str22 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u0046\\u0046\\u0046\\u0046\\u0046\\u0046\\u0046\\u0046");
        java.io.Writer writer25 = null;
        int int26 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030", (int) ' ', writer25);
        java.lang.Class<?> wildcardClass27 = unicodeEscaper2.getClass();
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\u005Cu\\u0030\\u0030\\u0036\\u0041\\u005Cu\\u0030\\u0030\\u0036\\u0031\\u005Cu\\u0030\\u0030\\u0037\\u0036\\u005Cu\\u0030\\u0030\\u0036\\u0031\\u005Cu\\u0030\\u0030\\u0032\\u0045\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0036\\u0046\\u005Cu\\u0030\\u0030\\u0032\\u0045\\u005Cu\\u0030\\u0030\\u0034\\u0039\\u005Cu\\u0030\\u0030\\u0034\\u0046\\u005Cu\\u0030\\u0030\\u0034\\u0035\\u005Cu\\u0030\\u0030\\u0037\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0033\\u005Cu\\u0030\\u0030\\u0036\\u0035\\u005Cu\\u0030\\u0030\\u0037\\u0030\\u005Cu\\u0030\\u0030\\u0037\\u0034\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0036\\u0046\\u005Cu\\u0030\\u0030\\u0036\\u0045\\u005Cu\\u0030\\u0030\\u0033\\u0041\\u005Cu\\u0030\\u0030\\u0032\\u0030" + "'", str17, "\\u005Cu\\u0030\\u0030\\u0036\\u0041\\u005Cu\\u0030\\u0030\\u0036\\u0031\\u005Cu\\u0030\\u0030\\u0037\\u0036\\u005Cu\\u0030\\u0030\\u0036\\u0031\\u005Cu\\u0030\\u0030\\u0032\\u0045\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0036\\u0046\\u005Cu\\u0030\\u0030\\u0032\\u0045\\u005Cu\\u0030\\u0030\\u0034\\u0039\\u005Cu\\u0030\\u0030\\u0034\\u0046\\u005Cu\\u0030\\u0030\\u0034\\u0035\\u005Cu\\u0030\\u0030\\u0037\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0033\\u005Cu\\u0030\\u0030\\u0036\\u0035\\u005Cu\\u0030\\u0030\\u0037\\u0030\\u005Cu\\u0030\\u0030\\u0037\\u0034\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0036\\u0046\\u005Cu\\u0030\\u0030\\u0036\\u0045\\u005Cu\\u0030\\u0030\\u0033\\u0041\\u005Cu\\u0030\\u0030\\u0032\\u0030");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\\u0046\\u0046\\u0046\\u0046\\u0046\\u0046\\u0046\\u0046" + "'", str22, "\\u0046\\u0046\\u0046\\u0046\\u0046\\u0046\\u0046\\u0046");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test05186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05186");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper1 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer3 = null;
        boolean boolean4 = unicodeEscaper1.translate((int) ' ', writer3);
        java.io.Writer writer6 = null;
        boolean boolean7 = unicodeEscaper1.translate((int) (byte) 0, writer6);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper9 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper11 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer13 = null;
        boolean boolean14 = unicodeEscaper11.translate((int) ' ', writer13);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper17 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str19 = unicodeEscaper17.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray20 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator21 = unicodeEscaper17.with(charSequenceTranslatorArray20);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator22 = unicodeEscaper11.with(charSequenceTranslatorArray20);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator23 = unicodeEscaper9.with(charSequenceTranslatorArray20);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator24 = unicodeEscaper1.with(charSequenceTranslatorArray20);
        java.io.Writer writer27 = null;
        int int28 = unicodeEscaper1.translate((java.lang.CharSequence) "java.io.IOException: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\\\u00750068\\\\u00750069\\\\u00750021", (int) ' ', writer27);
        java.io.Writer writer30 = null;
        boolean boolean31 = unicodeEscaper1.translate((int) '#', writer30);
        org.junit.Assert.assertNotNull(unicodeEscaper1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper9);
        org.junit.Assert.assertNotNull(unicodeEscaper11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "0" + "'", str19, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray20);
        org.junit.Assert.assertNotNull(charSequenceTranslator21);
        org.junit.Assert.assertNotNull(charSequenceTranslator22);
        org.junit.Assert.assertNotNull(charSequenceTranslator23);
        org.junit.Assert.assertNotNull(charSequenceTranslator24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test05187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05187");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) '#', 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (short) -1, (int) '4');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper8 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 0, 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper11 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 0, (int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper14 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper17 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer19 = null;
        boolean boolean20 = unicodeEscaper17.translate((int) '4', writer19);
        java.io.Writer writer22 = null;
        boolean boolean23 = unicodeEscaper17.translate((int) (byte) -1, writer22);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper26 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper28 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper30 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str32 = unicodeEscaper30.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray33 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper26, unicodeEscaper28, unicodeEscaper30 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator34 = unicodeEscaper17.with(charSequenceTranslatorArray33);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator35 = unicodeEscaper14.with(charSequenceTranslatorArray33);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator36 = unicodeEscaper11.with(charSequenceTranslatorArray33);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator37 = unicodeEscaper8.with(charSequenceTranslatorArray33);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator38 = unicodeEscaper5.with(charSequenceTranslatorArray33);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper41 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper44 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', (int) (short) 0);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray45 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper44 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator46 = unicodeEscaper41.with(charSequenceTranslatorArray45);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator47 = unicodeEscaper5.with(charSequenceTranslatorArray45);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator48 = unicodeEscaper2.with(charSequenceTranslatorArray45);
        java.lang.String str50 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: java.io.IOException: \\u005Cu\\u0030\\u0030\\u0036\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0032\\u0031");
        java.lang.Class<?> wildcardClass51 = unicodeEscaper2.getClass();
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertNotNull(unicodeEscaper8);
        org.junit.Assert.assertNotNull(unicodeEscaper11);
        org.junit.Assert.assertNotNull(unicodeEscaper14);
        org.junit.Assert.assertNotNull(unicodeEscaper17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper26);
        org.junit.Assert.assertNotNull(unicodeEscaper28);
        org.junit.Assert.assertNotNull(unicodeEscaper30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str32, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray33);
        org.junit.Assert.assertNotNull(charSequenceTranslator34);
        org.junit.Assert.assertNotNull(charSequenceTranslator35);
        org.junit.Assert.assertNotNull(charSequenceTranslator36);
        org.junit.Assert.assertNotNull(charSequenceTranslator37);
        org.junit.Assert.assertNotNull(charSequenceTranslator38);
        org.junit.Assert.assertNotNull(unicodeEscaper41);
        org.junit.Assert.assertNotNull(unicodeEscaper44);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray45);
        org.junit.Assert.assertNotNull(charSequenceTranslator46);
        org.junit.Assert.assertNotNull(charSequenceTranslator47);
        org.junit.Assert.assertNotNull(charSequenceTranslator48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "java.io.IOException: java.io.IOException: java.io.IOException: \\u005Cu\\u0030\\u0030\\u0036\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0032\\u0031" + "'", str50, "java.io.IOException: java.io.IOException: java.io.IOException: \\u005Cu\\u0030\\u0030\\u0036\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0032\\u0031");
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test05188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05188");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) (short) 10, writer4);
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper2.translate((int) '#', writer7);
        java.io.Writer writer11 = null;
        int int12 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException", (int) (byte) 1, writer11);
        java.io.Writer writer14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = unicodeEscaper2.translate((int) (byte) -1, writer14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test05189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05189");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) ' ');
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "\\\\u0075005C\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030");
        java.io.Writer writer6 = null;
        boolean boolean7 = unicodeEscaper2.translate((int) (short) 10, writer6);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper10 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer12 = null;
        boolean boolean13 = unicodeEscaper10.translate((int) (short) 10, writer12);
        java.lang.String str15 = unicodeEscaper10.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper18 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer20 = null;
        boolean boolean21 = unicodeEscaper18.translate((int) '4', writer20);
        java.io.Writer writer23 = null;
        boolean boolean24 = unicodeEscaper18.translate((int) (byte) -1, writer23);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper27 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper29 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper31 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str33 = unicodeEscaper31.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray34 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper27, unicodeEscaper29, unicodeEscaper31 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator35 = unicodeEscaper18.with(charSequenceTranslatorArray34);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator36 = unicodeEscaper10.with(charSequenceTranslatorArray34);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper39 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.lang.String str41 = unicodeEscaper39.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray42 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper39 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator43 = unicodeEscaper10.with(charSequenceTranslatorArray42);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator44 = unicodeEscaper2.with(charSequenceTranslatorArray42);
        java.io.Writer writer46 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean47 = unicodeEscaper2.translate((int) '#', writer46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0030\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0030\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0033\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0030" + "'", str4, "\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0030\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0030\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0033\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0030");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "0" + "'", str15, "0");
        org.junit.Assert.assertNotNull(unicodeEscaper18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper27);
        org.junit.Assert.assertNotNull(unicodeEscaper29);
        org.junit.Assert.assertNotNull(unicodeEscaper31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str33, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray34);
        org.junit.Assert.assertNotNull(charSequenceTranslator35);
        org.junit.Assert.assertNotNull(charSequenceTranslator36);
        org.junit.Assert.assertNotNull(unicodeEscaper39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str41, "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray42);
        org.junit.Assert.assertNotNull(charSequenceTranslator43);
        org.junit.Assert.assertNotNull(charSequenceTranslator44);
    }

    @Test
    public void test05190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05190");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(100, (int) (short) 100);
        java.io.Writer writer4 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate((java.lang.CharSequence) "\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030", writer4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
    }

    @Test
    public void test05191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05191");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) '4', writer4);
        java.io.Writer writer8 = null;
        int int9 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", 100, writer8);
        java.lang.String str11 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper14 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) (byte) 10);
        java.lang.String str16 = unicodeEscaper14.translate((java.lang.CharSequence) "java.io.IOException");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper18 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) (short) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper21 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '#', 100);
        java.lang.String str23 = unicodeEscaper21.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper26 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) '4', (int) (short) 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper29 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper32 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', (int) (short) 0);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray33 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper32 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator34 = unicodeEscaper29.with(charSequenceTranslatorArray33);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator35 = unicodeEscaper26.with(charSequenceTranslatorArray33);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator36 = unicodeEscaper21.with(charSequenceTranslatorArray33);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator37 = unicodeEscaper18.with(charSequenceTranslatorArray33);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper40 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper43 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer45 = null;
        boolean boolean46 = unicodeEscaper43.translate((int) '4', writer45);
        java.io.Writer writer48 = null;
        boolean boolean49 = unicodeEscaper43.translate((int) (byte) -1, writer48);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper52 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper54 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper56 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str58 = unicodeEscaper56.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray59 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper52, unicodeEscaper54, unicodeEscaper56 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator60 = unicodeEscaper43.with(charSequenceTranslatorArray59);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator61 = unicodeEscaper40.with(charSequenceTranslatorArray59);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator62 = unicodeEscaper18.with(charSequenceTranslatorArray59);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator63 = unicodeEscaper14.with(charSequenceTranslatorArray59);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator64 = unicodeEscaper2.with(charSequenceTranslatorArray59);
        java.io.Writer writer67 = null;
        int int68 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: 1", (int) (byte) 0, writer67);
        java.lang.CharSequence charSequence69 = null;
        java.io.Writer writer71 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int72 = unicodeEscaper2.translate(charSequence69, (int) '4', writer71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030" + "'", str11, "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030");
        org.junit.Assert.assertNotNull(unicodeEscaper14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str16, "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertNotNull(unicodeEscaper18);
        org.junit.Assert.assertNotNull(unicodeEscaper21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str23, "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertNotNull(unicodeEscaper26);
        org.junit.Assert.assertNotNull(unicodeEscaper29);
        org.junit.Assert.assertNotNull(unicodeEscaper32);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray33);
        org.junit.Assert.assertNotNull(charSequenceTranslator34);
        org.junit.Assert.assertNotNull(charSequenceTranslator35);
        org.junit.Assert.assertNotNull(charSequenceTranslator36);
        org.junit.Assert.assertNotNull(charSequenceTranslator37);
        org.junit.Assert.assertNotNull(unicodeEscaper40);
        org.junit.Assert.assertNotNull(unicodeEscaper43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper52);
        org.junit.Assert.assertNotNull(unicodeEscaper54);
        org.junit.Assert.assertNotNull(unicodeEscaper56);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str58, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray59);
        org.junit.Assert.assertNotNull(charSequenceTranslator60);
        org.junit.Assert.assertNotNull(charSequenceTranslator61);
        org.junit.Assert.assertNotNull(charSequenceTranslator62);
        org.junit.Assert.assertNotNull(charSequenceTranslator63);
        org.junit.Assert.assertNotNull(charSequenceTranslator64);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
    }

    @Test
    public void test05192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05192");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', (int) (short) 0);
        java.io.Writer writer4 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean5 = unicodeEscaper2.translate(0, writer4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
    }

    @Test
    public void test05193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05193");
        java.io.IOException iOException1 = new java.io.IOException("\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0036\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0031");
    }

    @Test
    public void test05194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05194");
        java.io.IOException iOException0 = new java.io.IOException();
        java.io.IOException iOException1 = new java.io.IOException();
        iOException0.addSuppressed((java.lang.Throwable) iOException1);
        java.lang.Throwable[] throwableArray3 = iOException1.getSuppressed();
        java.lang.Throwable[] throwableArray4 = iOException1.getSuppressed();
        java.io.IOException iOException6 = new java.io.IOException();
        java.io.IOException iOException7 = new java.io.IOException();
        iOException6.addSuppressed((java.lang.Throwable) iOException7);
        java.io.IOException iOException9 = new java.io.IOException("0", (java.lang.Throwable) iOException6);
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException9);
        iOException1.addSuppressed((java.lang.Throwable) iOException10);
        java.lang.Throwable[] throwableArray12 = iOException1.getSuppressed();
        java.io.IOException iOException13 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.lang.String str14 = iOException1.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "java.io.IOException" + "'", str14, "java.io.IOException");
    }

    @Test
    public void test05195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05195");
        java.io.IOException iOException3 = new java.io.IOException("");
        java.io.IOException iOException4 = new java.io.IOException((java.lang.Throwable) iOException3);
        java.io.IOException iOException6 = new java.io.IOException("");
        iOException4.addSuppressed((java.lang.Throwable) iOException6);
        java.io.IOException iOException8 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException6);
        java.io.IOException iOException9 = new java.io.IOException("java.io.IOException: \\u0068\\u0069\\u0021", (java.lang.Throwable) iOException6);
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException11 = new java.io.IOException((java.lang.Throwable) iOException10);
        java.io.IOException iOException12 = new java.io.IOException((java.lang.Throwable) iOException11);
        java.lang.Class<?> wildcardClass13 = iOException12.getClass();
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test05196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05196");
        java.io.IOException iOException4 = new java.io.IOException();
        java.io.IOException iOException5 = new java.io.IOException();
        iOException4.addSuppressed((java.lang.Throwable) iOException5);
        java.lang.Throwable[] throwableArray7 = iOException5.getSuppressed();
        java.lang.Throwable[] throwableArray8 = iOException5.getSuppressed();
        java.io.IOException iOException9 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException5);
        java.io.IOException iOException10 = new java.io.IOException();
        java.io.IOException iOException11 = new java.io.IOException();
        iOException10.addSuppressed((java.lang.Throwable) iOException11);
        java.io.IOException iOException13 = new java.io.IOException((java.lang.Throwable) iOException10);
        java.lang.Throwable[] throwableArray14 = iOException13.getSuppressed();
        iOException9.addSuppressed((java.lang.Throwable) iOException13);
        java.io.IOException iOException17 = new java.io.IOException();
        java.io.IOException iOException18 = new java.io.IOException();
        iOException17.addSuppressed((java.lang.Throwable) iOException18);
        java.io.IOException iOException20 = new java.io.IOException();
        java.io.IOException iOException21 = new java.io.IOException();
        iOException20.addSuppressed((java.lang.Throwable) iOException21);
        java.lang.Throwable[] throwableArray23 = iOException21.getSuppressed();
        java.io.IOException iOException24 = new java.io.IOException((java.lang.Throwable) iOException21);
        java.io.IOException iOException26 = new java.io.IOException("");
        java.io.IOException iOException27 = new java.io.IOException((java.lang.Throwable) iOException26);
        iOException21.addSuppressed((java.lang.Throwable) iOException27);
        iOException18.addSuppressed((java.lang.Throwable) iOException27);
        java.io.IOException iOException30 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException27);
        iOException13.addSuppressed((java.lang.Throwable) iOException30);
        java.io.IOException iOException33 = new java.io.IOException("");
        java.io.IOException iOException34 = new java.io.IOException((java.lang.Throwable) iOException33);
        java.io.IOException iOException36 = new java.io.IOException("");
        iOException34.addSuppressed((java.lang.Throwable) iOException36);
        java.lang.Throwable[] throwableArray38 = iOException36.getSuppressed();
        iOException30.addSuppressed((java.lang.Throwable) iOException36);
        java.io.IOException iOException40 = new java.io.IOException("java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: 0", (java.lang.Throwable) iOException30);
        java.io.IOException iOException42 = new java.io.IOException();
        java.io.IOException iOException43 = new java.io.IOException();
        iOException42.addSuppressed((java.lang.Throwable) iOException43);
        java.io.IOException iOException45 = new java.io.IOException();
        java.io.IOException iOException46 = new java.io.IOException();
        iOException45.addSuppressed((java.lang.Throwable) iOException46);
        java.lang.Throwable[] throwableArray48 = iOException46.getSuppressed();
        java.io.IOException iOException49 = new java.io.IOException((java.lang.Throwable) iOException46);
        java.io.IOException iOException51 = new java.io.IOException("");
        java.io.IOException iOException52 = new java.io.IOException((java.lang.Throwable) iOException51);
        iOException46.addSuppressed((java.lang.Throwable) iOException52);
        iOException43.addSuppressed((java.lang.Throwable) iOException52);
        java.io.IOException iOException55 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException52);
        java.io.IOException iOException56 = new java.io.IOException((java.lang.Throwable) iOException52);
        iOException40.addSuppressed((java.lang.Throwable) iOException52);
        java.io.IOException iOException58 = new java.io.IOException("j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020", (java.lang.Throwable) iOException52);
        java.io.IOException iOException59 = new java.io.IOException("java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030", (java.lang.Throwable) iOException52);
        java.lang.Class<?> wildcardClass60 = iOException59.getClass();
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test05197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05197");
        java.io.IOException iOException1 = new java.io.IOException();
        java.io.IOException iOException2 = new java.io.IOException();
        iOException1.addSuppressed((java.lang.Throwable) iOException2);
        java.io.IOException iOException4 = new java.io.IOException();
        java.io.IOException iOException5 = new java.io.IOException();
        iOException4.addSuppressed((java.lang.Throwable) iOException5);
        java.lang.Throwable[] throwableArray7 = iOException5.getSuppressed();
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.io.IOException iOException10 = new java.io.IOException("");
        java.io.IOException iOException11 = new java.io.IOException((java.lang.Throwable) iOException10);
        iOException5.addSuppressed((java.lang.Throwable) iOException11);
        iOException2.addSuppressed((java.lang.Throwable) iOException11);
        java.io.IOException iOException14 = new java.io.IOException("java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception", (java.lang.Throwable) iOException2);
        java.io.IOException iOException15 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.lang.Throwable[] throwableArray16 = iOException15.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray16);
    }

    @Test
    public void test05198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05198");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between(1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper5.translate((int) '4', writer7);
        java.io.Writer writer11 = null;
        int int12 = unicodeEscaper5.translate((java.lang.CharSequence) "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", 100, writer11);
        java.lang.String str14 = unicodeEscaper5.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper17 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) (byte) 10);
        java.lang.String str19 = unicodeEscaper17.translate((java.lang.CharSequence) "java.io.IOException");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper21 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) (short) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper24 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '#', 100);
        java.lang.String str26 = unicodeEscaper24.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper29 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) '4', (int) (short) 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper32 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper35 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', (int) (short) 0);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray36 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper35 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator37 = unicodeEscaper32.with(charSequenceTranslatorArray36);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator38 = unicodeEscaper29.with(charSequenceTranslatorArray36);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator39 = unicodeEscaper24.with(charSequenceTranslatorArray36);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator40 = unicodeEscaper21.with(charSequenceTranslatorArray36);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper43 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper46 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer48 = null;
        boolean boolean49 = unicodeEscaper46.translate((int) '4', writer48);
        java.io.Writer writer51 = null;
        boolean boolean52 = unicodeEscaper46.translate((int) (byte) -1, writer51);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper55 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper57 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper59 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str61 = unicodeEscaper59.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray62 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper55, unicodeEscaper57, unicodeEscaper59 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator63 = unicodeEscaper46.with(charSequenceTranslatorArray62);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator64 = unicodeEscaper43.with(charSequenceTranslatorArray62);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator65 = unicodeEscaper21.with(charSequenceTranslatorArray62);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator66 = unicodeEscaper17.with(charSequenceTranslatorArray62);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator67 = unicodeEscaper5.with(charSequenceTranslatorArray62);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator68 = unicodeEscaper2.with(charSequenceTranslatorArray62);
        java.lang.String str70 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: \\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034");
        java.io.Writer writer72 = null;
        boolean boolean73 = unicodeEscaper2.translate(100, writer72);
        java.io.Writer writer76 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int77 = unicodeEscaper2.translate((java.lang.CharSequence) "\\\\u0075\\u0030\\u00304\\u0031", (int) (short) -1, writer76);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030" + "'", str14, "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030");
        org.junit.Assert.assertNotNull(unicodeEscaper17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str19, "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertNotNull(unicodeEscaper21);
        org.junit.Assert.assertNotNull(unicodeEscaper24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str26, "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertNotNull(unicodeEscaper29);
        org.junit.Assert.assertNotNull(unicodeEscaper32);
        org.junit.Assert.assertNotNull(unicodeEscaper35);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray36);
        org.junit.Assert.assertNotNull(charSequenceTranslator37);
        org.junit.Assert.assertNotNull(charSequenceTranslator38);
        org.junit.Assert.assertNotNull(charSequenceTranslator39);
        org.junit.Assert.assertNotNull(charSequenceTranslator40);
        org.junit.Assert.assertNotNull(unicodeEscaper43);
        org.junit.Assert.assertNotNull(unicodeEscaper46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper55);
        org.junit.Assert.assertNotNull(unicodeEscaper57);
        org.junit.Assert.assertNotNull(unicodeEscaper59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str61, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray62);
        org.junit.Assert.assertNotNull(charSequenceTranslator63);
        org.junit.Assert.assertNotNull(charSequenceTranslator64);
        org.junit.Assert.assertNotNull(charSequenceTranslator65);
        org.junit.Assert.assertNotNull(charSequenceTranslator66);
        org.junit.Assert.assertNotNull(charSequenceTranslator67);
        org.junit.Assert.assertNotNull(charSequenceTranslator68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "java.io.IOException:\\u0020java.io.IOException:\\u0020\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034" + "'", str70, "java.io.IOException:\\u0020java.io.IOException:\\u0020\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test05199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05199");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 10);
        java.io.Writer writer5 = null;
        int int6 = unicodeEscaper2.translate((java.lang.CharSequence) "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A \\u0036\\u0034", 0, writer5);
        java.io.Writer writer8 = null;
        boolean boolean9 = unicodeEscaper2.translate((int) ' ', writer8);
        java.io.Writer writer12 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int13 = unicodeEscaper2.translate((java.lang.CharSequence) "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020", (int) (byte) -1, writer12);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test05200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05200");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) '4', 0);
        java.io.Writer writer5 = null;
        int int6 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: \\\\u00750068\\\\u00750069\\\\u00750021", 10, writer5);
        java.io.Writer writer9 = null;
        int int10 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: \\\\\\u00750075006Aa\\\\\\u007500750076a.\\\\\\u007500750069\\\\\\u00750075006F.IOE\\\\\\u007500750078\\\\u00750063\\\\\\u007500750065\\\\\\u007500750070\\\\\\u007500750074\\\\\\u007500750069\\\\\\u00750075006F\\\\\\u00750075006E:\\\\\\u007500750020\\\\\\u00750075006Aa\\\\\\u007500750076a.\\\\\\u007500750069\\\\\\u00750075006F.IOE\\\\\\u007500750078\\\\u00750063\\\\\\u007500750065\\\\\\u007500750070\\\\\\u007500750074\\\\\\u007500750069\\\\\\u00750075006F\\\\\\u00750075006E", (int) (byte) 0, writer9);
        java.io.Writer writer12 = null;
        boolean boolean13 = unicodeEscaper2.translate((int) (short) 0, writer12);
        java.lang.String str15 = unicodeEscaper2.translate((java.lang.CharSequence) "1");
        java.io.Writer writer18 = null;
        int int19 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030", (int) 'a', writer18);
        java.io.Writer writer21 = null;
        boolean boolean22 = unicodeEscaper2.translate((int) 'a', writer21);
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1" + "'", str15, "1");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test05201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05201");
        java.io.IOException iOException2 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030");
        java.io.IOException iOException3 = new java.io.IOException("java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException2);
        java.lang.Throwable[] throwableArray4 = iOException3.getSuppressed();
        java.io.IOException iOException7 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        java.io.IOException iOException8 = new java.io.IOException("", (java.lang.Throwable) iOException7);
        iOException3.addSuppressed((java.lang.Throwable) iOException8);
        java.lang.Class<?> wildcardClass10 = iOException3.getClass();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test05202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05202");
        java.io.IOException iOException2 = new java.io.IOException();
        java.io.IOException iOException3 = new java.io.IOException();
        iOException2.addSuppressed((java.lang.Throwable) iOException3);
        java.lang.Throwable[] throwableArray5 = iOException3.getSuppressed();
        java.lang.Throwable[] throwableArray6 = iOException3.getSuppressed();
        java.io.IOException iOException8 = new java.io.IOException();
        java.io.IOException iOException9 = new java.io.IOException();
        iOException8.addSuppressed((java.lang.Throwable) iOException9);
        java.io.IOException iOException11 = new java.io.IOException("0", (java.lang.Throwable) iOException8);
        java.io.IOException iOException12 = new java.io.IOException((java.lang.Throwable) iOException11);
        iOException3.addSuppressed((java.lang.Throwable) iOException12);
        java.lang.Throwable[] throwableArray14 = iOException12.getSuppressed();
        java.io.IOException iOException15 = new java.io.IOException("A", (java.lang.Throwable) iOException12);
        java.io.IOException iOException16 = new java.io.IOException((java.lang.Throwable) iOException12);
        java.io.IOException iOException17 = new java.io.IOException((java.lang.Throwable) iOException12);
        java.io.IOException iOException19 = new java.io.IOException();
        java.io.IOException iOException20 = new java.io.IOException();
        iOException19.addSuppressed((java.lang.Throwable) iOException20);
        java.lang.Throwable[] throwableArray22 = iOException20.getSuppressed();
        java.lang.Throwable[] throwableArray23 = iOException20.getSuppressed();
        java.io.IOException iOException25 = new java.io.IOException();
        java.io.IOException iOException26 = new java.io.IOException();
        iOException25.addSuppressed((java.lang.Throwable) iOException26);
        java.io.IOException iOException28 = new java.io.IOException("0", (java.lang.Throwable) iOException25);
        java.io.IOException iOException29 = new java.io.IOException((java.lang.Throwable) iOException28);
        iOException20.addSuppressed((java.lang.Throwable) iOException29);
        java.lang.Throwable[] throwableArray31 = iOException29.getSuppressed();
        java.io.IOException iOException32 = new java.io.IOException("A", (java.lang.Throwable) iOException29);
        java.lang.Throwable[] throwableArray33 = iOException29.getSuppressed();
        iOException12.addSuppressed((java.lang.Throwable) iOException29);
        java.io.IOException iOException35 = new java.io.IOException("\\u0068\\u0069\\u0021", (java.lang.Throwable) iOException29);
        java.io.IOException iOException36 = new java.io.IOException((java.lang.Throwable) iOException29);
        java.io.IOException iOException38 = new java.io.IOException("\\u006A\\\\u00750061\\u0076\\\\u00750061\\\\u0075002E\\u0069\\u006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\\\u0075003A\\u0020\\\\u00750036\\\\u00750034");
        iOException36.addSuppressed((java.lang.Throwable) iOException38);
        java.lang.Class<?> wildcardClass40 = iOException36.getClass();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test05203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05203");
        java.io.IOException iOException2 = new java.io.IOException();
        java.io.IOException iOException3 = new java.io.IOException();
        iOException2.addSuppressed((java.lang.Throwable) iOException3);
        java.io.IOException iOException5 = new java.io.IOException("0", (java.lang.Throwable) iOException2);
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.lang.Throwable[] throwableArray9 = iOException8.getSuppressed();
        java.io.IOException iOException13 = new java.io.IOException("0");
        java.lang.Throwable[] throwableArray14 = iOException13.getSuppressed();
        java.io.IOException iOException15 = new java.io.IOException("hi!", (java.lang.Throwable) iOException13);
        java.io.IOException iOException17 = new java.io.IOException("");
        java.io.IOException iOException18 = new java.io.IOException((java.lang.Throwable) iOException17);
        java.io.IOException iOException20 = new java.io.IOException("");
        iOException18.addSuppressed((java.lang.Throwable) iOException20);
        java.io.IOException iOException23 = new java.io.IOException("");
        java.io.IOException iOException24 = new java.io.IOException((java.lang.Throwable) iOException23);
        java.io.IOException iOException26 = new java.io.IOException("");
        iOException24.addSuppressed((java.lang.Throwable) iOException26);
        iOException18.addSuppressed((java.lang.Throwable) iOException24);
        iOException15.addSuppressed((java.lang.Throwable) iOException18);
        java.io.IOException iOException30 = new java.io.IOException("java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception", (java.lang.Throwable) iOException18);
        iOException8.addSuppressed((java.lang.Throwable) iOException30);
        java.io.IOException iOException32 = new java.io.IOException((java.lang.Throwable) iOException30);
        java.lang.Throwable[] throwableArray33 = iOException30.getSuppressed();
        java.io.IOException iOException34 = new java.io.IOException("\\u006A\\\\u00750061\\u0076\\\\u00750061\\\\u0075002E\\u0069\\u006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\\\u0075003A\\u0020\\\\u00750036\\\\u00750034", (java.lang.Throwable) iOException30);
        java.io.IOException iOException38 = new java.io.IOException("");
        java.io.IOException iOException39 = new java.io.IOException((java.lang.Throwable) iOException38);
        java.io.IOException iOException41 = new java.io.IOException("");
        iOException39.addSuppressed((java.lang.Throwable) iOException41);
        java.io.IOException iOException43 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException41);
        java.io.IOException iOException44 = new java.io.IOException("java.io.IOException: \\u0068\\u0069\\u0021", (java.lang.Throwable) iOException41);
        java.io.IOException iOException45 = new java.io.IOException();
        java.io.IOException iOException46 = new java.io.IOException();
        iOException45.addSuppressed((java.lang.Throwable) iOException46);
        java.lang.Throwable[] throwableArray48 = iOException46.getSuppressed();
        java.lang.Throwable[] throwableArray49 = iOException46.getSuppressed();
        java.io.IOException iOException51 = new java.io.IOException();
        java.io.IOException iOException52 = new java.io.IOException();
        iOException51.addSuppressed((java.lang.Throwable) iOException52);
        java.io.IOException iOException54 = new java.io.IOException("0", (java.lang.Throwable) iOException51);
        java.io.IOException iOException55 = new java.io.IOException((java.lang.Throwable) iOException54);
        iOException46.addSuppressed((java.lang.Throwable) iOException55);
        java.lang.Throwable[] throwableArray57 = iOException46.getSuppressed();
        iOException41.addSuppressed((java.lang.Throwable) iOException46);
        java.io.IOException iOException59 = new java.io.IOException((java.lang.Throwable) iOException41);
        java.io.IOException iOException60 = new java.io.IOException((java.lang.Throwable) iOException59);
        iOException30.addSuppressed((java.lang.Throwable) iOException59);
        java.lang.String str62 = iOException59.toString();
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "java.io.IOException: java.io.IOException: " + "'", str62, "java.io.IOException: java.io.IOException: ");
    }

    @Test
    public void test05204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05204");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 0, 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper5.translate((int) (short) 10, writer7);
        java.lang.String str10 = unicodeEscaper5.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper13 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer15 = null;
        boolean boolean16 = unicodeEscaper13.translate((int) '4', writer15);
        java.io.Writer writer18 = null;
        boolean boolean19 = unicodeEscaper13.translate((int) (byte) -1, writer18);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper22 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper24 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper26 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str28 = unicodeEscaper26.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray29 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper22, unicodeEscaper24, unicodeEscaper26 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator30 = unicodeEscaper13.with(charSequenceTranslatorArray29);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator31 = unicodeEscaper5.with(charSequenceTranslatorArray29);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper34 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.lang.String str36 = unicodeEscaper34.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray37 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper34 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator38 = unicodeEscaper5.with(charSequenceTranslatorArray37);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper40 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer42 = null;
        boolean boolean43 = unicodeEscaper40.translate((int) ' ', writer42);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper46 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str48 = unicodeEscaper46.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray49 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator50 = unicodeEscaper46.with(charSequenceTranslatorArray49);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator51 = unicodeEscaper40.with(charSequenceTranslatorArray49);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator52 = unicodeEscaper5.with(charSequenceTranslatorArray49);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper55 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer57 = null;
        boolean boolean58 = unicodeEscaper55.translate((int) (short) 10, writer57);
        java.io.Writer writer60 = null;
        boolean boolean61 = unicodeEscaper55.translate((int) '#', writer60);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper64 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 0, (int) 'a');
        java.io.Writer writer66 = null;
        boolean boolean67 = unicodeEscaper64.translate(100, writer66);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper70 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper73 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', (int) (short) 0);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray74 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper73 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator75 = unicodeEscaper70.with(charSequenceTranslatorArray74);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator76 = unicodeEscaper64.with(charSequenceTranslatorArray74);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator77 = unicodeEscaper55.with(charSequenceTranslatorArray74);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator78 = charSequenceTranslator52.with(charSequenceTranslatorArray74);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator79 = unicodeEscaper2.with(charSequenceTranslatorArray74);
        java.lang.Class<?> wildcardClass80 = unicodeEscaper2.getClass();
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "0" + "'", str10, "0");
        org.junit.Assert.assertNotNull(unicodeEscaper13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper22);
        org.junit.Assert.assertNotNull(unicodeEscaper24);
        org.junit.Assert.assertNotNull(unicodeEscaper26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str28, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray29);
        org.junit.Assert.assertNotNull(charSequenceTranslator30);
        org.junit.Assert.assertNotNull(charSequenceTranslator31);
        org.junit.Assert.assertNotNull(unicodeEscaper34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str36, "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray37);
        org.junit.Assert.assertNotNull(charSequenceTranslator38);
        org.junit.Assert.assertNotNull(unicodeEscaper40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "0" + "'", str48, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray49);
        org.junit.Assert.assertNotNull(charSequenceTranslator50);
        org.junit.Assert.assertNotNull(charSequenceTranslator51);
        org.junit.Assert.assertNotNull(charSequenceTranslator52);
        org.junit.Assert.assertNotNull(unicodeEscaper55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper70);
        org.junit.Assert.assertNotNull(unicodeEscaper73);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray74);
        org.junit.Assert.assertNotNull(charSequenceTranslator75);
        org.junit.Assert.assertNotNull(charSequenceTranslator76);
        org.junit.Assert.assertNotNull(charSequenceTranslator77);
        org.junit.Assert.assertNotNull(charSequenceTranslator78);
        org.junit.Assert.assertNotNull(charSequenceTranslator79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test05205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05205");
        java.io.IOException iOException2 = new java.io.IOException("0");
        java.lang.Throwable[] throwableArray3 = iOException2.getSuppressed();
        java.io.IOException iOException4 = new java.io.IOException("hi!", (java.lang.Throwable) iOException2);
        java.io.IOException iOException6 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException6);
        iOException4.addSuppressed((java.lang.Throwable) iOException6);
        java.io.IOException iOException11 = new java.io.IOException();
        java.io.IOException iOException12 = new java.io.IOException();
        iOException11.addSuppressed((java.lang.Throwable) iOException12);
        java.io.IOException iOException14 = new java.io.IOException("0", (java.lang.Throwable) iOException11);
        java.io.IOException iOException15 = new java.io.IOException((java.lang.Throwable) iOException14);
        java.io.IOException iOException16 = new java.io.IOException((java.lang.Throwable) iOException15);
        java.io.IOException iOException17 = new java.io.IOException((java.lang.Throwable) iOException16);
        java.lang.Throwable[] throwableArray18 = iOException17.getSuppressed();
        java.lang.Throwable[] throwableArray19 = iOException17.getSuppressed();
        java.io.IOException iOException20 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException17);
        java.io.IOException iOException21 = new java.io.IOException((java.lang.Throwable) iOException20);
        iOException4.addSuppressed((java.lang.Throwable) iOException20);
        java.io.IOException iOException23 = new java.io.IOException((java.lang.Throwable) iOException20);
        java.io.IOException iOException28 = new java.io.IOException("");
        java.io.IOException iOException29 = new java.io.IOException((java.lang.Throwable) iOException28);
        java.io.IOException iOException31 = new java.io.IOException("");
        iOException29.addSuppressed((java.lang.Throwable) iOException31);
        java.io.IOException iOException33 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException31);
        java.io.IOException iOException34 = new java.io.IOException("java.io.IOException: \\u0068\\u0069\\u0021", (java.lang.Throwable) iOException31);
        java.io.IOException iOException35 = new java.io.IOException();
        java.io.IOException iOException36 = new java.io.IOException();
        iOException35.addSuppressed((java.lang.Throwable) iOException36);
        java.lang.Throwable[] throwableArray38 = iOException36.getSuppressed();
        java.lang.Throwable[] throwableArray39 = iOException36.getSuppressed();
        java.io.IOException iOException41 = new java.io.IOException();
        java.io.IOException iOException42 = new java.io.IOException();
        iOException41.addSuppressed((java.lang.Throwable) iOException42);
        java.io.IOException iOException44 = new java.io.IOException("0", (java.lang.Throwable) iOException41);
        java.io.IOException iOException45 = new java.io.IOException((java.lang.Throwable) iOException44);
        iOException36.addSuppressed((java.lang.Throwable) iOException45);
        java.lang.Throwable[] throwableArray47 = iOException36.getSuppressed();
        iOException31.addSuppressed((java.lang.Throwable) iOException36);
        java.io.IOException iOException49 = new java.io.IOException("\\\\u00750068\\\\u00750069\\\\u00750021", (java.lang.Throwable) iOException36);
        java.io.IOException iOException50 = new java.io.IOException((java.lang.Throwable) iOException49);
        java.io.IOException iOException51 = new java.io.IOException((java.lang.Throwable) iOException49);
        java.lang.Throwable[] throwableArray52 = iOException51.getSuppressed();
        iOException20.addSuppressed((java.lang.Throwable) iOException51);
        java.lang.Class<?> wildcardClass54 = iOException51.getClass();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test05206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05206");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) '4', writer4);
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper2.translate((int) (byte) -1, writer7);
        java.io.Writer writer10 = null;
        boolean boolean11 = unicodeEscaper2.translate(0, writer10);
        java.lang.String str13 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034");
        java.io.Writer writer16 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int17 = unicodeEscaper2.translate((java.lang.CharSequence) "\\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\u0063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E:\\\\u00750020\\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\u0063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E", (-1), writer16);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034" + "'", str13, "\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034");
    }

    @Test
    public void test05207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05207");
        java.io.IOException iOException2 = new java.io.IOException("0");
        java.io.IOException iOException3 = new java.io.IOException();
        java.io.IOException iOException4 = new java.io.IOException();
        iOException3.addSuppressed((java.lang.Throwable) iOException4);
        java.io.IOException iOException6 = new java.io.IOException();
        java.io.IOException iOException7 = new java.io.IOException();
        iOException6.addSuppressed((java.lang.Throwable) iOException7);
        java.lang.Throwable[] throwableArray9 = iOException7.getSuppressed();
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.io.IOException iOException12 = new java.io.IOException("");
        java.io.IOException iOException13 = new java.io.IOException((java.lang.Throwable) iOException12);
        iOException7.addSuppressed((java.lang.Throwable) iOException13);
        iOException4.addSuppressed((java.lang.Throwable) iOException13);
        iOException2.addSuppressed((java.lang.Throwable) iOException4);
        java.io.IOException iOException17 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.io.IOException iOException21 = new java.io.IOException("");
        java.io.IOException iOException22 = new java.io.IOException((java.lang.Throwable) iOException21);
        java.io.IOException iOException24 = new java.io.IOException("");
        iOException22.addSuppressed((java.lang.Throwable) iOException24);
        java.io.IOException iOException26 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException24);
        java.io.IOException iOException28 = new java.io.IOException("");
        java.io.IOException iOException29 = new java.io.IOException((java.lang.Throwable) iOException28);
        java.io.IOException iOException30 = new java.io.IOException((java.lang.Throwable) iOException28);
        iOException26.addSuppressed((java.lang.Throwable) iOException28);
        java.io.IOException iOException32 = new java.io.IOException("\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034", (java.lang.Throwable) iOException26);
        java.lang.Throwable[] throwableArray33 = iOException32.getSuppressed();
        iOException17.addSuppressed((java.lang.Throwable) iOException32);
        java.io.IOException iOException36 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030");
        iOException17.addSuppressed((java.lang.Throwable) iOException36);
        java.io.IOException iOException38 = new java.io.IOException("\\u005Cu\\u0030\\u0030\\u0036\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0032\\u0031", (java.lang.Throwable) iOException36);
        java.io.IOException iOException41 = new java.io.IOException("java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030");
        java.io.IOException iOException42 = new java.io.IOException("java.io.IOException: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException41);
        iOException38.addSuppressed((java.lang.Throwable) iOException42);
        java.lang.String str44 = iOException38.toString();
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "java.io.IOException: \\u005Cu\\u0030\\u0030\\u0036\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0032\\u0031" + "'", str44, "java.io.IOException: \\u005Cu\\u0030\\u0030\\u0036\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0032\\u0031");
    }

    @Test
    public void test05208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05208");
        java.io.IOException iOException2 = new java.io.IOException("23");
        java.io.IOException iOException3 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException4 = new java.io.IOException("java.io.IOException: java.io.IOException: 0", (java.lang.Throwable) iOException2);
        java.io.IOException iOException6 = new java.io.IOException("");
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException9 = new java.io.IOException("");
        iOException7.addSuppressed((java.lang.Throwable) iOException9);
        java.lang.Throwable[] throwableArray11 = iOException7.getSuppressed();
        iOException2.addSuppressed((java.lang.Throwable) iOException7);
        java.io.IOException iOException13 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.lang.Throwable[] throwableArray14 = iOException13.getSuppressed();
        java.lang.Class<?> wildcardClass15 = throwableArray14.getClass();
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test05209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05209");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper4 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper7 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between(0, (int) (byte) 100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper10 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(10, 10);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper13 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) -1, (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper15 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper17 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer19 = null;
        boolean boolean20 = unicodeEscaper17.translate((int) ' ', writer19);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper23 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str25 = unicodeEscaper23.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray26 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator27 = unicodeEscaper23.with(charSequenceTranslatorArray26);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator28 = unicodeEscaper17.with(charSequenceTranslatorArray26);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator29 = unicodeEscaper15.with(charSequenceTranslatorArray26);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper32 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer34 = null;
        boolean boolean35 = unicodeEscaper32.translate((int) '4', writer34);
        java.io.Writer writer37 = null;
        boolean boolean38 = unicodeEscaper32.translate((int) (byte) -1, writer37);
        java.io.Writer writer40 = null;
        boolean boolean41 = unicodeEscaper32.translate((int) (byte) -1, writer40);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray42 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator43 = unicodeEscaper32.with(charSequenceTranslatorArray42);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator44 = charSequenceTranslator29.with(charSequenceTranslatorArray42);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator45 = unicodeEscaper13.with(charSequenceTranslatorArray42);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator46 = unicodeEscaper10.with(charSequenceTranslatorArray42);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator47 = unicodeEscaper7.with(charSequenceTranslatorArray42);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator48 = unicodeEscaper4.with(charSequenceTranslatorArray42);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator49 = unicodeEscaper2.with(charSequenceTranslatorArray42);
        java.lang.Class<?> wildcardClass50 = charSequenceTranslator49.getClass();
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper4);
        org.junit.Assert.assertNotNull(unicodeEscaper7);
        org.junit.Assert.assertNotNull(unicodeEscaper10);
        org.junit.Assert.assertNotNull(unicodeEscaper13);
        org.junit.Assert.assertNotNull(unicodeEscaper15);
        org.junit.Assert.assertNotNull(unicodeEscaper17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "0" + "'", str25, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray26);
        org.junit.Assert.assertNotNull(charSequenceTranslator27);
        org.junit.Assert.assertNotNull(charSequenceTranslator28);
        org.junit.Assert.assertNotNull(charSequenceTranslator29);
        org.junit.Assert.assertNotNull(unicodeEscaper32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray42);
        org.junit.Assert.assertNotNull(charSequenceTranslator43);
        org.junit.Assert.assertNotNull(charSequenceTranslator44);
        org.junit.Assert.assertNotNull(charSequenceTranslator45);
        org.junit.Assert.assertNotNull(charSequenceTranslator46);
        org.junit.Assert.assertNotNull(charSequenceTranslator47);
        org.junit.Assert.assertNotNull(charSequenceTranslator48);
        org.junit.Assert.assertNotNull(charSequenceTranslator49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test05210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05210");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) ' ', 0);
        java.io.Writer writer5 = null;
        int int6 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u0068\\u0069\\u0021", (int) (short) 1, writer5);
        java.lang.String str8 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        java.io.Writer writer10 = null;
        boolean boolean11 = unicodeEscaper2.translate((int) '4', writer10);
        java.lang.String str13 = unicodeEscaper2.translate((java.lang.CharSequence) "");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper16 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) '#', 10);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper18 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper21 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer23 = null;
        boolean boolean24 = unicodeEscaper21.translate((int) '4', writer23);
        java.io.Writer writer26 = null;
        boolean boolean27 = unicodeEscaper21.translate((int) (byte) -1, writer26);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper30 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper32 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper34 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str36 = unicodeEscaper34.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray37 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper30, unicodeEscaper32, unicodeEscaper34 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator38 = unicodeEscaper21.with(charSequenceTranslatorArray37);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper41 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer43 = null;
        boolean boolean44 = unicodeEscaper41.translate((int) (short) 10, writer43);
        java.lang.String str46 = unicodeEscaper41.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper49 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer51 = null;
        boolean boolean52 = unicodeEscaper49.translate((int) '4', writer51);
        java.io.Writer writer54 = null;
        boolean boolean55 = unicodeEscaper49.translate((int) (byte) -1, writer54);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper58 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper60 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper62 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str64 = unicodeEscaper62.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray65 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper58, unicodeEscaper60, unicodeEscaper62 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator66 = unicodeEscaper49.with(charSequenceTranslatorArray65);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator67 = unicodeEscaper41.with(charSequenceTranslatorArray65);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator68 = unicodeEscaper21.with(charSequenceTranslatorArray65);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator69 = unicodeEscaper18.with(charSequenceTranslatorArray65);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator70 = unicodeEscaper16.with(charSequenceTranslatorArray65);
        java.lang.String str72 = charSequenceTranslator70.translate((java.lang.CharSequence) "\\u0068\\u0069\\u0021");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper75 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between(0, (int) (short) 100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper78 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between(1, (int) (short) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper81 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str83 = unicodeEscaper81.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray84 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator85 = unicodeEscaper81.with(charSequenceTranslatorArray84);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator86 = unicodeEscaper78.with(charSequenceTranslatorArray84);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator87 = unicodeEscaper75.with(charSequenceTranslatorArray84);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator88 = charSequenceTranslator70.with(charSequenceTranslatorArray84);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator89 = unicodeEscaper2.with(charSequenceTranslatorArray84);
        java.io.Writer writer91 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceTranslator89.translate((java.lang.CharSequence) "\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750032\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030", writer91);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str8, "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(unicodeEscaper16);
        org.junit.Assert.assertNotNull(unicodeEscaper18);
        org.junit.Assert.assertNotNull(unicodeEscaper21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper30);
        org.junit.Assert.assertNotNull(unicodeEscaper32);
        org.junit.Assert.assertNotNull(unicodeEscaper34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str36, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray37);
        org.junit.Assert.assertNotNull(charSequenceTranslator38);
        org.junit.Assert.assertNotNull(unicodeEscaper41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "0" + "'", str46, "0");
        org.junit.Assert.assertNotNull(unicodeEscaper49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper58);
        org.junit.Assert.assertNotNull(unicodeEscaper60);
        org.junit.Assert.assertNotNull(unicodeEscaper62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str64, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray65);
        org.junit.Assert.assertNotNull(charSequenceTranslator66);
        org.junit.Assert.assertNotNull(charSequenceTranslator67);
        org.junit.Assert.assertNotNull(charSequenceTranslator68);
        org.junit.Assert.assertNotNull(charSequenceTranslator69);
        org.junit.Assert.assertNotNull(charSequenceTranslator70);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "\\u005Cu\\u0030\\u0030\\u0036\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0032\\u0031" + "'", str72, "\\u005Cu\\u0030\\u0030\\u0036\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0032\\u0031");
        org.junit.Assert.assertNotNull(unicodeEscaper75);
        org.junit.Assert.assertNotNull(unicodeEscaper78);
        org.junit.Assert.assertNotNull(unicodeEscaper81);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "0" + "'", str83, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray84);
        org.junit.Assert.assertNotNull(charSequenceTranslator85);
        org.junit.Assert.assertNotNull(charSequenceTranslator86);
        org.junit.Assert.assertNotNull(charSequenceTranslator87);
        org.junit.Assert.assertNotNull(charSequenceTranslator88);
        org.junit.Assert.assertNotNull(charSequenceTranslator89);
    }

    @Test
    public void test05211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05211");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) 'a', (-1));
        java.io.Writer writer5 = null;
        int int6 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a\\\\u0075002E\\u0069\\u006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\\\u0075003A\\\\u00750020\\u006Aa\\u0076a\\\\u0075002E\\u0069\\u006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (int) (short) 10, writer5);
        java.io.Writer writer8 = null;
        boolean boolean9 = unicodeEscaper2.translate((int) (byte) 1, writer8);
        java.lang.String str11 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "java.io.IOException: java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str11, "java.io.IOException: java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
    }

    @Test
    public void test05212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05212");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper1 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above(10);
        java.io.Writer writer4 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int5 = unicodeEscaper1.translate((java.lang.CharSequence) "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: 0", (int) (byte) 1, writer4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper1);
    }

    @Test
    public void test05213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05213");
        java.io.IOException iOException3 = new java.io.IOException("23");
        java.io.IOException iOException4 = new java.io.IOException((java.lang.Throwable) iOException3);
        java.io.IOException iOException5 = new java.io.IOException("\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034", (java.lang.Throwable) iOException4);
        java.io.IOException iOException6 = new java.io.IOException("java.io.IOException: \\u005C\\u007500\\u0035\\u0043\\u0075\\u005C\\u00750030\\u005C\\u00750030\\u005C\\u00750033\\u005C\\u00750030", (java.lang.Throwable) iOException5);
        java.lang.String str7 = iOException5.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "java.io.IOException: \\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034" + "'", str7, "java.io.IOException: \\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034");
    }

    @Test
    public void test05214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05214");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between(0, (int) '4');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper4 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper6 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer8 = null;
        boolean boolean9 = unicodeEscaper6.translate((int) ' ', writer8);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper12 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str14 = unicodeEscaper12.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray15 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator16 = unicodeEscaper12.with(charSequenceTranslatorArray15);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator17 = unicodeEscaper6.with(charSequenceTranslatorArray15);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator18 = unicodeEscaper4.with(charSequenceTranslatorArray15);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper21 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer23 = null;
        boolean boolean24 = unicodeEscaper21.translate((int) (short) 10, writer23);
        java.lang.String str26 = unicodeEscaper21.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper29 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer31 = null;
        boolean boolean32 = unicodeEscaper29.translate((int) '4', writer31);
        java.io.Writer writer34 = null;
        boolean boolean35 = unicodeEscaper29.translate((int) (byte) -1, writer34);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper38 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper40 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper42 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str44 = unicodeEscaper42.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray45 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper38, unicodeEscaper40, unicodeEscaper42 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator46 = unicodeEscaper29.with(charSequenceTranslatorArray45);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator47 = unicodeEscaper21.with(charSequenceTranslatorArray45);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper50 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.lang.String str52 = unicodeEscaper50.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray53 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper50 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator54 = unicodeEscaper21.with(charSequenceTranslatorArray53);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator55 = charSequenceTranslator18.with(charSequenceTranslatorArray53);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper58 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (byte) 0, 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper61 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '#', 100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper64 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (byte) 1, (int) ' ');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper67 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper69 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer71 = null;
        boolean boolean72 = unicodeEscaper69.translate((int) ' ', writer71);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper75 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str77 = unicodeEscaper75.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray78 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator79 = unicodeEscaper75.with(charSequenceTranslatorArray78);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator80 = unicodeEscaper69.with(charSequenceTranslatorArray78);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator81 = unicodeEscaper67.with(charSequenceTranslatorArray78);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator82 = unicodeEscaper64.with(charSequenceTranslatorArray78);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator83 = unicodeEscaper61.with(charSequenceTranslatorArray78);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator84 = unicodeEscaper58.with(charSequenceTranslatorArray78);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator85 = charSequenceTranslator18.with(charSequenceTranslatorArray78);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator86 = unicodeEscaper2.with(charSequenceTranslatorArray78);
        java.io.Writer writer88 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate((java.lang.CharSequence) "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: 64", writer88);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper4);
        org.junit.Assert.assertNotNull(unicodeEscaper6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "0" + "'", str14, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray15);
        org.junit.Assert.assertNotNull(charSequenceTranslator16);
        org.junit.Assert.assertNotNull(charSequenceTranslator17);
        org.junit.Assert.assertNotNull(charSequenceTranslator18);
        org.junit.Assert.assertNotNull(unicodeEscaper21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "0" + "'", str26, "0");
        org.junit.Assert.assertNotNull(unicodeEscaper29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper38);
        org.junit.Assert.assertNotNull(unicodeEscaper40);
        org.junit.Assert.assertNotNull(unicodeEscaper42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str44, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray45);
        org.junit.Assert.assertNotNull(charSequenceTranslator46);
        org.junit.Assert.assertNotNull(charSequenceTranslator47);
        org.junit.Assert.assertNotNull(unicodeEscaper50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str52, "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray53);
        org.junit.Assert.assertNotNull(charSequenceTranslator54);
        org.junit.Assert.assertNotNull(charSequenceTranslator55);
        org.junit.Assert.assertNotNull(unicodeEscaper58);
        org.junit.Assert.assertNotNull(unicodeEscaper61);
        org.junit.Assert.assertNotNull(unicodeEscaper64);
        org.junit.Assert.assertNotNull(unicodeEscaper67);
        org.junit.Assert.assertNotNull(unicodeEscaper69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper75);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "0" + "'", str77, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray78);
        org.junit.Assert.assertNotNull(charSequenceTranslator79);
        org.junit.Assert.assertNotNull(charSequenceTranslator80);
        org.junit.Assert.assertNotNull(charSequenceTranslator81);
        org.junit.Assert.assertNotNull(charSequenceTranslator82);
        org.junit.Assert.assertNotNull(charSequenceTranslator83);
        org.junit.Assert.assertNotNull(charSequenceTranslator84);
        org.junit.Assert.assertNotNull(charSequenceTranslator85);
        org.junit.Assert.assertNotNull(charSequenceTranslator86);
    }

    @Test
    public void test05215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05215");
        java.io.IOException iOException3 = new java.io.IOException("\\u0033\\u0034");
        java.io.IOException iOException4 = new java.io.IOException("\\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\u0063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E: \\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\u0063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E", (java.lang.Throwable) iOException3);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.io.IOException iOException6 = new java.io.IOException("\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException5);
        java.lang.Throwable[] throwableArray7 = iOException6.getSuppressed();
        java.lang.Class<?> wildcardClass8 = throwableArray7.getClass();
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test05216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05216");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (short) 100, (int) (short) 1);
        java.io.Writer writer5 = null;
        int int6 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: 0", (int) (short) 10, writer5);
        java.io.Writer writer8 = null;
        boolean boolean9 = unicodeEscaper2.translate((int) (short) 0, writer8);
        java.lang.String str11 = unicodeEscaper2.translate((java.lang.CharSequence) "");
        java.io.Writer writer14 = null;
        int int15 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\\\u00750068\\\\u00750069\\\\u00750021", 1, writer14);
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test05217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05217");
        java.io.IOException iOException1 = new java.io.IOException();
        java.io.IOException iOException2 = new java.io.IOException();
        iOException1.addSuppressed((java.lang.Throwable) iOException2);
        java.io.IOException iOException4 = new java.io.IOException();
        java.io.IOException iOException5 = new java.io.IOException();
        iOException4.addSuppressed((java.lang.Throwable) iOException5);
        java.lang.Throwable[] throwableArray7 = iOException5.getSuppressed();
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.io.IOException iOException10 = new java.io.IOException("");
        java.io.IOException iOException11 = new java.io.IOException((java.lang.Throwable) iOException10);
        iOException5.addSuppressed((java.lang.Throwable) iOException11);
        iOException2.addSuppressed((java.lang.Throwable) iOException11);
        java.io.IOException iOException14 = new java.io.IOException("java.io.IOException: java.io.IOException: \\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034", (java.lang.Throwable) iOException11);
        java.io.IOException iOException15 = new java.io.IOException();
        java.io.IOException iOException16 = new java.io.IOException();
        iOException15.addSuppressed((java.lang.Throwable) iOException16);
        java.io.IOException iOException18 = new java.io.IOException((java.lang.Throwable) iOException15);
        java.io.IOException iOException19 = new java.io.IOException((java.lang.Throwable) iOException18);
        java.io.IOException iOException20 = new java.io.IOException((java.lang.Throwable) iOException19);
        java.io.IOException iOException23 = new java.io.IOException("java.io.IOException: java.io.IOException");
        java.io.IOException iOException26 = new java.io.IOException("0");
        java.lang.Throwable[] throwableArray27 = iOException26.getSuppressed();
        java.io.IOException iOException28 = new java.io.IOException("hi!", (java.lang.Throwable) iOException26);
        iOException23.addSuppressed((java.lang.Throwable) iOException26);
        java.io.IOException iOException30 = new java.io.IOException((java.lang.Throwable) iOException23);
        java.io.IOException iOException31 = new java.io.IOException("java.io.IOException: java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException30);
        iOException20.addSuppressed((java.lang.Throwable) iOException30);
        iOException11.addSuppressed((java.lang.Throwable) iOException30);
        java.io.IOException iOException34 = new java.io.IOException((java.lang.Throwable) iOException30);
        java.lang.Class<?> wildcardClass35 = iOException34.getClass();
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test05218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05218");
        java.io.IOException iOException4 = new java.io.IOException();
        java.io.IOException iOException5 = new java.io.IOException();
        iOException4.addSuppressed((java.lang.Throwable) iOException5);
        java.io.IOException iOException7 = new java.io.IOException();
        java.io.IOException iOException8 = new java.io.IOException();
        iOException7.addSuppressed((java.lang.Throwable) iOException8);
        java.lang.Throwable[] throwableArray10 = iOException8.getSuppressed();
        java.io.IOException iOException11 = new java.io.IOException((java.lang.Throwable) iOException8);
        java.io.IOException iOException13 = new java.io.IOException("");
        java.io.IOException iOException14 = new java.io.IOException((java.lang.Throwable) iOException13);
        iOException8.addSuppressed((java.lang.Throwable) iOException14);
        iOException5.addSuppressed((java.lang.Throwable) iOException14);
        java.io.IOException iOException17 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException14);
        java.io.IOException iOException18 = new java.io.IOException("64", (java.lang.Throwable) iOException17);
        java.io.IOException iOException19 = new java.io.IOException("java.io.IOException: java.io.IOException: ", (java.lang.Throwable) iOException18);
        java.io.IOException iOException20 = new java.io.IOException("java.io.IOException: java.io.IOException: \\\\u00750068\\\\u00750069\\\\u00750021", (java.lang.Throwable) iOException19);
        java.io.IOException iOException27 = new java.io.IOException("0");
        java.lang.Throwable[] throwableArray28 = iOException27.getSuppressed();
        java.io.IOException iOException29 = new java.io.IOException("hi!", (java.lang.Throwable) iOException27);
        java.io.IOException iOException31 = new java.io.IOException("");
        java.io.IOException iOException32 = new java.io.IOException((java.lang.Throwable) iOException31);
        java.io.IOException iOException34 = new java.io.IOException("");
        iOException32.addSuppressed((java.lang.Throwable) iOException34);
        java.io.IOException iOException37 = new java.io.IOException("");
        java.io.IOException iOException38 = new java.io.IOException((java.lang.Throwable) iOException37);
        java.io.IOException iOException40 = new java.io.IOException("");
        iOException38.addSuppressed((java.lang.Throwable) iOException40);
        iOException32.addSuppressed((java.lang.Throwable) iOException38);
        iOException29.addSuppressed((java.lang.Throwable) iOException32);
        java.io.IOException iOException44 = new java.io.IOException("java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception", (java.lang.Throwable) iOException32);
        java.io.IOException iOException45 = new java.io.IOException("\\u0068\\u0069\\u0021", (java.lang.Throwable) iOException32);
        java.lang.Throwable[] throwableArray46 = iOException45.getSuppressed();
        java.io.IOException iOException47 = new java.io.IOException("java.io.IOException: java.io.IOException: java.io.IOException", (java.lang.Throwable) iOException45);
        java.io.IOException iOException48 = new java.io.IOException((java.lang.Throwable) iOException47);
        java.io.IOException iOException49 = new java.io.IOException("java.io.IOException: java.io.IOException: \\u005Cu\\u0030\\u0030\\u0036\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0032\\u0031", (java.lang.Throwable) iOException47);
        iOException19.addSuppressed((java.lang.Throwable) iOException47);
        java.lang.String str51 = iOException19.toString();
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "java.io.IOException: java.io.IOException: java.io.IOException: " + "'", str51, "java.io.IOException: java.io.IOException: java.io.IOException: ");
    }

    @Test
    public void test05219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05219");
        java.io.IOException iOException2 = new java.io.IOException();
        java.io.IOException iOException3 = new java.io.IOException();
        iOException2.addSuppressed((java.lang.Throwable) iOException3);
        java.io.IOException iOException5 = new java.io.IOException("0", (java.lang.Throwable) iOException2);
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException8 = new java.io.IOException("hi!", (java.lang.Throwable) iOException7);
        java.lang.Throwable[] throwableArray9 = iOException7.getSuppressed();
        java.lang.Throwable[] throwableArray10 = iOException7.getSuppressed();
        java.lang.String str11 = iOException7.toString();
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "java.io.IOException: java.io.IOException: java.io.IOException: 0" + "'", str11, "java.io.IOException: java.io.IOException: java.io.IOException: 0");
    }

    @Test
    public void test05220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05220");
        java.io.IOException iOException1 = new java.io.IOException();
        java.io.IOException iOException2 = new java.io.IOException();
        iOException1.addSuppressed((java.lang.Throwable) iOException2);
        java.io.IOException iOException4 = new java.io.IOException();
        java.io.IOException iOException5 = new java.io.IOException();
        iOException4.addSuppressed((java.lang.Throwable) iOException5);
        java.lang.Throwable[] throwableArray7 = iOException5.getSuppressed();
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.io.IOException iOException10 = new java.io.IOException("");
        java.io.IOException iOException11 = new java.io.IOException((java.lang.Throwable) iOException10);
        iOException5.addSuppressed((java.lang.Throwable) iOException11);
        iOException2.addSuppressed((java.lang.Throwable) iOException11);
        java.io.IOException iOException14 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException11);
        java.io.IOException iOException17 = new java.io.IOException("");
        java.io.IOException iOException18 = new java.io.IOException((java.lang.Throwable) iOException17);
        java.io.IOException iOException20 = new java.io.IOException("");
        iOException18.addSuppressed((java.lang.Throwable) iOException20);
        java.io.IOException iOException22 = new java.io.IOException("java.io.IOException: 0", (java.lang.Throwable) iOException20);
        iOException11.addSuppressed((java.lang.Throwable) iOException20);
        java.io.IOException iOException24 = new java.io.IOException((java.lang.Throwable) iOException11);
        java.lang.Throwable[] throwableArray25 = iOException11.getSuppressed();
        java.io.IOException iOException26 = new java.io.IOException((java.lang.Throwable) iOException11);
        java.lang.Throwable[] throwableArray27 = iOException11.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray27);
    }

    @Test
    public void test05221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05221");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, 10);
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate(10, writer4);
        java.io.Writer writer7 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = unicodeEscaper2.translate((int) '#', writer7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test05222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05222");
        java.io.IOException iOException2 = new java.io.IOException("0");
        java.io.IOException iOException3 = new java.io.IOException();
        java.io.IOException iOException4 = new java.io.IOException();
        iOException3.addSuppressed((java.lang.Throwable) iOException4);
        java.io.IOException iOException6 = new java.io.IOException();
        java.io.IOException iOException7 = new java.io.IOException();
        iOException6.addSuppressed((java.lang.Throwable) iOException7);
        java.lang.Throwable[] throwableArray9 = iOException7.getSuppressed();
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.io.IOException iOException12 = new java.io.IOException("");
        java.io.IOException iOException13 = new java.io.IOException((java.lang.Throwable) iOException12);
        iOException7.addSuppressed((java.lang.Throwable) iOException13);
        iOException4.addSuppressed((java.lang.Throwable) iOException13);
        iOException2.addSuppressed((java.lang.Throwable) iOException4);
        java.io.IOException iOException17 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.io.IOException iOException18 = new java.io.IOException((java.lang.Throwable) iOException17);
        java.io.IOException iOException19 = new java.io.IOException("java.io.IOException: 23", (java.lang.Throwable) iOException18);
        java.io.IOException iOException20 = new java.io.IOException((java.lang.Throwable) iOException18);
        org.junit.Assert.assertNotNull(throwableArray9);
    }

    @Test
    public void test05223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05223");
        java.io.IOException iOException6 = new java.io.IOException("");
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException9 = new java.io.IOException("");
        iOException7.addSuppressed((java.lang.Throwable) iOException9);
        java.io.IOException iOException11 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException9);
        java.io.IOException iOException12 = new java.io.IOException("java.io.IOException: \\u0068\\u0069\\u0021", (java.lang.Throwable) iOException9);
        java.io.IOException iOException13 = new java.io.IOException();
        java.io.IOException iOException14 = new java.io.IOException();
        iOException13.addSuppressed((java.lang.Throwable) iOException14);
        java.lang.Throwable[] throwableArray16 = iOException14.getSuppressed();
        java.lang.Throwable[] throwableArray17 = iOException14.getSuppressed();
        java.io.IOException iOException19 = new java.io.IOException();
        java.io.IOException iOException20 = new java.io.IOException();
        iOException19.addSuppressed((java.lang.Throwable) iOException20);
        java.io.IOException iOException22 = new java.io.IOException("0", (java.lang.Throwable) iOException19);
        java.io.IOException iOException23 = new java.io.IOException((java.lang.Throwable) iOException22);
        iOException14.addSuppressed((java.lang.Throwable) iOException23);
        java.lang.Throwable[] throwableArray25 = iOException14.getSuppressed();
        iOException9.addSuppressed((java.lang.Throwable) iOException14);
        java.io.IOException iOException27 = new java.io.IOException("\\\\u00750068\\\\u00750069\\\\u00750021", (java.lang.Throwable) iOException14);
        java.io.IOException iOException28 = new java.io.IOException((java.lang.Throwable) iOException27);
        java.io.IOException iOException29 = new java.io.IOException((java.lang.Throwable) iOException27);
        java.io.IOException iOException30 = new java.io.IOException((java.lang.Throwable) iOException27);
        java.io.IOException iOException31 = new java.io.IOException("java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: 0", (java.lang.Throwable) iOException30);
        java.io.IOException iOException32 = new java.io.IOException((java.lang.Throwable) iOException30);
        java.io.IOException iOException33 = new java.io.IOException("\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u00200", (java.lang.Throwable) iOException30);
        java.io.IOException iOException34 = new java.io.IOException((java.lang.Throwable) iOException33);
        java.lang.String str35 = iOException34.toString();
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "java.io.IOException: java.io.IOException: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u00200" + "'", str35, "java.io.IOException: java.io.IOException: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u00200");
    }

    @Test
    public void test05224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05224");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', (int) (short) 100);
        java.io.Writer writer5 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int6 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (int) (short) -1, writer5);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
    }

    @Test
    public void test05225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05225");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (short) 1, (int) ' ');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper5.translate((int) '4', writer7);
        java.io.Writer writer10 = null;
        boolean boolean11 = unicodeEscaper5.translate((int) (byte) -1, writer10);
        java.lang.String str13 = unicodeEscaper5.translate((java.lang.CharSequence) "java.io.IOException");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper16 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, 10);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper19 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper21 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer23 = null;
        boolean boolean24 = unicodeEscaper21.translate((int) ' ', writer23);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper27 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str29 = unicodeEscaper27.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray30 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator31 = unicodeEscaper27.with(charSequenceTranslatorArray30);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator32 = unicodeEscaper21.with(charSequenceTranslatorArray30);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator33 = unicodeEscaper19.with(charSequenceTranslatorArray30);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator34 = unicodeEscaper16.with(charSequenceTranslatorArray30);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator35 = unicodeEscaper5.with(charSequenceTranslatorArray30);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator36 = unicodeEscaper2.with(charSequenceTranslatorArray30);
        java.io.Writer writer39 = null;
        int int40 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020", (int) '#', writer39);
        java.io.Writer writer42 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean43 = unicodeEscaper2.translate((int) (short) 10, writer42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "java.io.IOException" + "'", str13, "java.io.IOException");
        org.junit.Assert.assertNotNull(unicodeEscaper16);
        org.junit.Assert.assertNotNull(unicodeEscaper19);
        org.junit.Assert.assertNotNull(unicodeEscaper21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "0" + "'", str29, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray30);
        org.junit.Assert.assertNotNull(charSequenceTranslator31);
        org.junit.Assert.assertNotNull(charSequenceTranslator32);
        org.junit.Assert.assertNotNull(charSequenceTranslator33);
        org.junit.Assert.assertNotNull(charSequenceTranslator34);
        org.junit.Assert.assertNotNull(charSequenceTranslator35);
        org.junit.Assert.assertNotNull(charSequenceTranslator36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
    }

    @Test
    public void test05226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05226");
        java.io.IOException iOException3 = new java.io.IOException("java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        java.lang.Throwable[] throwableArray4 = iOException3.getSuppressed();
        java.io.IOException iOException8 = new java.io.IOException("");
        java.io.IOException iOException9 = new java.io.IOException("A", (java.lang.Throwable) iOException8);
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException8);
        java.io.IOException iOException11 = new java.io.IOException((java.lang.Throwable) iOException10);
        java.io.IOException iOException12 = new java.io.IOException("\\u0036\\u0034", (java.lang.Throwable) iOException10);
        java.io.IOException iOException14 = new java.io.IOException();
        java.io.IOException iOException15 = new java.io.IOException();
        iOException14.addSuppressed((java.lang.Throwable) iOException15);
        java.io.IOException iOException17 = new java.io.IOException("0", (java.lang.Throwable) iOException14);
        java.io.IOException iOException18 = new java.io.IOException((java.lang.Throwable) iOException17);
        java.io.IOException iOException19 = new java.io.IOException((java.lang.Throwable) iOException18);
        iOException10.addSuppressed((java.lang.Throwable) iOException18);
        java.io.IOException iOException21 = new java.io.IOException();
        java.io.IOException iOException22 = new java.io.IOException();
        iOException21.addSuppressed((java.lang.Throwable) iOException22);
        java.io.IOException iOException24 = new java.io.IOException();
        java.io.IOException iOException25 = new java.io.IOException();
        iOException24.addSuppressed((java.lang.Throwable) iOException25);
        java.lang.Throwable[] throwableArray27 = iOException25.getSuppressed();
        java.io.IOException iOException28 = new java.io.IOException((java.lang.Throwable) iOException25);
        java.io.IOException iOException30 = new java.io.IOException("");
        java.io.IOException iOException31 = new java.io.IOException((java.lang.Throwable) iOException30);
        iOException25.addSuppressed((java.lang.Throwable) iOException31);
        iOException22.addSuppressed((java.lang.Throwable) iOException31);
        java.lang.Throwable[] throwableArray34 = iOException22.getSuppressed();
        java.lang.Throwable[] throwableArray35 = iOException22.getSuppressed();
        java.lang.Throwable[] throwableArray36 = iOException22.getSuppressed();
        java.io.IOException iOException38 = new java.io.IOException("0");
        java.io.IOException iOException39 = new java.io.IOException((java.lang.Throwable) iOException38);
        iOException22.addSuppressed((java.lang.Throwable) iOException38);
        iOException18.addSuppressed((java.lang.Throwable) iOException22);
        iOException3.addSuppressed((java.lang.Throwable) iOException22);
        java.io.IOException iOException43 = new java.io.IOException("23", (java.lang.Throwable) iOException3);
        java.io.IOException iOException46 = new java.io.IOException("0");
        java.lang.Throwable[] throwableArray47 = iOException46.getSuppressed();
        java.io.IOException iOException48 = new java.io.IOException("hi!", (java.lang.Throwable) iOException46);
        java.io.IOException iOException49 = new java.io.IOException((java.lang.Throwable) iOException46);
        java.io.IOException iOException50 = new java.io.IOException((java.lang.Throwable) iOException46);
        java.io.IOException iOException51 = new java.io.IOException((java.lang.Throwable) iOException50);
        iOException3.addSuppressed((java.lang.Throwable) iOException51);
        java.io.IOException iOException55 = new java.io.IOException();
        java.io.IOException iOException56 = new java.io.IOException();
        iOException55.addSuppressed((java.lang.Throwable) iOException56);
        java.io.IOException iOException58 = new java.io.IOException("0", (java.lang.Throwable) iOException55);
        java.io.IOException iOException59 = new java.io.IOException((java.lang.Throwable) iOException58);
        java.io.IOException iOException60 = new java.io.IOException((java.lang.Throwable) iOException59);
        java.io.IOException iOException61 = new java.io.IOException((java.lang.Throwable) iOException60);
        java.lang.Throwable[] throwableArray62 = iOException61.getSuppressed();
        java.io.IOException iOException63 = new java.io.IOException("java.io.IOException: java.io.IOException", (java.lang.Throwable) iOException61);
        java.io.IOException iOException64 = new java.io.IOException((java.lang.Throwable) iOException63);
        java.io.IOException iOException68 = new java.io.IOException("0");
        java.lang.Throwable[] throwableArray69 = iOException68.getSuppressed();
        java.io.IOException iOException70 = new java.io.IOException("hi!", (java.lang.Throwable) iOException68);
        java.io.IOException iOException71 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException68);
        iOException63.addSuppressed((java.lang.Throwable) iOException71);
        java.lang.Throwable[] throwableArray73 = iOException71.getSuppressed();
        iOException3.addSuppressed((java.lang.Throwable) iOException71);
        java.io.IOException iOException75 = new java.io.IOException("java.io.IOException: java.io.IOException: hi!", (java.lang.Throwable) iOException71);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertNotNull(throwableArray73);
    }

    @Test
    public void test05227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05227");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '#', (int) (short) 100);
        java.io.Writer writer5 = null;
        int int6 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: hi!", (int) (short) 10, writer5);
        java.io.Writer writer9 = null;
        int int10 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: \\u005Cu\\u0030\\u0030\\u0036\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0032\\u0031", (int) 'a', writer9);
        java.lang.Class<?> wildcardClass11 = unicodeEscaper2.getClass();
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test05228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05228");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between(10, (int) (short) 0);
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate(100, writer4);
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test05229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05229");
        java.io.IOException iOException1 = new java.io.IOException("\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        java.io.IOException iOException2 = new java.io.IOException();
        java.io.IOException iOException3 = new java.io.IOException();
        iOException2.addSuppressed((java.lang.Throwable) iOException3);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException2);
        iOException1.addSuppressed((java.lang.Throwable) iOException5);
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.lang.Class<?> wildcardClass8 = iOException5.getClass();
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test05230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05230");
        java.io.IOException iOException0 = new java.io.IOException();
        java.io.IOException iOException1 = new java.io.IOException();
        iOException0.addSuppressed((java.lang.Throwable) iOException1);
        java.io.IOException iOException3 = new java.io.IOException();
        java.io.IOException iOException4 = new java.io.IOException();
        iOException3.addSuppressed((java.lang.Throwable) iOException4);
        java.lang.Throwable[] throwableArray6 = iOException4.getSuppressed();
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.io.IOException iOException9 = new java.io.IOException("");
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException9);
        iOException4.addSuppressed((java.lang.Throwable) iOException10);
        iOException1.addSuppressed((java.lang.Throwable) iOException10);
        java.lang.Throwable[] throwableArray13 = iOException1.getSuppressed();
        java.lang.Throwable[] throwableArray14 = iOException1.getSuppressed();
        java.io.IOException iOException18 = new java.io.IOException("");
        java.io.IOException iOException19 = new java.io.IOException((java.lang.Throwable) iOException18);
        java.io.IOException iOException21 = new java.io.IOException("");
        iOException19.addSuppressed((java.lang.Throwable) iOException21);
        java.io.IOException iOException23 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException21);
        java.io.IOException iOException25 = new java.io.IOException("");
        java.io.IOException iOException26 = new java.io.IOException((java.lang.Throwable) iOException25);
        java.io.IOException iOException27 = new java.io.IOException((java.lang.Throwable) iOException25);
        iOException23.addSuppressed((java.lang.Throwable) iOException25);
        java.io.IOException iOException29 = new java.io.IOException("\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034", (java.lang.Throwable) iOException23);
        java.io.IOException iOException30 = new java.io.IOException((java.lang.Throwable) iOException29);
        java.io.IOException iOException31 = new java.io.IOException((java.lang.Throwable) iOException29);
        iOException1.addSuppressed((java.lang.Throwable) iOException29);
        java.io.IOException iOException33 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.lang.Throwable[] throwableArray34 = iOException33.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray34);
    }

    @Test
    public void test05231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05231");
        java.io.IOException iOException4 = new java.io.IOException();
        java.io.IOException iOException5 = new java.io.IOException();
        iOException4.addSuppressed((java.lang.Throwable) iOException5);
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.io.IOException iOException10 = new java.io.IOException("34");
        java.io.IOException iOException11 = new java.io.IOException("FFFFFFFF", (java.lang.Throwable) iOException10);
        iOException7.addSuppressed((java.lang.Throwable) iOException10);
        java.io.IOException iOException13 = new java.io.IOException("\\u0032\\u0030", (java.lang.Throwable) iOException10);
        java.io.IOException iOException14 = new java.io.IOException("java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030", (java.lang.Throwable) iOException13);
        java.io.IOException iOException15 = new java.io.IOException("", (java.lang.Throwable) iOException13);
        java.io.IOException iOException19 = new java.io.IOException("");
        java.io.IOException iOException20 = new java.io.IOException("A", (java.lang.Throwable) iOException19);
        java.lang.Throwable[] throwableArray21 = iOException19.getSuppressed();
        java.io.IOException iOException22 = new java.io.IOException((java.lang.Throwable) iOException19);
        java.io.IOException iOException23 = new java.io.IOException("java.io.IOException: java.io.IOException: java.io.IOException", (java.lang.Throwable) iOException22);
        java.lang.Throwable[] throwableArray24 = iOException23.getSuppressed();
        java.io.IOException iOException25 = new java.io.IOException((java.lang.Throwable) iOException23);
        java.io.IOException iOException30 = new java.io.IOException("");
        java.io.IOException iOException31 = new java.io.IOException((java.lang.Throwable) iOException30);
        java.io.IOException iOException33 = new java.io.IOException("");
        iOException31.addSuppressed((java.lang.Throwable) iOException33);
        java.io.IOException iOException35 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException33);
        java.io.IOException iOException36 = new java.io.IOException("java.io.IOException: \\u0068\\u0069\\u0021", (java.lang.Throwable) iOException33);
        java.io.IOException iOException37 = new java.io.IOException();
        java.io.IOException iOException38 = new java.io.IOException();
        iOException37.addSuppressed((java.lang.Throwable) iOException38);
        java.lang.Throwable[] throwableArray40 = iOException38.getSuppressed();
        java.lang.Throwable[] throwableArray41 = iOException38.getSuppressed();
        java.io.IOException iOException43 = new java.io.IOException();
        java.io.IOException iOException44 = new java.io.IOException();
        iOException43.addSuppressed((java.lang.Throwable) iOException44);
        java.io.IOException iOException46 = new java.io.IOException("0", (java.lang.Throwable) iOException43);
        java.io.IOException iOException47 = new java.io.IOException((java.lang.Throwable) iOException46);
        iOException38.addSuppressed((java.lang.Throwable) iOException47);
        java.lang.Throwable[] throwableArray49 = iOException38.getSuppressed();
        iOException33.addSuppressed((java.lang.Throwable) iOException38);
        java.io.IOException iOException51 = new java.io.IOException("\\\\u00750068\\\\u00750069\\\\u00750021", (java.lang.Throwable) iOException38);
        java.io.IOException iOException52 = new java.io.IOException((java.lang.Throwable) iOException51);
        iOException23.addSuppressed((java.lang.Throwable) iOException52);
        iOException13.addSuppressed((java.lang.Throwable) iOException23);
        java.io.IOException iOException55 = new java.io.IOException((java.lang.Throwable) iOException23);
        java.io.IOException iOException60 = new java.io.IOException("");
        java.io.IOException iOException61 = new java.io.IOException((java.lang.Throwable) iOException60);
        java.io.IOException iOException63 = new java.io.IOException("");
        iOException61.addSuppressed((java.lang.Throwable) iOException63);
        java.io.IOException iOException65 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException63);
        java.io.IOException iOException66 = new java.io.IOException("java.io.IOException: \\u0068\\u0069\\u0021", (java.lang.Throwable) iOException63);
        java.io.IOException iOException67 = new java.io.IOException((java.lang.Throwable) iOException63);
        java.io.IOException iOException68 = new java.io.IOException((java.lang.Throwable) iOException67);
        java.io.IOException iOException69 = new java.io.IOException((java.lang.Throwable) iOException67);
        java.io.IOException iOException70 = new java.io.IOException("\\\\\\u00750075006Aa\\\\\\u007500750076a.\\\\\\u007500750069\\\\\\u00750075006F.IOE\\\\\\u007500750078\\\\u00750063\\\\\\u007500750065\\\\\\u007500750070\\\\\\u007500750074\\\\\\u007500750069\\\\\\u00750075006F\\\\\\u00750075006E:\\\\\\u007500750020\\\\\\u00750075006Aa\\\\\\u007500750076a.\\\\\\u007500750069\\\\\\u00750075006F.IOE\\\\\\u007500750078\\\\u00750063\\\\\\u007500750065\\\\\\u007500750070\\\\\\u007500750074\\\\\\u007500750069\\\\\\u00750075006F\\\\\\u00750075006E", (java.lang.Throwable) iOException67);
        iOException55.addSuppressed((java.lang.Throwable) iOException67);
        java.io.IOException iOException72 = new java.io.IOException("\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0033\\u0038\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0033\\u0039\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0032\\u005C\\u0075\\u0030\\u0030\\u0033\\u0031", (java.lang.Throwable) iOException55);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray49);
    }

    @Test
    public void test05232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05232");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) '4', writer4);
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper2.translate((int) '#', writer7);
        java.io.Writer writer11 = null;
        int int12 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030", (int) (short) 10, writer11);
        java.io.Writer writer15 = null;
        int int16 = unicodeEscaper2.translate((java.lang.CharSequence) "\\\\u\\u0030\\u003075\\u0030\\u0030\\u0033\\u0033\\\\u\\u0030\\u003075\\u0030\\u0030\\u0033\\u0034", (int) (byte) 1, writer15);
        java.io.Writer writer18 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u00200", writer18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test05233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05233");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) 'a', (int) (byte) 0);
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "20");
        java.io.Writer writer6 = null;
        boolean boolean7 = unicodeEscaper2.translate((int) (short) 0, writer6);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper10 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 100, (int) (short) 10);
        java.io.Writer writer12 = null;
        boolean boolean13 = unicodeEscaper10.translate(0, writer12);
        java.lang.String str15 = unicodeEscaper10.translate((java.lang.CharSequence) "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper18 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (byte) 100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper21 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer23 = null;
        boolean boolean24 = unicodeEscaper21.translate((int) '4', writer23);
        java.io.Writer writer27 = null;
        int int28 = unicodeEscaper21.translate((java.lang.CharSequence) "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", 100, writer27);
        java.lang.String str30 = unicodeEscaper21.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper33 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) (byte) 10);
        java.lang.String str35 = unicodeEscaper33.translate((java.lang.CharSequence) "java.io.IOException");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper37 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) (short) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper40 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '#', 100);
        java.lang.String str42 = unicodeEscaper40.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper45 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) '4', (int) (short) 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper48 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper51 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', (int) (short) 0);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray52 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper51 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator53 = unicodeEscaper48.with(charSequenceTranslatorArray52);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator54 = unicodeEscaper45.with(charSequenceTranslatorArray52);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator55 = unicodeEscaper40.with(charSequenceTranslatorArray52);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator56 = unicodeEscaper37.with(charSequenceTranslatorArray52);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper59 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper62 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer64 = null;
        boolean boolean65 = unicodeEscaper62.translate((int) '4', writer64);
        java.io.Writer writer67 = null;
        boolean boolean68 = unicodeEscaper62.translate((int) (byte) -1, writer67);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper71 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper73 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper75 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str77 = unicodeEscaper75.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray78 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper71, unicodeEscaper73, unicodeEscaper75 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator79 = unicodeEscaper62.with(charSequenceTranslatorArray78);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator80 = unicodeEscaper59.with(charSequenceTranslatorArray78);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator81 = unicodeEscaper37.with(charSequenceTranslatorArray78);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator82 = unicodeEscaper33.with(charSequenceTranslatorArray78);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator83 = unicodeEscaper21.with(charSequenceTranslatorArray78);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator84 = unicodeEscaper18.with(charSequenceTranslatorArray78);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator85 = unicodeEscaper10.with(charSequenceTranslatorArray78);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator86 = unicodeEscaper2.with(charSequenceTranslatorArray78);
        java.io.Writer writer88 = null;
        boolean boolean89 = unicodeEscaper2.translate((int) 'a', writer88);
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "20" + "'", str4, "20");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption" + "'", str15, "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption");
        org.junit.Assert.assertNotNull(unicodeEscaper18);
        org.junit.Assert.assertNotNull(unicodeEscaper21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030" + "'", str30, "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030");
        org.junit.Assert.assertNotNull(unicodeEscaper33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str35, "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertNotNull(unicodeEscaper37);
        org.junit.Assert.assertNotNull(unicodeEscaper40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str42, "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertNotNull(unicodeEscaper45);
        org.junit.Assert.assertNotNull(unicodeEscaper48);
        org.junit.Assert.assertNotNull(unicodeEscaper51);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray52);
        org.junit.Assert.assertNotNull(charSequenceTranslator53);
        org.junit.Assert.assertNotNull(charSequenceTranslator54);
        org.junit.Assert.assertNotNull(charSequenceTranslator55);
        org.junit.Assert.assertNotNull(charSequenceTranslator56);
        org.junit.Assert.assertNotNull(unicodeEscaper59);
        org.junit.Assert.assertNotNull(unicodeEscaper62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper71);
        org.junit.Assert.assertNotNull(unicodeEscaper73);
        org.junit.Assert.assertNotNull(unicodeEscaper75);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str77, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray78);
        org.junit.Assert.assertNotNull(charSequenceTranslator79);
        org.junit.Assert.assertNotNull(charSequenceTranslator80);
        org.junit.Assert.assertNotNull(charSequenceTranslator81);
        org.junit.Assert.assertNotNull(charSequenceTranslator82);
        org.junit.Assert.assertNotNull(charSequenceTranslator83);
        org.junit.Assert.assertNotNull(charSequenceTranslator84);
        org.junit.Assert.assertNotNull(charSequenceTranslator85);
        org.junit.Assert.assertNotNull(charSequenceTranslator86);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test05234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05234");
        java.io.IOException iOException1 = new java.io.IOException("java.io.IOException: java.io.IOException: 64");
        java.io.IOException iOException3 = new java.io.IOException();
        java.io.IOException iOException4 = new java.io.IOException();
        iOException3.addSuppressed((java.lang.Throwable) iOException4);
        java.io.IOException iOException6 = new java.io.IOException("0", (java.lang.Throwable) iOException3);
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        iOException1.addSuppressed((java.lang.Throwable) iOException8);
        java.lang.Class<?> wildcardClass10 = iOException1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test05235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05235");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 10, (int) (short) 100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper4 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (short) 100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper7 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 100, (-1));
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper10 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer12 = null;
        boolean boolean13 = unicodeEscaper10.translate((int) (short) 10, writer12);
        java.lang.String str15 = unicodeEscaper10.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper18 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer20 = null;
        boolean boolean21 = unicodeEscaper18.translate((int) '4', writer20);
        java.io.Writer writer23 = null;
        boolean boolean24 = unicodeEscaper18.translate((int) (byte) -1, writer23);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper27 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper29 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper31 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str33 = unicodeEscaper31.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray34 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper27, unicodeEscaper29, unicodeEscaper31 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator35 = unicodeEscaper18.with(charSequenceTranslatorArray34);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator36 = unicodeEscaper10.with(charSequenceTranslatorArray34);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator37 = unicodeEscaper7.with(charSequenceTranslatorArray34);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator38 = unicodeEscaper4.with(charSequenceTranslatorArray34);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator39 = unicodeEscaper2.with(charSequenceTranslatorArray34);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper42 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) 'a', (int) (byte) 0);
        java.io.Writer writer45 = null;
        int int46 = unicodeEscaper42.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: ", (int) (short) 1, writer45);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper48 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above(0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper51 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 100, (int) (short) 100);
        java.io.Writer writer54 = null;
        int int55 = unicodeEscaper51.translate((java.lang.CharSequence) "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception", (int) (byte) 0, writer54);
        java.io.Writer writer57 = null;
        boolean boolean58 = unicodeEscaper51.translate((int) '#', writer57);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper61 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 0, (int) 'a');
        java.io.Writer writer63 = null;
        boolean boolean64 = unicodeEscaper61.translate(100, writer63);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper67 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper70 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', (int) (short) 0);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray71 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper70 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator72 = unicodeEscaper67.with(charSequenceTranslatorArray71);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator73 = unicodeEscaper61.with(charSequenceTranslatorArray71);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator74 = unicodeEscaper51.with(charSequenceTranslatorArray71);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator75 = unicodeEscaper48.with(charSequenceTranslatorArray71);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator76 = unicodeEscaper42.with(charSequenceTranslatorArray71);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator77 = unicodeEscaper2.with(charSequenceTranslatorArray71);
        java.io.Writer writer79 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean80 = unicodeEscaper2.translate((int) (short) 0, writer79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper4);
        org.junit.Assert.assertNotNull(unicodeEscaper7);
        org.junit.Assert.assertNotNull(unicodeEscaper10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "0" + "'", str15, "0");
        org.junit.Assert.assertNotNull(unicodeEscaper18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper27);
        org.junit.Assert.assertNotNull(unicodeEscaper29);
        org.junit.Assert.assertNotNull(unicodeEscaper31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str33, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray34);
        org.junit.Assert.assertNotNull(charSequenceTranslator35);
        org.junit.Assert.assertNotNull(charSequenceTranslator36);
        org.junit.Assert.assertNotNull(charSequenceTranslator37);
        org.junit.Assert.assertNotNull(charSequenceTranslator38);
        org.junit.Assert.assertNotNull(charSequenceTranslator39);
        org.junit.Assert.assertNotNull(unicodeEscaper42);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(unicodeEscaper48);
        org.junit.Assert.assertNotNull(unicodeEscaper51);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper67);
        org.junit.Assert.assertNotNull(unicodeEscaper70);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray71);
        org.junit.Assert.assertNotNull(charSequenceTranslator72);
        org.junit.Assert.assertNotNull(charSequenceTranslator73);
        org.junit.Assert.assertNotNull(charSequenceTranslator74);
        org.junit.Assert.assertNotNull(charSequenceTranslator75);
        org.junit.Assert.assertNotNull(charSequenceTranslator76);
        org.junit.Assert.assertNotNull(charSequenceTranslator77);
    }

    @Test
    public void test05236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05236");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) '4', (int) (short) 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper8 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', (int) (short) 0);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray9 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper8 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator10 = unicodeEscaper5.with(charSequenceTranslatorArray9);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator11 = unicodeEscaper2.with(charSequenceTranslatorArray9);
        java.io.Writer writer13 = null;
        boolean boolean14 = unicodeEscaper2.translate((int) (byte) 1, writer13);
        java.lang.String str16 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertNotNull(unicodeEscaper8);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray9);
        org.junit.Assert.assertNotNull(charSequenceTranslator10);
        org.junit.Assert.assertNotNull(charSequenceTranslator11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "java.io.IOException:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str16, "java.io.IOException:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
    }

    @Test
    public void test05237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05237");
        java.io.IOException iOException2 = new java.io.IOException("java\\u005Cu\\u0030\\u0030\\u0032\\u0045io\\u005Cu\\u0030\\u0030\\u0032\\u0045\\u005Cu\\u0030\\u0030\\u0034\\u0039\\u005Cu\\u0030\\u0030\\u0034\\u0046\\u005Cu\\u0030\\u0030\\u0034\\u0035xception\\u005Cu\\u0030\\u0030\\u0033\\u0041\\u005Cu\\u0030\\u0030\\u0032\\u0030java\\u005Cu\\u0030\\u0030\\u0032\\u0045io\\u005Cu\\u0030\\u0030\\u0032\\u0045\\u005Cu\\u0030\\u0030\\u0034\\u0039\\u005Cu\\u0030\\u0030\\u0034\\u0046\\u005Cu\\u0030\\u0030\\u0034\\u0035xception");
        java.io.IOException iOException3 = new java.io.IOException("java.io.IOException: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException2);
        java.io.IOException iOException6 = new java.io.IOException();
        java.io.IOException iOException7 = new java.io.IOException();
        iOException6.addSuppressed((java.lang.Throwable) iOException7);
        java.io.IOException iOException9 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException9);
        java.io.IOException iOException11 = new java.io.IOException("", (java.lang.Throwable) iOException9);
        java.io.IOException iOException15 = new java.io.IOException("");
        java.io.IOException iOException16 = new java.io.IOException((java.lang.Throwable) iOException15);
        java.io.IOException iOException18 = new java.io.IOException("");
        iOException16.addSuppressed((java.lang.Throwable) iOException18);
        java.io.IOException iOException20 = new java.io.IOException("java.io.IOException: 0", (java.lang.Throwable) iOException18);
        java.io.IOException iOException21 = new java.io.IOException("java.io.IOException: java.io.IOException: java.io.IOException", (java.lang.Throwable) iOException18);
        iOException11.addSuppressed((java.lang.Throwable) iOException21);
        java.io.IOException iOException26 = new java.io.IOException();
        java.io.IOException iOException27 = new java.io.IOException();
        iOException26.addSuppressed((java.lang.Throwable) iOException27);
        java.io.IOException iOException29 = new java.io.IOException("0", (java.lang.Throwable) iOException26);
        java.io.IOException iOException30 = new java.io.IOException((java.lang.Throwable) iOException29);
        java.io.IOException iOException31 = new java.io.IOException((java.lang.Throwable) iOException30);
        java.io.IOException iOException32 = new java.io.IOException((java.lang.Throwable) iOException31);
        java.lang.Throwable[] throwableArray33 = iOException32.getSuppressed();
        java.io.IOException iOException34 = new java.io.IOException("java.io.IOException: java.io.IOException", (java.lang.Throwable) iOException32);
        java.io.IOException iOException35 = new java.io.IOException("\\u005Cu\\u0030\\u0030\\u0036\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0032\\u0031", (java.lang.Throwable) iOException32);
        java.io.IOException iOException36 = new java.io.IOException((java.lang.Throwable) iOException35);
        java.io.IOException iOException38 = new java.io.IOException();
        java.io.IOException iOException39 = new java.io.IOException();
        iOException38.addSuppressed((java.lang.Throwable) iOException39);
        java.io.IOException iOException41 = new java.io.IOException();
        java.io.IOException iOException42 = new java.io.IOException();
        iOException41.addSuppressed((java.lang.Throwable) iOException42);
        java.lang.Throwable[] throwableArray44 = iOException42.getSuppressed();
        java.io.IOException iOException45 = new java.io.IOException((java.lang.Throwable) iOException42);
        java.io.IOException iOException47 = new java.io.IOException("");
        java.io.IOException iOException48 = new java.io.IOException((java.lang.Throwable) iOException47);
        iOException42.addSuppressed((java.lang.Throwable) iOException48);
        iOException39.addSuppressed((java.lang.Throwable) iOException48);
        java.io.IOException iOException51 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException48);
        java.io.IOException iOException54 = new java.io.IOException("");
        java.io.IOException iOException55 = new java.io.IOException((java.lang.Throwable) iOException54);
        java.io.IOException iOException57 = new java.io.IOException("");
        iOException55.addSuppressed((java.lang.Throwable) iOException57);
        java.io.IOException iOException59 = new java.io.IOException("java.io.IOException: 0", (java.lang.Throwable) iOException57);
        iOException48.addSuppressed((java.lang.Throwable) iOException57);
        java.io.IOException iOException61 = new java.io.IOException((java.lang.Throwable) iOException48);
        iOException36.addSuppressed((java.lang.Throwable) iOException48);
        java.io.IOException iOException63 = new java.io.IOException((java.lang.Throwable) iOException36);
        iOException11.addSuppressed((java.lang.Throwable) iOException36);
        java.io.IOException iOException65 = new java.io.IOException((java.lang.Throwable) iOException36);
        java.io.IOException iOException66 = new java.io.IOException("\\\\u00750068\\\\u00750069\\\\u00750021", (java.lang.Throwable) iOException65);
        java.io.IOException iOException67 = new java.io.IOException((java.lang.Throwable) iOException66);
        iOException2.addSuppressed((java.lang.Throwable) iOException67);
        java.lang.Throwable[] throwableArray69 = iOException2.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray69);
    }

    @Test
    public void test05238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05238");
        java.io.IOException iOException5 = new java.io.IOException("0");
        java.lang.Throwable[] throwableArray6 = iOException5.getSuppressed();
        java.io.IOException iOException7 = new java.io.IOException("hi!", (java.lang.Throwable) iOException5);
        java.lang.Throwable[] throwableArray8 = iOException5.getSuppressed();
        java.io.IOException iOException9 = new java.io.IOException("java.io.IOException: ", (java.lang.Throwable) iOException5);
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException9);
        java.io.IOException iOException11 = new java.io.IOException("java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException9);
        java.io.IOException iOException12 = new java.io.IOException("java.io.IOException:\\u0020\\\\\\u00750075006Aa\\\\\\u007500750076a.\\\\\\u007500750069\\\\\\u00750075006F.IOE\\\\\\u007500750078\\\\\\u007500750063\\\\\\u007500750065\\\\\\u007500750070\\\\\\u007500750074\\\\\\u007500750069\\\\\\u00750075006F\\\\\\u00750075006E:\\u0020\\\\\\u00750075006Aa\\\\\\u007500750076a.\\\\\\u007500750069\\\\\\u00750075006F.IOE\\\\\\u007500750078\\\\\\u007500750063\\\\\\u007500750065\\\\\\u007500750070\\\\\\u007500750074\\\\\\u007500750069\\\\\\u00750075006F\\\\\\u00750075006E:\\u0020\\\\\\u00750075006Aa\\\\\\u007500750076a.\\\\\\u007500750069\\\\\\u00750075006F.IOE\\\\\\u007500750078\\\\\\u007500750063\\\\\\u007500750065\\\\\\u007500750070\\\\\\u007500750074\\\\\\u007500750069\\\\\\u00750075006F\\\\\\u00750075006E:\\u00200", (java.lang.Throwable) iOException9);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray8);
    }

    @Test
    public void test05239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05239");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) ' ', (int) '4');
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate(0, writer4);
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper2.translate((int) (short) -1, writer7);
        java.io.Writer writer10 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate((java.lang.CharSequence) "\\u006A\\\\u00750061\\u0076\\\\u00750061\\\\u0075002E\\u0069\\u006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", writer10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test05240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05240");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) ' ', (int) (short) -1);
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        java.io.Writer writer7 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int8 = unicodeEscaper2.translate((java.lang.CharSequence) "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A hi!", (int) (short) 10, writer7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u005C\\u0075\\u0030\\u0030\\u0036\\u0041\\u005C\\u0075\\u0030\\u0030\\u0036\\u0031\\u005C\\u0075\\u0030\\u0030\\u0037\\u0036\\u005C\\u0075\\u0030\\u0030\\u0036\\u0031\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u005C\\u0075\\u0030\\u0030\\u0036\\u0046\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u005C\\u0075\\u0030\\u0030\\u0037\\u0038\\u005C\\u0075\\u0030\\u0030\\u0036\\u0033\\u005C\\u0075\\u0030\\u0030\\u0036\\u0035\\u005C\\u0075\\u0030\\u0030\\u0037\\u0030\\u005C\\u0075\\u0030\\u0030\\u0037\\u0034\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u005C\\u0075\\u0030\\u0030\\u0036\\u0046\\u005C\\u0075\\u0030\\u0030\\u0036\\u0045" + "'", str4, "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u005C\\u0075\\u0030\\u0030\\u0036\\u0041\\u005C\\u0075\\u0030\\u0030\\u0036\\u0031\\u005C\\u0075\\u0030\\u0030\\u0037\\u0036\\u005C\\u0075\\u0030\\u0030\\u0036\\u0031\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u005C\\u0075\\u0030\\u0030\\u0036\\u0046\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u005C\\u0075\\u0030\\u0030\\u0037\\u0038\\u005C\\u0075\\u0030\\u0030\\u0036\\u0033\\u005C\\u0075\\u0030\\u0030\\u0036\\u0035\\u005C\\u0075\\u0030\\u0030\\u0037\\u0030\\u005C\\u0075\\u0030\\u0030\\u0037\\u0034\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u005C\\u0075\\u0030\\u0030\\u0036\\u0046\\u005C\\u0075\\u0030\\u0030\\u0036\\u0045");
    }

    @Test
    public void test05241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05241");
        java.io.IOException iOException4 = new java.io.IOException("0");
        java.lang.Throwable[] throwableArray5 = iOException4.getSuppressed();
        java.io.IOException iOException6 = new java.io.IOException("hi!", (java.lang.Throwable) iOException4);
        java.lang.Throwable[] throwableArray7 = iOException4.getSuppressed();
        java.io.IOException iOException9 = new java.io.IOException("0");
        java.io.IOException iOException10 = new java.io.IOException();
        java.io.IOException iOException11 = new java.io.IOException();
        iOException10.addSuppressed((java.lang.Throwable) iOException11);
        java.io.IOException iOException13 = new java.io.IOException();
        java.io.IOException iOException14 = new java.io.IOException();
        iOException13.addSuppressed((java.lang.Throwable) iOException14);
        java.lang.Throwable[] throwableArray16 = iOException14.getSuppressed();
        java.io.IOException iOException17 = new java.io.IOException((java.lang.Throwable) iOException14);
        java.io.IOException iOException19 = new java.io.IOException("");
        java.io.IOException iOException20 = new java.io.IOException((java.lang.Throwable) iOException19);
        iOException14.addSuppressed((java.lang.Throwable) iOException20);
        iOException11.addSuppressed((java.lang.Throwable) iOException20);
        iOException9.addSuppressed((java.lang.Throwable) iOException20);
        iOException4.addSuppressed((java.lang.Throwable) iOException9);
        java.io.IOException iOException25 = new java.io.IOException((java.lang.Throwable) iOException9);
        java.io.IOException iOException26 = new java.io.IOException("\\u006Aa\\u0076a\\\\u0075002E\\u0069\\u006F\\\\u0075002EIOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException25);
        java.io.IOException iOException28 = new java.io.IOException();
        java.io.IOException iOException29 = new java.io.IOException();
        iOException28.addSuppressed((java.lang.Throwable) iOException29);
        java.lang.Throwable[] throwableArray31 = iOException29.getSuppressed();
        java.lang.Throwable[] throwableArray32 = iOException29.getSuppressed();
        java.io.IOException iOException33 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException29);
        java.io.IOException iOException34 = new java.io.IOException();
        java.io.IOException iOException35 = new java.io.IOException();
        iOException34.addSuppressed((java.lang.Throwable) iOException35);
        java.io.IOException iOException37 = new java.io.IOException((java.lang.Throwable) iOException34);
        java.lang.Throwable[] throwableArray38 = iOException37.getSuppressed();
        iOException33.addSuppressed((java.lang.Throwable) iOException37);
        java.io.IOException iOException41 = new java.io.IOException();
        java.io.IOException iOException42 = new java.io.IOException();
        iOException41.addSuppressed((java.lang.Throwable) iOException42);
        java.io.IOException iOException44 = new java.io.IOException();
        java.io.IOException iOException45 = new java.io.IOException();
        iOException44.addSuppressed((java.lang.Throwable) iOException45);
        java.lang.Throwable[] throwableArray47 = iOException45.getSuppressed();
        java.io.IOException iOException48 = new java.io.IOException((java.lang.Throwable) iOException45);
        java.io.IOException iOException50 = new java.io.IOException("");
        java.io.IOException iOException51 = new java.io.IOException((java.lang.Throwable) iOException50);
        iOException45.addSuppressed((java.lang.Throwable) iOException51);
        iOException42.addSuppressed((java.lang.Throwable) iOException51);
        java.io.IOException iOException54 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException51);
        iOException37.addSuppressed((java.lang.Throwable) iOException54);
        java.io.IOException iOException57 = new java.io.IOException("");
        java.io.IOException iOException58 = new java.io.IOException((java.lang.Throwable) iOException57);
        java.io.IOException iOException60 = new java.io.IOException("");
        iOException58.addSuppressed((java.lang.Throwable) iOException60);
        java.io.IOException iOException63 = new java.io.IOException("");
        java.io.IOException iOException64 = new java.io.IOException((java.lang.Throwable) iOException63);
        java.io.IOException iOException66 = new java.io.IOException("");
        iOException64.addSuppressed((java.lang.Throwable) iOException66);
        iOException58.addSuppressed((java.lang.Throwable) iOException64);
        iOException37.addSuppressed((java.lang.Throwable) iOException64);
        java.lang.Throwable[] throwableArray70 = iOException64.getSuppressed();
        java.io.IOException iOException72 = new java.io.IOException();
        java.io.IOException iOException73 = new java.io.IOException();
        iOException72.addSuppressed((java.lang.Throwable) iOException73);
        java.io.IOException iOException75 = new java.io.IOException("0", (java.lang.Throwable) iOException72);
        java.io.IOException iOException76 = new java.io.IOException((java.lang.Throwable) iOException75);
        java.io.IOException iOException77 = new java.io.IOException((java.lang.Throwable) iOException76);
        java.io.IOException iOException78 = new java.io.IOException((java.lang.Throwable) iOException77);
        java.lang.Throwable[] throwableArray79 = iOException77.getSuppressed();
        iOException64.addSuppressed((java.lang.Throwable) iOException77);
        java.lang.Throwable[] throwableArray81 = iOException64.getSuppressed();
        iOException25.addSuppressed((java.lang.Throwable) iOException64);
        java.io.IOException iOException83 = new java.io.IOException("\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\\\u0075006A\\\\u00750061\\\\u00750076\\\\u00750061\\\\u0075002E\\\\u00750069\\\\u0075006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E\\\\u0075003A\\\\u00750020", (java.lang.Throwable) iOException64);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray70);
        org.junit.Assert.assertNotNull(throwableArray79);
        org.junit.Assert.assertNotNull(throwableArray81);
    }

    @Test
    public void test05242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05242");
        java.io.IOException iOException4 = new java.io.IOException("0");
        java.lang.Throwable[] throwableArray5 = iOException4.getSuppressed();
        java.io.IOException iOException6 = new java.io.IOException("hi!", (java.lang.Throwable) iOException4);
        java.lang.Throwable[] throwableArray7 = iOException4.getSuppressed();
        java.io.IOException iOException8 = new java.io.IOException("java.io.IOException: ", (java.lang.Throwable) iOException4);
        java.io.IOException iOException9 = new java.io.IOException((java.lang.Throwable) iOException8);
        java.io.IOException iOException10 = new java.io.IOException("java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException8);
        java.lang.String str11 = iOException8.toString();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "java.io.IOException: java.io.IOException: " + "'", str11, "java.io.IOException: java.io.IOException: ");
    }

    @Test
    public void test05243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05243");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) 'a', (int) (short) -1);
        java.lang.CharSequence charSequence3 = null;
        java.lang.String str4 = unicodeEscaper2.translate(charSequence3);
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test05244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05244");
        java.io.IOException iOException3 = new java.io.IOException("");
        java.io.IOException iOException4 = new java.io.IOException((java.lang.Throwable) iOException3);
        java.io.IOException iOException6 = new java.io.IOException("");
        iOException4.addSuppressed((java.lang.Throwable) iOException6);
        java.io.IOException iOException8 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException6);
        java.io.IOException iOException9 = new java.io.IOException("java.io.IOException: \\u0068\\u0069\\u0021", (java.lang.Throwable) iOException6);
        java.io.IOException iOException11 = new java.io.IOException();
        java.io.IOException iOException12 = new java.io.IOException();
        iOException11.addSuppressed((java.lang.Throwable) iOException12);
        java.io.IOException iOException14 = new java.io.IOException();
        java.io.IOException iOException15 = new java.io.IOException();
        iOException14.addSuppressed((java.lang.Throwable) iOException15);
        java.lang.Throwable[] throwableArray17 = iOException15.getSuppressed();
        java.io.IOException iOException18 = new java.io.IOException((java.lang.Throwable) iOException15);
        java.io.IOException iOException20 = new java.io.IOException("");
        java.io.IOException iOException21 = new java.io.IOException((java.lang.Throwable) iOException20);
        iOException15.addSuppressed((java.lang.Throwable) iOException21);
        iOException12.addSuppressed((java.lang.Throwable) iOException21);
        java.io.IOException iOException24 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException21);
        java.io.IOException iOException27 = new java.io.IOException("");
        java.io.IOException iOException28 = new java.io.IOException((java.lang.Throwable) iOException27);
        java.io.IOException iOException30 = new java.io.IOException("");
        iOException28.addSuppressed((java.lang.Throwable) iOException30);
        java.io.IOException iOException32 = new java.io.IOException("java.io.IOException: 0", (java.lang.Throwable) iOException30);
        iOException21.addSuppressed((java.lang.Throwable) iOException30);
        iOException6.addSuppressed((java.lang.Throwable) iOException21);
        java.lang.String str35 = iOException21.toString();
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "java.io.IOException: java.io.IOException: " + "'", str35, "java.io.IOException: java.io.IOException: ");
    }

    @Test
    public void test05245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05245");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 100, (int) (short) 100);
        java.io.Writer writer4 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate((java.lang.CharSequence) "\\\\\\u00750075006Aa\\\\\\u007500750076a.\\\\\\u007500750069\\\\\\u00750075006F.IOE\\\\\\u007500750078\\\\\\u007500750063\\\\\\u007500750065\\\\\\u007500750070\\\\\\u007500750074\\\\\\u007500750069\\\\\\u00750075006F\\\\\\u00750075006E: \\\\\\u00750075006Aa\\\\\\u007500750076a.\\\\\\u007500750069\\\\\\u00750075006F.IOE\\\\\\u007500750078\\\\\\u007500750063\\\\\\u007500750065\\\\\\u007500750070\\\\\\u007500750074\\\\\\u007500750069\\\\\\u00750075006F\\\\\\u00750075006E: \\\\\\u00750075006Aa\\\\\\u007500750076a.\\\\\\u007500750069\\\\\\u00750075006F.IOE\\\\\\u007500750078\\\\\\u007500750063\\\\\\u007500750065\\\\\\u007500750070\\\\\\u007500750074\\\\\\u007500750069\\\\\\u00750075006F\\\\\\u00750075006E: 0", writer4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
    }

    @Test
    public void test05246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05246");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', (int) (short) 100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) 'a');
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper5.translate((int) '#', writer7);
        java.io.Writer writer11 = null;
        int int12 = unicodeEscaper5.translate((java.lang.CharSequence) "\\u0068\\u0069\\u0021", (int) (short) 10, writer11);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper15 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (short) 100, 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper18 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 100, (-1));
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper21 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer23 = null;
        boolean boolean24 = unicodeEscaper21.translate((int) (short) 10, writer23);
        java.lang.String str26 = unicodeEscaper21.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper29 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer31 = null;
        boolean boolean32 = unicodeEscaper29.translate((int) '4', writer31);
        java.io.Writer writer34 = null;
        boolean boolean35 = unicodeEscaper29.translate((int) (byte) -1, writer34);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper38 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper40 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper42 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str44 = unicodeEscaper42.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray45 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper38, unicodeEscaper40, unicodeEscaper42 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator46 = unicodeEscaper29.with(charSequenceTranslatorArray45);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator47 = unicodeEscaper21.with(charSequenceTranslatorArray45);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator48 = unicodeEscaper18.with(charSequenceTranslatorArray45);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator49 = unicodeEscaper15.with(charSequenceTranslatorArray45);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator50 = unicodeEscaper5.with(charSequenceTranslatorArray45);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator51 = unicodeEscaper2.with(charSequenceTranslatorArray45);
        java.io.Writer writer54 = null;
        int int55 = unicodeEscaper2.translate((java.lang.CharSequence) "\\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\u0063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E: \\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\u0063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E", (int) (byte) 0, writer54);
        java.io.Writer writer58 = null;
        int int59 = unicodeEscaper2.translate((java.lang.CharSequence) "\\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\u0063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E: \\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\u0063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E", (int) (short) 0, writer58);
        java.io.Writer writer61 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean62 = unicodeEscaper2.translate(0, writer61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(unicodeEscaper15);
        org.junit.Assert.assertNotNull(unicodeEscaper18);
        org.junit.Assert.assertNotNull(unicodeEscaper21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "0" + "'", str26, "0");
        org.junit.Assert.assertNotNull(unicodeEscaper29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper38);
        org.junit.Assert.assertNotNull(unicodeEscaper40);
        org.junit.Assert.assertNotNull(unicodeEscaper42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str44, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray45);
        org.junit.Assert.assertNotNull(charSequenceTranslator46);
        org.junit.Assert.assertNotNull(charSequenceTranslator47);
        org.junit.Assert.assertNotNull(charSequenceTranslator48);
        org.junit.Assert.assertNotNull(charSequenceTranslator49);
        org.junit.Assert.assertNotNull(charSequenceTranslator50);
        org.junit.Assert.assertNotNull(charSequenceTranslator51);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
    }

    @Test
    public void test05247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05247");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (short) 100, 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 100, (-1));
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper8 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer10 = null;
        boolean boolean11 = unicodeEscaper8.translate((int) (short) 10, writer10);
        java.lang.String str13 = unicodeEscaper8.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper16 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer18 = null;
        boolean boolean19 = unicodeEscaper16.translate((int) '4', writer18);
        java.io.Writer writer21 = null;
        boolean boolean22 = unicodeEscaper16.translate((int) (byte) -1, writer21);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper25 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper27 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper29 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str31 = unicodeEscaper29.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray32 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper25, unicodeEscaper27, unicodeEscaper29 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator33 = unicodeEscaper16.with(charSequenceTranslatorArray32);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator34 = unicodeEscaper8.with(charSequenceTranslatorArray32);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator35 = unicodeEscaper5.with(charSequenceTranslatorArray32);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator36 = unicodeEscaper2.with(charSequenceTranslatorArray32);
        java.lang.String str38 = charSequenceTranslator36.translate((java.lang.CharSequence) "\\u0030");
        java.lang.CharSequence charSequence39 = null;
        java.io.Writer writer41 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int42 = charSequenceTranslator36.translate(charSequence39, (int) '#', writer41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertNotNull(unicodeEscaper8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "0" + "'", str13, "0");
        org.junit.Assert.assertNotNull(unicodeEscaper16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper25);
        org.junit.Assert.assertNotNull(unicodeEscaper27);
        org.junit.Assert.assertNotNull(unicodeEscaper29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str31, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray32);
        org.junit.Assert.assertNotNull(charSequenceTranslator33);
        org.junit.Assert.assertNotNull(charSequenceTranslator34);
        org.junit.Assert.assertNotNull(charSequenceTranslator35);
        org.junit.Assert.assertNotNull(charSequenceTranslator36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\\u005Cu\\u0030\\u0030\\u0033\\u0030" + "'", str38, "\\u005Cu\\u0030\\u0030\\u0033\\u0030");
    }

    @Test
    public void test05248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05248");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper1 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above(100);
        java.io.Writer writer4 = null;
        int int5 = unicodeEscaper1.translate((java.lang.CharSequence) "java.io.IOException: \\u005Cu\\u0030\\u0030\\u0036\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0032\\u0031", 10, writer4);
        java.lang.String str7 = unicodeEscaper1.translate((java.lang.CharSequence) "java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u005C\\u0075\\u0030\\u0030\\u0036\\u0038\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u005C\\u0075\\u0030\\u0030\\u0032\\u0031");
        java.lang.CharSequence charSequence8 = null;
        java.io.Writer writer9 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper1.translate(charSequence8, writer9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\\\u0075006A\\\\u00750061\\\\u00750076\\\\u00750061\\\\u0075002E\\\\u00750069\\\\u0075006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E\\\\u0075003A\\\\u00750020\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750036\\\\u00750038\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750036\\\\u00750039\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750032\\\\u00750031" + "'", str7, "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\\\u0075006A\\\\u00750061\\\\u00750076\\\\u00750061\\\\u0075002E\\\\u00750069\\\\u0075006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E\\\\u0075003A\\\\u00750020\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750036\\\\u00750038\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750036\\\\u00750039\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750032\\\\u00750031");
    }

    @Test
    public void test05249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05249");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (short) 1, (int) (short) 100);
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: \\u005Cu\\u0030\\u0030\\u0036\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0032\\u0031");
        java.io.Writer writer6 = null;
        boolean boolean7 = unicodeEscaper2.translate((-1), writer6);
        java.io.Writer writer9 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = unicodeEscaper2.translate((int) '4', writer9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020\\u005Cu\\u0030\\u0030\\u0035\\u0043u\\u005Cu\\u0030\\u0030\\u0033\\u0030\\u005Cu\\u0030\\u0030\\u0033\\u0030\\u005Cu\\u0030\\u0030\\u0033\\u0036\\u005Cu\\u0030\\u0030\\u0033\\u0038\\u005Cu\\u0030\\u0030\\u0035\\u0043u\\u005Cu\\u0030\\u0030\\u0033\\u0030\\u005Cu\\u0030\\u0030\\u0033\\u0030\\u005Cu\\u0030\\u0030\\u0033\\u0036\\u005Cu\\u0030\\u0030\\u0033\\u0039\\u005Cu\\u0030\\u0030\\u0035\\u0043u\\u005Cu\\u0030\\u0030\\u0033\\u0030\\u005Cu\\u0030\\u0030\\u0033\\u0030\\u005Cu\\u0030\\u0030\\u0033\\u0032\\u005Cu\\u0030\\u0030\\u0033\\u0031" + "'", str4, "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020\\u005Cu\\u0030\\u0030\\u0035\\u0043u\\u005Cu\\u0030\\u0030\\u0033\\u0030\\u005Cu\\u0030\\u0030\\u0033\\u0030\\u005Cu\\u0030\\u0030\\u0033\\u0036\\u005Cu\\u0030\\u0030\\u0033\\u0038\\u005Cu\\u0030\\u0030\\u0035\\u0043u\\u005Cu\\u0030\\u0030\\u0033\\u0030\\u005Cu\\u0030\\u0030\\u0033\\u0030\\u005Cu\\u0030\\u0030\\u0033\\u0036\\u005Cu\\u0030\\u0030\\u0033\\u0039\\u005Cu\\u0030\\u0030\\u0035\\u0043u\\u005Cu\\u0030\\u0030\\u0033\\u0030\\u005Cu\\u0030\\u0030\\u0033\\u0030\\u005Cu\\u0030\\u0030\\u0033\\u0032\\u005Cu\\u0030\\u0030\\u0033\\u0031");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test05250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05250");
        java.io.IOException iOException1 = new java.io.IOException();
        java.io.IOException iOException2 = new java.io.IOException();
        iOException1.addSuppressed((java.lang.Throwable) iOException2);
        java.io.IOException iOException4 = new java.io.IOException("0", (java.lang.Throwable) iOException1);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException12 = new java.io.IOException("0");
        java.io.IOException iOException13 = new java.io.IOException((java.lang.Throwable) iOException12);
        java.io.IOException iOException14 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException12);
        java.io.IOException iOException15 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException12);
        java.io.IOException iOException16 = new java.io.IOException("\\\\u00750036\\\\u00750034", (java.lang.Throwable) iOException12);
        java.io.IOException iOException17 = new java.io.IOException((java.lang.Throwable) iOException16);
        iOException7.addSuppressed((java.lang.Throwable) iOException16);
        java.io.IOException iOException21 = new java.io.IOException("");
        java.io.IOException iOException22 = new java.io.IOException((java.lang.Throwable) iOException21);
        java.io.IOException iOException24 = new java.io.IOException("");
        iOException22.addSuppressed((java.lang.Throwable) iOException24);
        java.io.IOException iOException26 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException24);
        java.io.IOException iOException28 = new java.io.IOException("");
        java.io.IOException iOException29 = new java.io.IOException((java.lang.Throwable) iOException28);
        java.io.IOException iOException30 = new java.io.IOException((java.lang.Throwable) iOException28);
        iOException26.addSuppressed((java.lang.Throwable) iOException28);
        iOException7.addSuppressed((java.lang.Throwable) iOException26);
        java.lang.Throwable[] throwableArray33 = iOException26.getSuppressed();
        java.lang.Class<?> wildcardClass34 = iOException26.getClass();
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test05251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05251");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (short) 10, (int) (short) 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str7 = unicodeEscaper5.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray8 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator9 = unicodeEscaper5.with(charSequenceTranslatorArray8);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper12 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper15 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper18 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer20 = null;
        boolean boolean21 = unicodeEscaper18.translate((int) (short) 10, writer20);
        java.lang.String str23 = unicodeEscaper18.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper26 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer28 = null;
        boolean boolean29 = unicodeEscaper26.translate((int) '4', writer28);
        java.io.Writer writer31 = null;
        boolean boolean32 = unicodeEscaper26.translate((int) (byte) -1, writer31);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper35 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper37 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper39 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str41 = unicodeEscaper39.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray42 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper35, unicodeEscaper37, unicodeEscaper39 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator43 = unicodeEscaper26.with(charSequenceTranslatorArray42);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator44 = unicodeEscaper18.with(charSequenceTranslatorArray42);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator45 = unicodeEscaper15.with(charSequenceTranslatorArray42);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator46 = unicodeEscaper12.with(charSequenceTranslatorArray42);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper49 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between(0, (int) (byte) 100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper52 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(10, 10);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper55 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) -1, (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper57 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper59 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer61 = null;
        boolean boolean62 = unicodeEscaper59.translate((int) ' ', writer61);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper65 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str67 = unicodeEscaper65.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray68 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator69 = unicodeEscaper65.with(charSequenceTranslatorArray68);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator70 = unicodeEscaper59.with(charSequenceTranslatorArray68);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator71 = unicodeEscaper57.with(charSequenceTranslatorArray68);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper74 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer76 = null;
        boolean boolean77 = unicodeEscaper74.translate((int) '4', writer76);
        java.io.Writer writer79 = null;
        boolean boolean80 = unicodeEscaper74.translate((int) (byte) -1, writer79);
        java.io.Writer writer82 = null;
        boolean boolean83 = unicodeEscaper74.translate((int) (byte) -1, writer82);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray84 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator85 = unicodeEscaper74.with(charSequenceTranslatorArray84);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator86 = charSequenceTranslator71.with(charSequenceTranslatorArray84);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator87 = unicodeEscaper55.with(charSequenceTranslatorArray84);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator88 = unicodeEscaper52.with(charSequenceTranslatorArray84);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator89 = unicodeEscaper49.with(charSequenceTranslatorArray84);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator90 = charSequenceTranslator46.with(charSequenceTranslatorArray84);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator91 = unicodeEscaper5.with(charSequenceTranslatorArray84);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator92 = unicodeEscaper2.with(charSequenceTranslatorArray84);
        java.io.Writer writer94 = null;
        boolean boolean95 = unicodeEscaper2.translate((int) (short) 0, writer94);
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0" + "'", str7, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray8);
        org.junit.Assert.assertNotNull(charSequenceTranslator9);
        org.junit.Assert.assertNotNull(unicodeEscaper12);
        org.junit.Assert.assertNotNull(unicodeEscaper15);
        org.junit.Assert.assertNotNull(unicodeEscaper18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "0" + "'", str23, "0");
        org.junit.Assert.assertNotNull(unicodeEscaper26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper35);
        org.junit.Assert.assertNotNull(unicodeEscaper37);
        org.junit.Assert.assertNotNull(unicodeEscaper39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str41, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray42);
        org.junit.Assert.assertNotNull(charSequenceTranslator43);
        org.junit.Assert.assertNotNull(charSequenceTranslator44);
        org.junit.Assert.assertNotNull(charSequenceTranslator45);
        org.junit.Assert.assertNotNull(charSequenceTranslator46);
        org.junit.Assert.assertNotNull(unicodeEscaper49);
        org.junit.Assert.assertNotNull(unicodeEscaper52);
        org.junit.Assert.assertNotNull(unicodeEscaper55);
        org.junit.Assert.assertNotNull(unicodeEscaper57);
        org.junit.Assert.assertNotNull(unicodeEscaper59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper65);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "0" + "'", str67, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray68);
        org.junit.Assert.assertNotNull(charSequenceTranslator69);
        org.junit.Assert.assertNotNull(charSequenceTranslator70);
        org.junit.Assert.assertNotNull(charSequenceTranslator71);
        org.junit.Assert.assertNotNull(unicodeEscaper74);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray84);
        org.junit.Assert.assertNotNull(charSequenceTranslator85);
        org.junit.Assert.assertNotNull(charSequenceTranslator86);
        org.junit.Assert.assertNotNull(charSequenceTranslator87);
        org.junit.Assert.assertNotNull(charSequenceTranslator88);
        org.junit.Assert.assertNotNull(charSequenceTranslator89);
        org.junit.Assert.assertNotNull(charSequenceTranslator90);
        org.junit.Assert.assertNotNull(charSequenceTranslator91);
        org.junit.Assert.assertNotNull(charSequenceTranslator92);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test05252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05252");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), 1);
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) (byte) 10, writer4);
        java.io.Writer writer7 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception", writer7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test05253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05253");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 100, (int) (byte) 1);
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) (byte) 1, writer4);
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test05254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05254");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, 10);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper7 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer9 = null;
        boolean boolean10 = unicodeEscaper7.translate((int) ' ', writer9);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper13 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str15 = unicodeEscaper13.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray16 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator17 = unicodeEscaper13.with(charSequenceTranslatorArray16);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator18 = unicodeEscaper7.with(charSequenceTranslatorArray16);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator19 = unicodeEscaper5.with(charSequenceTranslatorArray16);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator20 = unicodeEscaper2.with(charSequenceTranslatorArray16);
        java.io.Writer writer22 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceTranslator20.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A \\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0033\\u0038\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0033\\u0039\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0032\\u005C\\u0075\\u0030\\u0030\\u0033\\u0031", writer22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertNotNull(unicodeEscaper7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "0" + "'", str15, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray16);
        org.junit.Assert.assertNotNull(charSequenceTranslator17);
        org.junit.Assert.assertNotNull(charSequenceTranslator18);
        org.junit.Assert.assertNotNull(charSequenceTranslator19);
        org.junit.Assert.assertNotNull(charSequenceTranslator20);
    }

    @Test
    public void test05255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05255");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) '4', writer4);
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper2.translate((int) (byte) -1, writer7);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper11 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper13 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper15 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str17 = unicodeEscaper15.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray18 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper11, unicodeEscaper13, unicodeEscaper15 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator19 = unicodeEscaper2.with(charSequenceTranslatorArray18);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper22 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between(0, (int) (short) 100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper25 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between(1, (int) (short) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper28 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str30 = unicodeEscaper28.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray31 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator32 = unicodeEscaper28.with(charSequenceTranslatorArray31);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator33 = unicodeEscaper25.with(charSequenceTranslatorArray31);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator34 = unicodeEscaper22.with(charSequenceTranslatorArray31);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator35 = unicodeEscaper2.with(charSequenceTranslatorArray31);
        java.io.Writer writer38 = null;
        int int39 = charSequenceTranslator35.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: \\u005Cu\\u0030\\u0030\\u0036\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0032\\u0031", 10, writer38);
        java.lang.String str41 = charSequenceTranslator35.translate((java.lang.CharSequence) "java.io.IOException: \\u0036\\u0034");
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper11);
        org.junit.Assert.assertNotNull(unicodeEscaper13);
        org.junit.Assert.assertNotNull(unicodeEscaper15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str17, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray18);
        org.junit.Assert.assertNotNull(charSequenceTranslator19);
        org.junit.Assert.assertNotNull(unicodeEscaper22);
        org.junit.Assert.assertNotNull(unicodeEscaper25);
        org.junit.Assert.assertNotNull(unicodeEscaper28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "0" + "'", str30, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray31);
        org.junit.Assert.assertNotNull(charSequenceTranslator32);
        org.junit.Assert.assertNotNull(charSequenceTranslator33);
        org.junit.Assert.assertNotNull(charSequenceTranslator34);
        org.junit.Assert.assertNotNull(charSequenceTranslator35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "java.io.IOException:\\u0020\\u0036\\u0034" + "'", str41, "java.io.IOException:\\u0020\\u0036\\u0034");
    }

    @Test
    public void test05256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05256");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, 1);
        java.io.Writer writer5 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int6 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: 0", (int) (short) 100, writer5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
    }

    @Test
    public void test05257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05257");
        java.io.IOException iOException3 = new java.io.IOException("23");
        java.io.IOException iOException4 = new java.io.IOException((java.lang.Throwable) iOException3);
        java.io.IOException iOException5 = new java.io.IOException("\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034", (java.lang.Throwable) iOException4);
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.io.IOException iOException7 = new java.io.IOException("java.io.IOException: j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020", (java.lang.Throwable) iOException5);
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.lang.String str9 = iOException7.toString();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "java.io.IOException: java.io.IOException: j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020" + "'", str9, "java.io.IOException: java.io.IOException: j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020");
    }

    @Test
    public void test05258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05258");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 10, (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper4 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper7 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between(0, (int) (byte) 100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper10 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(10, 10);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper13 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) -1, (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper15 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper17 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer19 = null;
        boolean boolean20 = unicodeEscaper17.translate((int) ' ', writer19);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper23 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str25 = unicodeEscaper23.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray26 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator27 = unicodeEscaper23.with(charSequenceTranslatorArray26);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator28 = unicodeEscaper17.with(charSequenceTranslatorArray26);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator29 = unicodeEscaper15.with(charSequenceTranslatorArray26);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper32 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer34 = null;
        boolean boolean35 = unicodeEscaper32.translate((int) '4', writer34);
        java.io.Writer writer37 = null;
        boolean boolean38 = unicodeEscaper32.translate((int) (byte) -1, writer37);
        java.io.Writer writer40 = null;
        boolean boolean41 = unicodeEscaper32.translate((int) (byte) -1, writer40);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray42 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator43 = unicodeEscaper32.with(charSequenceTranslatorArray42);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator44 = charSequenceTranslator29.with(charSequenceTranslatorArray42);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator45 = unicodeEscaper13.with(charSequenceTranslatorArray42);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator46 = unicodeEscaper10.with(charSequenceTranslatorArray42);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator47 = unicodeEscaper7.with(charSequenceTranslatorArray42);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator48 = unicodeEscaper4.with(charSequenceTranslatorArray42);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator49 = unicodeEscaper2.with(charSequenceTranslatorArray42);
        java.io.Writer writer51 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean52 = unicodeEscaper2.translate(10, writer51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper4);
        org.junit.Assert.assertNotNull(unicodeEscaper7);
        org.junit.Assert.assertNotNull(unicodeEscaper10);
        org.junit.Assert.assertNotNull(unicodeEscaper13);
        org.junit.Assert.assertNotNull(unicodeEscaper15);
        org.junit.Assert.assertNotNull(unicodeEscaper17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "0" + "'", str25, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray26);
        org.junit.Assert.assertNotNull(charSequenceTranslator27);
        org.junit.Assert.assertNotNull(charSequenceTranslator28);
        org.junit.Assert.assertNotNull(charSequenceTranslator29);
        org.junit.Assert.assertNotNull(unicodeEscaper32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray42);
        org.junit.Assert.assertNotNull(charSequenceTranslator43);
        org.junit.Assert.assertNotNull(charSequenceTranslator44);
        org.junit.Assert.assertNotNull(charSequenceTranslator45);
        org.junit.Assert.assertNotNull(charSequenceTranslator46);
        org.junit.Assert.assertNotNull(charSequenceTranslator47);
        org.junit.Assert.assertNotNull(charSequenceTranslator48);
        org.junit.Assert.assertNotNull(charSequenceTranslator49);
    }

    @Test
    public void test05259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05259");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper1 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (short) 1);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray2 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator3 = unicodeEscaper1.with(charSequenceTranslatorArray2);
        java.io.Writer writer5 = null;
        boolean boolean6 = unicodeEscaper1.translate((int) '#', writer5);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper9 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) -1, (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper11 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper13 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer15 = null;
        boolean boolean16 = unicodeEscaper13.translate((int) ' ', writer15);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper19 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str21 = unicodeEscaper19.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray22 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator23 = unicodeEscaper19.with(charSequenceTranslatorArray22);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator24 = unicodeEscaper13.with(charSequenceTranslatorArray22);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator25 = unicodeEscaper11.with(charSequenceTranslatorArray22);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper28 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer30 = null;
        boolean boolean31 = unicodeEscaper28.translate((int) '4', writer30);
        java.io.Writer writer33 = null;
        boolean boolean34 = unicodeEscaper28.translate((int) (byte) -1, writer33);
        java.io.Writer writer36 = null;
        boolean boolean37 = unicodeEscaper28.translate((int) (byte) -1, writer36);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray38 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator39 = unicodeEscaper28.with(charSequenceTranslatorArray38);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator40 = charSequenceTranslator25.with(charSequenceTranslatorArray38);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator41 = unicodeEscaper9.with(charSequenceTranslatorArray38);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper44 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer46 = null;
        boolean boolean47 = unicodeEscaper44.translate((int) '4', writer46);
        java.io.Writer writer49 = null;
        boolean boolean50 = unicodeEscaper44.translate((int) (byte) -1, writer49);
        java.io.Writer writer52 = null;
        boolean boolean53 = unicodeEscaper44.translate(0, writer52);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper55 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper57 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer59 = null;
        boolean boolean60 = unicodeEscaper57.translate((int) ' ', writer59);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper63 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str65 = unicodeEscaper63.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray66 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator67 = unicodeEscaper63.with(charSequenceTranslatorArray66);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator68 = unicodeEscaper57.with(charSequenceTranslatorArray66);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator69 = unicodeEscaper55.with(charSequenceTranslatorArray66);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper72 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer74 = null;
        boolean boolean75 = unicodeEscaper72.translate((int) '4', writer74);
        java.io.Writer writer77 = null;
        boolean boolean78 = unicodeEscaper72.translate((int) (byte) -1, writer77);
        java.io.Writer writer80 = null;
        boolean boolean81 = unicodeEscaper72.translate((int) (byte) -1, writer80);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray82 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator83 = unicodeEscaper72.with(charSequenceTranslatorArray82);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator84 = charSequenceTranslator69.with(charSequenceTranslatorArray82);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator85 = unicodeEscaper44.with(charSequenceTranslatorArray82);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator86 = unicodeEscaper9.with(charSequenceTranslatorArray82);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator87 = unicodeEscaper1.with(charSequenceTranslatorArray82);
        java.io.Writer writer90 = null;
        int int91 = unicodeEscaper1.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: 0", (int) (short) 0, writer90);
        org.junit.Assert.assertNotNull(unicodeEscaper1);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray2);
        org.junit.Assert.assertNotNull(charSequenceTranslator3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper9);
        org.junit.Assert.assertNotNull(unicodeEscaper11);
        org.junit.Assert.assertNotNull(unicodeEscaper13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "0" + "'", str21, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray22);
        org.junit.Assert.assertNotNull(charSequenceTranslator23);
        org.junit.Assert.assertNotNull(charSequenceTranslator24);
        org.junit.Assert.assertNotNull(charSequenceTranslator25);
        org.junit.Assert.assertNotNull(unicodeEscaper28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray38);
        org.junit.Assert.assertNotNull(charSequenceTranslator39);
        org.junit.Assert.assertNotNull(charSequenceTranslator40);
        org.junit.Assert.assertNotNull(charSequenceTranslator41);
        org.junit.Assert.assertNotNull(unicodeEscaper44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper55);
        org.junit.Assert.assertNotNull(unicodeEscaper57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper63);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "0" + "'", str65, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray66);
        org.junit.Assert.assertNotNull(charSequenceTranslator67);
        org.junit.Assert.assertNotNull(charSequenceTranslator68);
        org.junit.Assert.assertNotNull(charSequenceTranslator69);
        org.junit.Assert.assertNotNull(unicodeEscaper72);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray82);
        org.junit.Assert.assertNotNull(charSequenceTranslator83);
        org.junit.Assert.assertNotNull(charSequenceTranslator84);
        org.junit.Assert.assertNotNull(charSequenceTranslator85);
        org.junit.Assert.assertNotNull(charSequenceTranslator86);
        org.junit.Assert.assertNotNull(charSequenceTranslator87);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
    }

    @Test
    public void test05260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05260");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) '4', (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.io.Writer writer8 = null;
        int int9 = unicodeEscaper5.translate((java.lang.CharSequence) "23", (int) (short) 0, writer8);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper11 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper13 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer15 = null;
        boolean boolean16 = unicodeEscaper13.translate((int) ' ', writer15);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper19 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str21 = unicodeEscaper19.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray22 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator23 = unicodeEscaper19.with(charSequenceTranslatorArray22);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator24 = unicodeEscaper13.with(charSequenceTranslatorArray22);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator25 = unicodeEscaper11.with(charSequenceTranslatorArray22);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator26 = unicodeEscaper5.with(charSequenceTranslatorArray22);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator27 = unicodeEscaper2.with(charSequenceTranslatorArray22);
        java.io.Writer writer30 = null;
        int int31 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: java.io.IOException", (int) (byte) 0, writer30);
        java.lang.String str33 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        java.io.Writer writer35 = null;
        boolean boolean36 = unicodeEscaper2.translate((int) (byte) 10, writer35);
        java.io.Writer writer39 = null;
        int int40 = unicodeEscaper2.translate((java.lang.CharSequence) "\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750032\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030", (int) (byte) 100, writer39);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray41 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator42 = unicodeEscaper2.with(charSequenceTranslatorArray41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(unicodeEscaper11);
        org.junit.Assert.assertNotNull(unicodeEscaper13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "0" + "'", str21, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray22);
        org.junit.Assert.assertNotNull(charSequenceTranslator23);
        org.junit.Assert.assertNotNull(charSequenceTranslator24);
        org.junit.Assert.assertNotNull(charSequenceTranslator25);
        org.junit.Assert.assertNotNull(charSequenceTranslator26);
        org.junit.Assert.assertNotNull(charSequenceTranslator27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "java.io.IOException: java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str33, "java.io.IOException: java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
    }

    @Test
    public void test05261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05261");
        java.lang.Throwable throwable2 = null;
        java.io.IOException iOException3 = new java.io.IOException(throwable2);
        java.io.IOException iOException4 = new java.io.IOException("java.io.IOException: \\u0068\\u0069\\u0021", (java.lang.Throwable) iOException3);
        java.io.IOException iOException5 = new java.io.IOException("0", (java.lang.Throwable) iOException3);
        java.lang.Throwable[] throwableArray6 = iOException5.getSuppressed();
        java.lang.Class<?> wildcardClass7 = iOException5.getClass();
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test05262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05262");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between(100, 100);
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) (byte) 10, writer4);
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper2.translate(10, writer7);
        java.io.Writer writer10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = unicodeEscaper2.translate(100, writer10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test05263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05263");
        java.io.IOException iOException1 = new java.io.IOException("\\u0036\\u0031");
        java.lang.Throwable[] throwableArray2 = iOException1.getSuppressed();
        java.io.IOException iOException4 = new java.io.IOException("");
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException4);
        iOException1.addSuppressed((java.lang.Throwable) iOException4);
        java.lang.Throwable[] throwableArray9 = iOException1.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray9);
    }

    @Test
    public void test05264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05264");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '#', (int) (short) 100);
        java.io.Writer writer5 = null;
        int int6 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: hi!", (int) (short) 10, writer5);
        java.io.Writer writer8 = null;
        boolean boolean9 = unicodeEscaper2.translate((int) '#', writer8);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper11 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper14 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str16 = unicodeEscaper14.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray17 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator18 = unicodeEscaper14.with(charSequenceTranslatorArray17);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator19 = unicodeEscaper11.with(charSequenceTranslatorArray17);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper22 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (byte) 10, (int) (byte) -1);
        java.lang.String str24 = unicodeEscaper22.translate((java.lang.CharSequence) "\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper26 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer28 = null;
        boolean boolean29 = unicodeEscaper26.translate((int) ' ', writer28);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper32 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str34 = unicodeEscaper32.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray35 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator36 = unicodeEscaper32.with(charSequenceTranslatorArray35);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator37 = unicodeEscaper26.with(charSequenceTranslatorArray35);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator38 = unicodeEscaper22.with(charSequenceTranslatorArray35);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator39 = unicodeEscaper11.with(charSequenceTranslatorArray35);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator40 = unicodeEscaper2.with(charSequenceTranslatorArray35);
        java.io.Writer writer43 = null;
        int int44 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u0068\\u0069!", 100, writer43);
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper11);
        org.junit.Assert.assertNotNull(unicodeEscaper14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "0" + "'", str16, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray17);
        org.junit.Assert.assertNotNull(charSequenceTranslator18);
        org.junit.Assert.assertNotNull(charSequenceTranslator19);
        org.junit.Assert.assertNotNull(unicodeEscaper22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034" + "'", str24, "\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034");
        org.junit.Assert.assertNotNull(unicodeEscaper26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "0" + "'", str34, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray35);
        org.junit.Assert.assertNotNull(charSequenceTranslator36);
        org.junit.Assert.assertNotNull(charSequenceTranslator37);
        org.junit.Assert.assertNotNull(charSequenceTranslator38);
        org.junit.Assert.assertNotNull(charSequenceTranslator39);
        org.junit.Assert.assertNotNull(charSequenceTranslator40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
    }

    @Test
    public void test05265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05265");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 0, (int) ' ');
        java.io.Writer writer5 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int6 = unicodeEscaper2.translate((java.lang.CharSequence) "\\\\\\\\u007500750075006A\\\\\\\\u0075007500750061\\\\\\\\u0075007500750076\\\\\\\\u0075007500750061\\\\\\\\u007500750075002E\\\\\\\\u0075007500750069\\\\\\\\u007500750075006F\\\\\\\\u007500750075002E\\\\\\\\u0075007500750049\\\\\\\\u007500750075004F\\\\\\\\u0075007500750045\\\\\\\\u0075007500750078\\\\\\\\u0075007500750063\\\\\\\\u0075007500750065\\\\\\\\u0075007500750070\\\\\\\\u0075007500750074\\\\\\\\u0075007500750069\\\\\\\\u007500750075006F\\\\\\\\u007500750075006E\\\\\\\\u007500750075003A\\\\\\\\u0075007500750020", (int) '#', writer5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
    }

    @Test
    public void test05266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05266");
        java.io.IOException iOException1 = new java.io.IOException("\\u005C\\u0075\\u0030\\u0030\\u0036\\u0038\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u005C\\u0075\\u0030\\u0030\\u0032\\u0031");
    }

    @Test
    public void test05267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05267");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper1 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer3 = null;
        boolean boolean4 = unicodeEscaper1.translate((int) ' ', writer3);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper7 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '#', 100);
        java.lang.String str9 = unicodeEscaper7.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper12 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) '4', (int) (short) 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper15 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper18 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', (int) (short) 0);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray19 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper18 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator20 = unicodeEscaper15.with(charSequenceTranslatorArray19);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator21 = unicodeEscaper12.with(charSequenceTranslatorArray19);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator22 = unicodeEscaper7.with(charSequenceTranslatorArray19);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator23 = unicodeEscaper1.with(charSequenceTranslatorArray19);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper26 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (short) -1, (int) '4');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper29 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 0, 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper32 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 0, (int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper35 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper38 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer40 = null;
        boolean boolean41 = unicodeEscaper38.translate((int) '4', writer40);
        java.io.Writer writer43 = null;
        boolean boolean44 = unicodeEscaper38.translate((int) (byte) -1, writer43);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper47 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper49 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper51 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str53 = unicodeEscaper51.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray54 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper47, unicodeEscaper49, unicodeEscaper51 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator55 = unicodeEscaper38.with(charSequenceTranslatorArray54);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator56 = unicodeEscaper35.with(charSequenceTranslatorArray54);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator57 = unicodeEscaper32.with(charSequenceTranslatorArray54);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator58 = unicodeEscaper29.with(charSequenceTranslatorArray54);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator59 = unicodeEscaper26.with(charSequenceTranslatorArray54);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper62 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str64 = unicodeEscaper62.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray65 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator66 = unicodeEscaper62.with(charSequenceTranslatorArray65);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator67 = charSequenceTranslator59.with(charSequenceTranslatorArray65);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator68 = charSequenceTranslator23.with(charSequenceTranslatorArray65);
        java.lang.CharSequence charSequence69 = null;
        java.io.Writer writer71 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int72 = charSequenceTranslator23.translate(charSequence69, 0, writer71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str9, "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertNotNull(unicodeEscaper12);
        org.junit.Assert.assertNotNull(unicodeEscaper15);
        org.junit.Assert.assertNotNull(unicodeEscaper18);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray19);
        org.junit.Assert.assertNotNull(charSequenceTranslator20);
        org.junit.Assert.assertNotNull(charSequenceTranslator21);
        org.junit.Assert.assertNotNull(charSequenceTranslator22);
        org.junit.Assert.assertNotNull(charSequenceTranslator23);
        org.junit.Assert.assertNotNull(unicodeEscaper26);
        org.junit.Assert.assertNotNull(unicodeEscaper29);
        org.junit.Assert.assertNotNull(unicodeEscaper32);
        org.junit.Assert.assertNotNull(unicodeEscaper35);
        org.junit.Assert.assertNotNull(unicodeEscaper38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper47);
        org.junit.Assert.assertNotNull(unicodeEscaper49);
        org.junit.Assert.assertNotNull(unicodeEscaper51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str53, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray54);
        org.junit.Assert.assertNotNull(charSequenceTranslator55);
        org.junit.Assert.assertNotNull(charSequenceTranslator56);
        org.junit.Assert.assertNotNull(charSequenceTranslator57);
        org.junit.Assert.assertNotNull(charSequenceTranslator58);
        org.junit.Assert.assertNotNull(charSequenceTranslator59);
        org.junit.Assert.assertNotNull(unicodeEscaper62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "0" + "'", str64, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray65);
        org.junit.Assert.assertNotNull(charSequenceTranslator66);
        org.junit.Assert.assertNotNull(charSequenceTranslator67);
        org.junit.Assert.assertNotNull(charSequenceTranslator68);
    }

    @Test
    public void test05268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05268");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((-1), (int) (short) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) -1, (int) ' ');
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper5.translate((int) ' ', writer7);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper11 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 100, (int) (short) 10);
        java.io.Writer writer13 = null;
        boolean boolean14 = unicodeEscaper11.translate(0, writer13);
        java.lang.String str16 = unicodeEscaper11.translate((java.lang.CharSequence) "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper19 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (byte) 100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper22 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer24 = null;
        boolean boolean25 = unicodeEscaper22.translate((int) '4', writer24);
        java.io.Writer writer28 = null;
        int int29 = unicodeEscaper22.translate((java.lang.CharSequence) "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", 100, writer28);
        java.lang.String str31 = unicodeEscaper22.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper34 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) (byte) 10);
        java.lang.String str36 = unicodeEscaper34.translate((java.lang.CharSequence) "java.io.IOException");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper38 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) (short) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper41 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '#', 100);
        java.lang.String str43 = unicodeEscaper41.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper46 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) '4', (int) (short) 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper49 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper52 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', (int) (short) 0);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray53 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper52 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator54 = unicodeEscaper49.with(charSequenceTranslatorArray53);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator55 = unicodeEscaper46.with(charSequenceTranslatorArray53);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator56 = unicodeEscaper41.with(charSequenceTranslatorArray53);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator57 = unicodeEscaper38.with(charSequenceTranslatorArray53);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper60 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper63 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer65 = null;
        boolean boolean66 = unicodeEscaper63.translate((int) '4', writer65);
        java.io.Writer writer68 = null;
        boolean boolean69 = unicodeEscaper63.translate((int) (byte) -1, writer68);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper72 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper74 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper76 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str78 = unicodeEscaper76.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray79 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper72, unicodeEscaper74, unicodeEscaper76 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator80 = unicodeEscaper63.with(charSequenceTranslatorArray79);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator81 = unicodeEscaper60.with(charSequenceTranslatorArray79);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator82 = unicodeEscaper38.with(charSequenceTranslatorArray79);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator83 = unicodeEscaper34.with(charSequenceTranslatorArray79);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator84 = unicodeEscaper22.with(charSequenceTranslatorArray79);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator85 = unicodeEscaper19.with(charSequenceTranslatorArray79);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator86 = unicodeEscaper11.with(charSequenceTranslatorArray79);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator87 = unicodeEscaper5.with(charSequenceTranslatorArray79);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator88 = unicodeEscaper2.with(charSequenceTranslatorArray79);
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption" + "'", str16, "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption");
        org.junit.Assert.assertNotNull(unicodeEscaper19);
        org.junit.Assert.assertNotNull(unicodeEscaper22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030" + "'", str31, "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030");
        org.junit.Assert.assertNotNull(unicodeEscaper34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str36, "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertNotNull(unicodeEscaper38);
        org.junit.Assert.assertNotNull(unicodeEscaper41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str43, "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertNotNull(unicodeEscaper46);
        org.junit.Assert.assertNotNull(unicodeEscaper49);
        org.junit.Assert.assertNotNull(unicodeEscaper52);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray53);
        org.junit.Assert.assertNotNull(charSequenceTranslator54);
        org.junit.Assert.assertNotNull(charSequenceTranslator55);
        org.junit.Assert.assertNotNull(charSequenceTranslator56);
        org.junit.Assert.assertNotNull(charSequenceTranslator57);
        org.junit.Assert.assertNotNull(unicodeEscaper60);
        org.junit.Assert.assertNotNull(unicodeEscaper63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper72);
        org.junit.Assert.assertNotNull(unicodeEscaper74);
        org.junit.Assert.assertNotNull(unicodeEscaper76);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str78, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray79);
        org.junit.Assert.assertNotNull(charSequenceTranslator80);
        org.junit.Assert.assertNotNull(charSequenceTranslator81);
        org.junit.Assert.assertNotNull(charSequenceTranslator82);
        org.junit.Assert.assertNotNull(charSequenceTranslator83);
        org.junit.Assert.assertNotNull(charSequenceTranslator84);
        org.junit.Assert.assertNotNull(charSequenceTranslator85);
        org.junit.Assert.assertNotNull(charSequenceTranslator86);
        org.junit.Assert.assertNotNull(charSequenceTranslator87);
        org.junit.Assert.assertNotNull(charSequenceTranslator88);
    }

    @Test
    public void test05269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05269");
        java.lang.Throwable throwable2 = null;
        java.io.IOException iOException3 = new java.io.IOException(throwable2);
        java.io.IOException iOException4 = new java.io.IOException("java.io.IOException: \\u0068\\u0069\\u0021", (java.lang.Throwable) iOException3);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.io.IOException iOException7 = new java.io.IOException("\\u006A\\\\u00750061\\u0076\\\\u00750061\\\\u0075002E\\u0069\\u006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException5);
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.lang.Class<?> wildcardClass9 = iOException5.getClass();
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test05270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05270");
        java.io.IOException iOException2 = new java.io.IOException("\\u005C\\u005Cu\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0036\\u0038\\u005C\\u005Cu\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0036\\u0039\\u005C\\u005Cu\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0032\\u0031");
        java.io.IOException iOException3 = new java.io.IOException("\\u0046\\u0046\\u0046\\u0046\\u0046\\u0046\\u0046\\u0046", (java.lang.Throwable) iOException2);
        java.io.IOException iOException5 = new java.io.IOException();
        java.io.IOException iOException6 = new java.io.IOException();
        iOException5.addSuppressed((java.lang.Throwable) iOException6);
        java.io.IOException iOException8 = new java.io.IOException();
        java.io.IOException iOException9 = new java.io.IOException();
        iOException8.addSuppressed((java.lang.Throwable) iOException9);
        java.lang.Throwable[] throwableArray11 = iOException9.getSuppressed();
        java.io.IOException iOException12 = new java.io.IOException((java.lang.Throwable) iOException9);
        java.io.IOException iOException14 = new java.io.IOException("");
        java.io.IOException iOException15 = new java.io.IOException((java.lang.Throwable) iOException14);
        iOException9.addSuppressed((java.lang.Throwable) iOException15);
        iOException6.addSuppressed((java.lang.Throwable) iOException15);
        java.io.IOException iOException18 = new java.io.IOException("java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception", (java.lang.Throwable) iOException6);
        java.io.IOException iOException21 = new java.io.IOException("23");
        java.io.IOException iOException22 = new java.io.IOException((java.lang.Throwable) iOException21);
        java.io.IOException iOException23 = new java.io.IOException("java.io.IOException: java.io.IOException: 0", (java.lang.Throwable) iOException21);
        java.io.IOException iOException25 = new java.io.IOException("");
        java.io.IOException iOException26 = new java.io.IOException((java.lang.Throwable) iOException25);
        java.io.IOException iOException28 = new java.io.IOException("");
        iOException26.addSuppressed((java.lang.Throwable) iOException28);
        java.lang.Throwable[] throwableArray30 = iOException26.getSuppressed();
        iOException21.addSuppressed((java.lang.Throwable) iOException26);
        java.io.IOException iOException32 = new java.io.IOException((java.lang.Throwable) iOException26);
        iOException6.addSuppressed((java.lang.Throwable) iOException26);
        iOException2.addSuppressed((java.lang.Throwable) iOException26);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray30);
    }

    @Test
    public void test05271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05271");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', (int) (short) 0);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray6 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper5 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator7 = unicodeEscaper2.with(charSequenceTranslatorArray6);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper10 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer12 = null;
        boolean boolean13 = unicodeEscaper10.translate((int) (short) 10, writer12);
        java.lang.String str15 = unicodeEscaper10.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper18 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer20 = null;
        boolean boolean21 = unicodeEscaper18.translate((int) '4', writer20);
        java.io.Writer writer23 = null;
        boolean boolean24 = unicodeEscaper18.translate((int) (byte) -1, writer23);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper27 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper29 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper31 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str33 = unicodeEscaper31.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray34 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper27, unicodeEscaper29, unicodeEscaper31 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator35 = unicodeEscaper18.with(charSequenceTranslatorArray34);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator36 = unicodeEscaper10.with(charSequenceTranslatorArray34);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator37 = unicodeEscaper2.with(charSequenceTranslatorArray34);
        java.io.Writer writer40 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int41 = charSequenceTranslator37.translate((java.lang.CharSequence) "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u002064", (int) (byte) 100, writer40);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray6);
        org.junit.Assert.assertNotNull(charSequenceTranslator7);
        org.junit.Assert.assertNotNull(unicodeEscaper10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "0" + "'", str15, "0");
        org.junit.Assert.assertNotNull(unicodeEscaper18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper27);
        org.junit.Assert.assertNotNull(unicodeEscaper29);
        org.junit.Assert.assertNotNull(unicodeEscaper31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str33, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray34);
        org.junit.Assert.assertNotNull(charSequenceTranslator35);
        org.junit.Assert.assertNotNull(charSequenceTranslator36);
        org.junit.Assert.assertNotNull(charSequenceTranslator37);
    }

    @Test
    public void test05272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05272");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 100, (int) (short) 100);
        java.io.Writer writer5 = null;
        int int6 = unicodeEscaper2.translate((java.lang.CharSequence) "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception", (int) (byte) 0, writer5);
        java.io.Writer writer8 = null;
        boolean boolean9 = unicodeEscaper2.translate((int) '#', writer8);
        java.io.Writer writer11 = null;
        boolean boolean12 = unicodeEscaper2.translate((int) (byte) 1, writer11);
        java.io.Writer writer15 = null;
        int int16 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u005C\\u007500\\u0036\\u0041\\u005C\\u007500\\u00361\\u005C\\u007500\\u0037\\u0036\\u005C\\u007500\\u00361\\u005C\\u0075002\\u0045\\u005C\\u007500\\u0036\\u0039\\u005C\\u007500\\u0036\\u0046\\u005C\\u0075002\\u0045\\u005C\\u0075004\\u0039\\u005C\\u0075004\\u0046\\u005C\\u0075004\\u0035\\u005C\\u007500\\u0037\\u0038\\u005C\\u007500\\u00363\\u005C\\u007500\\u0036\\u0035\\u005C\\u007500\\u00370\\u005C\\u007500\\u00374\\u005C\\u007500\\u0036\\u0039\\u005C\\u007500\\u0036\\u0046\\u005C\\u007500\\u0036\\u0045\\u005C\\u0075003\\u0041\\u0020\\u005C\\u00750032\\u005C\\u00750033", 10, writer15);
        java.lang.String str18 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\\\u00750068\\\\u00750069\\\\u00750021");
        java.io.Writer writer20 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate((java.lang.CharSequence) "\\u006A\\\\u00750061\\u0076\\\\u00750061\\\\u0075002E\\u0069\\u006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\\\u0075003A \\u0068\\u0069!", writer20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\\\u00750068\\\\u00750069\\\\u00750021" + "'", str18, "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\\\u00750068\\\\u00750069\\\\u00750021");
    }

    @Test
    public void test05273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05273");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) '4', writer4);
        java.io.Writer writer8 = null;
        int int9 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (int) '#', writer8);
        java.lang.String str11 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u0068\\u0069!");
        java.io.Writer writer14 = null;
        int int15 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u005C\\u0075\\u0030\\u0030\\u0036\\u0041\\u0061\\u005C\\u0075\\u0030\\u0030\\u0037\\u0036\\u0061\\u002E\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u005C\\u0075\\u0030\\u0030\\u0036\\u0046\\u002E\\u0049\\u004F\\u0045\\u005C\\u0075\\u0030\\u0030\\u0037\\u0038\\u0063\\u005C\\u0075\\u0030\\u0030\\u0036\\u0035\\u005C\\u0075\\u0030\\u0030\\u0037\\u0030\\u005C\\u0075\\u0030\\u0030\\u0037\\u0034\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u005C\\u0075\\u0030\\u0030\\u0036\\u0046\\u005C\\u0075\\u0030\\u0030\\u0036\\u0045\\u003A\\u0020\\u0036\\u0034", (int) ' ', writer14);
        java.io.Writer writer18 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int19 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception", (int) '#', writer18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E: \\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E: \\\\u00750068\\\\u00750069!" + "'", str11, "\\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E: \\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E: \\\\u00750068\\\\u00750069!");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test05274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05274");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper1 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (short) 100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper4 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 100, (-1));
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper7 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer9 = null;
        boolean boolean10 = unicodeEscaper7.translate((int) (short) 10, writer9);
        java.lang.String str12 = unicodeEscaper7.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper15 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer17 = null;
        boolean boolean18 = unicodeEscaper15.translate((int) '4', writer17);
        java.io.Writer writer20 = null;
        boolean boolean21 = unicodeEscaper15.translate((int) (byte) -1, writer20);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper24 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper26 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper28 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str30 = unicodeEscaper28.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray31 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper24, unicodeEscaper26, unicodeEscaper28 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator32 = unicodeEscaper15.with(charSequenceTranslatorArray31);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator33 = unicodeEscaper7.with(charSequenceTranslatorArray31);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator34 = unicodeEscaper4.with(charSequenceTranslatorArray31);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator35 = unicodeEscaper1.with(charSequenceTranslatorArray31);
        java.io.Writer writer37 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean38 = unicodeEscaper1.translate(0, writer37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper1);
        org.junit.Assert.assertNotNull(unicodeEscaper4);
        org.junit.Assert.assertNotNull(unicodeEscaper7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "0" + "'", str12, "0");
        org.junit.Assert.assertNotNull(unicodeEscaper15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper24);
        org.junit.Assert.assertNotNull(unicodeEscaper26);
        org.junit.Assert.assertNotNull(unicodeEscaper28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str30, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray31);
        org.junit.Assert.assertNotNull(charSequenceTranslator32);
        org.junit.Assert.assertNotNull(charSequenceTranslator33);
        org.junit.Assert.assertNotNull(charSequenceTranslator34);
        org.junit.Assert.assertNotNull(charSequenceTranslator35);
    }

    @Test
    public void test05275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05275");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) ' ', 0);
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) (short) 1, writer4);
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper2.translate((int) '#', writer7);
        java.io.Writer writer10 = null;
        boolean boolean11 = unicodeEscaper2.translate(10, writer10);
        java.io.Writer writer13 = null;
        boolean boolean14 = unicodeEscaper2.translate((-1), writer13);
        java.io.Writer writer17 = null;
        int int18 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: 0", (int) '4', writer17);
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test05276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05276");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 100, (int) (short) 100);
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "hi!");
        java.io.Writer writer6 = null;
        boolean boolean7 = unicodeEscaper2.translate(0, writer6);
        java.io.Writer writer9 = null;
        boolean boolean10 = unicodeEscaper2.translate((int) (byte) 1, writer9);
        java.io.Writer writer13 = null;
        int int14 = unicodeEscaper2.translate((java.lang.CharSequence) "\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750032\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030", 100, writer13);
        java.io.Writer writer17 = null;
        int int18 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (int) (short) 0, writer17);
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test05277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05277");
        java.io.IOException iOException4 = new java.io.IOException("");
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.io.IOException iOException7 = new java.io.IOException("");
        iOException5.addSuppressed((java.lang.Throwable) iOException7);
        java.io.IOException iOException9 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException7);
        java.io.IOException iOException10 = new java.io.IOException("java.io.IOException: \\u0068\\u0069\\u0021", (java.lang.Throwable) iOException7);
        java.io.IOException iOException11 = new java.io.IOException("", (java.lang.Throwable) iOException7);
        java.lang.String str12 = iOException7.toString();
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "java.io.IOException: " + "'", str12, "java.io.IOException: ");
    }

    @Test
    public void test05278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05278");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: 23");
        java.lang.String str6 = unicodeEscaper2.translate((java.lang.CharSequence) "34");
        java.lang.String str8 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        java.io.Writer writer10 = null;
        boolean boolean11 = unicodeEscaper2.translate((int) '4', writer10);
        java.io.Writer writer13 = null;
        boolean boolean14 = unicodeEscaper2.translate((int) 'a', writer13);
        java.io.Writer writer16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = unicodeEscaper2.translate(0, writer16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "java.io.IOException: java.io.IOException: 23" + "'", str4, "java.io.IOException: java.io.IOException: 23");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "34" + "'", str6, "34");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "java.io.IOException: java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str8, "java.io.IOException: java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test05279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05279");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (short) -1, (int) (short) 10);
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        java.io.Writer writer6 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate((java.lang.CharSequence) "java\\u002Eio\\u002EIOException:\\u0020\\u\\u0030\\u00306Aa\\u\\u0030\\u003076a\\u002E\\u\\u0030\\u003069\\u\\u0030\\u00306F\\u002EIOE\\u\\u0030\\u003078\\u\\u0030\\u00306\\u0033\\u\\u0030\\u003065\\u\\u0030\\u00307\\u0030\\u\\u0030\\u00307\\u0034\\u\\u0030\\u003069\\u\\u0030\\u00306F\\u\\u0030\\u00306E:\\u\\u0030\\u0030\\u0032\\u0030\\u\\u0030\\u00306Aa\\u\\u0030\\u003076a\\u002E\\u\\u0030\\u003069\\u\\u0030\\u00306F\\u002EIOE\\u\\u0030\\u003078\\u\\u0030\\u00306\\u0033\\u\\u0030\\u003065\\u\\u0030\\u00307\\u0030\\u\\u0030\\u00307\\u0034\\u\\u0030\\u003069\\u\\u0030\\u00306F\\u\\u0030\\u00306E:\\u\\u0030\\u0030\\u0032\\u0030\\u\\u0030\\u00306Aa\\u\\u0030\\u003076a\\u002E\\u\\u0030\\u003069\\u\\u0030\\u00306F\\u002EIOE\\u\\u0030\\u003078\\u\\u0030\\u00306\\u0033\\u\\u0030\\u003065\\u\\u0030\\u00307\\u0030\\u\\u0030\\u00307\\u0034\\u\\u0030\\u003069\\u\\u0030\\u00306F\\u\\u0030\\u00306E:\\u\\u0030\\u0030\\u0032\\u0030\\u0030", writer6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "java.io.IOException: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str4, "java.io.IOException: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
    }

    @Test
    public void test05280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05280");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 0, 100);
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) '#', writer4);
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test05281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05281");
        java.io.IOException iOException1 = new java.io.IOException("j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        java.lang.String str2 = iOException1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "java.io.IOException: j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str2, "java.io.IOException: j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
    }

    @Test
    public void test05282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05282");
        java.io.IOException iOException1 = new java.io.IOException("61");
        java.io.IOException iOException3 = new java.io.IOException("\\u0036\\u0034");
        java.io.IOException iOException4 = new java.io.IOException((java.lang.Throwable) iOException3);
        java.io.IOException iOException10 = new java.io.IOException("");
        java.io.IOException iOException11 = new java.io.IOException("A", (java.lang.Throwable) iOException10);
        java.lang.Throwable[] throwableArray12 = iOException10.getSuppressed();
        java.io.IOException iOException13 = new java.io.IOException("java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception", (java.lang.Throwable) iOException10);
        java.io.IOException iOException15 = new java.io.IOException("hi!");
        java.lang.Throwable[] throwableArray16 = iOException15.getSuppressed();
        java.io.IOException iOException17 = new java.io.IOException((java.lang.Throwable) iOException15);
        java.io.IOException iOException18 = new java.io.IOException();
        java.io.IOException iOException19 = new java.io.IOException();
        iOException18.addSuppressed((java.lang.Throwable) iOException19);
        java.lang.Throwable[] throwableArray21 = iOException19.getSuppressed();
        java.io.IOException iOException22 = new java.io.IOException((java.lang.Throwable) iOException19);
        java.io.IOException iOException24 = new java.io.IOException("");
        java.io.IOException iOException25 = new java.io.IOException((java.lang.Throwable) iOException24);
        iOException19.addSuppressed((java.lang.Throwable) iOException25);
        iOException17.addSuppressed((java.lang.Throwable) iOException19);
        iOException13.addSuppressed((java.lang.Throwable) iOException17);
        java.io.IOException iOException29 = new java.io.IOException((java.lang.Throwable) iOException13);
        java.io.IOException iOException30 = new java.io.IOException("\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0030\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0030\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0033\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0030", (java.lang.Throwable) iOException29);
        java.io.IOException iOException31 = new java.io.IOException("\\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E:\\\\\\u007500750020\\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E:\\\\\\u007500750020\\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E:\\\\\\u007500750020\\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E:\\\\\\u007500750020\\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E:\\\\\\u0075007500200", (java.lang.Throwable) iOException30);
        java.lang.Throwable[] throwableArray32 = iOException30.getSuppressed();
        iOException4.addSuppressed((java.lang.Throwable) iOException30);
        iOException1.addSuppressed((java.lang.Throwable) iOException30);
        java.lang.String str35 = iOException30.toString();
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "java.io.IOException: \\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0030\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0030\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0033\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0030" + "'", str35, "java.io.IOException: \\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0030\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0030\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0033\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0030");
    }

    @Test
    public void test05283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05283");
        java.io.IOException iOException7 = new java.io.IOException("");
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.io.IOException iOException10 = new java.io.IOException("");
        iOException8.addSuppressed((java.lang.Throwable) iOException10);
        java.io.IOException iOException12 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException10);
        java.io.IOException iOException13 = new java.io.IOException("java.io.IOException: \\u0068\\u0069\\u0021", (java.lang.Throwable) iOException10);
        java.io.IOException iOException14 = new java.io.IOException();
        java.io.IOException iOException15 = new java.io.IOException();
        iOException14.addSuppressed((java.lang.Throwable) iOException15);
        java.lang.Throwable[] throwableArray17 = iOException15.getSuppressed();
        java.lang.Throwable[] throwableArray18 = iOException15.getSuppressed();
        java.io.IOException iOException20 = new java.io.IOException();
        java.io.IOException iOException21 = new java.io.IOException();
        iOException20.addSuppressed((java.lang.Throwable) iOException21);
        java.io.IOException iOException23 = new java.io.IOException("0", (java.lang.Throwable) iOException20);
        java.io.IOException iOException24 = new java.io.IOException((java.lang.Throwable) iOException23);
        iOException15.addSuppressed((java.lang.Throwable) iOException24);
        java.lang.Throwable[] throwableArray26 = iOException15.getSuppressed();
        iOException10.addSuppressed((java.lang.Throwable) iOException15);
        java.io.IOException iOException28 = new java.io.IOException("java.io.IOException: java.io.IOException: java.io.IOException: 0", (java.lang.Throwable) iOException10);
        java.lang.Throwable[] throwableArray29 = iOException10.getSuppressed();
        java.io.IOException iOException30 = new java.io.IOException("java.io.IOException: java.io.IOException: hi!", (java.lang.Throwable) iOException10);
        java.io.IOException iOException31 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030", (java.lang.Throwable) iOException30);
        java.io.IOException iOException34 = new java.io.IOException();
        java.io.IOException iOException35 = new java.io.IOException();
        iOException34.addSuppressed((java.lang.Throwable) iOException35);
        java.io.IOException iOException37 = new java.io.IOException("0", (java.lang.Throwable) iOException34);
        java.io.IOException iOException38 = new java.io.IOException((java.lang.Throwable) iOException37);
        java.io.IOException iOException39 = new java.io.IOException((java.lang.Throwable) iOException38);
        java.io.IOException iOException40 = new java.io.IOException((java.lang.Throwable) iOException39);
        java.lang.Throwable[] throwableArray41 = iOException40.getSuppressed();
        java.io.IOException iOException42 = new java.io.IOException("\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException40);
        java.io.IOException iOException43 = new java.io.IOException((java.lang.Throwable) iOException40);
        java.io.IOException iOException44 = new java.io.IOException((java.lang.Throwable) iOException43);
        java.io.IOException iOException46 = new java.io.IOException();
        java.io.IOException iOException47 = new java.io.IOException();
        iOException46.addSuppressed((java.lang.Throwable) iOException47);
        java.io.IOException iOException49 = new java.io.IOException("0", (java.lang.Throwable) iOException46);
        java.io.IOException iOException50 = new java.io.IOException((java.lang.Throwable) iOException49);
        java.io.IOException iOException51 = new java.io.IOException((java.lang.Throwable) iOException50);
        java.io.IOException iOException53 = new java.io.IOException();
        java.io.IOException iOException54 = new java.io.IOException();
        iOException53.addSuppressed((java.lang.Throwable) iOException54);
        java.lang.Throwable[] throwableArray56 = iOException54.getSuppressed();
        java.lang.Throwable[] throwableArray57 = iOException54.getSuppressed();
        java.io.IOException iOException58 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException54);
        java.io.IOException iOException59 = new java.io.IOException();
        java.io.IOException iOException60 = new java.io.IOException();
        iOException59.addSuppressed((java.lang.Throwable) iOException60);
        java.io.IOException iOException62 = new java.io.IOException((java.lang.Throwable) iOException59);
        java.lang.Throwable[] throwableArray63 = iOException62.getSuppressed();
        iOException58.addSuppressed((java.lang.Throwable) iOException62);
        iOException50.addSuppressed((java.lang.Throwable) iOException62);
        java.lang.Throwable[] throwableArray66 = iOException62.getSuppressed();
        iOException44.addSuppressed((java.lang.Throwable) iOException62);
        iOException31.addSuppressed((java.lang.Throwable) iOException44);
        java.io.IOException iOException69 = new java.io.IOException("java.io.IOException: java.io.IOException: \\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034", (java.lang.Throwable) iOException31);
        java.lang.Throwable[] throwableArray70 = iOException69.getSuppressed();
        java.lang.Throwable[] throwableArray71 = iOException69.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(throwableArray70);
        org.junit.Assert.assertNotNull(throwableArray71);
    }

    @Test
    public void test05284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05284");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between(100, (int) (byte) 0);
        java.io.Writer writer4 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate((java.lang.CharSequence) "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: 64", writer4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
    }

    @Test
    public void test05285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05285");
        java.io.IOException iOException2 = new java.io.IOException("0");
        java.io.IOException iOException3 = new java.io.IOException();
        java.io.IOException iOException4 = new java.io.IOException();
        iOException3.addSuppressed((java.lang.Throwable) iOException4);
        java.io.IOException iOException6 = new java.io.IOException();
        java.io.IOException iOException7 = new java.io.IOException();
        iOException6.addSuppressed((java.lang.Throwable) iOException7);
        java.lang.Throwable[] throwableArray9 = iOException7.getSuppressed();
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.io.IOException iOException12 = new java.io.IOException("");
        java.io.IOException iOException13 = new java.io.IOException((java.lang.Throwable) iOException12);
        iOException7.addSuppressed((java.lang.Throwable) iOException13);
        iOException4.addSuppressed((java.lang.Throwable) iOException13);
        iOException2.addSuppressed((java.lang.Throwable) iOException4);
        java.io.IOException iOException17 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.io.IOException iOException18 = new java.io.IOException((java.lang.Throwable) iOException17);
        java.io.IOException iOException19 = new java.io.IOException("", (java.lang.Throwable) iOException17);
        java.lang.String str20 = iOException17.toString();
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "java.io.IOException: java.io.IOException" + "'", str20, "java.io.IOException: java.io.IOException");
    }

    @Test
    public void test05286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05286");
        java.lang.Throwable throwable1 = null;
        java.io.IOException iOException2 = new java.io.IOException("java.io.IOException: \\u0068\\u0069\\u0021", throwable1);
        java.io.IOException iOException3 = new java.io.IOException(throwable1);
        java.io.IOException iOException7 = new java.io.IOException();
        java.io.IOException iOException8 = new java.io.IOException();
        iOException7.addSuppressed((java.lang.Throwable) iOException8);
        java.lang.Throwable[] throwableArray10 = iOException8.getSuppressed();
        java.lang.Throwable[] throwableArray11 = iOException8.getSuppressed();
        java.io.IOException iOException13 = new java.io.IOException();
        java.io.IOException iOException14 = new java.io.IOException();
        iOException13.addSuppressed((java.lang.Throwable) iOException14);
        java.io.IOException iOException16 = new java.io.IOException("0", (java.lang.Throwable) iOException13);
        java.io.IOException iOException17 = new java.io.IOException((java.lang.Throwable) iOException16);
        iOException8.addSuppressed((java.lang.Throwable) iOException17);
        java.lang.Throwable[] throwableArray19 = iOException17.getSuppressed();
        java.io.IOException iOException20 = new java.io.IOException("A", (java.lang.Throwable) iOException17);
        java.io.IOException iOException21 = new java.io.IOException("\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u0068\\u0069!", (java.lang.Throwable) iOException20);
        java.io.IOException iOException22 = new java.io.IOException("java.io.IOException: java.io.IOException: java.io.IOException", (java.lang.Throwable) iOException21);
        iOException3.addSuppressed((java.lang.Throwable) iOException22);
        java.lang.Throwable[] throwableArray24 = iOException22.getSuppressed();
        java.lang.String str25 = iOException22.toString();
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException" + "'", str25, "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException");
    }

    @Test
    public void test05287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05287");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 10, (-1));
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 100, (int) (short) 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper8 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer10 = null;
        boolean boolean11 = unicodeEscaper8.translate((int) (short) 10, writer10);
        java.lang.String str13 = unicodeEscaper8.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper16 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer18 = null;
        boolean boolean19 = unicodeEscaper16.translate((int) '4', writer18);
        java.io.Writer writer21 = null;
        boolean boolean22 = unicodeEscaper16.translate((int) (byte) -1, writer21);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper25 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper27 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper29 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str31 = unicodeEscaper29.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray32 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper25, unicodeEscaper27, unicodeEscaper29 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator33 = unicodeEscaper16.with(charSequenceTranslatorArray32);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator34 = unicodeEscaper8.with(charSequenceTranslatorArray32);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator35 = unicodeEscaper5.with(charSequenceTranslatorArray32);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator36 = unicodeEscaper2.with(charSequenceTranslatorArray32);
        java.io.Writer writer38 = null;
        boolean boolean39 = unicodeEscaper2.translate((int) (byte) 10, writer38);
        java.io.Writer writer41 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020", writer41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertNotNull(unicodeEscaper8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "0" + "'", str13, "0");
        org.junit.Assert.assertNotNull(unicodeEscaper16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper25);
        org.junit.Assert.assertNotNull(unicodeEscaper27);
        org.junit.Assert.assertNotNull(unicodeEscaper29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str31, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray32);
        org.junit.Assert.assertNotNull(charSequenceTranslator33);
        org.junit.Assert.assertNotNull(charSequenceTranslator34);
        org.junit.Assert.assertNotNull(charSequenceTranslator35);
        org.junit.Assert.assertNotNull(charSequenceTranslator36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test05288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05288");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (byte) -1);
        java.lang.CharSequence charSequence3 = null;
        java.lang.String str4 = unicodeEscaper2.translate(charSequence3);
        java.lang.String str6 = unicodeEscaper2.translate((java.lang.CharSequence) "\\\\\\u00750075005C\\\\u00750075\\\\\\u007500750030\\\\\\u007500750030\\\\\\u007500750033\\\\\\u007500750033\\\\\\u00750075005C\\\\u00750075\\\\\\u007500750030\\\\\\u007500750030\\\\\\u007500750033\\\\\\u007500750034");
        java.lang.Class<?> wildcardClass7 = unicodeEscaper2.getClass();
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\\\\\u00750075005C\\\\u00750075\\\\\\u007500750030\\\\\\u007500750030\\\\\\u007500750033\\\\\\u007500750033\\\\\\u00750075005C\\\\u00750075\\\\\\u007500750030\\\\\\u007500750030\\\\\\u007500750033\\\\\\u007500750034" + "'", str6, "\\\\\\u00750075005C\\\\u00750075\\\\\\u007500750030\\\\\\u007500750030\\\\\\u007500750033\\\\\\u007500750033\\\\\\u00750075005C\\\\u00750075\\\\\\u007500750030\\\\\\u007500750030\\\\\\u007500750033\\\\\\u007500750034");
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test05289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05289");
        java.io.IOException iOException1 = new java.io.IOException("java.io.IOException: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        java.lang.String str2 = iOException1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "java.io.IOException: java.io.IOException: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str2, "java.io.IOException: java.io.IOException: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
    }

    @Test
    public void test05290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05290");
        java.io.IOException iOException1 = new java.io.IOException("j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020\\u0030");
    }

    @Test
    public void test05291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05291");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) ' ', 0);
        java.io.Writer writer5 = null;
        int int6 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u0068\\u0069\\u0021", (int) (short) 1, writer5);
        java.lang.String str8 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        java.io.Writer writer10 = null;
        boolean boolean11 = unicodeEscaper2.translate((int) '4', writer10);
        java.io.Writer writer14 = null;
        int int15 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034", 10, writer14);
        java.io.Writer writer17 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate((java.lang.CharSequence) "\\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\u0063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E: \\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\u0063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E", writer17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str8, "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test05292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05292");
        java.io.IOException iOException0 = new java.io.IOException();
        java.io.IOException iOException1 = new java.io.IOException();
        iOException0.addSuppressed((java.lang.Throwable) iOException1);
        java.lang.Throwable[] throwableArray3 = iOException1.getSuppressed();
        java.io.IOException iOException4 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.io.IOException iOException6 = new java.io.IOException("");
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException6);
        iOException1.addSuppressed((java.lang.Throwable) iOException7);
        java.lang.Throwable[] throwableArray9 = iOException1.getSuppressed();
        java.io.IOException iOException10 = new java.io.IOException();
        java.io.IOException iOException11 = new java.io.IOException();
        iOException10.addSuppressed((java.lang.Throwable) iOException11);
        java.lang.Throwable[] throwableArray13 = iOException11.getSuppressed();
        java.io.IOException iOException14 = new java.io.IOException((java.lang.Throwable) iOException11);
        iOException1.addSuppressed((java.lang.Throwable) iOException11);
        java.io.IOException iOException17 = new java.io.IOException();
        java.io.IOException iOException18 = new java.io.IOException();
        iOException17.addSuppressed((java.lang.Throwable) iOException18);
        java.io.IOException iOException20 = new java.io.IOException();
        java.io.IOException iOException21 = new java.io.IOException();
        iOException20.addSuppressed((java.lang.Throwable) iOException21);
        java.lang.Throwable[] throwableArray23 = iOException21.getSuppressed();
        java.io.IOException iOException24 = new java.io.IOException((java.lang.Throwable) iOException21);
        java.io.IOException iOException26 = new java.io.IOException("");
        java.io.IOException iOException27 = new java.io.IOException((java.lang.Throwable) iOException26);
        iOException21.addSuppressed((java.lang.Throwable) iOException27);
        iOException18.addSuppressed((java.lang.Throwable) iOException27);
        java.io.IOException iOException30 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException27);
        java.io.IOException iOException33 = new java.io.IOException("");
        java.io.IOException iOException34 = new java.io.IOException((java.lang.Throwable) iOException33);
        java.io.IOException iOException36 = new java.io.IOException("");
        iOException34.addSuppressed((java.lang.Throwable) iOException36);
        java.io.IOException iOException38 = new java.io.IOException("java.io.IOException: 0", (java.lang.Throwable) iOException36);
        iOException27.addSuppressed((java.lang.Throwable) iOException36);
        java.io.IOException iOException40 = new java.io.IOException((java.lang.Throwable) iOException27);
        iOException1.addSuppressed((java.lang.Throwable) iOException27);
        java.io.IOException iOException42 = new java.io.IOException((java.lang.Throwable) iOException27);
        java.io.IOException iOException43 = new java.io.IOException((java.lang.Throwable) iOException27);
        java.lang.Throwable[] throwableArray44 = iOException43.getSuppressed();
        java.lang.String str45 = iOException43.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "java.io.IOException: java.io.IOException: java.io.IOException: " + "'", str45, "java.io.IOException: java.io.IOException: java.io.IOException: ");
    }

    @Test
    public void test05293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05293");
        java.io.IOException iOException7 = new java.io.IOException("");
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.io.IOException iOException10 = new java.io.IOException("");
        iOException8.addSuppressed((java.lang.Throwable) iOException10);
        java.io.IOException iOException12 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException10);
        java.io.IOException iOException13 = new java.io.IOException("java.io.IOException: \\u0068\\u0069\\u0021", (java.lang.Throwable) iOException10);
        java.io.IOException iOException14 = new java.io.IOException();
        java.io.IOException iOException15 = new java.io.IOException();
        iOException14.addSuppressed((java.lang.Throwable) iOException15);
        java.lang.Throwable[] throwableArray17 = iOException15.getSuppressed();
        java.lang.Throwable[] throwableArray18 = iOException15.getSuppressed();
        java.io.IOException iOException20 = new java.io.IOException();
        java.io.IOException iOException21 = new java.io.IOException();
        iOException20.addSuppressed((java.lang.Throwable) iOException21);
        java.io.IOException iOException23 = new java.io.IOException("0", (java.lang.Throwable) iOException20);
        java.io.IOException iOException24 = new java.io.IOException((java.lang.Throwable) iOException23);
        iOException15.addSuppressed((java.lang.Throwable) iOException24);
        java.lang.Throwable[] throwableArray26 = iOException15.getSuppressed();
        iOException10.addSuppressed((java.lang.Throwable) iOException15);
        java.io.IOException iOException28 = new java.io.IOException("java.io.IOException: java.io.IOException: java.io.IOException: 0", (java.lang.Throwable) iOException10);
        java.lang.Throwable[] throwableArray29 = iOException10.getSuppressed();
        java.io.IOException iOException30 = new java.io.IOException("java.io.IOException: java.io.IOException: hi!", (java.lang.Throwable) iOException10);
        java.io.IOException iOException31 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030", (java.lang.Throwable) iOException30);
        java.io.IOException iOException34 = new java.io.IOException();
        java.io.IOException iOException35 = new java.io.IOException();
        iOException34.addSuppressed((java.lang.Throwable) iOException35);
        java.io.IOException iOException37 = new java.io.IOException("0", (java.lang.Throwable) iOException34);
        java.io.IOException iOException38 = new java.io.IOException((java.lang.Throwable) iOException37);
        java.io.IOException iOException39 = new java.io.IOException((java.lang.Throwable) iOException38);
        java.io.IOException iOException40 = new java.io.IOException((java.lang.Throwable) iOException39);
        java.lang.Throwable[] throwableArray41 = iOException40.getSuppressed();
        java.io.IOException iOException42 = new java.io.IOException("\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException40);
        java.io.IOException iOException43 = new java.io.IOException((java.lang.Throwable) iOException40);
        java.io.IOException iOException44 = new java.io.IOException((java.lang.Throwable) iOException43);
        java.io.IOException iOException46 = new java.io.IOException();
        java.io.IOException iOException47 = new java.io.IOException();
        iOException46.addSuppressed((java.lang.Throwable) iOException47);
        java.io.IOException iOException49 = new java.io.IOException("0", (java.lang.Throwable) iOException46);
        java.io.IOException iOException50 = new java.io.IOException((java.lang.Throwable) iOException49);
        java.io.IOException iOException51 = new java.io.IOException((java.lang.Throwable) iOException50);
        java.io.IOException iOException53 = new java.io.IOException();
        java.io.IOException iOException54 = new java.io.IOException();
        iOException53.addSuppressed((java.lang.Throwable) iOException54);
        java.lang.Throwable[] throwableArray56 = iOException54.getSuppressed();
        java.lang.Throwable[] throwableArray57 = iOException54.getSuppressed();
        java.io.IOException iOException58 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException54);
        java.io.IOException iOException59 = new java.io.IOException();
        java.io.IOException iOException60 = new java.io.IOException();
        iOException59.addSuppressed((java.lang.Throwable) iOException60);
        java.io.IOException iOException62 = new java.io.IOException((java.lang.Throwable) iOException59);
        java.lang.Throwable[] throwableArray63 = iOException62.getSuppressed();
        iOException58.addSuppressed((java.lang.Throwable) iOException62);
        iOException50.addSuppressed((java.lang.Throwable) iOException62);
        java.lang.Throwable[] throwableArray66 = iOException62.getSuppressed();
        iOException44.addSuppressed((java.lang.Throwable) iOException62);
        iOException31.addSuppressed((java.lang.Throwable) iOException44);
        java.io.IOException iOException69 = new java.io.IOException("java.io.IOException: java.io.IOException: \\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034", (java.lang.Throwable) iOException31);
        java.lang.Class<?> wildcardClass70 = iOException31.getClass();
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test05294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05294");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(100, (int) (short) 100);
        java.io.Writer writer5 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int6 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0035\\u0043\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0037\\u0035\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0030\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0030\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0033\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0032\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0035\\u0043\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0037\\u0035\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0030\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0030\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0033\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0030", (int) (byte) 0, writer5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
    }

    @Test
    public void test05295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05295");
        java.io.IOException iOException2 = new java.io.IOException("\\\\u00750036\\\\u00750031");
        java.io.IOException iOException4 = new java.io.IOException("java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: 0");
        java.lang.Throwable[] throwableArray5 = iOException4.getSuppressed();
        iOException2.addSuppressed((java.lang.Throwable) iOException4);
        java.io.IOException iOException7 = new java.io.IOException("\\\\u0075006A\\\\u00750061\\\\u00750076\\\\u00750061\\\\u0075002E\\\\u00750069\\\\u0075006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E\\\\u0075003A\\\\u00750020\\\\u00750068\\\\u00750069\\\\u00750021", (java.lang.Throwable) iOException2);
        java.lang.String str8 = iOException7.toString();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "java.io.IOException: \\\\u0075006A\\\\u00750061\\\\u00750076\\\\u00750061\\\\u0075002E\\\\u00750069\\\\u0075006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E\\\\u0075003A\\\\u00750020\\\\u00750068\\\\u00750069\\\\u00750021" + "'", str8, "java.io.IOException: \\\\u0075006A\\\\u00750061\\\\u00750076\\\\u00750061\\\\u0075002E\\\\u00750069\\\\u0075006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E\\\\u0075003A\\\\u00750020\\\\u00750068\\\\u00750069\\\\u00750021");
    }

    @Test
    public void test05296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05296");
        java.io.IOException iOException1 = new java.io.IOException("0");
        java.lang.Throwable[] throwableArray2 = iOException1.getSuppressed();
        java.io.IOException iOException6 = new java.io.IOException();
        java.io.IOException iOException7 = new java.io.IOException();
        iOException6.addSuppressed((java.lang.Throwable) iOException7);
        java.io.IOException iOException9 = new java.io.IOException();
        java.io.IOException iOException10 = new java.io.IOException();
        iOException9.addSuppressed((java.lang.Throwable) iOException10);
        java.lang.Throwable[] throwableArray12 = iOException10.getSuppressed();
        java.io.IOException iOException13 = new java.io.IOException((java.lang.Throwable) iOException10);
        java.io.IOException iOException15 = new java.io.IOException("");
        java.io.IOException iOException16 = new java.io.IOException((java.lang.Throwable) iOException15);
        iOException10.addSuppressed((java.lang.Throwable) iOException16);
        iOException7.addSuppressed((java.lang.Throwable) iOException16);
        java.io.IOException iOException19 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException16);
        java.io.IOException iOException20 = new java.io.IOException((java.lang.Throwable) iOException16);
        java.io.IOException iOException23 = new java.io.IOException();
        java.io.IOException iOException24 = new java.io.IOException();
        iOException23.addSuppressed((java.lang.Throwable) iOException24);
        java.io.IOException iOException26 = new java.io.IOException("0", (java.lang.Throwable) iOException23);
        java.io.IOException iOException27 = new java.io.IOException((java.lang.Throwable) iOException26);
        java.io.IOException iOException28 = new java.io.IOException((java.lang.Throwable) iOException27);
        java.io.IOException iOException29 = new java.io.IOException((java.lang.Throwable) iOException28);
        java.lang.Throwable[] throwableArray30 = iOException29.getSuppressed();
        java.io.IOException iOException31 = new java.io.IOException("java.io.IOException: java.io.IOException", (java.lang.Throwable) iOException29);
        iOException16.addSuppressed((java.lang.Throwable) iOException29);
        java.io.IOException iOException33 = new java.io.IOException((java.lang.Throwable) iOException29);
        java.io.IOException iOException34 = new java.io.IOException("java.io.IOException: A", (java.lang.Throwable) iOException33);
        java.io.IOException iOException35 = new java.io.IOException("j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020\\u0030", (java.lang.Throwable) iOException33);
        java.io.IOException iOException38 = new java.io.IOException();
        java.io.IOException iOException39 = new java.io.IOException();
        iOException38.addSuppressed((java.lang.Throwable) iOException39);
        java.io.IOException iOException41 = new java.io.IOException();
        java.io.IOException iOException42 = new java.io.IOException();
        iOException41.addSuppressed((java.lang.Throwable) iOException42);
        java.lang.Throwable[] throwableArray44 = iOException42.getSuppressed();
        java.io.IOException iOException45 = new java.io.IOException((java.lang.Throwable) iOException42);
        java.io.IOException iOException47 = new java.io.IOException("");
        java.io.IOException iOException48 = new java.io.IOException((java.lang.Throwable) iOException47);
        iOException42.addSuppressed((java.lang.Throwable) iOException48);
        iOException39.addSuppressed((java.lang.Throwable) iOException48);
        java.lang.Throwable[] throwableArray51 = iOException39.getSuppressed();
        java.io.IOException iOException52 = new java.io.IOException("", (java.lang.Throwable) iOException39);
        java.io.IOException iOException53 = new java.io.IOException("FFFFFFFF", (java.lang.Throwable) iOException52);
        java.io.IOException iOException54 = new java.io.IOException((java.lang.Throwable) iOException52);
        iOException35.addSuppressed((java.lang.Throwable) iOException54);
        java.io.IOException iOException56 = new java.io.IOException((java.lang.Throwable) iOException35);
        iOException1.addSuppressed((java.lang.Throwable) iOException35);
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray51);
    }

    @Test
    public void test05297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05297");
        java.io.IOException iOException0 = new java.io.IOException();
        java.io.IOException iOException1 = new java.io.IOException();
        iOException0.addSuppressed((java.lang.Throwable) iOException1);
        java.io.IOException iOException3 = new java.io.IOException((java.lang.Throwable) iOException0);
        java.io.IOException iOException5 = new java.io.IOException("20");
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.lang.Throwable[] throwableArray7 = iOException6.getSuppressed();
        iOException3.addSuppressed((java.lang.Throwable) iOException6);
        java.lang.Throwable[] throwableArray9 = iOException6.getSuppressed();
        java.lang.Class<?> wildcardClass10 = throwableArray9.getClass();
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test05298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05298");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '#', 100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (byte) 1, (int) ' ');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper8 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper10 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer12 = null;
        boolean boolean13 = unicodeEscaper10.translate((int) ' ', writer12);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper16 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str18 = unicodeEscaper16.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray19 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator20 = unicodeEscaper16.with(charSequenceTranslatorArray19);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator21 = unicodeEscaper10.with(charSequenceTranslatorArray19);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator22 = unicodeEscaper8.with(charSequenceTranslatorArray19);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator23 = unicodeEscaper5.with(charSequenceTranslatorArray19);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator24 = unicodeEscaper2.with(charSequenceTranslatorArray19);
        java.lang.String str26 = charSequenceTranslator24.translate((java.lang.CharSequence) "\\u005C\\u007500\\u0035\\u0043\\u0075\\u005C\\u00750030\\u005C\\u00750030\\u005C\\u00750033\\u005C\\u00750030");
        java.lang.String str28 = charSequenceTranslator24.translate((java.lang.CharSequence) "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        java.io.Writer writer30 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceTranslator24.translate((java.lang.CharSequence) "\\u006Aa\\u0076a\\\\u0075002E\\u0069\\u006F\\\\u0075002EIOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", writer30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertNotNull(unicodeEscaper8);
        org.junit.Assert.assertNotNull(unicodeEscaper10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "0" + "'", str18, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray19);
        org.junit.Assert.assertNotNull(charSequenceTranslator20);
        org.junit.Assert.assertNotNull(charSequenceTranslator21);
        org.junit.Assert.assertNotNull(charSequenceTranslator22);
        org.junit.Assert.assertNotNull(charSequenceTranslator23);
        org.junit.Assert.assertNotNull(charSequenceTranslator24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\\\\u0075005C\\\\u0075007500\\\\u00750035\\\\u00750043\\\\u00750075\\\\u0075005C\\\\u007500750030\\\\u0075005C\\\\u007500750030\\\\u0075005C\\\\u007500750033\\\\u0075005C\\\\u007500750030" + "'", str26, "\\\\u0075005C\\\\u0075007500\\\\u00750035\\\\u00750043\\\\u00750075\\\\u0075005C\\\\u007500750030\\\\u0075005C\\\\u007500750030\\\\u0075005C\\\\u007500750033\\\\u0075005C\\\\u007500750030");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\\u006A\\\\u00750061\\u0076\\\\u00750061\\\\u0075002E\\u0069\\u006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str28, "\\u006A\\\\u00750061\\u0076\\\\u00750061\\\\u0075002E\\u0069\\u006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
    }

    @Test
    public void test05299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05299");
        java.lang.Throwable throwable2 = null;
        java.io.IOException iOException3 = new java.io.IOException("java.io.IOException: \\u0068\\u0069\\u0021", throwable2);
        java.io.IOException iOException4 = new java.io.IOException("\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException3);
        java.io.IOException iOException7 = new java.io.IOException("");
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.io.IOException iOException10 = new java.io.IOException("");
        iOException8.addSuppressed((java.lang.Throwable) iOException10);
        java.io.IOException iOException12 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException10);
        java.io.IOException iOException14 = new java.io.IOException("");
        java.io.IOException iOException15 = new java.io.IOException((java.lang.Throwable) iOException14);
        java.io.IOException iOException16 = new java.io.IOException((java.lang.Throwable) iOException14);
        iOException12.addSuppressed((java.lang.Throwable) iOException14);
        iOException3.addSuppressed((java.lang.Throwable) iOException14);
        java.io.IOException iOException19 = new java.io.IOException((java.lang.Throwable) iOException14);
        java.io.IOException iOException20 = new java.io.IOException((java.lang.Throwable) iOException14);
        java.io.IOException iOException21 = new java.io.IOException((java.lang.Throwable) iOException14);
        java.lang.String str22 = iOException21.toString();
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "java.io.IOException: java.io.IOException: " + "'", str22, "java.io.IOException: java.io.IOException: ");
    }

    @Test
    public void test05300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05300");
        java.io.IOException iOException1 = new java.io.IOException();
        java.io.IOException iOException2 = new java.io.IOException();
        iOException1.addSuppressed((java.lang.Throwable) iOException2);
        java.io.IOException iOException4 = new java.io.IOException("0", (java.lang.Throwable) iOException1);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.io.IOException iOException9 = new java.io.IOException((java.lang.Throwable) iOException8);
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException8);
        java.lang.Throwable[] throwableArray11 = iOException8.getSuppressed();
        java.lang.String str12 = iOException8.toString();
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: 0" + "'", str12, "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: 0");
    }

    @Test
    public void test05301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05301");
        java.io.IOException iOException0 = new java.io.IOException();
        java.io.IOException iOException1 = new java.io.IOException();
        iOException0.addSuppressed((java.lang.Throwable) iOException1);
        java.io.IOException iOException5 = new java.io.IOException("");
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.io.IOException iOException8 = new java.io.IOException("");
        iOException6.addSuppressed((java.lang.Throwable) iOException8);
        java.io.IOException iOException10 = new java.io.IOException("java.io.IOException: 0", (java.lang.Throwable) iOException8);
        iOException1.addSuppressed((java.lang.Throwable) iOException8);
        java.io.IOException iOException12 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.io.IOException iOException13 = new java.io.IOException();
        java.io.IOException iOException14 = new java.io.IOException();
        iOException13.addSuppressed((java.lang.Throwable) iOException14);
        iOException1.addSuppressed((java.lang.Throwable) iOException13);
        java.lang.Throwable[] throwableArray17 = iOException1.getSuppressed();
        java.io.IOException iOException18 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.io.IOException iOException19 = new java.io.IOException((java.lang.Throwable) iOException18);
        java.lang.String str20 = iOException19.toString();
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "java.io.IOException: java.io.IOException: java.io.IOException" + "'", str20, "java.io.IOException: java.io.IOException: java.io.IOException");
    }

    @Test
    public void test05302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05302");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(10, 100);
        java.io.Writer writer4 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean5 = unicodeEscaper2.translate(0, writer4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
    }

    @Test
    public void test05303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05303");
        java.io.IOException iOException1 = new java.io.IOException("java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException");
        java.lang.String str2 = iOException1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException" + "'", str2, "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException");
    }

    @Test
    public void test05304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05304");
        java.lang.Throwable throwable1 = null;
        java.io.IOException iOException2 = new java.io.IOException("java.io.IOException:\\u0020java.io.IOException:\\u002023", throwable1);
    }

    @Test
    public void test05305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05305");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 100, (int) (byte) 1);
        java.io.Writer writer4 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean5 = unicodeEscaper2.translate((int) (short) 0, writer4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
    }

    @Test
    public void test05306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05306");
        java.io.IOException iOException1 = new java.io.IOException();
        java.io.IOException iOException2 = new java.io.IOException();
        iOException1.addSuppressed((java.lang.Throwable) iOException2);
        java.lang.Throwable[] throwableArray4 = iOException2.getSuppressed();
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException7 = new java.io.IOException("");
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        iOException2.addSuppressed((java.lang.Throwable) iOException8);
        java.lang.Throwable[] throwableArray10 = iOException2.getSuppressed();
        java.lang.Throwable[] throwableArray11 = iOException2.getSuppressed();
        java.io.IOException iOException12 = new java.io.IOException("java.io.IOException: java.io.IOException", (java.lang.Throwable) iOException2);
        java.io.IOException iOException13 = new java.io.IOException();
        java.io.IOException iOException14 = new java.io.IOException();
        iOException13.addSuppressed((java.lang.Throwable) iOException14);
        java.lang.Throwable[] throwableArray16 = iOException14.getSuppressed();
        java.lang.Throwable[] throwableArray17 = iOException14.getSuppressed();
        java.io.IOException iOException19 = new java.io.IOException();
        java.io.IOException iOException20 = new java.io.IOException();
        iOException19.addSuppressed((java.lang.Throwable) iOException20);
        java.io.IOException iOException22 = new java.io.IOException("0", (java.lang.Throwable) iOException19);
        java.io.IOException iOException23 = new java.io.IOException((java.lang.Throwable) iOException22);
        iOException14.addSuppressed((java.lang.Throwable) iOException23);
        java.lang.Throwable[] throwableArray25 = iOException23.getSuppressed();
        iOException12.addSuppressed((java.lang.Throwable) iOException23);
        java.lang.Throwable throwable28 = null;
        java.io.IOException iOException29 = new java.io.IOException("j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u005Cu\\u0030\\u0030\\u0032\\u0045io\\u005Cu\\u0030\\u0030\\u0032\\u0045\\u005Cu\\u0030\\u0030\\u0034\\u0039\\u005Cu\\u0030\\u0030\\u0034\\u0046\\u005Cu\\u0030\\u0030\\u0034\\u0035x\\u0063eption\\u005Cu\\u0030\\u0030\\u0033\\u0041\\u005Cu\\u0030\\u0030\\u0032\\u0030j\\u0061v\\u0061\\u005Cu\\u0030\\u0030\\u0032\\u0045io\\u005Cu\\u0030\\u0030\\u0032\\u0045\\u005Cu\\u0030\\u0030\\u0034\\u0039\\u005Cu\\u0030\\u0030\\u0034\\u0046\\u005Cu\\u0030\\u0030\\u0034\\u0035x\\u0063eption", throwable28);
        java.io.IOException iOException30 = new java.io.IOException(throwable28);
        java.io.IOException iOException31 = new java.io.IOException((java.lang.Throwable) iOException30);
        iOException12.addSuppressed((java.lang.Throwable) iOException30);
        java.lang.Throwable throwable34 = null;
        java.io.IOException iOException35 = new java.io.IOException("\\u005C\\u0075\\u0030\\u0030\\u0036\\u0041\\u005C\\u0075\\u0030\\u0030\\u0036\\u0031\\u005C\\u0075\\u0030\\u0030\\u0037\\u0036\\u005C\\u0075\\u0030\\u0030\\u0036\\u0031\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u005C\\u0075\\u0030\\u0030\\u0036\\u0046\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u005C\\u0075\\u0030\\u0030\\u0037\\u0038\\u005C\\u0075\\u0030\\u0030\\u0036\\u0033\\u005C\\u0075\\u0030\\u0030\\u0036\\u0035\\u005C\\u0075\\u0030\\u0030\\u0037\\u0030\\u005C\\u0075\\u0030\\u0030\\u0037\\u0034\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u005C\\u0075\\u0030\\u0030\\u0036\\u0046\\u005C\\u0075\\u0030\\u0030\\u0036\\u0045\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030", throwable34);
        java.lang.Throwable throwable36 = null;
        java.io.IOException iOException37 = new java.io.IOException(throwable36);
        java.lang.Throwable[] throwableArray38 = iOException37.getSuppressed();
        java.lang.Throwable[] throwableArray39 = iOException37.getSuppressed();
        java.io.IOException iOException40 = new java.io.IOException((java.lang.Throwable) iOException37);
        iOException35.addSuppressed((java.lang.Throwable) iOException40);
        iOException30.addSuppressed((java.lang.Throwable) iOException40);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray39);
    }

    @Test
    public void test05307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05307");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) (short) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 10, (int) (byte) 100);
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper5.translate((int) '4', writer7);
        java.io.Writer writer10 = null;
        boolean boolean11 = unicodeEscaper5.translate((int) ' ', writer10);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper14 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) -1, (int) (short) 100);
        java.io.Writer writer16 = null;
        boolean boolean17 = unicodeEscaper14.translate((int) '4', writer16);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper20 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer22 = null;
        boolean boolean23 = unicodeEscaper20.translate((int) '4', writer22);
        java.io.Writer writer25 = null;
        boolean boolean26 = unicodeEscaper20.translate((int) (byte) -1, writer25);
        java.lang.String str28 = unicodeEscaper20.translate((java.lang.CharSequence) "java.io.IOException");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper31 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, 10);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper34 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper36 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer38 = null;
        boolean boolean39 = unicodeEscaper36.translate((int) ' ', writer38);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper42 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str44 = unicodeEscaper42.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray45 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator46 = unicodeEscaper42.with(charSequenceTranslatorArray45);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator47 = unicodeEscaper36.with(charSequenceTranslatorArray45);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator48 = unicodeEscaper34.with(charSequenceTranslatorArray45);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator49 = unicodeEscaper31.with(charSequenceTranslatorArray45);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator50 = unicodeEscaper20.with(charSequenceTranslatorArray45);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator51 = unicodeEscaper14.with(charSequenceTranslatorArray45);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator52 = unicodeEscaper5.with(charSequenceTranslatorArray45);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper55 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 100, (int) (short) 10);
        java.io.Writer writer57 = null;
        boolean boolean58 = unicodeEscaper55.translate(0, writer57);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper60 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (short) 10);
        java.lang.String str62 = unicodeEscaper60.translate((java.lang.CharSequence) "\\u0068\\u0069\\u0021");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper65 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) '4', (int) (short) 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper68 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper71 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', (int) (short) 0);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray72 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper71 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator73 = unicodeEscaper68.with(charSequenceTranslatorArray72);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator74 = unicodeEscaper65.with(charSequenceTranslatorArray72);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator75 = unicodeEscaper60.with(charSequenceTranslatorArray72);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator76 = unicodeEscaper55.with(charSequenceTranslatorArray72);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper78 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) '#');
        java.lang.String str80 = unicodeEscaper78.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: \\u005Cu\\u0030\\u0030\\u0036\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0032\\u0031");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper83 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 0, (int) 'a');
        java.io.Writer writer85 = null;
        boolean boolean86 = unicodeEscaper83.translate(100, writer85);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper89 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper92 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', (int) (short) 0);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray93 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper92 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator94 = unicodeEscaper89.with(charSequenceTranslatorArray93);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator95 = unicodeEscaper83.with(charSequenceTranslatorArray93);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator96 = unicodeEscaper78.with(charSequenceTranslatorArray93);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator97 = unicodeEscaper55.with(charSequenceTranslatorArray93);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator98 = charSequenceTranslator52.with(charSequenceTranslatorArray93);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator99 = unicodeEscaper2.with(charSequenceTranslatorArray93);
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "java.io.IOException" + "'", str28, "java.io.IOException");
        org.junit.Assert.assertNotNull(unicodeEscaper31);
        org.junit.Assert.assertNotNull(unicodeEscaper34);
        org.junit.Assert.assertNotNull(unicodeEscaper36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "0" + "'", str44, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray45);
        org.junit.Assert.assertNotNull(charSequenceTranslator46);
        org.junit.Assert.assertNotNull(charSequenceTranslator47);
        org.junit.Assert.assertNotNull(charSequenceTranslator48);
        org.junit.Assert.assertNotNull(charSequenceTranslator49);
        org.junit.Assert.assertNotNull(charSequenceTranslator50);
        org.junit.Assert.assertNotNull(charSequenceTranslator51);
        org.junit.Assert.assertNotNull(charSequenceTranslator52);
        org.junit.Assert.assertNotNull(unicodeEscaper55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper60);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "\\u0068\\u0069\\u0021" + "'", str62, "\\u0068\\u0069\\u0021");
        org.junit.Assert.assertNotNull(unicodeEscaper65);
        org.junit.Assert.assertNotNull(unicodeEscaper68);
        org.junit.Assert.assertNotNull(unicodeEscaper71);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray72);
        org.junit.Assert.assertNotNull(charSequenceTranslator73);
        org.junit.Assert.assertNotNull(charSequenceTranslator74);
        org.junit.Assert.assertNotNull(charSequenceTranslator75);
        org.junit.Assert.assertNotNull(charSequenceTranslator76);
        org.junit.Assert.assertNotNull(unicodeEscaper78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A \\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0033\\u0038\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0033\\u0039\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0032\\u005C\\u0075\\u0030\\u0030\\u0033\\u0031" + "'", str80, "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A \\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0033\\u0038\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0033\\u0039\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0032\\u005C\\u0075\\u0030\\u0030\\u0033\\u0031");
        org.junit.Assert.assertNotNull(unicodeEscaper83);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper89);
        org.junit.Assert.assertNotNull(unicodeEscaper92);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray93);
        org.junit.Assert.assertNotNull(charSequenceTranslator94);
        org.junit.Assert.assertNotNull(charSequenceTranslator95);
        org.junit.Assert.assertNotNull(charSequenceTranslator96);
        org.junit.Assert.assertNotNull(charSequenceTranslator97);
        org.junit.Assert.assertNotNull(charSequenceTranslator98);
        org.junit.Assert.assertNotNull(charSequenceTranslator99);
    }

    @Test
    public void test05308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05308");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) 'a');
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) '#', writer4);
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper2.translate((int) '#', writer7);
        java.io.Writer writer10 = null;
        boolean boolean11 = unicodeEscaper2.translate((int) ' ', writer10);
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test05309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05309");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) (short) 10, writer4);
        java.lang.String str7 = unicodeEscaper2.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper10 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer12 = null;
        boolean boolean13 = unicodeEscaper10.translate((int) '4', writer12);
        java.io.Writer writer15 = null;
        boolean boolean16 = unicodeEscaper10.translate((int) (byte) -1, writer15);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper19 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper21 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper23 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str25 = unicodeEscaper23.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray26 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper19, unicodeEscaper21, unicodeEscaper23 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator27 = unicodeEscaper10.with(charSequenceTranslatorArray26);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator28 = unicodeEscaper2.with(charSequenceTranslatorArray26);
        java.io.Writer writer30 = null;
        boolean boolean31 = unicodeEscaper2.translate((int) '#', writer30);
        java.lang.CharSequence charSequence32 = null;
        java.io.Writer writer34 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int35 = unicodeEscaper2.translate(charSequence32, (int) (short) 1, writer34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0" + "'", str7, "0");
        org.junit.Assert.assertNotNull(unicodeEscaper10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper19);
        org.junit.Assert.assertNotNull(unicodeEscaper21);
        org.junit.Assert.assertNotNull(unicodeEscaper23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str25, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray26);
        org.junit.Assert.assertNotNull(charSequenceTranslator27);
        org.junit.Assert.assertNotNull(charSequenceTranslator28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test05310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05310");
        java.io.IOException iOException1 = new java.io.IOException();
        java.io.IOException iOException2 = new java.io.IOException();
        iOException1.addSuppressed((java.lang.Throwable) iOException2);
        java.io.IOException iOException4 = new java.io.IOException("0", (java.lang.Throwable) iOException1);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.io.IOException iOException7 = new java.io.IOException();
        java.io.IOException iOException8 = new java.io.IOException();
        iOException7.addSuppressed((java.lang.Throwable) iOException8);
        java.io.IOException iOException10 = new java.io.IOException();
        java.io.IOException iOException11 = new java.io.IOException();
        iOException10.addSuppressed((java.lang.Throwable) iOException11);
        java.lang.Throwable[] throwableArray13 = iOException11.getSuppressed();
        java.io.IOException iOException14 = new java.io.IOException((java.lang.Throwable) iOException11);
        java.io.IOException iOException16 = new java.io.IOException("");
        java.io.IOException iOException17 = new java.io.IOException((java.lang.Throwable) iOException16);
        iOException11.addSuppressed((java.lang.Throwable) iOException17);
        iOException8.addSuppressed((java.lang.Throwable) iOException17);
        iOException6.addSuppressed((java.lang.Throwable) iOException17);
        java.io.IOException iOException24 = new java.io.IOException("");
        java.io.IOException iOException25 = new java.io.IOException("A", (java.lang.Throwable) iOException24);
        java.io.IOException iOException26 = new java.io.IOException((java.lang.Throwable) iOException24);
        java.io.IOException iOException27 = new java.io.IOException((java.lang.Throwable) iOException26);
        java.io.IOException iOException28 = new java.io.IOException("\\u0036\\u0034", (java.lang.Throwable) iOException26);
        java.io.IOException iOException30 = new java.io.IOException();
        java.io.IOException iOException31 = new java.io.IOException();
        iOException30.addSuppressed((java.lang.Throwable) iOException31);
        java.io.IOException iOException33 = new java.io.IOException();
        java.io.IOException iOException34 = new java.io.IOException();
        iOException33.addSuppressed((java.lang.Throwable) iOException34);
        java.lang.Throwable[] throwableArray36 = iOException34.getSuppressed();
        java.io.IOException iOException37 = new java.io.IOException((java.lang.Throwable) iOException34);
        java.io.IOException iOException39 = new java.io.IOException("");
        java.io.IOException iOException40 = new java.io.IOException((java.lang.Throwable) iOException39);
        iOException34.addSuppressed((java.lang.Throwable) iOException40);
        iOException31.addSuppressed((java.lang.Throwable) iOException40);
        java.io.IOException iOException43 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException40);
        iOException26.addSuppressed((java.lang.Throwable) iOException40);
        java.io.IOException iOException47 = new java.io.IOException();
        java.io.IOException iOException48 = new java.io.IOException();
        iOException47.addSuppressed((java.lang.Throwable) iOException48);
        java.io.IOException iOException50 = new java.io.IOException("0", (java.lang.Throwable) iOException47);
        java.io.IOException iOException51 = new java.io.IOException((java.lang.Throwable) iOException50);
        java.io.IOException iOException52 = new java.io.IOException((java.lang.Throwable) iOException50);
        java.io.IOException iOException53 = new java.io.IOException("java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030", (java.lang.Throwable) iOException52);
        iOException40.addSuppressed((java.lang.Throwable) iOException53);
        iOException17.addSuppressed((java.lang.Throwable) iOException53);
        java.io.IOException iOException56 = new java.io.IOException((java.lang.Throwable) iOException17);
        java.lang.String str57 = iOException56.toString();
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "java.io.IOException: java.io.IOException: java.io.IOException: " + "'", str57, "java.io.IOException: java.io.IOException: java.io.IOException: ");
    }

    @Test
    public void test05311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05311");
        java.io.IOException iOException3 = new java.io.IOException();
        java.io.IOException iOException4 = new java.io.IOException();
        iOException3.addSuppressed((java.lang.Throwable) iOException4);
        java.io.IOException iOException6 = new java.io.IOException("0", (java.lang.Throwable) iOException3);
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.io.IOException iOException9 = new java.io.IOException((java.lang.Throwable) iOException8);
        java.lang.Throwable[] throwableArray10 = iOException9.getSuppressed();
        java.io.IOException iOException11 = new java.io.IOException("java.io.IOException: java.io.IOException", (java.lang.Throwable) iOException9);
        java.io.IOException iOException12 = new java.io.IOException((java.lang.Throwable) iOException11);
        java.lang.Throwable[] throwableArray13 = iOException12.getSuppressed();
        java.io.IOException iOException14 = new java.io.IOException("java.io.IOException: java.io.IOException: 20", (java.lang.Throwable) iOException12);
        java.lang.Throwable[] throwableArray15 = iOException12.getSuppressed();
        java.lang.String str16 = iOException12.toString();
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException" + "'", str16, "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException");
    }

    @Test
    public void test05312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05312");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper1 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above(10);
        java.lang.String str3 = unicodeEscaper1.translate((java.lang.CharSequence) "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        java.lang.String str5 = unicodeEscaper1.translate((java.lang.CharSequence) "\\u005Cu\\u0030\\u0030\\u0033\\u0033\\u005Cu\\u0030\\u0030\\u0033\\u0034");
        java.lang.CharSequence charSequence6 = null;
        java.io.Writer writer8 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int9 = unicodeEscaper1.translate(charSequence6, (int) (byte) 10, writer8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str3, "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034" + "'", str5, "\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034");
    }

    @Test
    public void test05313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05313");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (short) 100, (int) '#');
        org.junit.Assert.assertNotNull(unicodeEscaper2);
    }

    @Test
    public void test05314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05314");
        java.io.IOException iOException1 = new java.io.IOException("java.io.IOException: \\u0036\\u0034");
        java.lang.Throwable[] throwableArray2 = iOException1.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray2);
    }

    @Test
    public void test05315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05315");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) 'a');
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) '#', writer4);
        java.io.Writer writer8 = null;
        int int9 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u0068\\u0069\\u0021", (int) (short) 10, writer8);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper12 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (short) 100, 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper15 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 100, (-1));
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper18 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer20 = null;
        boolean boolean21 = unicodeEscaper18.translate((int) (short) 10, writer20);
        java.lang.String str23 = unicodeEscaper18.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper26 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer28 = null;
        boolean boolean29 = unicodeEscaper26.translate((int) '4', writer28);
        java.io.Writer writer31 = null;
        boolean boolean32 = unicodeEscaper26.translate((int) (byte) -1, writer31);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper35 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper37 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper39 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str41 = unicodeEscaper39.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray42 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper35, unicodeEscaper37, unicodeEscaper39 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator43 = unicodeEscaper26.with(charSequenceTranslatorArray42);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator44 = unicodeEscaper18.with(charSequenceTranslatorArray42);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator45 = unicodeEscaper15.with(charSequenceTranslatorArray42);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator46 = unicodeEscaper12.with(charSequenceTranslatorArray42);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator47 = unicodeEscaper2.with(charSequenceTranslatorArray42);
        java.io.Writer writer50 = null;
        int int51 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u0036\\u0031", 0, writer50);
        java.io.Writer writer53 = null;
        boolean boolean54 = unicodeEscaper2.translate((int) '#', writer53);
        java.io.Writer writer56 = null;
        boolean boolean57 = unicodeEscaper2.translate((int) ' ', writer56);
        java.io.Writer writer60 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int61 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030", (-1), writer60);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(unicodeEscaper12);
        org.junit.Assert.assertNotNull(unicodeEscaper15);
        org.junit.Assert.assertNotNull(unicodeEscaper18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "0" + "'", str23, "0");
        org.junit.Assert.assertNotNull(unicodeEscaper26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper35);
        org.junit.Assert.assertNotNull(unicodeEscaper37);
        org.junit.Assert.assertNotNull(unicodeEscaper39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str41, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray42);
        org.junit.Assert.assertNotNull(charSequenceTranslator43);
        org.junit.Assert.assertNotNull(charSequenceTranslator44);
        org.junit.Assert.assertNotNull(charSequenceTranslator45);
        org.junit.Assert.assertNotNull(charSequenceTranslator46);
        org.junit.Assert.assertNotNull(charSequenceTranslator47);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test05316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05316");
        java.io.IOException iOException1 = new java.io.IOException();
        java.io.IOException iOException2 = new java.io.IOException();
        iOException1.addSuppressed((java.lang.Throwable) iOException2);
        java.lang.Throwable[] throwableArray4 = iOException2.getSuppressed();
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException7 = new java.io.IOException("");
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        iOException2.addSuppressed((java.lang.Throwable) iOException8);
        java.lang.Throwable[] throwableArray10 = iOException2.getSuppressed();
        java.io.IOException iOException11 = new java.io.IOException("\\u0068\\u0069\\u0021", (java.lang.Throwable) iOException2);
        java.io.IOException iOException14 = new java.io.IOException();
        java.io.IOException iOException15 = new java.io.IOException();
        iOException14.addSuppressed((java.lang.Throwable) iOException15);
        java.io.IOException iOException17 = new java.io.IOException("0", (java.lang.Throwable) iOException14);
        java.io.IOException iOException18 = new java.io.IOException((java.lang.Throwable) iOException17);
        java.io.IOException iOException19 = new java.io.IOException((java.lang.Throwable) iOException18);
        java.io.IOException iOException20 = new java.io.IOException((java.lang.Throwable) iOException19);
        java.lang.Throwable[] throwableArray21 = iOException20.getSuppressed();
        java.io.IOException iOException22 = new java.io.IOException("java.io.IOException: java.io.IOException", (java.lang.Throwable) iOException20);
        java.io.IOException iOException23 = new java.io.IOException((java.lang.Throwable) iOException22);
        iOException2.addSuppressed((java.lang.Throwable) iOException23);
        java.lang.Throwable[] throwableArray25 = iOException2.getSuppressed();
        java.lang.String str26 = iOException2.toString();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "java.io.IOException" + "'", str26, "java.io.IOException");
    }

    @Test
    public void test05317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05317");
        java.io.IOException iOException1 = new java.io.IOException("\\u005C\\u0075\\u0030\\u0030\\u0036\\u0041\\u0061\\u005C\\u0075\\u0030\\u0030\\u0037\\u0036\\u0061\\u002E\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u005C\\u0075\\u0030\\u0030\\u0036\\u0046\\u002E\\u0049\\u004F\\u0045\\u005C\\u0075\\u0030\\u0030\\u0037\\u0038\\u0063\\u005C\\u0075\\u0030\\u0030\\u0036\\u0035\\u005C\\u0075\\u0030\\u0030\\u0037\\u0030\\u005C\\u0075\\u0030\\u0030\\u0037\\u0034\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u005C\\u0075\\u0030\\u0030\\u0036\\u0046\\u005C\\u0075\\u0030\\u0030\\u0036\\u0045\\u003A\\u0020\\u0036\\u0031");
    }

    @Test
    public void test05318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05318");
        java.io.IOException iOException3 = new java.io.IOException("java.io.IOException: java.io.IOException");
        java.io.IOException iOException6 = new java.io.IOException("0");
        java.lang.Throwable[] throwableArray7 = iOException6.getSuppressed();
        java.io.IOException iOException8 = new java.io.IOException("hi!", (java.lang.Throwable) iOException6);
        iOException3.addSuppressed((java.lang.Throwable) iOException6);
        java.io.IOException iOException10 = new java.io.IOException("java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException3);
        java.lang.Throwable[] throwableArray11 = iOException10.getSuppressed();
        java.io.IOException iOException12 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException10);
        java.io.IOException iOException14 = new java.io.IOException("0");
        java.io.IOException iOException15 = new java.io.IOException((java.lang.Throwable) iOException14);
        java.lang.Throwable[] throwableArray16 = iOException15.getSuppressed();
        java.lang.Throwable[] throwableArray17 = iOException15.getSuppressed();
        java.io.IOException iOException18 = new java.io.IOException((java.lang.Throwable) iOException15);
        iOException12.addSuppressed((java.lang.Throwable) iOException18);
        java.io.IOException iOException20 = new java.io.IOException((java.lang.Throwable) iOException18);
        java.lang.Throwable[] throwableArray21 = iOException20.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray21);
    }

    @Test
    public void test05319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05319");
        java.io.IOException iOException1 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A ");
        java.io.IOException iOException2 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.io.IOException iOException3 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.lang.String str4 = iOException3.toString();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "java.io.IOException: java.io.IOException: java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A " + "'", str4, "java.io.IOException: java.io.IOException: java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A ");
    }

    @Test
    public void test05320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05320");
        java.io.IOException iOException1 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        java.io.IOException iOException2 = new java.io.IOException();
        java.io.IOException iOException3 = new java.io.IOException();
        iOException2.addSuppressed((java.lang.Throwable) iOException3);
        java.io.IOException iOException5 = new java.io.IOException();
        java.io.IOException iOException6 = new java.io.IOException();
        iOException5.addSuppressed((java.lang.Throwable) iOException6);
        java.lang.Throwable[] throwableArray8 = iOException6.getSuppressed();
        java.io.IOException iOException9 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException11 = new java.io.IOException("");
        java.io.IOException iOException12 = new java.io.IOException((java.lang.Throwable) iOException11);
        iOException6.addSuppressed((java.lang.Throwable) iOException12);
        iOException3.addSuppressed((java.lang.Throwable) iOException12);
        java.io.IOException iOException15 = new java.io.IOException((java.lang.Throwable) iOException12);
        java.io.IOException iOException16 = new java.io.IOException((java.lang.Throwable) iOException15);
        iOException1.addSuppressed((java.lang.Throwable) iOException16);
        java.lang.String str18 = iOException1.toString();
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str18, "java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
    }

    @Test
    public void test05321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05321");
        java.io.IOException iOException5 = new java.io.IOException("");
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.io.IOException iOException8 = new java.io.IOException("");
        iOException6.addSuppressed((java.lang.Throwable) iOException8);
        java.io.IOException iOException10 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException8);
        java.io.IOException iOException11 = new java.io.IOException("java.io.IOException: \\u0068\\u0069\\u0021", (java.lang.Throwable) iOException8);
        java.io.IOException iOException12 = new java.io.IOException();
        java.io.IOException iOException13 = new java.io.IOException();
        iOException12.addSuppressed((java.lang.Throwable) iOException13);
        java.lang.Throwable[] throwableArray15 = iOException13.getSuppressed();
        java.lang.Throwable[] throwableArray16 = iOException13.getSuppressed();
        java.io.IOException iOException18 = new java.io.IOException();
        java.io.IOException iOException19 = new java.io.IOException();
        iOException18.addSuppressed((java.lang.Throwable) iOException19);
        java.io.IOException iOException21 = new java.io.IOException("0", (java.lang.Throwable) iOException18);
        java.io.IOException iOException22 = new java.io.IOException((java.lang.Throwable) iOException21);
        iOException13.addSuppressed((java.lang.Throwable) iOException22);
        java.lang.Throwable[] throwableArray24 = iOException13.getSuppressed();
        iOException8.addSuppressed((java.lang.Throwable) iOException13);
        java.io.IOException iOException26 = new java.io.IOException("\\\\u00750068\\\\u00750069\\\\u00750021", (java.lang.Throwable) iOException13);
        java.io.IOException iOException27 = new java.io.IOException((java.lang.Throwable) iOException26);
        java.io.IOException iOException28 = new java.io.IOException((java.lang.Throwable) iOException26);
        java.io.IOException iOException29 = new java.io.IOException((java.lang.Throwable) iOException26);
        java.io.IOException iOException30 = new java.io.IOException("java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: 0", (java.lang.Throwable) iOException29);
        java.lang.Class<?> wildcardClass31 = iOException30.getClass();
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test05322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05322");
        java.io.IOException iOException1 = new java.io.IOException();
        java.io.IOException iOException2 = new java.io.IOException();
        iOException1.addSuppressed((java.lang.Throwable) iOException2);
        java.lang.Throwable[] throwableArray4 = iOException2.getSuppressed();
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException7 = new java.io.IOException("");
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        iOException2.addSuppressed((java.lang.Throwable) iOException8);
        java.lang.Throwable[] throwableArray10 = iOException2.getSuppressed();
        java.io.IOException iOException11 = new java.io.IOException("\\u0068\\u0069\\u0021", (java.lang.Throwable) iOException2);
        java.io.IOException iOException13 = new java.io.IOException("");
        java.io.IOException iOException14 = new java.io.IOException((java.lang.Throwable) iOException13);
        java.io.IOException iOException15 = new java.io.IOException((java.lang.Throwable) iOException14);
        iOException11.addSuppressed((java.lang.Throwable) iOException14);
        java.io.IOException iOException17 = new java.io.IOException((java.lang.Throwable) iOException14);
        java.io.IOException iOException18 = new java.io.IOException((java.lang.Throwable) iOException17);
        java.io.IOException iOException23 = new java.io.IOException("");
        java.io.IOException iOException24 = new java.io.IOException((java.lang.Throwable) iOException23);
        java.io.IOException iOException26 = new java.io.IOException("");
        iOException24.addSuppressed((java.lang.Throwable) iOException26);
        java.io.IOException iOException28 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException26);
        java.io.IOException iOException29 = new java.io.IOException("java.io.IOException: \\u0068\\u0069\\u0021", (java.lang.Throwable) iOException26);
        java.io.IOException iOException30 = new java.io.IOException((java.lang.Throwable) iOException26);
        java.io.IOException iOException31 = new java.io.IOException((java.lang.Throwable) iOException30);
        java.io.IOException iOException32 = new java.io.IOException((java.lang.Throwable) iOException30);
        java.io.IOException iOException33 = new java.io.IOException("\\\\\\u00750075006Aa\\\\\\u007500750076a.\\\\\\u007500750069\\\\\\u00750075006F.IOE\\\\\\u007500750078\\\\u00750063\\\\\\u007500750065\\\\\\u007500750070\\\\\\u007500750074\\\\\\u007500750069\\\\\\u00750075006F\\\\\\u00750075006E:\\\\\\u007500750020\\\\\\u00750075006Aa\\\\\\u007500750076a.\\\\\\u007500750069\\\\\\u00750075006F.IOE\\\\\\u007500750078\\\\u00750063\\\\\\u007500750065\\\\\\u007500750070\\\\\\u007500750074\\\\\\u007500750069\\\\\\u00750075006F\\\\\\u00750075006E", (java.lang.Throwable) iOException30);
        java.lang.Throwable[] throwableArray34 = iOException30.getSuppressed();
        iOException18.addSuppressed((java.lang.Throwable) iOException30);
        java.io.IOException iOException37 = new java.io.IOException("\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: 64");
        java.io.IOException iOException39 = new java.io.IOException();
        java.io.IOException iOException40 = new java.io.IOException();
        iOException39.addSuppressed((java.lang.Throwable) iOException40);
        java.io.IOException iOException42 = new java.io.IOException();
        java.io.IOException iOException43 = new java.io.IOException();
        iOException42.addSuppressed((java.lang.Throwable) iOException43);
        java.lang.Throwable[] throwableArray45 = iOException43.getSuppressed();
        java.io.IOException iOException46 = new java.io.IOException((java.lang.Throwable) iOException43);
        java.io.IOException iOException48 = new java.io.IOException("");
        java.io.IOException iOException49 = new java.io.IOException((java.lang.Throwable) iOException48);
        iOException43.addSuppressed((java.lang.Throwable) iOException49);
        iOException40.addSuppressed((java.lang.Throwable) iOException49);
        java.io.IOException iOException52 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException49);
        java.io.IOException iOException53 = new java.io.IOException((java.lang.Throwable) iOException49);
        java.io.IOException iOException56 = new java.io.IOException();
        java.io.IOException iOException57 = new java.io.IOException();
        iOException56.addSuppressed((java.lang.Throwable) iOException57);
        java.io.IOException iOException59 = new java.io.IOException("0", (java.lang.Throwable) iOException56);
        java.io.IOException iOException60 = new java.io.IOException((java.lang.Throwable) iOException59);
        java.io.IOException iOException61 = new java.io.IOException((java.lang.Throwable) iOException60);
        java.io.IOException iOException62 = new java.io.IOException((java.lang.Throwable) iOException61);
        java.lang.Throwable[] throwableArray63 = iOException62.getSuppressed();
        java.io.IOException iOException64 = new java.io.IOException("java.io.IOException: java.io.IOException", (java.lang.Throwable) iOException62);
        iOException49.addSuppressed((java.lang.Throwable) iOException62);
        iOException37.addSuppressed((java.lang.Throwable) iOException49);
        iOException30.addSuppressed((java.lang.Throwable) iOException49);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray63);
    }

    @Test
    public void test05323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05323");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, 0);
        java.io.Writer writer4 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean5 = unicodeEscaper2.translate((int) (byte) 0, writer4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
    }

    @Test
    public void test05324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05324");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) 'a', (int) (short) 0);
        java.io.Writer writer4 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: java.io.IOException: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\\\u00750068\\\\u00750069\\\\u00750021", writer4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
    }

    @Test
    public void test05325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05325");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) ' ', (int) (short) 100);
        java.lang.Class<?> wildcardClass3 = unicodeEscaper2.getClass();
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test05326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05326");
        java.io.IOException iOException2 = new java.io.IOException("java.io.IOException: \\u005C\\u007500\\u0035\\u0043\\u0075\\u005C\\u00750030\\u005C\\u00750030\\u005C\\u00750033\\u005C\\u00750030");
        java.io.IOException iOException3 = new java.io.IOException("java.io.IOException: java.io.IOException: java.io.IOException: \\u0068\\u0069\\u0021", (java.lang.Throwable) iOException2);
        java.lang.Throwable[] throwableArray4 = iOException2.getSuppressed();
        java.lang.Throwable[] throwableArray5 = iOException2.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray5);
    }

    @Test
    public void test05327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05327");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(10, (int) 'a');
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: 20");
        java.io.Writer writer6 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate((java.lang.CharSequence) "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020", writer6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: 20" + "'", str4, "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: 20");
    }

    @Test
    public void test05328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05328");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 0, (int) 'a');
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate(100, writer4);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper8 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper11 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', (int) (short) 0);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray12 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper11 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator13 = unicodeEscaper8.with(charSequenceTranslatorArray12);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator14 = unicodeEscaper2.with(charSequenceTranslatorArray12);
        java.io.Writer writer17 = null;
        int int18 = unicodeEscaper2.translate((java.lang.CharSequence) "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption", (int) (short) 0, writer17);
        java.io.Writer writer21 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int22 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A ", (int) (byte) -1, writer21);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper8);
        org.junit.Assert.assertNotNull(unicodeEscaper11);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray12);
        org.junit.Assert.assertNotNull(charSequenceTranslator13);
        org.junit.Assert.assertNotNull(charSequenceTranslator14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test05329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05329");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 100, (int) (short) 10);
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate(0, writer4);
        java.lang.String str7 = unicodeEscaper2.translate((java.lang.CharSequence) "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper10 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (byte) 100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper13 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer15 = null;
        boolean boolean16 = unicodeEscaper13.translate((int) '4', writer15);
        java.io.Writer writer19 = null;
        int int20 = unicodeEscaper13.translate((java.lang.CharSequence) "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", 100, writer19);
        java.lang.String str22 = unicodeEscaper13.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper25 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) (byte) 10);
        java.lang.String str27 = unicodeEscaper25.translate((java.lang.CharSequence) "java.io.IOException");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper29 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) (short) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper32 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '#', 100);
        java.lang.String str34 = unicodeEscaper32.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper37 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) '4', (int) (short) 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper40 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper43 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', (int) (short) 0);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray44 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper43 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator45 = unicodeEscaper40.with(charSequenceTranslatorArray44);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator46 = unicodeEscaper37.with(charSequenceTranslatorArray44);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator47 = unicodeEscaper32.with(charSequenceTranslatorArray44);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator48 = unicodeEscaper29.with(charSequenceTranslatorArray44);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper51 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper54 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer56 = null;
        boolean boolean57 = unicodeEscaper54.translate((int) '4', writer56);
        java.io.Writer writer59 = null;
        boolean boolean60 = unicodeEscaper54.translate((int) (byte) -1, writer59);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper63 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper65 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper67 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str69 = unicodeEscaper67.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray70 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper63, unicodeEscaper65, unicodeEscaper67 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator71 = unicodeEscaper54.with(charSequenceTranslatorArray70);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator72 = unicodeEscaper51.with(charSequenceTranslatorArray70);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator73 = unicodeEscaper29.with(charSequenceTranslatorArray70);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator74 = unicodeEscaper25.with(charSequenceTranslatorArray70);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator75 = unicodeEscaper13.with(charSequenceTranslatorArray70);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator76 = unicodeEscaper10.with(charSequenceTranslatorArray70);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator77 = unicodeEscaper2.with(charSequenceTranslatorArray70);
        java.io.Writer writer80 = null;
        int int81 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: \\u005Cu\\u0030\\u0030\\u0036\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0032\\u0031", (int) (byte) 1, writer80);
        java.lang.String str83 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0068\\u0069\\u0021");
        java.io.Writer writer86 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int87 = unicodeEscaper2.translate((java.lang.CharSequence) "20", (int) (byte) 10, writer86);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 10");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption" + "'", str7, "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption");
        org.junit.Assert.assertNotNull(unicodeEscaper10);
        org.junit.Assert.assertNotNull(unicodeEscaper13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030" + "'", str22, "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030");
        org.junit.Assert.assertNotNull(unicodeEscaper25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str27, "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertNotNull(unicodeEscaper29);
        org.junit.Assert.assertNotNull(unicodeEscaper32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str34, "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertNotNull(unicodeEscaper37);
        org.junit.Assert.assertNotNull(unicodeEscaper40);
        org.junit.Assert.assertNotNull(unicodeEscaper43);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray44);
        org.junit.Assert.assertNotNull(charSequenceTranslator45);
        org.junit.Assert.assertNotNull(charSequenceTranslator46);
        org.junit.Assert.assertNotNull(charSequenceTranslator47);
        org.junit.Assert.assertNotNull(charSequenceTranslator48);
        org.junit.Assert.assertNotNull(unicodeEscaper51);
        org.junit.Assert.assertNotNull(unicodeEscaper54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper63);
        org.junit.Assert.assertNotNull(unicodeEscaper65);
        org.junit.Assert.assertNotNull(unicodeEscaper67);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str69, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray70);
        org.junit.Assert.assertNotNull(charSequenceTranslator71);
        org.junit.Assert.assertNotNull(charSequenceTranslator72);
        org.junit.Assert.assertNotNull(charSequenceTranslator73);
        org.junit.Assert.assertNotNull(charSequenceTranslator74);
        org.junit.Assert.assertNotNull(charSequenceTranslator75);
        org.junit.Assert.assertNotNull(charSequenceTranslator76);
        org.junit.Assert.assertNotNull(charSequenceTranslator77);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0068\\u0069\\u0021" + "'", str83, "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0068\\u0069\\u0021");
    }

    @Test
    public void test05330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05330");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (short) 10, (int) (byte) 100);
        java.io.Writer writer4 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean5 = unicodeEscaper2.translate((int) (byte) 100, writer4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
    }

    @Test
    public void test05331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05331");
        java.io.IOException iOException1 = new java.io.IOException();
        java.io.IOException iOException2 = new java.io.IOException();
        iOException1.addSuppressed((java.lang.Throwable) iOException2);
        java.lang.Throwable[] throwableArray4 = iOException2.getSuppressed();
        java.lang.Throwable[] throwableArray5 = iOException2.getSuppressed();
        java.io.IOException iOException7 = new java.io.IOException();
        java.io.IOException iOException8 = new java.io.IOException();
        iOException7.addSuppressed((java.lang.Throwable) iOException8);
        java.io.IOException iOException10 = new java.io.IOException("0", (java.lang.Throwable) iOException7);
        java.io.IOException iOException11 = new java.io.IOException((java.lang.Throwable) iOException10);
        iOException2.addSuppressed((java.lang.Throwable) iOException11);
        java.lang.Throwable[] throwableArray13 = iOException11.getSuppressed();
        java.io.IOException iOException14 = new java.io.IOException("A", (java.lang.Throwable) iOException11);
        java.io.IOException iOException15 = new java.io.IOException((java.lang.Throwable) iOException11);
        java.io.IOException iOException16 = new java.io.IOException((java.lang.Throwable) iOException11);
        java.io.IOException iOException17 = new java.io.IOException((java.lang.Throwable) iOException16);
        java.io.IOException iOException19 = new java.io.IOException("java.io.IOException: java.io.IOException: java.io.IOException: \\u0068\\u0069\\u0021");
        java.io.IOException iOException24 = new java.io.IOException();
        java.io.IOException iOException25 = new java.io.IOException();
        iOException24.addSuppressed((java.lang.Throwable) iOException25);
        java.io.IOException iOException27 = new java.io.IOException();
        java.io.IOException iOException28 = new java.io.IOException();
        iOException27.addSuppressed((java.lang.Throwable) iOException28);
        java.lang.Throwable[] throwableArray30 = iOException28.getSuppressed();
        java.io.IOException iOException31 = new java.io.IOException((java.lang.Throwable) iOException28);
        java.io.IOException iOException33 = new java.io.IOException("");
        java.io.IOException iOException34 = new java.io.IOException((java.lang.Throwable) iOException33);
        iOException28.addSuppressed((java.lang.Throwable) iOException34);
        iOException25.addSuppressed((java.lang.Throwable) iOException34);
        java.io.IOException iOException37 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException34);
        java.io.IOException iOException38 = new java.io.IOException("64", (java.lang.Throwable) iOException37);
        java.io.IOException iOException39 = new java.io.IOException("java.io.IOException: java.io.IOException: ", (java.lang.Throwable) iOException38);
        java.io.IOException iOException40 = new java.io.IOException("\\u0036\\u0034", (java.lang.Throwable) iOException38);
        java.io.IOException iOException41 = new java.io.IOException((java.lang.Throwable) iOException38);
        java.lang.Throwable[] throwableArray42 = iOException38.getSuppressed();
        iOException19.addSuppressed((java.lang.Throwable) iOException38);
        iOException17.addSuppressed((java.lang.Throwable) iOException19);
        java.io.IOException iOException45 = new java.io.IOException((java.lang.Throwable) iOException19);
        java.lang.String str46 = iOException45.toString();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: \\u0068\\u0069\\u0021" + "'", str46, "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: \\u0068\\u0069\\u0021");
    }

    @Test
    public void test05332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05332");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 10, (int) '4');
        java.io.Writer writer5 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int6 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (int) (byte) 10, writer5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
    }

    @Test
    public void test05333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05333");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (short) 100, (int) (short) 1);
        java.io.Writer writer5 = null;
        int int6 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: 0", (int) (short) 10, writer5);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper9 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer11 = null;
        boolean boolean12 = unicodeEscaper9.translate((int) (short) 10, writer11);
        java.lang.String str14 = unicodeEscaper9.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper17 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer19 = null;
        boolean boolean20 = unicodeEscaper17.translate((int) '4', writer19);
        java.io.Writer writer22 = null;
        boolean boolean23 = unicodeEscaper17.translate((int) (byte) -1, writer22);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper26 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper28 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper30 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str32 = unicodeEscaper30.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray33 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper26, unicodeEscaper28, unicodeEscaper30 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator34 = unicodeEscaper17.with(charSequenceTranslatorArray33);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator35 = unicodeEscaper9.with(charSequenceTranslatorArray33);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper38 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.lang.String str40 = unicodeEscaper38.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray41 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper38 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator42 = unicodeEscaper9.with(charSequenceTranslatorArray41);
        java.io.Writer writer44 = null;
        boolean boolean45 = unicodeEscaper9.translate((int) (byte) 1, writer44);
        java.lang.String str47 = unicodeEscaper9.translate((java.lang.CharSequence) "1");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper50 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 10, (int) (short) 100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper52 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (short) 100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper55 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 100, (-1));
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper58 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer60 = null;
        boolean boolean61 = unicodeEscaper58.translate((int) (short) 10, writer60);
        java.lang.String str63 = unicodeEscaper58.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper66 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer68 = null;
        boolean boolean69 = unicodeEscaper66.translate((int) '4', writer68);
        java.io.Writer writer71 = null;
        boolean boolean72 = unicodeEscaper66.translate((int) (byte) -1, writer71);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper75 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper77 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper79 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str81 = unicodeEscaper79.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray82 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper75, unicodeEscaper77, unicodeEscaper79 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator83 = unicodeEscaper66.with(charSequenceTranslatorArray82);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator84 = unicodeEscaper58.with(charSequenceTranslatorArray82);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator85 = unicodeEscaper55.with(charSequenceTranslatorArray82);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator86 = unicodeEscaper52.with(charSequenceTranslatorArray82);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator87 = unicodeEscaper50.with(charSequenceTranslatorArray82);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator88 = unicodeEscaper9.with(charSequenceTranslatorArray82);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator89 = unicodeEscaper2.with(charSequenceTranslatorArray82);
        java.io.Writer writer91 = null;
        boolean boolean92 = unicodeEscaper2.translate((int) 'a', writer91);
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(unicodeEscaper9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "0" + "'", str14, "0");
        org.junit.Assert.assertNotNull(unicodeEscaper17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper26);
        org.junit.Assert.assertNotNull(unicodeEscaper28);
        org.junit.Assert.assertNotNull(unicodeEscaper30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str32, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray33);
        org.junit.Assert.assertNotNull(charSequenceTranslator34);
        org.junit.Assert.assertNotNull(charSequenceTranslator35);
        org.junit.Assert.assertNotNull(unicodeEscaper38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str40, "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray41);
        org.junit.Assert.assertNotNull(charSequenceTranslator42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "1" + "'", str47, "1");
        org.junit.Assert.assertNotNull(unicodeEscaper50);
        org.junit.Assert.assertNotNull(unicodeEscaper52);
        org.junit.Assert.assertNotNull(unicodeEscaper55);
        org.junit.Assert.assertNotNull(unicodeEscaper58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "0" + "'", str63, "0");
        org.junit.Assert.assertNotNull(unicodeEscaper66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper75);
        org.junit.Assert.assertNotNull(unicodeEscaper77);
        org.junit.Assert.assertNotNull(unicodeEscaper79);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str81, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray82);
        org.junit.Assert.assertNotNull(charSequenceTranslator83);
        org.junit.Assert.assertNotNull(charSequenceTranslator84);
        org.junit.Assert.assertNotNull(charSequenceTranslator85);
        org.junit.Assert.assertNotNull(charSequenceTranslator86);
        org.junit.Assert.assertNotNull(charSequenceTranslator87);
        org.junit.Assert.assertNotNull(charSequenceTranslator88);
        org.junit.Assert.assertNotNull(charSequenceTranslator89);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test05334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05334");
        java.io.IOException iOException0 = new java.io.IOException();
        java.io.IOException iOException1 = new java.io.IOException((java.lang.Throwable) iOException0);
        java.io.IOException iOException2 = new java.io.IOException((java.lang.Throwable) iOException0);
        java.lang.String str3 = iOException2.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "java.io.IOException: java.io.IOException" + "'", str3, "java.io.IOException: java.io.IOException");
    }

    @Test
    public void test05335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05335");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) '4', writer4);
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper2.translate((int) (byte) -1, writer7);
        java.lang.String str10 = unicodeEscaper2.translate((java.lang.CharSequence) "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020");
        java.io.Writer writer13 = null;
        int int14 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: 1", 0, writer13);
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020" + "'", str10, "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test05336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05336");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((-1), (int) (short) 100);
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) (short) 1, writer4);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper8 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(10, 10);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper11 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) -1, (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper13 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper15 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer17 = null;
        boolean boolean18 = unicodeEscaper15.translate((int) ' ', writer17);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper21 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str23 = unicodeEscaper21.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray24 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator25 = unicodeEscaper21.with(charSequenceTranslatorArray24);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator26 = unicodeEscaper15.with(charSequenceTranslatorArray24);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator27 = unicodeEscaper13.with(charSequenceTranslatorArray24);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper30 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer32 = null;
        boolean boolean33 = unicodeEscaper30.translate((int) '4', writer32);
        java.io.Writer writer35 = null;
        boolean boolean36 = unicodeEscaper30.translate((int) (byte) -1, writer35);
        java.io.Writer writer38 = null;
        boolean boolean39 = unicodeEscaper30.translate((int) (byte) -1, writer38);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray40 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator41 = unicodeEscaper30.with(charSequenceTranslatorArray40);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator42 = charSequenceTranslator27.with(charSequenceTranslatorArray40);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator43 = unicodeEscaper11.with(charSequenceTranslatorArray40);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator44 = unicodeEscaper8.with(charSequenceTranslatorArray40);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator45 = unicodeEscaper2.with(charSequenceTranslatorArray40);
        java.io.Writer writer48 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int49 = charSequenceTranslator45.translate((java.lang.CharSequence) "\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0035\\u005C\\u0075\\u0030\\u0030\\u0034\\u0033\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0030", 1, writer48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper8);
        org.junit.Assert.assertNotNull(unicodeEscaper11);
        org.junit.Assert.assertNotNull(unicodeEscaper13);
        org.junit.Assert.assertNotNull(unicodeEscaper15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "0" + "'", str23, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray24);
        org.junit.Assert.assertNotNull(charSequenceTranslator25);
        org.junit.Assert.assertNotNull(charSequenceTranslator26);
        org.junit.Assert.assertNotNull(charSequenceTranslator27);
        org.junit.Assert.assertNotNull(unicodeEscaper30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray40);
        org.junit.Assert.assertNotNull(charSequenceTranslator41);
        org.junit.Assert.assertNotNull(charSequenceTranslator42);
        org.junit.Assert.assertNotNull(charSequenceTranslator43);
        org.junit.Assert.assertNotNull(charSequenceTranslator44);
        org.junit.Assert.assertNotNull(charSequenceTranslator45);
    }

    @Test
    public void test05337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05337");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) '4', 10);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper4 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above(1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper7 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer9 = null;
        boolean boolean10 = unicodeEscaper7.translate((int) '4', writer9);
        java.io.Writer writer12 = null;
        boolean boolean13 = unicodeEscaper7.translate((int) (byte) -1, writer12);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper16 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper18 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper20 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str22 = unicodeEscaper20.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray23 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper16, unicodeEscaper18, unicodeEscaper20 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator24 = unicodeEscaper7.with(charSequenceTranslatorArray23);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper27 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer29 = null;
        boolean boolean30 = unicodeEscaper27.translate((int) (short) 10, writer29);
        java.lang.String str32 = unicodeEscaper27.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper35 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer37 = null;
        boolean boolean38 = unicodeEscaper35.translate((int) '4', writer37);
        java.io.Writer writer40 = null;
        boolean boolean41 = unicodeEscaper35.translate((int) (byte) -1, writer40);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper44 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper46 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper48 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str50 = unicodeEscaper48.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray51 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper44, unicodeEscaper46, unicodeEscaper48 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator52 = unicodeEscaper35.with(charSequenceTranslatorArray51);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator53 = unicodeEscaper27.with(charSequenceTranslatorArray51);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator54 = unicodeEscaper7.with(charSequenceTranslatorArray51);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper57 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (byte) 100, (int) (byte) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper60 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str62 = unicodeEscaper60.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray63 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator64 = unicodeEscaper60.with(charSequenceTranslatorArray63);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator65 = unicodeEscaper57.with(charSequenceTranslatorArray63);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator66 = unicodeEscaper7.with(charSequenceTranslatorArray63);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator67 = unicodeEscaper4.with(charSequenceTranslatorArray63);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator68 = unicodeEscaper2.with(charSequenceTranslatorArray63);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper71 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (byte) 0, 100);
        java.io.Writer writer73 = null;
        boolean boolean74 = unicodeEscaper71.translate((int) (byte) 0, writer73);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper77 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (short) 100, (int) (short) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper80 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between(10, (int) (byte) 10);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper82 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer84 = null;
        boolean boolean85 = unicodeEscaper82.translate((int) ' ', writer84);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper88 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str90 = unicodeEscaper88.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray91 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator92 = unicodeEscaper88.with(charSequenceTranslatorArray91);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator93 = unicodeEscaper82.with(charSequenceTranslatorArray91);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator94 = unicodeEscaper80.with(charSequenceTranslatorArray91);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator95 = unicodeEscaper77.with(charSequenceTranslatorArray91);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator96 = unicodeEscaper71.with(charSequenceTranslatorArray91);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator97 = charSequenceTranslator68.with(charSequenceTranslatorArray91);
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper4);
        org.junit.Assert.assertNotNull(unicodeEscaper7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper16);
        org.junit.Assert.assertNotNull(unicodeEscaper18);
        org.junit.Assert.assertNotNull(unicodeEscaper20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str22, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray23);
        org.junit.Assert.assertNotNull(charSequenceTranslator24);
        org.junit.Assert.assertNotNull(unicodeEscaper27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "0" + "'", str32, "0");
        org.junit.Assert.assertNotNull(unicodeEscaper35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper44);
        org.junit.Assert.assertNotNull(unicodeEscaper46);
        org.junit.Assert.assertNotNull(unicodeEscaper48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str50, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray51);
        org.junit.Assert.assertNotNull(charSequenceTranslator52);
        org.junit.Assert.assertNotNull(charSequenceTranslator53);
        org.junit.Assert.assertNotNull(charSequenceTranslator54);
        org.junit.Assert.assertNotNull(unicodeEscaper57);
        org.junit.Assert.assertNotNull(unicodeEscaper60);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "0" + "'", str62, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray63);
        org.junit.Assert.assertNotNull(charSequenceTranslator64);
        org.junit.Assert.assertNotNull(charSequenceTranslator65);
        org.junit.Assert.assertNotNull(charSequenceTranslator66);
        org.junit.Assert.assertNotNull(charSequenceTranslator67);
        org.junit.Assert.assertNotNull(charSequenceTranslator68);
        org.junit.Assert.assertNotNull(unicodeEscaper71);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper77);
        org.junit.Assert.assertNotNull(unicodeEscaper80);
        org.junit.Assert.assertNotNull(unicodeEscaper82);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper88);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "0" + "'", str90, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray91);
        org.junit.Assert.assertNotNull(charSequenceTranslator92);
        org.junit.Assert.assertNotNull(charSequenceTranslator93);
        org.junit.Assert.assertNotNull(charSequenceTranslator94);
        org.junit.Assert.assertNotNull(charSequenceTranslator95);
        org.junit.Assert.assertNotNull(charSequenceTranslator96);
        org.junit.Assert.assertNotNull(charSequenceTranslator97);
    }

    @Test
    public void test05338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05338");
        java.io.IOException iOException3 = new java.io.IOException("0");
        java.lang.Throwable[] throwableArray4 = iOException3.getSuppressed();
        java.io.IOException iOException5 = new java.io.IOException("hi!", (java.lang.Throwable) iOException3);
        java.io.IOException iOException7 = new java.io.IOException("");
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.io.IOException iOException10 = new java.io.IOException("");
        iOException8.addSuppressed((java.lang.Throwable) iOException10);
        java.io.IOException iOException13 = new java.io.IOException("");
        java.io.IOException iOException14 = new java.io.IOException((java.lang.Throwable) iOException13);
        java.io.IOException iOException16 = new java.io.IOException("");
        iOException14.addSuppressed((java.lang.Throwable) iOException16);
        iOException8.addSuppressed((java.lang.Throwable) iOException14);
        iOException5.addSuppressed((java.lang.Throwable) iOException8);
        java.io.IOException iOException20 = new java.io.IOException("hi!", (java.lang.Throwable) iOException8);
        java.lang.Throwable throwable23 = null;
        java.io.IOException iOException24 = new java.io.IOException("java.io.IOException: \\u0068\\u0069\\u0021", throwable23);
        java.io.IOException iOException25 = new java.io.IOException("\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException24);
        iOException20.addSuppressed((java.lang.Throwable) iOException25);
        java.io.IOException iOException27 = new java.io.IOException((java.lang.Throwable) iOException20);
        java.io.IOException iOException29 = new java.io.IOException("java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        iOException27.addSuppressed((java.lang.Throwable) iOException29);
        java.io.IOException iOException32 = new java.io.IOException("\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        java.io.IOException iOException33 = new java.io.IOException((java.lang.Throwable) iOException32);
        iOException27.addSuppressed((java.lang.Throwable) iOException33);
        java.lang.Throwable[] throwableArray35 = iOException33.getSuppressed();
        java.lang.Class<?> wildcardClass36 = iOException33.getClass();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test05339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05339");
        java.io.IOException iOException1 = new java.io.IOException("0");
        java.io.IOException iOException2 = new java.io.IOException();
        java.io.IOException iOException3 = new java.io.IOException();
        iOException2.addSuppressed((java.lang.Throwable) iOException3);
        java.io.IOException iOException5 = new java.io.IOException();
        java.io.IOException iOException6 = new java.io.IOException();
        iOException5.addSuppressed((java.lang.Throwable) iOException6);
        java.lang.Throwable[] throwableArray8 = iOException6.getSuppressed();
        java.io.IOException iOException9 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException11 = new java.io.IOException("");
        java.io.IOException iOException12 = new java.io.IOException((java.lang.Throwable) iOException11);
        iOException6.addSuppressed((java.lang.Throwable) iOException12);
        iOException3.addSuppressed((java.lang.Throwable) iOException12);
        iOException1.addSuppressed((java.lang.Throwable) iOException3);
        java.io.IOException iOException16 = new java.io.IOException((java.lang.Throwable) iOException3);
        java.io.IOException iOException20 = new java.io.IOException("");
        java.io.IOException iOException21 = new java.io.IOException((java.lang.Throwable) iOException20);
        java.io.IOException iOException23 = new java.io.IOException("");
        iOException21.addSuppressed((java.lang.Throwable) iOException23);
        java.io.IOException iOException25 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException23);
        java.io.IOException iOException27 = new java.io.IOException("");
        java.io.IOException iOException28 = new java.io.IOException((java.lang.Throwable) iOException27);
        java.io.IOException iOException29 = new java.io.IOException((java.lang.Throwable) iOException27);
        iOException25.addSuppressed((java.lang.Throwable) iOException27);
        java.io.IOException iOException31 = new java.io.IOException("\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034", (java.lang.Throwable) iOException25);
        java.lang.Throwable[] throwableArray32 = iOException31.getSuppressed();
        iOException16.addSuppressed((java.lang.Throwable) iOException31);
        java.io.IOException iOException34 = new java.io.IOException((java.lang.Throwable) iOException31);
        java.io.IOException iOException35 = new java.io.IOException((java.lang.Throwable) iOException34);
        java.io.IOException iOException36 = new java.io.IOException((java.lang.Throwable) iOException35);
        java.io.IOException iOException37 = new java.io.IOException((java.lang.Throwable) iOException35);
        java.lang.String str38 = iOException35.toString();
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "java.io.IOException: java.io.IOException: java.io.IOException: \\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034" + "'", str38, "java.io.IOException: java.io.IOException: java.io.IOException: \\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034");
    }

    @Test
    public void test05340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05340");
        java.io.IOException iOException2 = new java.io.IOException("");
        java.io.IOException iOException3 = new java.io.IOException("A", (java.lang.Throwable) iOException2);
        java.io.IOException iOException4 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.lang.Throwable[] throwableArray5 = iOException2.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray5);
    }

    @Test
    public void test05341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05341");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between(0, (int) (short) 1);
        java.io.Writer writer5 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int6 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006A\\\\u00750061\\u0076\\\\u00750061\\\\u0075002E\\u0069\\u006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\u0078\\\\u00750063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\\\u0075003A\\\\u00750020\\u006A\\\\u00750061\\u0076\\\\u00750061\\\\u0075002E\\u0069\\u006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\u0078\\\\u00750063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\\\u0075003A\\\\u00750020\\u006A\\\\u00750061\\u0076\\\\u00750061\\\\u0075002E\\u0069\\u006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\u0078\\\\u00750063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\\\u0075003A\\\\u00750020", (int) (short) -1, writer5);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
    }

    @Test
    public void test05342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05342");
        java.io.IOException iOException2 = new java.io.IOException("\\u0068\\u0069\\u0021");
        java.io.IOException iOException3 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException7 = new java.io.IOException("");
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.io.IOException iOException10 = new java.io.IOException("");
        iOException8.addSuppressed((java.lang.Throwable) iOException10);
        java.io.IOException iOException12 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException10);
        java.io.IOException iOException13 = new java.io.IOException("java.io.IOException: \\u0068\\u0069\\u0021", (java.lang.Throwable) iOException10);
        java.io.IOException iOException14 = new java.io.IOException((java.lang.Throwable) iOException10);
        java.io.IOException iOException15 = new java.io.IOException((java.lang.Throwable) iOException14);
        java.io.IOException iOException16 = new java.io.IOException((java.lang.Throwable) iOException15);
        java.io.IOException iOException17 = new java.io.IOException((java.lang.Throwable) iOException15);
        iOException2.addSuppressed((java.lang.Throwable) iOException17);
        java.io.IOException iOException19 = new java.io.IOException("", (java.lang.Throwable) iOException2);
        java.lang.String str20 = iOException19.toString();
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "java.io.IOException: " + "'", str20, "java.io.IOException: ");
    }

    @Test
    public void test05343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05343");
        java.io.IOException iOException1 = new java.io.IOException("");
        java.io.IOException iOException2 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.io.IOException iOException4 = new java.io.IOException("");
        iOException2.addSuppressed((java.lang.Throwable) iOException4);
        java.io.IOException iOException7 = new java.io.IOException("");
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.io.IOException iOException10 = new java.io.IOException("");
        iOException8.addSuppressed((java.lang.Throwable) iOException10);
        iOException2.addSuppressed((java.lang.Throwable) iOException8);
        java.io.IOException iOException13 = new java.io.IOException((java.lang.Throwable) iOException8);
    }

    @Test
    public void test05344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05344");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) ' ');
        java.io.Writer writer5 = null;
        int int6 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020", 1, writer5);
        java.io.Writer writer9 = null;
        int int10 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: 0", (int) (short) 10, writer9);
        java.io.Writer writer12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = unicodeEscaper2.translate((int) (byte) 0, writer12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test05345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05345");
        java.io.IOException iOException3 = new java.io.IOException("java.io.IOException: java.io.IOException");
        java.io.IOException iOException6 = new java.io.IOException("0");
        java.lang.Throwable[] throwableArray7 = iOException6.getSuppressed();
        java.io.IOException iOException8 = new java.io.IOException("hi!", (java.lang.Throwable) iOException6);
        iOException3.addSuppressed((java.lang.Throwable) iOException6);
        java.io.IOException iOException10 = new java.io.IOException("java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException3);
        java.lang.Throwable[] throwableArray11 = iOException10.getSuppressed();
        java.io.IOException iOException12 = new java.io.IOException("\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0033\\u0038\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0033\\u0039\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0032\\u005C\\u0075\\u0030\\u0030\\u0033\\u0031", (java.lang.Throwable) iOException10);
        java.lang.Class<?> wildcardClass13 = iOException12.getClass();
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test05346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05346");
        java.io.IOException iOException5 = new java.io.IOException();
        java.io.IOException iOException6 = new java.io.IOException();
        iOException5.addSuppressed((java.lang.Throwable) iOException6);
        java.io.IOException iOException8 = new java.io.IOException("0", (java.lang.Throwable) iOException5);
        java.io.IOException iOException9 = new java.io.IOException((java.lang.Throwable) iOException8);
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException9);
        java.io.IOException iOException11 = new java.io.IOException((java.lang.Throwable) iOException10);
        java.lang.Throwable[] throwableArray12 = iOException11.getSuppressed();
        java.io.IOException iOException13 = new java.io.IOException("java.io.IOException: java.io.IOException", (java.lang.Throwable) iOException11);
        java.io.IOException iOException14 = new java.io.IOException("\\u005Cu\\u0030\\u0030\\u0036\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0032\\u0031", (java.lang.Throwable) iOException11);
        java.io.IOException iOException15 = new java.io.IOException((java.lang.Throwable) iOException14);
        java.io.IOException iOException17 = new java.io.IOException();
        java.io.IOException iOException18 = new java.io.IOException();
        iOException17.addSuppressed((java.lang.Throwable) iOException18);
        java.io.IOException iOException20 = new java.io.IOException();
        java.io.IOException iOException21 = new java.io.IOException();
        iOException20.addSuppressed((java.lang.Throwable) iOException21);
        java.lang.Throwable[] throwableArray23 = iOException21.getSuppressed();
        java.io.IOException iOException24 = new java.io.IOException((java.lang.Throwable) iOException21);
        java.io.IOException iOException26 = new java.io.IOException("");
        java.io.IOException iOException27 = new java.io.IOException((java.lang.Throwable) iOException26);
        iOException21.addSuppressed((java.lang.Throwable) iOException27);
        iOException18.addSuppressed((java.lang.Throwable) iOException27);
        java.io.IOException iOException30 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException27);
        java.io.IOException iOException33 = new java.io.IOException("");
        java.io.IOException iOException34 = new java.io.IOException((java.lang.Throwable) iOException33);
        java.io.IOException iOException36 = new java.io.IOException("");
        iOException34.addSuppressed((java.lang.Throwable) iOException36);
        java.io.IOException iOException38 = new java.io.IOException("java.io.IOException: 0", (java.lang.Throwable) iOException36);
        iOException27.addSuppressed((java.lang.Throwable) iOException36);
        java.io.IOException iOException40 = new java.io.IOException((java.lang.Throwable) iOException27);
        iOException15.addSuppressed((java.lang.Throwable) iOException27);
        java.io.IOException iOException42 = new java.io.IOException((java.lang.Throwable) iOException15);
        java.io.IOException iOException45 = new java.io.IOException("");
        java.io.IOException iOException46 = new java.io.IOException((java.lang.Throwable) iOException45);
        java.io.IOException iOException48 = new java.io.IOException("");
        iOException46.addSuppressed((java.lang.Throwable) iOException48);
        java.lang.Throwable[] throwableArray50 = iOException48.getSuppressed();
        java.io.IOException iOException51 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException48);
        java.lang.Throwable[] throwableArray52 = iOException48.getSuppressed();
        iOException15.addSuppressed((java.lang.Throwable) iOException48);
        java.io.IOException iOException56 = new java.io.IOException("0");
        java.io.IOException iOException57 = new java.io.IOException();
        java.io.IOException iOException58 = new java.io.IOException();
        iOException57.addSuppressed((java.lang.Throwable) iOException58);
        java.io.IOException iOException60 = new java.io.IOException();
        java.io.IOException iOException61 = new java.io.IOException();
        iOException60.addSuppressed((java.lang.Throwable) iOException61);
        java.lang.Throwable[] throwableArray63 = iOException61.getSuppressed();
        java.io.IOException iOException64 = new java.io.IOException((java.lang.Throwable) iOException61);
        java.io.IOException iOException66 = new java.io.IOException("");
        java.io.IOException iOException67 = new java.io.IOException((java.lang.Throwable) iOException66);
        iOException61.addSuppressed((java.lang.Throwable) iOException67);
        iOException58.addSuppressed((java.lang.Throwable) iOException67);
        iOException56.addSuppressed((java.lang.Throwable) iOException67);
        java.io.IOException iOException71 = new java.io.IOException("61", (java.lang.Throwable) iOException67);
        java.io.IOException iOException72 = new java.io.IOException((java.lang.Throwable) iOException67);
        iOException48.addSuppressed((java.lang.Throwable) iOException72);
        java.io.IOException iOException74 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030", (java.lang.Throwable) iOException48);
        java.io.IOException iOException76 = new java.io.IOException("A");
        java.io.IOException iOException77 = new java.io.IOException((java.lang.Throwable) iOException76);
        iOException48.addSuppressed((java.lang.Throwable) iOException76);
        java.io.IOException iOException79 = new java.io.IOException("java\\u005Cu\\u0030\\u0030\\u0032\\u0045io\\u005Cu\\u0030\\u0030\\u0032\\u0045\\u005Cu\\u0030\\u0030\\u0034\\u0039\\u005Cu\\u0030\\u0030\\u0034\\u0046\\u005Cu\\u0030\\u0030\\u0034\\u0035xception\\u005Cu\\u0030\\u0030\\u0033\\u0041\\u005Cu\\u0030\\u0030\\u0032\\u0030java\\u005Cu\\u0030\\u0030\\u0032\\u0045io\\u005Cu\\u0030\\u0030\\u0032\\u0045\\u005Cu\\u0030\\u0030\\u0034\\u0039\\u005Cu\\u0030\\u0030\\u0034\\u0046\\u005Cu\\u0030\\u0030\\u0034\\u0035xception", (java.lang.Throwable) iOException48);
        java.io.IOException iOException80 = new java.io.IOException((java.lang.Throwable) iOException48);
        java.lang.Class<?> wildcardClass81 = iOException48.getClass();
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test05347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05347");
        java.io.IOException iOException2 = new java.io.IOException();
        java.io.IOException iOException3 = new java.io.IOException();
        iOException2.addSuppressed((java.lang.Throwable) iOException3);
        java.io.IOException iOException5 = new java.io.IOException("0", (java.lang.Throwable) iOException2);
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.lang.Throwable[] throwableArray9 = iOException8.getSuppressed();
        java.io.IOException iOException10 = new java.io.IOException("\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException8);
        java.io.IOException iOException11 = new java.io.IOException((java.lang.Throwable) iOException8);
        java.io.IOException iOException12 = new java.io.IOException((java.lang.Throwable) iOException11);
        java.io.IOException iOException14 = new java.io.IOException();
        java.io.IOException iOException15 = new java.io.IOException();
        iOException14.addSuppressed((java.lang.Throwable) iOException15);
        java.io.IOException iOException17 = new java.io.IOException("0", (java.lang.Throwable) iOException14);
        java.io.IOException iOException18 = new java.io.IOException((java.lang.Throwable) iOException17);
        java.io.IOException iOException19 = new java.io.IOException((java.lang.Throwable) iOException18);
        java.io.IOException iOException21 = new java.io.IOException();
        java.io.IOException iOException22 = new java.io.IOException();
        iOException21.addSuppressed((java.lang.Throwable) iOException22);
        java.lang.Throwable[] throwableArray24 = iOException22.getSuppressed();
        java.lang.Throwable[] throwableArray25 = iOException22.getSuppressed();
        java.io.IOException iOException26 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException22);
        java.io.IOException iOException27 = new java.io.IOException();
        java.io.IOException iOException28 = new java.io.IOException();
        iOException27.addSuppressed((java.lang.Throwable) iOException28);
        java.io.IOException iOException30 = new java.io.IOException((java.lang.Throwable) iOException27);
        java.lang.Throwable[] throwableArray31 = iOException30.getSuppressed();
        iOException26.addSuppressed((java.lang.Throwable) iOException30);
        iOException18.addSuppressed((java.lang.Throwable) iOException30);
        java.lang.Throwable[] throwableArray34 = iOException30.getSuppressed();
        iOException12.addSuppressed((java.lang.Throwable) iOException30);
        java.lang.String str36 = iOException12.toString();
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: 0" + "'", str36, "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: 0");
    }

    @Test
    public void test05348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05348");
        java.io.IOException iOException2 = new java.io.IOException("");
        java.io.IOException iOException3 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException4 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException6 = new java.io.IOException("\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: 0", (java.lang.Throwable) iOException2);
        java.lang.String str7 = iOException2.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "java.io.IOException: " + "'", str7, "java.io.IOException: ");
    }

    @Test
    public void test05349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05349");
        java.io.IOException iOException2 = new java.io.IOException();
        java.io.IOException iOException3 = new java.io.IOException();
        iOException2.addSuppressed((java.lang.Throwable) iOException3);
        java.io.IOException iOException5 = new java.io.IOException("0", (java.lang.Throwable) iOException2);
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.lang.Throwable[] throwableArray9 = iOException8.getSuppressed();
        java.io.IOException iOException10 = new java.io.IOException("\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException8);
        java.lang.Throwable[] throwableArray11 = iOException10.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray11);
    }

    @Test
    public void test05350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05350");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) ' ', (int) (short) -1);
        java.io.Writer writer5 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int6 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (int) (byte) -1, writer5);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
    }

    @Test
    public void test05351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05351");
        java.io.IOException iOException2 = new java.io.IOException("java.io.IOException: java.io.IOException");
        java.io.IOException iOException5 = new java.io.IOException("0");
        java.lang.Throwable[] throwableArray6 = iOException5.getSuppressed();
        java.io.IOException iOException7 = new java.io.IOException("hi!", (java.lang.Throwable) iOException5);
        iOException2.addSuppressed((java.lang.Throwable) iOException5);
        java.lang.Throwable[] throwableArray9 = iOException5.getSuppressed();
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.io.IOException iOException11 = new java.io.IOException("\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750035\\\\u00750043\\\\u00750075\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750033\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750033\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750035\\\\u00750043\\\\u00750075\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750033\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750034", (java.lang.Throwable) iOException5);
        java.io.IOException iOException13 = new java.io.IOException();
        java.io.IOException iOException14 = new java.io.IOException();
        iOException13.addSuppressed((java.lang.Throwable) iOException14);
        java.io.IOException iOException16 = new java.io.IOException("0", (java.lang.Throwable) iOException13);
        java.io.IOException iOException17 = new java.io.IOException((java.lang.Throwable) iOException16);
        java.io.IOException iOException18 = new java.io.IOException((java.lang.Throwable) iOException16);
        iOException5.addSuppressed((java.lang.Throwable) iOException16);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray9);
    }

    @Test
    public void test05352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05352");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) '4', writer4);
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper2.translate((int) (byte) -1, writer7);
        java.io.Writer writer10 = null;
        boolean boolean11 = unicodeEscaper2.translate((int) '4', writer10);
        java.io.Writer writer13 = null;
        boolean boolean14 = unicodeEscaper2.translate(0, writer13);
        java.io.Writer writer17 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int18 = unicodeEscaper2.translate((java.lang.CharSequence) "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045xception", (int) (byte) -1, writer17);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test05353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05353");
        java.io.IOException iOException3 = new java.io.IOException();
        java.io.IOException iOException4 = new java.io.IOException();
        iOException3.addSuppressed((java.lang.Throwable) iOException4);
        java.io.IOException iOException6 = new java.io.IOException("0", (java.lang.Throwable) iOException3);
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.io.IOException iOException9 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.io.IOException iOException10 = new java.io.IOException("java.io.IOException: \\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\u0063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E: \\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\u0063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E", (java.lang.Throwable) iOException9);
        java.io.IOException iOException11 = new java.io.IOException("j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020\\u0030", (java.lang.Throwable) iOException10);
    }

    @Test
    public void test05354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05354");
        java.io.IOException iOException3 = new java.io.IOException();
        java.io.IOException iOException4 = new java.io.IOException();
        iOException3.addSuppressed((java.lang.Throwable) iOException4);
        java.io.IOException iOException6 = new java.io.IOException("0", (java.lang.Throwable) iOException3);
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.io.IOException iOException9 = new java.io.IOException();
        java.io.IOException iOException10 = new java.io.IOException();
        iOException9.addSuppressed((java.lang.Throwable) iOException10);
        java.io.IOException iOException12 = new java.io.IOException();
        java.io.IOException iOException13 = new java.io.IOException();
        iOException12.addSuppressed((java.lang.Throwable) iOException13);
        java.lang.Throwable[] throwableArray15 = iOException13.getSuppressed();
        java.io.IOException iOException16 = new java.io.IOException((java.lang.Throwable) iOException13);
        java.io.IOException iOException18 = new java.io.IOException("");
        java.io.IOException iOException19 = new java.io.IOException((java.lang.Throwable) iOException18);
        iOException13.addSuppressed((java.lang.Throwable) iOException19);
        iOException10.addSuppressed((java.lang.Throwable) iOException19);
        iOException8.addSuppressed((java.lang.Throwable) iOException19);
        java.io.IOException iOException23 = new java.io.IOException("java.io.IOException: hi!", (java.lang.Throwable) iOException19);
        java.io.IOException iOException24 = new java.io.IOException("", (java.lang.Throwable) iOException19);
        org.junit.Assert.assertNotNull(throwableArray15);
    }

    @Test
    public void test05355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05355");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (short) 0, 0);
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) (byte) 100, writer4);
        java.lang.String str7 = unicodeEscaper2.translate((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper10 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between(100, (int) (short) 100);
        java.io.Writer writer12 = null;
        boolean boolean13 = unicodeEscaper10.translate((int) '#', writer12);
        java.io.Writer writer16 = null;
        int int17 = unicodeEscaper10.translate((java.lang.CharSequence) "\\\\u0075006A\\\\u00750061\\\\u00750076\\\\u00750061\\\\u0075002E\\\\u00750069\\\\u0075006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E\\\\u0075003A\\\\u00750020", (int) (byte) 10, writer16);
        java.lang.String str19 = unicodeEscaper10.translate((java.lang.CharSequence) "java.io.IOException: ");
        java.io.Writer writer22 = null;
        int int23 = unicodeEscaper10.translate((java.lang.CharSequence) "java.io.IOException:\\u0020java.io.IOException:\\u0020java.io.IOException:\\u0020java.io.IOException:\\u0020java.io.IOException:\\u00200", (int) (byte) 10, writer22);
        java.io.Writer writer25 = null;
        boolean boolean26 = unicodeEscaper10.translate((int) (short) -1, writer25);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper29 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(100, 100);
        java.lang.String str31 = unicodeEscaper29.translate((java.lang.CharSequence) "\\\\u0075005C\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper34 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str36 = unicodeEscaper34.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray37 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator38 = unicodeEscaper34.with(charSequenceTranslatorArray37);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator39 = unicodeEscaper29.with(charSequenceTranslatorArray37);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator40 = unicodeEscaper10.with(charSequenceTranslatorArray37);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator41 = unicodeEscaper2.with(charSequenceTranslatorArray37);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper44 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) ' ', (int) '#');
        java.lang.String str46 = unicodeEscaper44.translate((java.lang.CharSequence) "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper48 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above(10);
        java.lang.String str50 = unicodeEscaper48.translate((java.lang.CharSequence) "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper53 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) ' ', (int) '4');
        java.io.Writer writer55 = null;
        boolean boolean56 = unicodeEscaper53.translate(0, writer55);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper59 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between(10, (int) (byte) 10);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper61 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer63 = null;
        boolean boolean64 = unicodeEscaper61.translate((int) ' ', writer63);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper67 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str69 = unicodeEscaper67.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray70 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator71 = unicodeEscaper67.with(charSequenceTranslatorArray70);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator72 = unicodeEscaper61.with(charSequenceTranslatorArray70);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator73 = unicodeEscaper59.with(charSequenceTranslatorArray70);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator74 = unicodeEscaper53.with(charSequenceTranslatorArray70);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper77 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (byte) 1, (int) ' ');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper80 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper82 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer84 = null;
        boolean boolean85 = unicodeEscaper82.translate((int) ' ', writer84);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper88 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str90 = unicodeEscaper88.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray91 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator92 = unicodeEscaper88.with(charSequenceTranslatorArray91);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator93 = unicodeEscaper82.with(charSequenceTranslatorArray91);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator94 = unicodeEscaper80.with(charSequenceTranslatorArray91);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator95 = unicodeEscaper77.with(charSequenceTranslatorArray91);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator96 = unicodeEscaper53.with(charSequenceTranslatorArray91);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator97 = unicodeEscaper48.with(charSequenceTranslatorArray91);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator98 = unicodeEscaper44.with(charSequenceTranslatorArray91);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator99 = charSequenceTranslator41.with(charSequenceTranslatorArray91);
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(unicodeEscaper10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "java.io.IOException: " + "'", str19, "java.io.IOException: ");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0030\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0030\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0033\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0030" + "'", str31, "\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0030\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0030\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0033\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0030");
        org.junit.Assert.assertNotNull(unicodeEscaper34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "0" + "'", str36, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray37);
        org.junit.Assert.assertNotNull(charSequenceTranslator38);
        org.junit.Assert.assertNotNull(charSequenceTranslator39);
        org.junit.Assert.assertNotNull(charSequenceTranslator40);
        org.junit.Assert.assertNotNull(charSequenceTranslator41);
        org.junit.Assert.assertNotNull(unicodeEscaper44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption" + "'", str46, "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption");
        org.junit.Assert.assertNotNull(unicodeEscaper48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str50, "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertNotNull(unicodeEscaper53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper59);
        org.junit.Assert.assertNotNull(unicodeEscaper61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper67);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "0" + "'", str69, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray70);
        org.junit.Assert.assertNotNull(charSequenceTranslator71);
        org.junit.Assert.assertNotNull(charSequenceTranslator72);
        org.junit.Assert.assertNotNull(charSequenceTranslator73);
        org.junit.Assert.assertNotNull(charSequenceTranslator74);
        org.junit.Assert.assertNotNull(unicodeEscaper77);
        org.junit.Assert.assertNotNull(unicodeEscaper80);
        org.junit.Assert.assertNotNull(unicodeEscaper82);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper88);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "0" + "'", str90, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray91);
        org.junit.Assert.assertNotNull(charSequenceTranslator92);
        org.junit.Assert.assertNotNull(charSequenceTranslator93);
        org.junit.Assert.assertNotNull(charSequenceTranslator94);
        org.junit.Assert.assertNotNull(charSequenceTranslator95);
        org.junit.Assert.assertNotNull(charSequenceTranslator96);
        org.junit.Assert.assertNotNull(charSequenceTranslator97);
        org.junit.Assert.assertNotNull(charSequenceTranslator98);
        org.junit.Assert.assertNotNull(charSequenceTranslator99);
    }

    @Test
    public void test05356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05356");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: 23");
        java.lang.String str6 = unicodeEscaper2.translate((java.lang.CharSequence) "34");
        java.lang.String str8 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        java.io.Writer writer10 = null;
        boolean boolean11 = unicodeEscaper2.translate((int) '4', writer10);
        java.io.Writer writer13 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: 61", writer13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "java.io.IOException: java.io.IOException: 23" + "'", str4, "java.io.IOException: java.io.IOException: 23");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "34" + "'", str6, "34");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "java.io.IOException: java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str8, "java.io.IOException: java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test05357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05357");
        java.lang.Throwable throwable2 = null;
        java.io.IOException iOException3 = new java.io.IOException("java.io.IOException: \\u0068\\u0069\\u0021", throwable2);
        java.io.IOException iOException4 = new java.io.IOException("\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException3);
        java.io.IOException iOException7 = new java.io.IOException("");
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.io.IOException iOException10 = new java.io.IOException("");
        iOException8.addSuppressed((java.lang.Throwable) iOException10);
        java.io.IOException iOException12 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException10);
        java.io.IOException iOException14 = new java.io.IOException("");
        java.io.IOException iOException15 = new java.io.IOException((java.lang.Throwable) iOException14);
        java.io.IOException iOException16 = new java.io.IOException((java.lang.Throwable) iOException14);
        iOException12.addSuppressed((java.lang.Throwable) iOException14);
        iOException3.addSuppressed((java.lang.Throwable) iOException14);
        java.io.IOException iOException21 = new java.io.IOException();
        java.io.IOException iOException22 = new java.io.IOException();
        iOException21.addSuppressed((java.lang.Throwable) iOException22);
        java.io.IOException iOException24 = new java.io.IOException("0", (java.lang.Throwable) iOException21);
        java.io.IOException iOException27 = new java.io.IOException("");
        java.io.IOException iOException28 = new java.io.IOException((java.lang.Throwable) iOException27);
        java.io.IOException iOException30 = new java.io.IOException("");
        iOException28.addSuppressed((java.lang.Throwable) iOException30);
        java.io.IOException iOException33 = new java.io.IOException("");
        java.io.IOException iOException34 = new java.io.IOException((java.lang.Throwable) iOException33);
        java.io.IOException iOException36 = new java.io.IOException("");
        iOException34.addSuppressed((java.lang.Throwable) iOException36);
        iOException28.addSuppressed((java.lang.Throwable) iOException34);
        java.io.IOException iOException39 = new java.io.IOException("0", (java.lang.Throwable) iOException28);
        iOException21.addSuppressed((java.lang.Throwable) iOException28);
        java.lang.Throwable[] throwableArray41 = iOException28.getSuppressed();
        java.lang.Throwable[] throwableArray42 = iOException28.getSuppressed();
        java.io.IOException iOException43 = new java.io.IOException("j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020\\u005Cu\\u0030\\u0030\\u0035\\u0043u\\u005Cu\\u0030\\u0030\\u0033\\u0030\\u005Cu\\u0030\\u0030\\u0033\\u0030\\u005Cu\\u0030\\u0030\\u0033\\u0036\\u005Cu\\u0030\\u0030\\u0033\\u0038\\u005Cu\\u0030\\u0030\\u0035\\u0043u\\u005Cu\\u0030\\u0030\\u0033\\u0030\\u005Cu\\u0030\\u0030\\u0033\\u0030\\u005Cu\\u0030\\u0030\\u0033\\u0036\\u005Cu\\u0030\\u0030\\u0033\\u0039\\u005Cu\\u0030\\u0030\\u0035\\u0043u\\u005Cu\\u0030\\u0030\\u0033\\u0030\\u005Cu\\u0030\\u0030\\u0033\\u0030\\u005Cu\\u0030\\u0030\\u0033\\u0032\\u005Cu\\u0030\\u0030\\u0033\\u0031", (java.lang.Throwable) iOException28);
        iOException14.addSuppressed((java.lang.Throwable) iOException43);
        java.lang.String str45 = iOException14.toString();
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "java.io.IOException: " + "'", str45, "java.io.IOException: ");
    }

    @Test
    public void test05358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05358");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, 0);
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper7 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 0, 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper10 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between(0, (int) (short) 10);
        java.lang.String str12 = unicodeEscaper10.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: ");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper15 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (byte) 100, (int) (byte) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper18 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str20 = unicodeEscaper18.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray21 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator22 = unicodeEscaper18.with(charSequenceTranslatorArray21);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator23 = unicodeEscaper15.with(charSequenceTranslatorArray21);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper26 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (-1));
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper29 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) -1, (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper31 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper33 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer35 = null;
        boolean boolean36 = unicodeEscaper33.translate((int) ' ', writer35);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper39 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str41 = unicodeEscaper39.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray42 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator43 = unicodeEscaper39.with(charSequenceTranslatorArray42);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator44 = unicodeEscaper33.with(charSequenceTranslatorArray42);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator45 = unicodeEscaper31.with(charSequenceTranslatorArray42);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper48 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer50 = null;
        boolean boolean51 = unicodeEscaper48.translate((int) '4', writer50);
        java.io.Writer writer53 = null;
        boolean boolean54 = unicodeEscaper48.translate((int) (byte) -1, writer53);
        java.io.Writer writer56 = null;
        boolean boolean57 = unicodeEscaper48.translate((int) (byte) -1, writer56);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray58 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator59 = unicodeEscaper48.with(charSequenceTranslatorArray58);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator60 = charSequenceTranslator45.with(charSequenceTranslatorArray58);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator61 = unicodeEscaper29.with(charSequenceTranslatorArray58);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator62 = unicodeEscaper26.with(charSequenceTranslatorArray58);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator63 = unicodeEscaper15.with(charSequenceTranslatorArray58);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator64 = unicodeEscaper10.with(charSequenceTranslatorArray58);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator65 = unicodeEscaper7.with(charSequenceTranslatorArray58);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator66 = unicodeEscaper2.with(charSequenceTranslatorArray58);
        java.io.Writer writer68 = null;
        boolean boolean69 = unicodeEscaper2.translate(0, writer68);
        java.io.Writer writer71 = null;
        boolean boolean72 = unicodeEscaper2.translate((int) (byte) 1, writer71);
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030" + "'", str4, "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030");
        org.junit.Assert.assertNotNull(unicodeEscaper7);
        org.junit.Assert.assertNotNull(unicodeEscaper10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "java.io.IOException: java.io.IOException: " + "'", str12, "java.io.IOException: java.io.IOException: ");
        org.junit.Assert.assertNotNull(unicodeEscaper15);
        org.junit.Assert.assertNotNull(unicodeEscaper18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "0" + "'", str20, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray21);
        org.junit.Assert.assertNotNull(charSequenceTranslator22);
        org.junit.Assert.assertNotNull(charSequenceTranslator23);
        org.junit.Assert.assertNotNull(unicodeEscaper26);
        org.junit.Assert.assertNotNull(unicodeEscaper29);
        org.junit.Assert.assertNotNull(unicodeEscaper31);
        org.junit.Assert.assertNotNull(unicodeEscaper33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "0" + "'", str41, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray42);
        org.junit.Assert.assertNotNull(charSequenceTranslator43);
        org.junit.Assert.assertNotNull(charSequenceTranslator44);
        org.junit.Assert.assertNotNull(charSequenceTranslator45);
        org.junit.Assert.assertNotNull(unicodeEscaper48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray58);
        org.junit.Assert.assertNotNull(charSequenceTranslator59);
        org.junit.Assert.assertNotNull(charSequenceTranslator60);
        org.junit.Assert.assertNotNull(charSequenceTranslator61);
        org.junit.Assert.assertNotNull(charSequenceTranslator62);
        org.junit.Assert.assertNotNull(charSequenceTranslator63);
        org.junit.Assert.assertNotNull(charSequenceTranslator64);
        org.junit.Assert.assertNotNull(charSequenceTranslator65);
        org.junit.Assert.assertNotNull(charSequenceTranslator66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test05359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05359");
        java.lang.Throwable throwable2 = null;
        java.io.IOException iOException3 = new java.io.IOException("java.io.IOException: \\u0068\\u0069\\u0021", throwable2);
        java.io.IOException iOException4 = new java.io.IOException("\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException3);
        java.io.IOException iOException7 = new java.io.IOException("");
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.io.IOException iOException10 = new java.io.IOException("");
        iOException8.addSuppressed((java.lang.Throwable) iOException10);
        java.io.IOException iOException12 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException10);
        java.io.IOException iOException14 = new java.io.IOException("");
        java.io.IOException iOException15 = new java.io.IOException((java.lang.Throwable) iOException14);
        java.io.IOException iOException16 = new java.io.IOException((java.lang.Throwable) iOException14);
        iOException12.addSuppressed((java.lang.Throwable) iOException14);
        iOException3.addSuppressed((java.lang.Throwable) iOException14);
        java.io.IOException iOException21 = new java.io.IOException();
        java.io.IOException iOException22 = new java.io.IOException();
        iOException21.addSuppressed((java.lang.Throwable) iOException22);
        java.io.IOException iOException24 = new java.io.IOException("0", (java.lang.Throwable) iOException21);
        java.io.IOException iOException27 = new java.io.IOException("");
        java.io.IOException iOException28 = new java.io.IOException((java.lang.Throwable) iOException27);
        java.io.IOException iOException30 = new java.io.IOException("");
        iOException28.addSuppressed((java.lang.Throwable) iOException30);
        java.io.IOException iOException33 = new java.io.IOException("");
        java.io.IOException iOException34 = new java.io.IOException((java.lang.Throwable) iOException33);
        java.io.IOException iOException36 = new java.io.IOException("");
        iOException34.addSuppressed((java.lang.Throwable) iOException36);
        iOException28.addSuppressed((java.lang.Throwable) iOException34);
        java.io.IOException iOException39 = new java.io.IOException("0", (java.lang.Throwable) iOException28);
        iOException21.addSuppressed((java.lang.Throwable) iOException28);
        java.lang.Throwable[] throwableArray41 = iOException28.getSuppressed();
        java.lang.Throwable[] throwableArray42 = iOException28.getSuppressed();
        java.io.IOException iOException43 = new java.io.IOException("j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020\\u005Cu\\u0030\\u0030\\u0035\\u0043u\\u005Cu\\u0030\\u0030\\u0033\\u0030\\u005Cu\\u0030\\u0030\\u0033\\u0030\\u005Cu\\u0030\\u0030\\u0033\\u0036\\u005Cu\\u0030\\u0030\\u0033\\u0038\\u005Cu\\u0030\\u0030\\u0035\\u0043u\\u005Cu\\u0030\\u0030\\u0033\\u0030\\u005Cu\\u0030\\u0030\\u0033\\u0030\\u005Cu\\u0030\\u0030\\u0033\\u0036\\u005Cu\\u0030\\u0030\\u0033\\u0039\\u005Cu\\u0030\\u0030\\u0035\\u0043u\\u005Cu\\u0030\\u0030\\u0033\\u0030\\u005Cu\\u0030\\u0030\\u0033\\u0030\\u005Cu\\u0030\\u0030\\u0033\\u0032\\u005Cu\\u0030\\u0030\\u0033\\u0031", (java.lang.Throwable) iOException28);
        iOException14.addSuppressed((java.lang.Throwable) iOException43);
        java.lang.Class<?> wildcardClass45 = iOException14.getClass();
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test05360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05360");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 0, 10);
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException:\\u0020hi\\u0021");
        java.io.Writer writer7 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int8 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030", (int) (short) 1, writer7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u0068\\u0069\\u005C\\u0075\\u0030\\u0030\\u0032\\u0031" + "'", str4, "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u0068\\u0069\\u005C\\u0075\\u0030\\u0030\\u0032\\u0031");
    }

    @Test
    public void test05361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05361");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 100, (-1));
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((-1), writer4);
        java.lang.String str7 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034");
        java.io.Writer writer9 = null;
        boolean boolean10 = unicodeEscaper2.translate((int) (short) 100, writer9);
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034" + "'", str7, "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test05362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05362");
        java.io.IOException iOException1 = new java.io.IOException();
        java.io.IOException iOException2 = new java.io.IOException();
        iOException1.addSuppressed((java.lang.Throwable) iOException2);
        java.lang.Throwable[] throwableArray4 = iOException2.getSuppressed();
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException7 = new java.io.IOException("");
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        iOException2.addSuppressed((java.lang.Throwable) iOException8);
        java.io.IOException iOException10 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030", (java.lang.Throwable) iOException8);
        java.io.IOException iOException11 = new java.io.IOException((java.lang.Throwable) iOException10);
        org.junit.Assert.assertNotNull(throwableArray4);
    }

    @Test
    public void test05363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05363");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "0");
        java.io.Writer writer6 = null;
        boolean boolean7 = unicodeEscaper2.translate((int) (byte) 10, writer6);
        java.io.Writer writer10 = null;
        int int11 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0032\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033", 10, writer10);
        java.io.Writer writer14 = null;
        int int15 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: \\u0068\\u0069\\u0021", 1, writer14);
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0" + "'", str4, "0");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test05364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05364");
        java.io.IOException iOException5 = new java.io.IOException("");
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.io.IOException iOException8 = new java.io.IOException("");
        iOException6.addSuppressed((java.lang.Throwable) iOException8);
        java.io.IOException iOException10 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException8);
        java.io.IOException iOException11 = new java.io.IOException("java.io.IOException: \\u0068\\u0069\\u0021", (java.lang.Throwable) iOException8);
        java.io.IOException iOException12 = new java.io.IOException();
        java.io.IOException iOException13 = new java.io.IOException();
        iOException12.addSuppressed((java.lang.Throwable) iOException13);
        java.lang.Throwable[] throwableArray15 = iOException13.getSuppressed();
        java.lang.Throwable[] throwableArray16 = iOException13.getSuppressed();
        java.io.IOException iOException18 = new java.io.IOException();
        java.io.IOException iOException19 = new java.io.IOException();
        iOException18.addSuppressed((java.lang.Throwable) iOException19);
        java.io.IOException iOException21 = new java.io.IOException("0", (java.lang.Throwable) iOException18);
        java.io.IOException iOException22 = new java.io.IOException((java.lang.Throwable) iOException21);
        iOException13.addSuppressed((java.lang.Throwable) iOException22);
        java.lang.Throwable[] throwableArray24 = iOException13.getSuppressed();
        iOException8.addSuppressed((java.lang.Throwable) iOException13);
        java.io.IOException iOException26 = new java.io.IOException("\\\\u00750068\\\\u00750069\\\\u00750021", (java.lang.Throwable) iOException13);
        java.io.IOException iOException27 = new java.io.IOException((java.lang.Throwable) iOException26);
        java.io.IOException iOException28 = new java.io.IOException("java.io.IOException: 23", (java.lang.Throwable) iOException27);
        java.io.IOException iOException29 = new java.io.IOException((java.lang.Throwable) iOException28);
        java.io.IOException iOException34 = new java.io.IOException();
        java.io.IOException iOException35 = new java.io.IOException();
        iOException34.addSuppressed((java.lang.Throwable) iOException35);
        java.io.IOException iOException37 = new java.io.IOException("0", (java.lang.Throwable) iOException34);
        java.io.IOException iOException38 = new java.io.IOException((java.lang.Throwable) iOException37);
        java.io.IOException iOException39 = new java.io.IOException((java.lang.Throwable) iOException38);
        java.io.IOException iOException40 = new java.io.IOException((java.lang.Throwable) iOException39);
        java.lang.Throwable[] throwableArray41 = iOException40.getSuppressed();
        java.io.IOException iOException42 = new java.io.IOException("java.io.IOException: java.io.IOException", (java.lang.Throwable) iOException40);
        java.io.IOException iOException43 = new java.io.IOException((java.lang.Throwable) iOException42);
        java.io.IOException iOException47 = new java.io.IOException("0");
        java.lang.Throwable[] throwableArray48 = iOException47.getSuppressed();
        java.io.IOException iOException49 = new java.io.IOException("hi!", (java.lang.Throwable) iOException47);
        java.io.IOException iOException50 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException47);
        iOException42.addSuppressed((java.lang.Throwable) iOException50);
        java.io.IOException iOException52 = new java.io.IOException("\\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\u0063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E: \\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\u0063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E", (java.lang.Throwable) iOException50);
        java.io.IOException iOException53 = new java.io.IOException("\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\\\u00750068\\\\u00750069\\\\u00750021", (java.lang.Throwable) iOException52);
        java.io.IOException iOException54 = new java.io.IOException((java.lang.Throwable) iOException53);
        iOException28.addSuppressed((java.lang.Throwable) iOException54);
        java.lang.Class<?> wildcardClass56 = iOException28.getClass();
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test05365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05365");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (short) 10, (int) (short) 0);
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) (short) 100, writer4);
        java.lang.String str7 = unicodeEscaper2.translate((java.lang.CharSequence) "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020");
        java.io.Writer writer10 = null;
        int int11 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: 0", 0, writer10);
        java.io.Writer writer13 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate((java.lang.CharSequence) "\\\\\\u00750075006A\\\\\\u007500750061\\\\\\u007500750076\\\\\\u007500750061\\\\\\u00750075002E\\\\\\u007500750069\\\\\\u00750075006F\\\\\\u00750075002E\\\\\\u007500750049\\\\\\u00750075004F\\\\\\u007500750045\\\\\\u007500750078\\\\\\u007500750063\\\\\\u007500750065\\\\\\u007500750070\\\\\\u007500750074\\\\\\u007500750069\\\\\\u00750075006F\\\\\\u00750075006E\\\\\\u00750075003A\\\\\\u007500750020", writer13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020" + "'", str7, "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test05366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05366");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) '4', (int) (short) 0);
        java.io.Writer writer5 = null;
        int int6 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030", 0, writer5);
        java.io.Writer writer8 = null;
        boolean boolean9 = unicodeEscaper2.translate((int) (byte) 1, writer8);
        java.io.Writer writer11 = null;
        boolean boolean12 = unicodeEscaper2.translate((int) (byte) -1, writer11);
        java.io.Writer writer14 = null;
        boolean boolean15 = unicodeEscaper2.translate((int) '#', writer14);
        java.io.Writer writer17 = null;
        boolean boolean18 = unicodeEscaper2.translate(0, writer17);
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test05367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05367");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(10, 0);
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u005Cu\\u0030\\u0030\\u0036\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0032\\u0031");
        java.io.Writer writer6 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = unicodeEscaper2.translate((int) (byte) -1, writer6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0033\\u0038\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0033\\u0039\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0032\\u005C\\u0075\\u0030\\u0030\\u0033\\u0031" + "'", str4, "\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0033\\u0038\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0033\\u0039\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0032\\u005C\\u0075\\u0030\\u0030\\u0033\\u0031");
    }

    @Test
    public void test05368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05368");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 100, (int) (byte) 1);
        java.io.Writer writer5 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int6 = unicodeEscaper2.translate((java.lang.CharSequence) "\\\\u0075006A\\\\u00750061\\\\u00750076\\\\u00750061\\\\u0075002E\\\\u00750069\\\\u0075006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E\\\\u0075003A\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750032\\\\u00750030\\\\u00750068\\\\u00750069\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750032\\\\u00750031", (int) '#', writer5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
    }

    @Test
    public void test05369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05369");
        java.lang.Throwable throwable1 = null;
        java.io.IOException iOException2 = new java.io.IOException("\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\\\u00750068\\\\u00750069\\\\u00750021", throwable1);
        java.io.IOException iOException3 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.lang.Class<?> wildcardClass4 = iOException3.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test05370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05370");
        java.io.IOException iOException2 = new java.io.IOException();
        java.io.IOException iOException3 = new java.io.IOException();
        iOException2.addSuppressed((java.lang.Throwable) iOException3);
        java.lang.Throwable[] throwableArray5 = iOException3.getSuppressed();
        java.lang.Throwable[] throwableArray6 = iOException3.getSuppressed();
        java.io.IOException iOException7 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException3);
        java.io.IOException iOException8 = new java.io.IOException();
        java.io.IOException iOException9 = new java.io.IOException();
        iOException8.addSuppressed((java.lang.Throwable) iOException9);
        java.io.IOException iOException11 = new java.io.IOException((java.lang.Throwable) iOException8);
        java.lang.Throwable[] throwableArray12 = iOException11.getSuppressed();
        iOException7.addSuppressed((java.lang.Throwable) iOException11);
        java.io.IOException iOException15 = new java.io.IOException();
        java.io.IOException iOException16 = new java.io.IOException();
        iOException15.addSuppressed((java.lang.Throwable) iOException16);
        java.io.IOException iOException18 = new java.io.IOException();
        java.io.IOException iOException19 = new java.io.IOException();
        iOException18.addSuppressed((java.lang.Throwable) iOException19);
        java.lang.Throwable[] throwableArray21 = iOException19.getSuppressed();
        java.io.IOException iOException22 = new java.io.IOException((java.lang.Throwable) iOException19);
        java.io.IOException iOException24 = new java.io.IOException("");
        java.io.IOException iOException25 = new java.io.IOException((java.lang.Throwable) iOException24);
        iOException19.addSuppressed((java.lang.Throwable) iOException25);
        iOException16.addSuppressed((java.lang.Throwable) iOException25);
        java.io.IOException iOException28 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException25);
        iOException11.addSuppressed((java.lang.Throwable) iOException28);
        java.io.IOException iOException31 = new java.io.IOException("");
        java.io.IOException iOException32 = new java.io.IOException((java.lang.Throwable) iOException31);
        java.io.IOException iOException34 = new java.io.IOException("");
        iOException32.addSuppressed((java.lang.Throwable) iOException34);
        java.io.IOException iOException37 = new java.io.IOException("");
        java.io.IOException iOException38 = new java.io.IOException((java.lang.Throwable) iOException37);
        java.io.IOException iOException40 = new java.io.IOException("");
        iOException38.addSuppressed((java.lang.Throwable) iOException40);
        iOException32.addSuppressed((java.lang.Throwable) iOException38);
        iOException11.addSuppressed((java.lang.Throwable) iOException38);
        java.io.IOException iOException44 = new java.io.IOException((java.lang.Throwable) iOException11);
        java.io.IOException iOException45 = new java.io.IOException("java.io.IOException: java.io.IOException: \\u005Cu\\u0030\\u0030\\u0036\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0032\\u0031", (java.lang.Throwable) iOException44);
        java.io.IOException iOException50 = new java.io.IOException();
        java.io.IOException iOException51 = new java.io.IOException();
        iOException50.addSuppressed((java.lang.Throwable) iOException51);
        java.io.IOException iOException53 = new java.io.IOException();
        java.io.IOException iOException54 = new java.io.IOException();
        iOException53.addSuppressed((java.lang.Throwable) iOException54);
        java.lang.Throwable[] throwableArray56 = iOException54.getSuppressed();
        java.io.IOException iOException57 = new java.io.IOException((java.lang.Throwable) iOException54);
        java.io.IOException iOException59 = new java.io.IOException("");
        java.io.IOException iOException60 = new java.io.IOException((java.lang.Throwable) iOException59);
        iOException54.addSuppressed((java.lang.Throwable) iOException60);
        iOException51.addSuppressed((java.lang.Throwable) iOException60);
        java.io.IOException iOException63 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException60);
        java.io.IOException iOException64 = new java.io.IOException("64", (java.lang.Throwable) iOException63);
        java.io.IOException iOException66 = new java.io.IOException();
        java.io.IOException iOException67 = new java.io.IOException();
        iOException66.addSuppressed((java.lang.Throwable) iOException67);
        java.io.IOException iOException69 = new java.io.IOException("0", (java.lang.Throwable) iOException66);
        java.io.IOException iOException70 = new java.io.IOException((java.lang.Throwable) iOException69);
        java.io.IOException iOException71 = new java.io.IOException((java.lang.Throwable) iOException70);
        java.io.IOException iOException73 = new java.io.IOException();
        java.io.IOException iOException74 = new java.io.IOException();
        iOException73.addSuppressed((java.lang.Throwable) iOException74);
        java.lang.Throwable[] throwableArray76 = iOException74.getSuppressed();
        java.lang.Throwable[] throwableArray77 = iOException74.getSuppressed();
        java.io.IOException iOException78 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException74);
        java.io.IOException iOException79 = new java.io.IOException();
        java.io.IOException iOException80 = new java.io.IOException();
        iOException79.addSuppressed((java.lang.Throwable) iOException80);
        java.io.IOException iOException82 = new java.io.IOException((java.lang.Throwable) iOException79);
        java.lang.Throwable[] throwableArray83 = iOException82.getSuppressed();
        iOException78.addSuppressed((java.lang.Throwable) iOException82);
        iOException70.addSuppressed((java.lang.Throwable) iOException82);
        java.io.IOException iOException86 = new java.io.IOException((java.lang.Throwable) iOException82);
        iOException64.addSuppressed((java.lang.Throwable) iOException86);
        java.io.IOException iOException88 = new java.io.IOException((java.lang.Throwable) iOException86);
        java.io.IOException iOException89 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException86);
        java.io.IOException iOException90 = new java.io.IOException((java.lang.Throwable) iOException89);
        java.lang.Throwable[] throwableArray91 = iOException90.getSuppressed();
        java.io.IOException iOException92 = new java.io.IOException("\\u005C\\u0075\\u0030\\u0030\\u0036\\u0041\\u0061\\u005C\\u0075\\u0030\\u0030\\u0037\\u0036\\u0061\\u002E\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u005C\\u0075\\u0030\\u0030\\u0036\\u0046\\u002E\\u0049\\u004F\\u0045\\u005C\\u0075\\u0030\\u0030\\u0037\\u0038\\u005C\\u0075\\u0030\\u0030\\u0036\\u0033\\u005C\\u0075\\u0030\\u0030\\u0036\\u0035\\u005C\\u0075\\u0030\\u0030\\u0037\\u0030\\u005C\\u0075\\u0030\\u0030\\u0037\\u0034\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u005C\\u0075\\u0030\\u0030\\u0036\\u0046\\u005C\\u0075\\u0030\\u0030\\u0036\\u0045\\u003A\\u0020\\u0030", (java.lang.Throwable) iOException90);
        iOException45.addSuppressed((java.lang.Throwable) iOException90);
        java.io.IOException iOException94 = new java.io.IOException((java.lang.Throwable) iOException90);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(throwableArray76);
        org.junit.Assert.assertNotNull(throwableArray77);
        org.junit.Assert.assertNotNull(throwableArray83);
        org.junit.Assert.assertNotNull(throwableArray91);
    }

    @Test
    public void test05371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05371");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 0, (int) 'a');
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate(100, writer4);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper8 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper11 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', (int) (short) 0);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray12 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper11 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator13 = unicodeEscaper8.with(charSequenceTranslatorArray12);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator14 = unicodeEscaper2.with(charSequenceTranslatorArray12);
        java.io.Writer writer17 = null;
        int int18 = unicodeEscaper2.translate((java.lang.CharSequence) "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption", (int) (short) 0, writer17);
        java.io.Writer writer20 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate((java.lang.CharSequence) "\\\\u\\u0030\\u003075\\u0030\\u0030\\u0033\\u0033\\\\u\\u0030\\u003075\\u0030\\u0030\\u0033\\u0034", writer20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper8);
        org.junit.Assert.assertNotNull(unicodeEscaper11);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray12);
        org.junit.Assert.assertNotNull(charSequenceTranslator13);
        org.junit.Assert.assertNotNull(charSequenceTranslator14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test05372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05372");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) ' ', (-1));
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) (byte) 1, writer4);
        java.io.Writer writer7 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: java.io.IOException: 20", writer7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test05373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05373");
        java.io.IOException iOException3 = new java.io.IOException();
        java.io.IOException iOException4 = new java.io.IOException();
        iOException3.addSuppressed((java.lang.Throwable) iOException4);
        java.io.IOException iOException6 = new java.io.IOException("0", (java.lang.Throwable) iOException3);
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.io.IOException iOException9 = new java.io.IOException((java.lang.Throwable) iOException8);
        java.lang.Throwable[] throwableArray10 = iOException9.getSuppressed();
        java.io.IOException iOException11 = new java.io.IOException("java.io.IOException: java.io.IOException", (java.lang.Throwable) iOException9);
        java.io.IOException iOException12 = new java.io.IOException((java.lang.Throwable) iOException11);
        java.io.IOException iOException16 = new java.io.IOException("0");
        java.lang.Throwable[] throwableArray17 = iOException16.getSuppressed();
        java.io.IOException iOException18 = new java.io.IOException("hi!", (java.lang.Throwable) iOException16);
        java.io.IOException iOException19 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException16);
        iOException11.addSuppressed((java.lang.Throwable) iOException19);
        java.io.IOException iOException21 = new java.io.IOException((java.lang.Throwable) iOException19);
        java.io.IOException iOException22 = new java.io.IOException("\\\\u0075006A\\\\u00750061\\\\u00750076\\\\u00750061\\\\u0075002E\\\\u00750069\\\\u0075006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E\\\\u0075003A\\\\u00750020", (java.lang.Throwable) iOException21);
        java.io.IOException iOException23 = new java.io.IOException((java.lang.Throwable) iOException22);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray17);
    }

    @Test
    public void test05374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05374");
        java.io.IOException iOException2 = new java.io.IOException("");
        java.io.IOException iOException3 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException5 = new java.io.IOException("");
        iOException3.addSuppressed((java.lang.Throwable) iOException5);
        java.io.IOException iOException7 = new java.io.IOException("java.io.IOException: 0", (java.lang.Throwable) iOException5);
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.io.IOException iOException9 = new java.io.IOException((java.lang.Throwable) iOException8);
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException8);
        java.lang.Throwable[] throwableArray11 = iOException10.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray11);
    }

    @Test
    public void test05375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05375");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) ' ');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.io.Writer writer8 = null;
        int int9 = unicodeEscaper5.translate((java.lang.CharSequence) "23", (int) (short) 0, writer8);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper11 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper13 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer15 = null;
        boolean boolean16 = unicodeEscaper13.translate((int) ' ', writer15);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper19 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str21 = unicodeEscaper19.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray22 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator23 = unicodeEscaper19.with(charSequenceTranslatorArray22);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator24 = unicodeEscaper13.with(charSequenceTranslatorArray22);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator25 = unicodeEscaper11.with(charSequenceTranslatorArray22);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator26 = unicodeEscaper5.with(charSequenceTranslatorArray22);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator27 = unicodeEscaper2.with(charSequenceTranslatorArray22);
        java.io.Writer writer29 = null;
        boolean boolean30 = unicodeEscaper2.translate((int) '4', writer29);
        java.io.Writer writer32 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean33 = unicodeEscaper2.translate(1, writer32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(unicodeEscaper11);
        org.junit.Assert.assertNotNull(unicodeEscaper13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "0" + "'", str21, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray22);
        org.junit.Assert.assertNotNull(charSequenceTranslator23);
        org.junit.Assert.assertNotNull(charSequenceTranslator24);
        org.junit.Assert.assertNotNull(charSequenceTranslator25);
        org.junit.Assert.assertNotNull(charSequenceTranslator26);
        org.junit.Assert.assertNotNull(charSequenceTranslator27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test05376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05376");
        java.io.IOException iOException1 = new java.io.IOException("\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\\\u00750020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\\\u00750020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\\\u00750020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\\\u00750020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\\\u007500200");
        java.io.IOException iOException2 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.io.IOException iOException3 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.lang.Throwable[] throwableArray4 = iOException1.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray4);
    }

    @Test
    public void test05377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05377");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) '4', writer4);
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper2.translate((int) (byte) -1, writer7);
        java.lang.String str10 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper13 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (short) 1, (int) ' ');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper15 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper18 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer20 = null;
        boolean boolean21 = unicodeEscaper18.translate((int) '4', writer20);
        java.io.Writer writer23 = null;
        boolean boolean24 = unicodeEscaper18.translate((int) (byte) -1, writer23);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper27 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper29 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper31 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str33 = unicodeEscaper31.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray34 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper27, unicodeEscaper29, unicodeEscaper31 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator35 = unicodeEscaper18.with(charSequenceTranslatorArray34);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper38 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer40 = null;
        boolean boolean41 = unicodeEscaper38.translate((int) (short) 10, writer40);
        java.lang.String str43 = unicodeEscaper38.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper46 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer48 = null;
        boolean boolean49 = unicodeEscaper46.translate((int) '4', writer48);
        java.io.Writer writer51 = null;
        boolean boolean52 = unicodeEscaper46.translate((int) (byte) -1, writer51);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper55 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper57 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper59 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str61 = unicodeEscaper59.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray62 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper55, unicodeEscaper57, unicodeEscaper59 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator63 = unicodeEscaper46.with(charSequenceTranslatorArray62);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator64 = unicodeEscaper38.with(charSequenceTranslatorArray62);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator65 = unicodeEscaper18.with(charSequenceTranslatorArray62);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator66 = unicodeEscaper15.with(charSequenceTranslatorArray62);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator67 = unicodeEscaper13.with(charSequenceTranslatorArray62);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator68 = unicodeEscaper2.with(charSequenceTranslatorArray62);
        java.lang.CharSequence charSequence69 = null;
        java.io.Writer writer71 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int72 = charSequenceTranslator68.translate(charSequence69, 0, writer71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "java.io.IOException" + "'", str10, "java.io.IOException");
        org.junit.Assert.assertNotNull(unicodeEscaper13);
        org.junit.Assert.assertNotNull(unicodeEscaper15);
        org.junit.Assert.assertNotNull(unicodeEscaper18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper27);
        org.junit.Assert.assertNotNull(unicodeEscaper29);
        org.junit.Assert.assertNotNull(unicodeEscaper31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str33, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray34);
        org.junit.Assert.assertNotNull(charSequenceTranslator35);
        org.junit.Assert.assertNotNull(unicodeEscaper38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "0" + "'", str43, "0");
        org.junit.Assert.assertNotNull(unicodeEscaper46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper55);
        org.junit.Assert.assertNotNull(unicodeEscaper57);
        org.junit.Assert.assertNotNull(unicodeEscaper59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str61, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray62);
        org.junit.Assert.assertNotNull(charSequenceTranslator63);
        org.junit.Assert.assertNotNull(charSequenceTranslator64);
        org.junit.Assert.assertNotNull(charSequenceTranslator65);
        org.junit.Assert.assertNotNull(charSequenceTranslator66);
        org.junit.Assert.assertNotNull(charSequenceTranslator67);
        org.junit.Assert.assertNotNull(charSequenceTranslator68);
    }

    @Test
    public void test05378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05378");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between(1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper5.translate((int) '4', writer7);
        java.io.Writer writer11 = null;
        int int12 = unicodeEscaper5.translate((java.lang.CharSequence) "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", 100, writer11);
        java.lang.String str14 = unicodeEscaper5.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper17 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) (byte) 10);
        java.lang.String str19 = unicodeEscaper17.translate((java.lang.CharSequence) "java.io.IOException");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper21 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) (short) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper24 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '#', 100);
        java.lang.String str26 = unicodeEscaper24.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper29 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) '4', (int) (short) 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper32 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper35 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', (int) (short) 0);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray36 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper35 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator37 = unicodeEscaper32.with(charSequenceTranslatorArray36);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator38 = unicodeEscaper29.with(charSequenceTranslatorArray36);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator39 = unicodeEscaper24.with(charSequenceTranslatorArray36);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator40 = unicodeEscaper21.with(charSequenceTranslatorArray36);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper43 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper46 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer48 = null;
        boolean boolean49 = unicodeEscaper46.translate((int) '4', writer48);
        java.io.Writer writer51 = null;
        boolean boolean52 = unicodeEscaper46.translate((int) (byte) -1, writer51);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper55 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper57 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper59 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str61 = unicodeEscaper59.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray62 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper55, unicodeEscaper57, unicodeEscaper59 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator63 = unicodeEscaper46.with(charSequenceTranslatorArray62);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator64 = unicodeEscaper43.with(charSequenceTranslatorArray62);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator65 = unicodeEscaper21.with(charSequenceTranslatorArray62);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator66 = unicodeEscaper17.with(charSequenceTranslatorArray62);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator67 = unicodeEscaper5.with(charSequenceTranslatorArray62);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator68 = unicodeEscaper2.with(charSequenceTranslatorArray62);
        java.lang.String str70 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: \\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034");
        java.io.Writer writer72 = null;
        boolean boolean73 = unicodeEscaper2.translate(100, writer72);
        java.io.Writer writer75 = null;
        boolean boolean76 = unicodeEscaper2.translate((int) (byte) 100, writer75);
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030" + "'", str14, "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030");
        org.junit.Assert.assertNotNull(unicodeEscaper17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str19, "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertNotNull(unicodeEscaper21);
        org.junit.Assert.assertNotNull(unicodeEscaper24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str26, "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertNotNull(unicodeEscaper29);
        org.junit.Assert.assertNotNull(unicodeEscaper32);
        org.junit.Assert.assertNotNull(unicodeEscaper35);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray36);
        org.junit.Assert.assertNotNull(charSequenceTranslator37);
        org.junit.Assert.assertNotNull(charSequenceTranslator38);
        org.junit.Assert.assertNotNull(charSequenceTranslator39);
        org.junit.Assert.assertNotNull(charSequenceTranslator40);
        org.junit.Assert.assertNotNull(unicodeEscaper43);
        org.junit.Assert.assertNotNull(unicodeEscaper46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper55);
        org.junit.Assert.assertNotNull(unicodeEscaper57);
        org.junit.Assert.assertNotNull(unicodeEscaper59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str61, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray62);
        org.junit.Assert.assertNotNull(charSequenceTranslator63);
        org.junit.Assert.assertNotNull(charSequenceTranslator64);
        org.junit.Assert.assertNotNull(charSequenceTranslator65);
        org.junit.Assert.assertNotNull(charSequenceTranslator66);
        org.junit.Assert.assertNotNull(charSequenceTranslator67);
        org.junit.Assert.assertNotNull(charSequenceTranslator68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "java.io.IOException:\\u0020java.io.IOException:\\u0020\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034" + "'", str70, "java.io.IOException:\\u0020java.io.IOException:\\u0020\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test05379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05379");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) '4', (int) '#');
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "34");
        java.lang.String str6 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030");
        java.lang.String str8 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: \\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034");
        java.io.Writer writer11 = null;
        int int12 = unicodeEscaper2.translate((java.lang.CharSequence) "\\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\u0063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E: \\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\u0063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E", 10, writer11);
        java.io.Writer writer15 = null;
        int int16 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a\\\\u0075002E\\u0069\\u006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\\\u0075003A\\\\u00750020\\u006Aa\\u0076a\\\\u0075002E\\u0069\\u006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (int) '4', writer15);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper19 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (byte) 1);
        java.io.Writer writer22 = null;
        int int23 = unicodeEscaper19.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030", 0, writer22);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper26 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer28 = null;
        boolean boolean29 = unicodeEscaper26.translate((int) (short) 10, writer28);
        java.io.Writer writer32 = null;
        int int33 = unicodeEscaper26.translate((java.lang.CharSequence) "0", (int) (byte) 0, writer32);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper36 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) 'a', (int) '4');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper39 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str41 = unicodeEscaper39.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray42 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator43 = unicodeEscaper39.with(charSequenceTranslatorArray42);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator44 = unicodeEscaper36.with(charSequenceTranslatorArray42);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator45 = unicodeEscaper26.with(charSequenceTranslatorArray42);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator46 = unicodeEscaper19.with(charSequenceTranslatorArray42);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator47 = unicodeEscaper2.with(charSequenceTranslatorArray42);
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "34" + "'", str4, "34");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030" + "'", str6, "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "java.io.IOException: \\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034" + "'", str8, "java.io.IOException: \\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(unicodeEscaper19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unicodeEscaper26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(unicodeEscaper36);
        org.junit.Assert.assertNotNull(unicodeEscaper39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "0" + "'", str41, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray42);
        org.junit.Assert.assertNotNull(charSequenceTranslator43);
        org.junit.Assert.assertNotNull(charSequenceTranslator44);
        org.junit.Assert.assertNotNull(charSequenceTranslator45);
        org.junit.Assert.assertNotNull(charSequenceTranslator46);
        org.junit.Assert.assertNotNull(charSequenceTranslator47);
    }

    @Test
    public void test05380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05380");
        java.io.IOException iOException3 = new java.io.IOException("");
        java.io.IOException iOException4 = new java.io.IOException("A", (java.lang.Throwable) iOException3);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException3);
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.io.IOException iOException7 = new java.io.IOException("\\u0036\\u0034", (java.lang.Throwable) iOException5);
        java.io.IOException iOException9 = new java.io.IOException();
        java.io.IOException iOException10 = new java.io.IOException();
        iOException9.addSuppressed((java.lang.Throwable) iOException10);
        java.io.IOException iOException12 = new java.io.IOException("0", (java.lang.Throwable) iOException9);
        java.io.IOException iOException13 = new java.io.IOException((java.lang.Throwable) iOException12);
        java.io.IOException iOException14 = new java.io.IOException((java.lang.Throwable) iOException13);
        iOException5.addSuppressed((java.lang.Throwable) iOException13);
        java.io.IOException iOException16 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.lang.Throwable[] throwableArray17 = iOException16.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray17);
    }

    @Test
    public void test05381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05381");
        java.io.IOException iOException3 = new java.io.IOException();
        java.io.IOException iOException4 = new java.io.IOException();
        iOException3.addSuppressed((java.lang.Throwable) iOException4);
        java.lang.Throwable[] throwableArray6 = iOException4.getSuppressed();
        java.lang.Throwable[] throwableArray7 = iOException4.getSuppressed();
        java.io.IOException iOException8 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException4);
        java.io.IOException iOException9 = new java.io.IOException();
        java.io.IOException iOException10 = new java.io.IOException();
        iOException9.addSuppressed((java.lang.Throwable) iOException10);
        java.io.IOException iOException12 = new java.io.IOException((java.lang.Throwable) iOException9);
        java.lang.Throwable[] throwableArray13 = iOException12.getSuppressed();
        iOException8.addSuppressed((java.lang.Throwable) iOException12);
        java.io.IOException iOException16 = new java.io.IOException();
        java.io.IOException iOException17 = new java.io.IOException();
        iOException16.addSuppressed((java.lang.Throwable) iOException17);
        java.io.IOException iOException19 = new java.io.IOException();
        java.io.IOException iOException20 = new java.io.IOException();
        iOException19.addSuppressed((java.lang.Throwable) iOException20);
        java.lang.Throwable[] throwableArray22 = iOException20.getSuppressed();
        java.io.IOException iOException23 = new java.io.IOException((java.lang.Throwable) iOException20);
        java.io.IOException iOException25 = new java.io.IOException("");
        java.io.IOException iOException26 = new java.io.IOException((java.lang.Throwable) iOException25);
        iOException20.addSuppressed((java.lang.Throwable) iOException26);
        iOException17.addSuppressed((java.lang.Throwable) iOException26);
        java.io.IOException iOException29 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException26);
        iOException12.addSuppressed((java.lang.Throwable) iOException29);
        java.io.IOException iOException32 = new java.io.IOException("");
        java.io.IOException iOException33 = new java.io.IOException((java.lang.Throwable) iOException32);
        java.io.IOException iOException35 = new java.io.IOException("");
        iOException33.addSuppressed((java.lang.Throwable) iOException35);
        java.io.IOException iOException38 = new java.io.IOException("");
        java.io.IOException iOException39 = new java.io.IOException((java.lang.Throwable) iOException38);
        java.io.IOException iOException41 = new java.io.IOException("");
        iOException39.addSuppressed((java.lang.Throwable) iOException41);
        iOException33.addSuppressed((java.lang.Throwable) iOException39);
        iOException12.addSuppressed((java.lang.Throwable) iOException39);
        java.io.IOException iOException45 = new java.io.IOException("java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception", (java.lang.Throwable) iOException39);
        java.lang.Throwable[] throwableArray46 = iOException45.getSuppressed();
        java.io.IOException iOException47 = new java.io.IOException("\\u0030", (java.lang.Throwable) iOException45);
        java.lang.Throwable[] throwableArray48 = iOException45.getSuppressed();
        java.io.IOException iOException49 = new java.io.IOException();
        java.io.IOException iOException50 = new java.io.IOException();
        iOException49.addSuppressed((java.lang.Throwable) iOException50);
        java.lang.Throwable[] throwableArray52 = iOException50.getSuppressed();
        java.io.IOException iOException53 = new java.io.IOException((java.lang.Throwable) iOException50);
        java.io.IOException iOException55 = new java.io.IOException("");
        java.io.IOException iOException56 = new java.io.IOException((java.lang.Throwable) iOException55);
        iOException50.addSuppressed((java.lang.Throwable) iOException56);
        java.io.IOException iOException58 = new java.io.IOException();
        java.io.IOException iOException59 = new java.io.IOException();
        iOException58.addSuppressed((java.lang.Throwable) iOException59);
        java.io.IOException iOException61 = new java.io.IOException();
        java.io.IOException iOException62 = new java.io.IOException();
        iOException61.addSuppressed((java.lang.Throwable) iOException62);
        java.lang.Throwable[] throwableArray64 = iOException62.getSuppressed();
        java.io.IOException iOException65 = new java.io.IOException((java.lang.Throwable) iOException62);
        java.io.IOException iOException67 = new java.io.IOException("");
        java.io.IOException iOException68 = new java.io.IOException((java.lang.Throwable) iOException67);
        iOException62.addSuppressed((java.lang.Throwable) iOException68);
        iOException59.addSuppressed((java.lang.Throwable) iOException68);
        java.lang.Throwable[] throwableArray71 = iOException59.getSuppressed();
        java.lang.Throwable[] throwableArray72 = iOException59.getSuppressed();
        java.lang.Throwable[] throwableArray73 = iOException59.getSuppressed();
        java.io.IOException iOException77 = new java.io.IOException();
        java.io.IOException iOException78 = new java.io.IOException();
        iOException77.addSuppressed((java.lang.Throwable) iOException78);
        java.io.IOException iOException80 = new java.io.IOException();
        java.io.IOException iOException81 = new java.io.IOException();
        iOException80.addSuppressed((java.lang.Throwable) iOException81);
        java.lang.Throwable[] throwableArray83 = iOException81.getSuppressed();
        java.io.IOException iOException84 = new java.io.IOException((java.lang.Throwable) iOException81);
        java.io.IOException iOException86 = new java.io.IOException("");
        java.io.IOException iOException87 = new java.io.IOException((java.lang.Throwable) iOException86);
        iOException81.addSuppressed((java.lang.Throwable) iOException87);
        iOException78.addSuppressed((java.lang.Throwable) iOException87);
        java.io.IOException iOException90 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException87);
        java.io.IOException iOException91 = new java.io.IOException("64", (java.lang.Throwable) iOException90);
        java.io.IOException iOException92 = new java.io.IOException("java.io.IOException: java.io.IOException: ", (java.lang.Throwable) iOException91);
        iOException59.addSuppressed((java.lang.Throwable) iOException91);
        java.lang.Throwable[] throwableArray94 = iOException91.getSuppressed();
        java.io.IOException iOException95 = new java.io.IOException((java.lang.Throwable) iOException91);
        iOException50.addSuppressed((java.lang.Throwable) iOException91);
        iOException45.addSuppressed((java.lang.Throwable) iOException91);
        java.lang.Class<?> wildcardClass98 = iOException91.getClass();
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(throwableArray71);
        org.junit.Assert.assertNotNull(throwableArray72);
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(throwableArray83);
        org.junit.Assert.assertNotNull(throwableArray94);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test05382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05382");
        java.io.IOException iOException2 = new java.io.IOException("\\u0033\\u0034");
        java.io.IOException iOException3 = new java.io.IOException("\\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\u0063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E: \\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\u0063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E", (java.lang.Throwable) iOException2);
        java.io.IOException iOException4 = new java.io.IOException((java.lang.Throwable) iOException3);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.lang.String str6 = iOException5.toString();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "java.io.IOException: java.io.IOException: java.io.IOException: \\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\u0063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E: \\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\u0063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E" + "'", str6, "java.io.IOException: java.io.IOException: java.io.IOException: \\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\u0063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E: \\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\u0063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E");
    }

    @Test
    public void test05383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05383");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (byte) 100, (int) 'a');
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020\\u005Cu\\u0030\\u0030\\u0033\\u0036\\u005Cu\\u0030\\u0030\\u0033\\u0034");
        java.lang.String str6 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException:\\u0020A");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper9 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (short) 0, 1);
        java.io.Writer writer11 = null;
        boolean boolean12 = unicodeEscaper9.translate((int) (short) -1, writer11);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper14 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) 'a');
        java.lang.String str16 = unicodeEscaper14.translate((java.lang.CharSequence) "A");
        java.io.Writer writer18 = null;
        boolean boolean19 = unicodeEscaper14.translate((int) (short) 0, writer18);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper22 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 10, (int) (short) 100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper24 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer27 = null;
        int int28 = unicodeEscaper24.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (int) (short) 1, writer27);
        java.io.Writer writer31 = null;
        int int32 = unicodeEscaper24.translate((java.lang.CharSequence) "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (int) (byte) 10, writer31);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper35 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) -1, (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper37 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper39 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer41 = null;
        boolean boolean42 = unicodeEscaper39.translate((int) ' ', writer41);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper45 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str47 = unicodeEscaper45.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray48 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator49 = unicodeEscaper45.with(charSequenceTranslatorArray48);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator50 = unicodeEscaper39.with(charSequenceTranslatorArray48);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator51 = unicodeEscaper37.with(charSequenceTranslatorArray48);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper54 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer56 = null;
        boolean boolean57 = unicodeEscaper54.translate((int) '4', writer56);
        java.io.Writer writer59 = null;
        boolean boolean60 = unicodeEscaper54.translate((int) (byte) -1, writer59);
        java.io.Writer writer62 = null;
        boolean boolean63 = unicodeEscaper54.translate((int) (byte) -1, writer62);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray64 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator65 = unicodeEscaper54.with(charSequenceTranslatorArray64);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator66 = charSequenceTranslator51.with(charSequenceTranslatorArray64);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator67 = unicodeEscaper35.with(charSequenceTranslatorArray64);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator68 = unicodeEscaper24.with(charSequenceTranslatorArray64);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator69 = unicodeEscaper22.with(charSequenceTranslatorArray64);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator70 = unicodeEscaper14.with(charSequenceTranslatorArray64);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator71 = unicodeEscaper9.with(charSequenceTranslatorArray64);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper74 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(10, (int) (byte) 100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper76 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (short) 10);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper79 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) '4', (int) (short) 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper82 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper85 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', (int) (short) 0);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray86 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper85 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator87 = unicodeEscaper82.with(charSequenceTranslatorArray86);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator88 = unicodeEscaper79.with(charSequenceTranslatorArray86);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator89 = unicodeEscaper76.with(charSequenceTranslatorArray86);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator90 = unicodeEscaper74.with(charSequenceTranslatorArray86);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator91 = charSequenceTranslator71.with(charSequenceTranslatorArray86);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator92 = unicodeEscaper2.with(charSequenceTranslatorArray86);
        java.io.Writer writer94 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean95 = unicodeEscaper2.translate((int) (short) 0, writer94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\u006A\\u005C\\u0075\\u0030\\u0030\\u0036\\u0031\\u0076\\u005C\\u0075\\u0030\\u0030\\u0036\\u0031\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u005C\\u0075\\u0030\\u0030\\u0036\\u0033\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034" + "'", str4, "\\u006A\\u005C\\u0075\\u0030\\u0030\\u0036\\u0031\\u0076\\u005C\\u0075\\u0030\\u0030\\u0036\\u0031\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u005C\\u0075\\u0030\\u0030\\u0036\\u0033\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u0041" + "'", str6, "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u0041");
        org.junit.Assert.assertNotNull(unicodeEscaper9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "A" + "'", str16, "A");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper22);
        org.junit.Assert.assertNotNull(unicodeEscaper24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(unicodeEscaper35);
        org.junit.Assert.assertNotNull(unicodeEscaper37);
        org.junit.Assert.assertNotNull(unicodeEscaper39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "0" + "'", str47, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray48);
        org.junit.Assert.assertNotNull(charSequenceTranslator49);
        org.junit.Assert.assertNotNull(charSequenceTranslator50);
        org.junit.Assert.assertNotNull(charSequenceTranslator51);
        org.junit.Assert.assertNotNull(unicodeEscaper54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray64);
        org.junit.Assert.assertNotNull(charSequenceTranslator65);
        org.junit.Assert.assertNotNull(charSequenceTranslator66);
        org.junit.Assert.assertNotNull(charSequenceTranslator67);
        org.junit.Assert.assertNotNull(charSequenceTranslator68);
        org.junit.Assert.assertNotNull(charSequenceTranslator69);
        org.junit.Assert.assertNotNull(charSequenceTranslator70);
        org.junit.Assert.assertNotNull(charSequenceTranslator71);
        org.junit.Assert.assertNotNull(unicodeEscaper74);
        org.junit.Assert.assertNotNull(unicodeEscaper76);
        org.junit.Assert.assertNotNull(unicodeEscaper79);
        org.junit.Assert.assertNotNull(unicodeEscaper82);
        org.junit.Assert.assertNotNull(unicodeEscaper85);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray86);
        org.junit.Assert.assertNotNull(charSequenceTranslator87);
        org.junit.Assert.assertNotNull(charSequenceTranslator88);
        org.junit.Assert.assertNotNull(charSequenceTranslator89);
        org.junit.Assert.assertNotNull(charSequenceTranslator90);
        org.junit.Assert.assertNotNull(charSequenceTranslator91);
        org.junit.Assert.assertNotNull(charSequenceTranslator92);
    }

    @Test
    public void test05384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05384");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', (-1));
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "34");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper6 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper9 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between(0, (int) (byte) 100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper12 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(10, 10);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper15 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) -1, (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper17 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper19 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer21 = null;
        boolean boolean22 = unicodeEscaper19.translate((int) ' ', writer21);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper25 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str27 = unicodeEscaper25.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray28 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator29 = unicodeEscaper25.with(charSequenceTranslatorArray28);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator30 = unicodeEscaper19.with(charSequenceTranslatorArray28);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator31 = unicodeEscaper17.with(charSequenceTranslatorArray28);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper34 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer36 = null;
        boolean boolean37 = unicodeEscaper34.translate((int) '4', writer36);
        java.io.Writer writer39 = null;
        boolean boolean40 = unicodeEscaper34.translate((int) (byte) -1, writer39);
        java.io.Writer writer42 = null;
        boolean boolean43 = unicodeEscaper34.translate((int) (byte) -1, writer42);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray44 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator45 = unicodeEscaper34.with(charSequenceTranslatorArray44);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator46 = charSequenceTranslator31.with(charSequenceTranslatorArray44);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator47 = unicodeEscaper15.with(charSequenceTranslatorArray44);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator48 = unicodeEscaper12.with(charSequenceTranslatorArray44);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator49 = unicodeEscaper9.with(charSequenceTranslatorArray44);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator50 = unicodeEscaper6.with(charSequenceTranslatorArray44);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator51 = unicodeEscaper2.with(charSequenceTranslatorArray44);
        java.io.Writer writer53 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean54 = unicodeEscaper2.translate((int) (short) 0, writer53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\u0033\\u0034" + "'", str4, "\\u0033\\u0034");
        org.junit.Assert.assertNotNull(unicodeEscaper6);
        org.junit.Assert.assertNotNull(unicodeEscaper9);
        org.junit.Assert.assertNotNull(unicodeEscaper12);
        org.junit.Assert.assertNotNull(unicodeEscaper15);
        org.junit.Assert.assertNotNull(unicodeEscaper17);
        org.junit.Assert.assertNotNull(unicodeEscaper19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "0" + "'", str27, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray28);
        org.junit.Assert.assertNotNull(charSequenceTranslator29);
        org.junit.Assert.assertNotNull(charSequenceTranslator30);
        org.junit.Assert.assertNotNull(charSequenceTranslator31);
        org.junit.Assert.assertNotNull(unicodeEscaper34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray44);
        org.junit.Assert.assertNotNull(charSequenceTranslator45);
        org.junit.Assert.assertNotNull(charSequenceTranslator46);
        org.junit.Assert.assertNotNull(charSequenceTranslator47);
        org.junit.Assert.assertNotNull(charSequenceTranslator48);
        org.junit.Assert.assertNotNull(charSequenceTranslator49);
        org.junit.Assert.assertNotNull(charSequenceTranslator50);
        org.junit.Assert.assertNotNull(charSequenceTranslator51);
    }

    @Test
    public void test05385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05385");
        java.io.IOException iOException1 = new java.io.IOException();
        java.io.IOException iOException2 = new java.io.IOException();
        iOException1.addSuppressed((java.lang.Throwable) iOException2);
        java.lang.Throwable[] throwableArray4 = iOException2.getSuppressed();
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException7 = new java.io.IOException("");
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        iOException2.addSuppressed((java.lang.Throwable) iOException8);
        java.lang.Throwable[] throwableArray10 = iOException2.getSuppressed();
        java.lang.Throwable[] throwableArray11 = iOException2.getSuppressed();
        java.io.IOException iOException12 = new java.io.IOException("java.io.IOException: java.io.IOException", (java.lang.Throwable) iOException2);
        java.lang.Throwable[] throwableArray13 = iOException2.getSuppressed();
        java.io.IOException iOException14 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException18 = new java.io.IOException("java.io.IOException: java.io.IOException");
        java.io.IOException iOException21 = new java.io.IOException("0");
        java.lang.Throwable[] throwableArray22 = iOException21.getSuppressed();
        java.io.IOException iOException23 = new java.io.IOException("hi!", (java.lang.Throwable) iOException21);
        iOException18.addSuppressed((java.lang.Throwable) iOException21);
        java.io.IOException iOException25 = new java.io.IOException("java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException18);
        java.lang.Throwable[] throwableArray26 = iOException25.getSuppressed();
        java.io.IOException iOException27 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException25);
        java.io.IOException iOException29 = new java.io.IOException("0");
        java.io.IOException iOException30 = new java.io.IOException((java.lang.Throwable) iOException29);
        java.lang.Throwable[] throwableArray31 = iOException30.getSuppressed();
        java.lang.Throwable[] throwableArray32 = iOException30.getSuppressed();
        java.io.IOException iOException33 = new java.io.IOException((java.lang.Throwable) iOException30);
        iOException27.addSuppressed((java.lang.Throwable) iOException33);
        iOException14.addSuppressed((java.lang.Throwable) iOException27);
        java.io.IOException iOException36 = new java.io.IOException((java.lang.Throwable) iOException27);
        java.lang.String str37 = iOException36.toString();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "java.io.IOException: java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str37, "java.io.IOException: java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
    }

    @Test
    public void test05386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05386");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) ' ');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper4 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer6 = null;
        boolean boolean7 = unicodeEscaper4.translate((int) ' ', writer6);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper10 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str12 = unicodeEscaper10.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray13 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator14 = unicodeEscaper10.with(charSequenceTranslatorArray13);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator15 = unicodeEscaper4.with(charSequenceTranslatorArray13);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator16 = unicodeEscaper2.with(charSequenceTranslatorArray13);
        java.io.Writer writer18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = unicodeEscaper2.translate((int) (byte) -1, writer18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "0" + "'", str12, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray13);
        org.junit.Assert.assertNotNull(charSequenceTranslator14);
        org.junit.Assert.assertNotNull(charSequenceTranslator15);
        org.junit.Assert.assertNotNull(charSequenceTranslator16);
    }

    @Test
    public void test05387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05387");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(1, (int) 'a');
        java.io.Writer writer5 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int6 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u\\u0030\\u00306Aa\\u\\u0030\\u003076a\\u002E\\u\\u0030\\u003069\\u\\u0030\\u00306F\\u002EIOE\\u\\u0030\\u003078\\u\\u0030\\u00306\\u0033\\u\\u0030\\u003065\\u\\u0030\\u00307\\u0030\\u\\u0030\\u00307\\u0034\\u\\u0030\\u003069\\u\\u0030\\u00306F\\u\\u0030\\u00306E:\\u\\u0030\\u0030\\u0032\\u0030\\u\\u0030\\u00306Aa\\u\\u0030\\u003076a\\u002E\\u\\u0030\\u003069\\u\\u0030\\u00306F\\u002EIOE\\u\\u0030\\u003078\\u\\u0030\\u00306\\u0033\\u\\u0030\\u003065\\u\\u0030\\u00307\\u0030\\u\\u0030\\u00307\\u0034\\u\\u0030\\u003069\\u\\u0030\\u00306F\\u\\u0030\\u00306E:\\u\\u0030\\u0030\\u0032\\u0030\\u\\u0030\\u00306Aa\\u\\u0030\\u003076a\\u002E\\u\\u0030\\u003069\\u\\u0030\\u00306F\\u002EIOE\\u\\u0030\\u003078\\u\\u0030\\u00306\\u0033\\u\\u0030\\u003065\\u\\u0030\\u00307\\u0030\\u\\u0030\\u00307\\u0034\\u\\u0030\\u003069\\u\\u0030\\u00306F\\u\\u0030\\u00306E:\\u\\u0030\\u0030\\u0032\\u0030\\u0030", (int) (short) 100, writer5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
    }

    @Test
    public void test05388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05388");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) ' ');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.io.Writer writer8 = null;
        int int9 = unicodeEscaper5.translate((java.lang.CharSequence) "23", (int) (short) 0, writer8);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper11 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper13 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer15 = null;
        boolean boolean16 = unicodeEscaper13.translate((int) ' ', writer15);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper19 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str21 = unicodeEscaper19.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray22 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator23 = unicodeEscaper19.with(charSequenceTranslatorArray22);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator24 = unicodeEscaper13.with(charSequenceTranslatorArray22);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator25 = unicodeEscaper11.with(charSequenceTranslatorArray22);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator26 = unicodeEscaper5.with(charSequenceTranslatorArray22);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator27 = unicodeEscaper2.with(charSequenceTranslatorArray22);
        java.lang.Class<?> wildcardClass28 = charSequenceTranslatorArray22.getClass();
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(unicodeEscaper11);
        org.junit.Assert.assertNotNull(unicodeEscaper13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "0" + "'", str21, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray22);
        org.junit.Assert.assertNotNull(charSequenceTranslator23);
        org.junit.Assert.assertNotNull(charSequenceTranslator24);
        org.junit.Assert.assertNotNull(charSequenceTranslator25);
        org.junit.Assert.assertNotNull(charSequenceTranslator26);
        org.junit.Assert.assertNotNull(charSequenceTranslator27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test05389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05389");
        java.io.IOException iOException2 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030");
        java.io.IOException iOException3 = new java.io.IOException("java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException2);
        java.lang.Class<?> wildcardClass4 = iOException2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test05390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05390");
        java.io.IOException iOException0 = new java.io.IOException();
        java.io.IOException iOException1 = new java.io.IOException();
        iOException0.addSuppressed((java.lang.Throwable) iOException1);
        java.io.IOException iOException3 = new java.io.IOException();
        java.io.IOException iOException4 = new java.io.IOException();
        iOException3.addSuppressed((java.lang.Throwable) iOException4);
        java.lang.Throwable[] throwableArray6 = iOException4.getSuppressed();
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.io.IOException iOException9 = new java.io.IOException("");
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException9);
        iOException4.addSuppressed((java.lang.Throwable) iOException10);
        iOException1.addSuppressed((java.lang.Throwable) iOException10);
        java.lang.Throwable[] throwableArray13 = iOException1.getSuppressed();
        java.lang.Throwable[] throwableArray14 = iOException1.getSuppressed();
        java.lang.Throwable[] throwableArray15 = iOException1.getSuppressed();
        java.io.IOException iOException16 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.io.IOException iOException17 = new java.io.IOException((java.lang.Throwable) iOException16);
        java.lang.Class<?> wildcardClass18 = iOException16.getClass();
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test05391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05391");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 100, (-1));
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper5.translate((int) (short) 10, writer7);
        java.io.Writer writer11 = null;
        int int12 = unicodeEscaper5.translate((java.lang.CharSequence) "0", (int) (byte) 0, writer11);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper15 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) 'a', (int) '4');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper18 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str20 = unicodeEscaper18.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray21 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator22 = unicodeEscaper18.with(charSequenceTranslatorArray21);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator23 = unicodeEscaper15.with(charSequenceTranslatorArray21);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator24 = unicodeEscaper5.with(charSequenceTranslatorArray21);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper27 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, 10);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper30 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper32 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer34 = null;
        boolean boolean35 = unicodeEscaper32.translate((int) ' ', writer34);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper38 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str40 = unicodeEscaper38.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray41 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator42 = unicodeEscaper38.with(charSequenceTranslatorArray41);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator43 = unicodeEscaper32.with(charSequenceTranslatorArray41);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator44 = unicodeEscaper30.with(charSequenceTranslatorArray41);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator45 = unicodeEscaper27.with(charSequenceTranslatorArray41);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator46 = charSequenceTranslator24.with(charSequenceTranslatorArray41);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator47 = unicodeEscaper2.with(charSequenceTranslatorArray41);
        java.io.Writer writer49 = null;
        boolean boolean50 = unicodeEscaper2.translate((int) (short) 0, writer49);
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(unicodeEscaper15);
        org.junit.Assert.assertNotNull(unicodeEscaper18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "0" + "'", str20, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray21);
        org.junit.Assert.assertNotNull(charSequenceTranslator22);
        org.junit.Assert.assertNotNull(charSequenceTranslator23);
        org.junit.Assert.assertNotNull(charSequenceTranslator24);
        org.junit.Assert.assertNotNull(unicodeEscaper27);
        org.junit.Assert.assertNotNull(unicodeEscaper30);
        org.junit.Assert.assertNotNull(unicodeEscaper32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "0" + "'", str40, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray41);
        org.junit.Assert.assertNotNull(charSequenceTranslator42);
        org.junit.Assert.assertNotNull(charSequenceTranslator43);
        org.junit.Assert.assertNotNull(charSequenceTranslator44);
        org.junit.Assert.assertNotNull(charSequenceTranslator45);
        org.junit.Assert.assertNotNull(charSequenceTranslator46);
        org.junit.Assert.assertNotNull(charSequenceTranslator47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test05392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05392");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) ' ', (int) (short) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between(1, (int) (short) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper8 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str10 = unicodeEscaper8.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray11 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator12 = unicodeEscaper8.with(charSequenceTranslatorArray11);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator13 = unicodeEscaper5.with(charSequenceTranslatorArray11);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator14 = unicodeEscaper2.with(charSequenceTranslatorArray11);
        java.io.Writer writer16 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceTranslator14.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: ", writer16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertNotNull(unicodeEscaper8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "0" + "'", str10, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray11);
        org.junit.Assert.assertNotNull(charSequenceTranslator12);
        org.junit.Assert.assertNotNull(charSequenceTranslator13);
        org.junit.Assert.assertNotNull(charSequenceTranslator14);
    }

    @Test
    public void test05393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05393");
        java.io.IOException iOException4 = new java.io.IOException("");
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.io.IOException iOException7 = new java.io.IOException("");
        iOException5.addSuppressed((java.lang.Throwable) iOException7);
        java.io.IOException iOException9 = new java.io.IOException("java.io.IOException: 0", (java.lang.Throwable) iOException7);
        java.io.IOException iOException10 = new java.io.IOException("java.io.IOException: java.io.IOException: java.io.IOException", (java.lang.Throwable) iOException7);
        java.io.IOException iOException13 = new java.io.IOException();
        java.io.IOException iOException14 = new java.io.IOException();
        iOException13.addSuppressed((java.lang.Throwable) iOException14);
        java.io.IOException iOException16 = new java.io.IOException();
        java.io.IOException iOException17 = new java.io.IOException();
        iOException16.addSuppressed((java.lang.Throwable) iOException17);
        java.lang.Throwable[] throwableArray19 = iOException17.getSuppressed();
        java.io.IOException iOException20 = new java.io.IOException((java.lang.Throwable) iOException17);
        java.io.IOException iOException22 = new java.io.IOException("");
        java.io.IOException iOException23 = new java.io.IOException((java.lang.Throwable) iOException22);
        iOException17.addSuppressed((java.lang.Throwable) iOException23);
        iOException14.addSuppressed((java.lang.Throwable) iOException23);
        java.io.IOException iOException26 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException23);
        java.io.IOException iOException27 = new java.io.IOException((java.lang.Throwable) iOException23);
        java.io.IOException iOException30 = new java.io.IOException();
        java.io.IOException iOException31 = new java.io.IOException();
        iOException30.addSuppressed((java.lang.Throwable) iOException31);
        java.io.IOException iOException33 = new java.io.IOException("0", (java.lang.Throwable) iOException30);
        java.io.IOException iOException34 = new java.io.IOException((java.lang.Throwable) iOException33);
        java.io.IOException iOException35 = new java.io.IOException((java.lang.Throwable) iOException34);
        java.io.IOException iOException36 = new java.io.IOException((java.lang.Throwable) iOException35);
        java.lang.Throwable[] throwableArray37 = iOException36.getSuppressed();
        java.io.IOException iOException38 = new java.io.IOException("java.io.IOException: java.io.IOException", (java.lang.Throwable) iOException36);
        iOException23.addSuppressed((java.lang.Throwable) iOException36);
        java.io.IOException iOException40 = new java.io.IOException((java.lang.Throwable) iOException36);
        java.io.IOException iOException41 = new java.io.IOException("java.io.IOException: A", (java.lang.Throwable) iOException40);
        iOException10.addSuppressed((java.lang.Throwable) iOException41);
        java.io.IOException iOException43 = new java.io.IOException("20", (java.lang.Throwable) iOException10);
        java.io.IOException iOException44 = new java.io.IOException((java.lang.Throwable) iOException10);
        java.lang.Throwable[] throwableArray45 = iOException10.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray45);
    }

    @Test
    public void test05394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05394");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper1 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (short) 10);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper4 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) '4', (int) (short) 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper7 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper10 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', (int) (short) 0);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray11 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper10 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator12 = unicodeEscaper7.with(charSequenceTranslatorArray11);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator13 = unicodeEscaper4.with(charSequenceTranslatorArray11);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator14 = unicodeEscaper1.with(charSequenceTranslatorArray11);
        java.lang.String str16 = unicodeEscaper1.translate((java.lang.CharSequence) "java.io.IOException: \\\\u0075006A\\\\u00750061\\\\u00750076\\\\u00750061\\\\u0075002E\\\\u00750069\\\\u0075006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E\\\\u0075003A\\\\u00750020");
        java.io.Writer writer19 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int20 = unicodeEscaper1.translate((java.lang.CharSequence) "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: ", 100, writer19);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper1);
        org.junit.Assert.assertNotNull(unicodeEscaper4);
        org.junit.Assert.assertNotNull(unicodeEscaper7);
        org.junit.Assert.assertNotNull(unicodeEscaper10);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray11);
        org.junit.Assert.assertNotNull(charSequenceTranslator12);
        org.junit.Assert.assertNotNull(charSequenceTranslator13);
        org.junit.Assert.assertNotNull(charSequenceTranslator14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "java.io.IOException: \\\\u0075006A\\\\u00750061\\\\u00750076\\\\u00750061\\\\u0075002E\\\\u00750069\\\\u0075006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E\\\\u0075003A\\\\u00750020" + "'", str16, "java.io.IOException: \\\\u0075006A\\\\u00750061\\\\u00750076\\\\u00750061\\\\u0075002E\\\\u00750069\\\\u0075006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E\\\\u0075003A\\\\u00750020");
    }

    @Test
    public void test05395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05395");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) (short) 10, writer4);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper8 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (short) -1, (int) '4');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper11 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 0, 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper14 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 0, (int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper17 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper20 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer22 = null;
        boolean boolean23 = unicodeEscaper20.translate((int) '4', writer22);
        java.io.Writer writer25 = null;
        boolean boolean26 = unicodeEscaper20.translate((int) (byte) -1, writer25);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper29 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper31 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper33 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str35 = unicodeEscaper33.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray36 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper29, unicodeEscaper31, unicodeEscaper33 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator37 = unicodeEscaper20.with(charSequenceTranslatorArray36);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator38 = unicodeEscaper17.with(charSequenceTranslatorArray36);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator39 = unicodeEscaper14.with(charSequenceTranslatorArray36);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator40 = unicodeEscaper11.with(charSequenceTranslatorArray36);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator41 = unicodeEscaper8.with(charSequenceTranslatorArray36);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator42 = unicodeEscaper2.with(charSequenceTranslatorArray36);
        java.io.Writer writer44 = null;
        boolean boolean45 = unicodeEscaper2.translate((int) 'a', writer44);
        java.io.Writer writer48 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int49 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: java.io.IOException: \\\\u00750068\\\\u00750069\\\\u00750021", (int) (short) 0, writer48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper8);
        org.junit.Assert.assertNotNull(unicodeEscaper11);
        org.junit.Assert.assertNotNull(unicodeEscaper14);
        org.junit.Assert.assertNotNull(unicodeEscaper17);
        org.junit.Assert.assertNotNull(unicodeEscaper20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper29);
        org.junit.Assert.assertNotNull(unicodeEscaper31);
        org.junit.Assert.assertNotNull(unicodeEscaper33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str35, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray36);
        org.junit.Assert.assertNotNull(charSequenceTranslator37);
        org.junit.Assert.assertNotNull(charSequenceTranslator38);
        org.junit.Assert.assertNotNull(charSequenceTranslator39);
        org.junit.Assert.assertNotNull(charSequenceTranslator40);
        org.junit.Assert.assertNotNull(charSequenceTranslator41);
        org.junit.Assert.assertNotNull(charSequenceTranslator42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test05396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05396");
        java.io.IOException iOException1 = new java.io.IOException("hi!");
        java.lang.Throwable[] throwableArray2 = iOException1.getSuppressed();
        java.io.IOException iOException3 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.lang.Throwable[] throwableArray4 = iOException3.getSuppressed();
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException3);
        java.io.IOException iOException11 = new java.io.IOException();
        java.io.IOException iOException12 = new java.io.IOException();
        iOException11.addSuppressed((java.lang.Throwable) iOException12);
        java.io.IOException iOException14 = new java.io.IOException("0", (java.lang.Throwable) iOException11);
        java.io.IOException iOException15 = new java.io.IOException((java.lang.Throwable) iOException14);
        java.io.IOException iOException16 = new java.io.IOException((java.lang.Throwable) iOException15);
        java.io.IOException iOException17 = new java.io.IOException((java.lang.Throwable) iOException16);
        java.lang.Throwable[] throwableArray18 = iOException17.getSuppressed();
        java.io.IOException iOException19 = new java.io.IOException("java.io.IOException: java.io.IOException", (java.lang.Throwable) iOException17);
        java.io.IOException iOException20 = new java.io.IOException((java.lang.Throwable) iOException19);
        java.io.IOException iOException24 = new java.io.IOException("0");
        java.lang.Throwable[] throwableArray25 = iOException24.getSuppressed();
        java.io.IOException iOException26 = new java.io.IOException("hi!", (java.lang.Throwable) iOException24);
        java.io.IOException iOException27 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException24);
        iOException19.addSuppressed((java.lang.Throwable) iOException27);
        java.io.IOException iOException29 = new java.io.IOException("\\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\u0063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E: \\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\u0063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E", (java.lang.Throwable) iOException27);
        java.io.IOException iOException30 = new java.io.IOException("java.io.IOException: java.io.IOException: \\u005Cu\\u0030\\u0030\\u0036\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0032\\u0031", (java.lang.Throwable) iOException29);
        java.io.IOException iOException31 = new java.io.IOException("java.io.IOException: java.io.IOException: java.io.IOException: 0", (java.lang.Throwable) iOException29);
        iOException3.addSuppressed((java.lang.Throwable) iOException29);
        java.io.IOException iOException37 = new java.io.IOException("");
        java.io.IOException iOException38 = new java.io.IOException((java.lang.Throwable) iOException37);
        java.io.IOException iOException40 = new java.io.IOException("");
        iOException38.addSuppressed((java.lang.Throwable) iOException40);
        java.io.IOException iOException42 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException40);
        java.io.IOException iOException43 = new java.io.IOException("java.io.IOException: \\u0068\\u0069\\u0021", (java.lang.Throwable) iOException40);
        java.io.IOException iOException44 = new java.io.IOException();
        java.io.IOException iOException45 = new java.io.IOException();
        iOException44.addSuppressed((java.lang.Throwable) iOException45);
        java.lang.Throwable[] throwableArray47 = iOException45.getSuppressed();
        java.lang.Throwable[] throwableArray48 = iOException45.getSuppressed();
        java.io.IOException iOException50 = new java.io.IOException();
        java.io.IOException iOException51 = new java.io.IOException();
        iOException50.addSuppressed((java.lang.Throwable) iOException51);
        java.io.IOException iOException53 = new java.io.IOException("0", (java.lang.Throwable) iOException50);
        java.io.IOException iOException54 = new java.io.IOException((java.lang.Throwable) iOException53);
        iOException45.addSuppressed((java.lang.Throwable) iOException54);
        java.lang.Throwable[] throwableArray56 = iOException45.getSuppressed();
        iOException40.addSuppressed((java.lang.Throwable) iOException45);
        java.io.IOException iOException58 = new java.io.IOException("\\\\u00750068\\\\u00750069\\\\u00750021", (java.lang.Throwable) iOException45);
        java.io.IOException iOException59 = new java.io.IOException((java.lang.Throwable) iOException58);
        java.io.IOException iOException60 = new java.io.IOException((java.lang.Throwable) iOException58);
        java.io.IOException iOException61 = new java.io.IOException((java.lang.Throwable) iOException58);
        java.lang.Throwable[] throwableArray62 = iOException61.getSuppressed();
        iOException29.addSuppressed((java.lang.Throwable) iOException61);
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(throwableArray62);
    }

    @Test
    public void test05397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05397");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 10, (int) (short) 1);
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper7 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 0, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper9 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer11 = null;
        boolean boolean12 = unicodeEscaper9.translate((int) ' ', writer11);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper15 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str17 = unicodeEscaper15.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray18 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator19 = unicodeEscaper15.with(charSequenceTranslatorArray18);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator20 = unicodeEscaper9.with(charSequenceTranslatorArray18);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator21 = unicodeEscaper7.with(charSequenceTranslatorArray18);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator22 = unicodeEscaper2.with(charSequenceTranslatorArray18);
        java.io.Writer writer25 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int26 = charSequenceTranslator22.translate((java.lang.CharSequence) "\\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E: \\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E: \\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E: 0", (int) (byte) -1, writer25);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034" + "'", str4, "\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034");
        org.junit.Assert.assertNotNull(unicodeEscaper7);
        org.junit.Assert.assertNotNull(unicodeEscaper9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "0" + "'", str17, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray18);
        org.junit.Assert.assertNotNull(charSequenceTranslator19);
        org.junit.Assert.assertNotNull(charSequenceTranslator20);
        org.junit.Assert.assertNotNull(charSequenceTranslator21);
        org.junit.Assert.assertNotNull(charSequenceTranslator22);
    }

    @Test
    public void test05398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05398");
        java.io.IOException iOException1 = new java.io.IOException();
        java.io.IOException iOException2 = new java.io.IOException();
        iOException1.addSuppressed((java.lang.Throwable) iOException2);
        java.io.IOException iOException4 = new java.io.IOException("0", (java.lang.Throwable) iOException1);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.io.IOException iOException7 = new java.io.IOException();
        java.io.IOException iOException8 = new java.io.IOException();
        iOException7.addSuppressed((java.lang.Throwable) iOException8);
        java.io.IOException iOException10 = new java.io.IOException();
        java.io.IOException iOException11 = new java.io.IOException();
        iOException10.addSuppressed((java.lang.Throwable) iOException11);
        java.lang.Throwable[] throwableArray13 = iOException11.getSuppressed();
        java.io.IOException iOException14 = new java.io.IOException((java.lang.Throwable) iOException11);
        java.io.IOException iOException16 = new java.io.IOException("");
        java.io.IOException iOException17 = new java.io.IOException((java.lang.Throwable) iOException16);
        iOException11.addSuppressed((java.lang.Throwable) iOException17);
        iOException8.addSuppressed((java.lang.Throwable) iOException17);
        iOException6.addSuppressed((java.lang.Throwable) iOException17);
        java.lang.String str21 = iOException17.toString();
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "java.io.IOException: java.io.IOException: " + "'", str21, "java.io.IOException: java.io.IOException: ");
    }

    @Test
    public void test05399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05399");
        java.io.IOException iOException3 = new java.io.IOException();
        java.io.IOException iOException4 = new java.io.IOException();
        iOException3.addSuppressed((java.lang.Throwable) iOException4);
        java.io.IOException iOException6 = new java.io.IOException();
        java.io.IOException iOException7 = new java.io.IOException();
        iOException6.addSuppressed((java.lang.Throwable) iOException7);
        java.lang.Throwable[] throwableArray9 = iOException7.getSuppressed();
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.io.IOException iOException12 = new java.io.IOException("");
        java.io.IOException iOException13 = new java.io.IOException((java.lang.Throwable) iOException12);
        iOException7.addSuppressed((java.lang.Throwable) iOException13);
        iOException4.addSuppressed((java.lang.Throwable) iOException13);
        java.io.IOException iOException16 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException13);
        java.io.IOException iOException17 = new java.io.IOException((java.lang.Throwable) iOException13);
        java.io.IOException iOException20 = new java.io.IOException();
        java.io.IOException iOException21 = new java.io.IOException();
        iOException20.addSuppressed((java.lang.Throwable) iOException21);
        java.io.IOException iOException23 = new java.io.IOException("0", (java.lang.Throwable) iOException20);
        java.io.IOException iOException24 = new java.io.IOException((java.lang.Throwable) iOException23);
        java.io.IOException iOException25 = new java.io.IOException((java.lang.Throwable) iOException24);
        java.io.IOException iOException26 = new java.io.IOException((java.lang.Throwable) iOException25);
        java.lang.Throwable[] throwableArray27 = iOException26.getSuppressed();
        java.io.IOException iOException28 = new java.io.IOException("java.io.IOException: java.io.IOException", (java.lang.Throwable) iOException26);
        iOException13.addSuppressed((java.lang.Throwable) iOException26);
        java.io.IOException iOException30 = new java.io.IOException((java.lang.Throwable) iOException26);
        java.io.IOException iOException31 = new java.io.IOException("java.io.IOException: A", (java.lang.Throwable) iOException30);
        java.lang.Throwable[] throwableArray32 = iOException30.getSuppressed();
        java.io.IOException iOException33 = new java.io.IOException("java.io.IOException: \\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034", (java.lang.Throwable) iOException30);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray32);
    }

    @Test
    public void test05400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05400");
        java.io.IOException iOException1 = new java.io.IOException("java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0068\\u0069\\u0021");
    }

    @Test
    public void test05401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05401");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) '#', (int) (short) 100);
        java.io.Writer writer4 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean5 = unicodeEscaper2.translate((int) '4', writer4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
    }

    @Test
    public void test05402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05402");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between(0, (int) (short) 0);
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A \\u0036\\u0034");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper7 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper9 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer11 = null;
        boolean boolean12 = unicodeEscaper9.translate((int) ' ', writer11);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper15 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str17 = unicodeEscaper15.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray18 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator19 = unicodeEscaper15.with(charSequenceTranslatorArray18);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator20 = unicodeEscaper9.with(charSequenceTranslatorArray18);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator21 = unicodeEscaper7.with(charSequenceTranslatorArray18);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper24 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer26 = null;
        boolean boolean27 = unicodeEscaper24.translate((int) (short) 10, writer26);
        java.lang.String str29 = unicodeEscaper24.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper32 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer34 = null;
        boolean boolean35 = unicodeEscaper32.translate((int) '4', writer34);
        java.io.Writer writer37 = null;
        boolean boolean38 = unicodeEscaper32.translate((int) (byte) -1, writer37);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper41 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper43 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper45 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str47 = unicodeEscaper45.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray48 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper41, unicodeEscaper43, unicodeEscaper45 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator49 = unicodeEscaper32.with(charSequenceTranslatorArray48);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator50 = unicodeEscaper24.with(charSequenceTranslatorArray48);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper53 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.lang.String str55 = unicodeEscaper53.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray56 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper53 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator57 = unicodeEscaper24.with(charSequenceTranslatorArray56);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator58 = unicodeEscaper7.with(charSequenceTranslatorArray56);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator59 = unicodeEscaper2.with(charSequenceTranslatorArray56);
        java.io.Writer writer62 = null;
        int int63 = unicodeEscaper2.translate((java.lang.CharSequence) "\\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\u0063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E: 61", (int) (short) 100, writer62);
        java.io.Writer writer66 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int67 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: 23", (int) (short) 100, writer66);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A \\u0036\\u0034" + "'", str4, "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A \\u0036\\u0034");
        org.junit.Assert.assertNotNull(unicodeEscaper7);
        org.junit.Assert.assertNotNull(unicodeEscaper9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "0" + "'", str17, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray18);
        org.junit.Assert.assertNotNull(charSequenceTranslator19);
        org.junit.Assert.assertNotNull(charSequenceTranslator20);
        org.junit.Assert.assertNotNull(charSequenceTranslator21);
        org.junit.Assert.assertNotNull(unicodeEscaper24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "0" + "'", str29, "0");
        org.junit.Assert.assertNotNull(unicodeEscaper32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper41);
        org.junit.Assert.assertNotNull(unicodeEscaper43);
        org.junit.Assert.assertNotNull(unicodeEscaper45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str47, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray48);
        org.junit.Assert.assertNotNull(charSequenceTranslator49);
        org.junit.Assert.assertNotNull(charSequenceTranslator50);
        org.junit.Assert.assertNotNull(unicodeEscaper53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str55, "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray56);
        org.junit.Assert.assertNotNull(charSequenceTranslator57);
        org.junit.Assert.assertNotNull(charSequenceTranslator58);
        org.junit.Assert.assertNotNull(charSequenceTranslator59);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
    }

    @Test
    public void test05403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05403");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) 'a');
        java.io.Writer writer5 = null;
        int int6 = unicodeEscaper2.translate((java.lang.CharSequence) "\\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\u0063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E: \\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\u0063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E", 0, writer5);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper9 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer11 = null;
        boolean boolean12 = unicodeEscaper9.translate((int) '4', writer11);
        java.io.Writer writer14 = null;
        boolean boolean15 = unicodeEscaper9.translate((int) (byte) -1, writer14);
        java.lang.String str17 = unicodeEscaper9.translate((java.lang.CharSequence) "java.io.IOException");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper20 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, 10);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper23 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper25 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer27 = null;
        boolean boolean28 = unicodeEscaper25.translate((int) ' ', writer27);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper31 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str33 = unicodeEscaper31.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray34 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator35 = unicodeEscaper31.with(charSequenceTranslatorArray34);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator36 = unicodeEscaper25.with(charSequenceTranslatorArray34);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator37 = unicodeEscaper23.with(charSequenceTranslatorArray34);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator38 = unicodeEscaper20.with(charSequenceTranslatorArray34);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator39 = unicodeEscaper9.with(charSequenceTranslatorArray34);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator40 = unicodeEscaper2.with(charSequenceTranslatorArray34);
        java.lang.Class<?> wildcardClass41 = charSequenceTranslatorArray34.getClass();
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(unicodeEscaper9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "java.io.IOException" + "'", str17, "java.io.IOException");
        org.junit.Assert.assertNotNull(unicodeEscaper20);
        org.junit.Assert.assertNotNull(unicodeEscaper23);
        org.junit.Assert.assertNotNull(unicodeEscaper25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "0" + "'", str33, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray34);
        org.junit.Assert.assertNotNull(charSequenceTranslator35);
        org.junit.Assert.assertNotNull(charSequenceTranslator36);
        org.junit.Assert.assertNotNull(charSequenceTranslator37);
        org.junit.Assert.assertNotNull(charSequenceTranslator38);
        org.junit.Assert.assertNotNull(charSequenceTranslator39);
        org.junit.Assert.assertNotNull(charSequenceTranslator40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test05404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05404");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) 'a', 1);
        java.io.Writer writer4 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean5 = unicodeEscaper2.translate((int) (short) 100, writer4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
    }

    @Test
    public void test05405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05405");
        java.io.IOException iOException2 = new java.io.IOException();
        java.io.IOException iOException3 = new java.io.IOException();
        iOException2.addSuppressed((java.lang.Throwable) iOException3);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.lang.Throwable[] throwableArray6 = iOException5.getSuppressed();
        java.io.IOException iOException9 = new java.io.IOException();
        java.io.IOException iOException10 = new java.io.IOException();
        iOException9.addSuppressed((java.lang.Throwable) iOException10);
        java.io.IOException iOException12 = new java.io.IOException();
        java.io.IOException iOException13 = new java.io.IOException();
        iOException12.addSuppressed((java.lang.Throwable) iOException13);
        java.lang.Throwable[] throwableArray15 = iOException13.getSuppressed();
        java.io.IOException iOException16 = new java.io.IOException((java.lang.Throwable) iOException13);
        java.io.IOException iOException18 = new java.io.IOException("");
        java.io.IOException iOException19 = new java.io.IOException((java.lang.Throwable) iOException18);
        iOException13.addSuppressed((java.lang.Throwable) iOException19);
        iOException10.addSuppressed((java.lang.Throwable) iOException19);
        java.io.IOException iOException22 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException19);
        java.io.IOException iOException23 = new java.io.IOException("64", (java.lang.Throwable) iOException22);
        iOException5.addSuppressed((java.lang.Throwable) iOException22);
        java.io.IOException iOException25 = new java.io.IOException("1", (java.lang.Throwable) iOException22);
        java.lang.Throwable[] throwableArray26 = iOException25.getSuppressed();
        java.io.IOException iOException28 = new java.io.IOException();
        java.io.IOException iOException29 = new java.io.IOException();
        iOException28.addSuppressed((java.lang.Throwable) iOException29);
        java.io.IOException iOException31 = new java.io.IOException("0", (java.lang.Throwable) iOException28);
        java.io.IOException iOException32 = new java.io.IOException((java.lang.Throwable) iOException31);
        java.io.IOException iOException33 = new java.io.IOException((java.lang.Throwable) iOException32);
        java.io.IOException iOException35 = new java.io.IOException();
        java.io.IOException iOException36 = new java.io.IOException();
        iOException35.addSuppressed((java.lang.Throwable) iOException36);
        java.lang.Throwable[] throwableArray38 = iOException36.getSuppressed();
        java.lang.Throwable[] throwableArray39 = iOException36.getSuppressed();
        java.io.IOException iOException40 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException36);
        java.io.IOException iOException41 = new java.io.IOException();
        java.io.IOException iOException42 = new java.io.IOException();
        iOException41.addSuppressed((java.lang.Throwable) iOException42);
        java.io.IOException iOException44 = new java.io.IOException((java.lang.Throwable) iOException41);
        java.lang.Throwable[] throwableArray45 = iOException44.getSuppressed();
        iOException40.addSuppressed((java.lang.Throwable) iOException44);
        iOException32.addSuppressed((java.lang.Throwable) iOException44);
        java.io.IOException iOException48 = new java.io.IOException((java.lang.Throwable) iOException44);
        java.lang.Throwable[] throwableArray49 = iOException48.getSuppressed();
        iOException25.addSuppressed((java.lang.Throwable) iOException48);
        java.io.IOException iOException51 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0068\\u0069\\u0021", (java.lang.Throwable) iOException25);
        java.lang.String str52 = iOException51.toString();
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0068\\u0069\\u0021" + "'", str52, "java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0068\\u0069\\u0021");
    }

    @Test
    public void test05406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05406");
        java.io.IOException iOException2 = new java.io.IOException("0");
        java.io.IOException iOException3 = new java.io.IOException();
        java.io.IOException iOException4 = new java.io.IOException();
        iOException3.addSuppressed((java.lang.Throwable) iOException4);
        java.io.IOException iOException6 = new java.io.IOException();
        java.io.IOException iOException7 = new java.io.IOException();
        iOException6.addSuppressed((java.lang.Throwable) iOException7);
        java.lang.Throwable[] throwableArray9 = iOException7.getSuppressed();
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.io.IOException iOException12 = new java.io.IOException("");
        java.io.IOException iOException13 = new java.io.IOException((java.lang.Throwable) iOException12);
        iOException7.addSuppressed((java.lang.Throwable) iOException13);
        iOException4.addSuppressed((java.lang.Throwable) iOException13);
        iOException2.addSuppressed((java.lang.Throwable) iOException4);
        java.io.IOException iOException17 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.io.IOException iOException21 = new java.io.IOException("");
        java.io.IOException iOException22 = new java.io.IOException((java.lang.Throwable) iOException21);
        java.io.IOException iOException24 = new java.io.IOException("");
        iOException22.addSuppressed((java.lang.Throwable) iOException24);
        java.io.IOException iOException26 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException24);
        java.io.IOException iOException28 = new java.io.IOException("");
        java.io.IOException iOException29 = new java.io.IOException((java.lang.Throwable) iOException28);
        java.io.IOException iOException30 = new java.io.IOException((java.lang.Throwable) iOException28);
        iOException26.addSuppressed((java.lang.Throwable) iOException28);
        java.io.IOException iOException32 = new java.io.IOException("\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034", (java.lang.Throwable) iOException26);
        java.lang.Throwable[] throwableArray33 = iOException32.getSuppressed();
        iOException17.addSuppressed((java.lang.Throwable) iOException32);
        java.io.IOException iOException36 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030");
        iOException17.addSuppressed((java.lang.Throwable) iOException36);
        java.io.IOException iOException38 = new java.io.IOException("\\u005Cu\\u0030\\u0030\\u0036\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0032\\u0031", (java.lang.Throwable) iOException36);
        java.lang.Throwable[] throwableArray39 = iOException36.getSuppressed();
        java.lang.String str40 = iOException36.toString();
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030" + "'", str40, "java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030");
    }

    @Test
    public void test05407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05407");
        java.io.IOException iOException4 = new java.io.IOException("");
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.io.IOException iOException7 = new java.io.IOException("");
        iOException5.addSuppressed((java.lang.Throwable) iOException7);
        java.io.IOException iOException10 = new java.io.IOException("");
        java.io.IOException iOException11 = new java.io.IOException((java.lang.Throwable) iOException10);
        java.io.IOException iOException13 = new java.io.IOException("");
        iOException11.addSuppressed((java.lang.Throwable) iOException13);
        iOException5.addSuppressed((java.lang.Throwable) iOException11);
        java.io.IOException iOException16 = new java.io.IOException("0", (java.lang.Throwable) iOException5);
        java.io.IOException iOException17 = new java.io.IOException("\\u0033\\u0034", (java.lang.Throwable) iOException5);
        java.io.IOException iOException18 = new java.io.IOException("java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030", (java.lang.Throwable) iOException5);
        java.io.IOException iOException21 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030");
        java.io.IOException iOException22 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020", (java.lang.Throwable) iOException21);
        java.io.IOException iOException25 = new java.io.IOException();
        java.io.IOException iOException26 = new java.io.IOException();
        iOException25.addSuppressed((java.lang.Throwable) iOException26);
        java.io.IOException iOException28 = new java.io.IOException();
        java.io.IOException iOException29 = new java.io.IOException();
        iOException28.addSuppressed((java.lang.Throwable) iOException29);
        java.lang.Throwable[] throwableArray31 = iOException29.getSuppressed();
        java.io.IOException iOException32 = new java.io.IOException((java.lang.Throwable) iOException29);
        java.io.IOException iOException34 = new java.io.IOException("");
        java.io.IOException iOException35 = new java.io.IOException((java.lang.Throwable) iOException34);
        iOException29.addSuppressed((java.lang.Throwable) iOException35);
        iOException26.addSuppressed((java.lang.Throwable) iOException35);
        java.io.IOException iOException38 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException35);
        java.io.IOException iOException39 = new java.io.IOException("64", (java.lang.Throwable) iOException38);
        java.lang.Throwable[] throwableArray40 = iOException39.getSuppressed();
        iOException22.addSuppressed((java.lang.Throwable) iOException39);
        iOException5.addSuppressed((java.lang.Throwable) iOException22);
        java.lang.String str43 = iOException22.toString();
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020" + "'", str43, "java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020");
    }

    @Test
    public void test05408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05408");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) '#', (int) 'a');
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) (short) -1, writer4);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper8 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 0, (int) (short) 1);
        java.io.Writer writer10 = null;
        boolean boolean11 = unicodeEscaper8.translate((int) '#', writer10);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper14 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (byte) 0, 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper17 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '#', 100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper20 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (byte) 1, (int) ' ');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper23 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper25 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer27 = null;
        boolean boolean28 = unicodeEscaper25.translate((int) ' ', writer27);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper31 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str33 = unicodeEscaper31.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray34 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator35 = unicodeEscaper31.with(charSequenceTranslatorArray34);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator36 = unicodeEscaper25.with(charSequenceTranslatorArray34);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator37 = unicodeEscaper23.with(charSequenceTranslatorArray34);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator38 = unicodeEscaper20.with(charSequenceTranslatorArray34);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator39 = unicodeEscaper17.with(charSequenceTranslatorArray34);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator40 = unicodeEscaper14.with(charSequenceTranslatorArray34);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator41 = unicodeEscaper8.with(charSequenceTranslatorArray34);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator42 = unicodeEscaper2.with(charSequenceTranslatorArray34);
        java.lang.Class<?> wildcardClass43 = charSequenceTranslatorArray34.getClass();
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper14);
        org.junit.Assert.assertNotNull(unicodeEscaper17);
        org.junit.Assert.assertNotNull(unicodeEscaper20);
        org.junit.Assert.assertNotNull(unicodeEscaper23);
        org.junit.Assert.assertNotNull(unicodeEscaper25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "0" + "'", str33, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray34);
        org.junit.Assert.assertNotNull(charSequenceTranslator35);
        org.junit.Assert.assertNotNull(charSequenceTranslator36);
        org.junit.Assert.assertNotNull(charSequenceTranslator37);
        org.junit.Assert.assertNotNull(charSequenceTranslator38);
        org.junit.Assert.assertNotNull(charSequenceTranslator39);
        org.junit.Assert.assertNotNull(charSequenceTranslator40);
        org.junit.Assert.assertNotNull(charSequenceTranslator41);
        org.junit.Assert.assertNotNull(charSequenceTranslator42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test05409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05409");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (short) 10, (int) (byte) 100);
        java.io.Writer writer5 = null;
        int int6 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030", 0, writer5);
        java.io.Writer writer8 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate((java.lang.CharSequence) "\\u005C\\u0075\\u0030\\u0030\\u0036\\u0038\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u0021", writer8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test05410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05410");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper1 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above(100);
        java.io.Writer writer3 = null;
        boolean boolean4 = unicodeEscaper1.translate((int) (byte) 0, writer3);
        org.junit.Assert.assertNotNull(unicodeEscaper1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test05411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05411");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 0, (int) (short) 0);
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0033\\u0038\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0033\\u0039\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0032\\u005C\\u0075\\u0030\\u0030\\u0033\\u0031");
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0033\\u0038\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0033\\u0039\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0032\\u005C\\u0075\\u0030\\u0030\\u0033\\u0031" + "'", str4, "java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0033\\u0038\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0033\\u0039\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0032\\u005C\\u0075\\u0030\\u0030\\u0033\\u0031");
    }

    @Test
    public void test05412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05412");
        java.io.IOException iOException1 = new java.io.IOException();
        java.io.IOException iOException2 = new java.io.IOException();
        iOException1.addSuppressed((java.lang.Throwable) iOException2);
        java.lang.Throwable[] throwableArray4 = iOException2.getSuppressed();
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException7 = new java.io.IOException("");
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        iOException2.addSuppressed((java.lang.Throwable) iOException8);
        java.lang.Throwable[] throwableArray10 = iOException2.getSuppressed();
        java.lang.Throwable[] throwableArray11 = iOException2.getSuppressed();
        java.io.IOException iOException12 = new java.io.IOException("java.io.IOException: java.io.IOException", (java.lang.Throwable) iOException2);
        java.io.IOException iOException13 = new java.io.IOException();
        java.io.IOException iOException14 = new java.io.IOException();
        iOException13.addSuppressed((java.lang.Throwable) iOException14);
        java.lang.Throwable[] throwableArray16 = iOException14.getSuppressed();
        java.lang.Throwable[] throwableArray17 = iOException14.getSuppressed();
        java.io.IOException iOException19 = new java.io.IOException();
        java.io.IOException iOException20 = new java.io.IOException();
        iOException19.addSuppressed((java.lang.Throwable) iOException20);
        java.io.IOException iOException22 = new java.io.IOException("0", (java.lang.Throwable) iOException19);
        java.io.IOException iOException23 = new java.io.IOException((java.lang.Throwable) iOException22);
        iOException14.addSuppressed((java.lang.Throwable) iOException23);
        java.lang.Throwable[] throwableArray25 = iOException23.getSuppressed();
        iOException12.addSuppressed((java.lang.Throwable) iOException23);
        java.io.IOException iOException27 = new java.io.IOException((java.lang.Throwable) iOException23);
        java.lang.String str28 = iOException27.toString();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "java.io.IOException: java.io.IOException: java.io.IOException: 0" + "'", str28, "java.io.IOException: java.io.IOException: java.io.IOException: 0");
    }

    @Test
    public void test05413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05413");
        java.io.IOException iOException5 = new java.io.IOException("");
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.io.IOException iOException8 = new java.io.IOException("");
        iOException6.addSuppressed((java.lang.Throwable) iOException8);
        java.io.IOException iOException10 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException8);
        java.io.IOException iOException11 = new java.io.IOException("java.io.IOException: \\u0068\\u0069\\u0021", (java.lang.Throwable) iOException8);
        java.io.IOException iOException12 = new java.io.IOException();
        java.io.IOException iOException13 = new java.io.IOException();
        iOException12.addSuppressed((java.lang.Throwable) iOException13);
        java.lang.Throwable[] throwableArray15 = iOException13.getSuppressed();
        java.lang.Throwable[] throwableArray16 = iOException13.getSuppressed();
        java.io.IOException iOException18 = new java.io.IOException();
        java.io.IOException iOException19 = new java.io.IOException();
        iOException18.addSuppressed((java.lang.Throwable) iOException19);
        java.io.IOException iOException21 = new java.io.IOException("0", (java.lang.Throwable) iOException18);
        java.io.IOException iOException22 = new java.io.IOException((java.lang.Throwable) iOException21);
        iOException13.addSuppressed((java.lang.Throwable) iOException22);
        java.lang.Throwable[] throwableArray24 = iOException13.getSuppressed();
        iOException8.addSuppressed((java.lang.Throwable) iOException13);
        java.io.IOException iOException26 = new java.io.IOException("java.io.IOException: java.io.IOException: java.io.IOException: 0", (java.lang.Throwable) iOException8);
        java.lang.Throwable[] throwableArray27 = iOException8.getSuppressed();
        java.io.IOException iOException28 = new java.io.IOException("java.io.IOException: java.io.IOException: hi!", (java.lang.Throwable) iOException8);
        java.lang.Class<?> wildcardClass29 = iOException8.getClass();
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test05414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05414");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((-1), (int) (short) 10);
        java.io.Writer writer5 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int6 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0068\\u0069\\u0021", (int) 'a', writer5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
    }

    @Test
    public void test05415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05415");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "0");
        java.io.Writer writer6 = null;
        boolean boolean7 = unicodeEscaper2.translate((int) 'a', writer6);
        java.io.Writer writer9 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", writer9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0" + "'", str4, "0");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test05416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05416");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) (short) 10, writer4);
        java.lang.String str7 = unicodeEscaper2.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper10 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer12 = null;
        boolean boolean13 = unicodeEscaper10.translate((int) '4', writer12);
        java.io.Writer writer15 = null;
        boolean boolean16 = unicodeEscaper10.translate((int) (byte) -1, writer15);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper19 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper21 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper23 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str25 = unicodeEscaper23.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray26 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper19, unicodeEscaper21, unicodeEscaper23 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator27 = unicodeEscaper10.with(charSequenceTranslatorArray26);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator28 = unicodeEscaper2.with(charSequenceTranslatorArray26);
        java.io.Writer writer31 = null;
        int int32 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a\\\\u0075002E\\u0069\\u006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\\\u0075003A\\\\u00750020\\u006Aa\\u0076a\\\\u0075002E\\u0069\\u006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (int) (byte) 10, writer31);
        java.io.Writer writer34 = null;
        boolean boolean35 = unicodeEscaper2.translate((int) (byte) 10, writer34);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper38 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) ' ', (int) (byte) 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper41 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between(0, (int) (short) 100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper44 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between(1, (int) (short) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper47 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str49 = unicodeEscaper47.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray50 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator51 = unicodeEscaper47.with(charSequenceTranslatorArray50);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator52 = unicodeEscaper44.with(charSequenceTranslatorArray50);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator53 = unicodeEscaper41.with(charSequenceTranslatorArray50);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator54 = unicodeEscaper38.with(charSequenceTranslatorArray50);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator55 = unicodeEscaper2.with(charSequenceTranslatorArray50);
        java.lang.Class<?> wildcardClass56 = charSequenceTranslatorArray50.getClass();
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0" + "'", str7, "0");
        org.junit.Assert.assertNotNull(unicodeEscaper10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper19);
        org.junit.Assert.assertNotNull(unicodeEscaper21);
        org.junit.Assert.assertNotNull(unicodeEscaper23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str25, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray26);
        org.junit.Assert.assertNotNull(charSequenceTranslator27);
        org.junit.Assert.assertNotNull(charSequenceTranslator28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper38);
        org.junit.Assert.assertNotNull(unicodeEscaper41);
        org.junit.Assert.assertNotNull(unicodeEscaper44);
        org.junit.Assert.assertNotNull(unicodeEscaper47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "0" + "'", str49, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray50);
        org.junit.Assert.assertNotNull(charSequenceTranslator51);
        org.junit.Assert.assertNotNull(charSequenceTranslator52);
        org.junit.Assert.assertNotNull(charSequenceTranslator53);
        org.junit.Assert.assertNotNull(charSequenceTranslator54);
        org.junit.Assert.assertNotNull(charSequenceTranslator55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test05417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05417");
        java.io.IOException iOException2 = new java.io.IOException("0");
        java.io.IOException iOException3 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException4 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException2);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.lang.String str6 = iOException5.toString();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "java.io.IOException: java.io.IOException: 0" + "'", str6, "java.io.IOException: java.io.IOException: 0");
    }

    @Test
    public void test05418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05418");
        java.io.IOException iOException1 = new java.io.IOException();
        java.io.IOException iOException2 = new java.io.IOException();
        iOException1.addSuppressed((java.lang.Throwable) iOException2);
        java.io.IOException iOException6 = new java.io.IOException("");
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException9 = new java.io.IOException("");
        iOException7.addSuppressed((java.lang.Throwable) iOException9);
        java.io.IOException iOException11 = new java.io.IOException("java.io.IOException: 0", (java.lang.Throwable) iOException9);
        iOException2.addSuppressed((java.lang.Throwable) iOException9);
        java.io.IOException iOException13 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException14 = new java.io.IOException();
        java.io.IOException iOException15 = new java.io.IOException();
        iOException14.addSuppressed((java.lang.Throwable) iOException15);
        iOException2.addSuppressed((java.lang.Throwable) iOException14);
        java.lang.Throwable[] throwableArray18 = iOException2.getSuppressed();
        java.io.IOException iOException19 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException20 = new java.io.IOException("java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException2);
        java.lang.Throwable[] throwableArray21 = iOException20.getSuppressed();
        java.lang.String str22 = iOException20.toString();
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "java.io.IOException: java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str22, "java.io.IOException: java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
    }

    @Test
    public void test05419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05419");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(100, 100);
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "\\\\u0075005C\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030");
        java.io.Writer writer7 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int8 = unicodeEscaper2.translate((java.lang.CharSequence) "java\\u002Eio\\u002EIOException:\\u0020java\\u002Eio\\u002EIOException:\\u0020java\\u\\u0030\\u0030\\u0032Eio\\u\\u0030\\u0030\\u0032E\\u\\u0030\\u0030\\u00349\\u\\u0030\\u0030\\u0034F\\u\\u0030\\u0030\\u00345xception\\u\\u0030\\u0030\\u0033A\\u\\u0030\\u0030\\u0032\\u0030java\\u\\u0030\\u0030\\u0032Eio\\u\\u0030\\u0030\\u0032E\\u\\u0030\\u0030\\u00349\\u\\u0030\\u0030\\u0034F\\u\\u0030\\u0030\\u00345xception", (int) (short) 100, writer7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0030\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0030\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0033\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0030" + "'", str4, "\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0030\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0030\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0033\\u005C\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u0030\\u0030\\u0033\\u0030");
    }

    @Test
    public void test05420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05420");
        java.io.IOException iOException0 = new java.io.IOException();
        java.io.IOException iOException1 = new java.io.IOException();
        iOException0.addSuppressed((java.lang.Throwable) iOException1);
        java.io.IOException iOException3 = new java.io.IOException();
        java.io.IOException iOException4 = new java.io.IOException();
        iOException3.addSuppressed((java.lang.Throwable) iOException4);
        java.lang.Throwable[] throwableArray6 = iOException4.getSuppressed();
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.io.IOException iOException9 = new java.io.IOException("");
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException9);
        iOException4.addSuppressed((java.lang.Throwable) iOException10);
        iOException1.addSuppressed((java.lang.Throwable) iOException10);
        java.lang.Throwable[] throwableArray13 = iOException1.getSuppressed();
        java.lang.Throwable[] throwableArray14 = iOException1.getSuppressed();
        java.lang.Throwable[] throwableArray15 = iOException1.getSuppressed();
        java.io.IOException iOException17 = new java.io.IOException("0");
        java.io.IOException iOException18 = new java.io.IOException((java.lang.Throwable) iOException17);
        iOException1.addSuppressed((java.lang.Throwable) iOException17);
        java.io.IOException iOException20 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.lang.String str21 = iOException1.toString();
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "java.io.IOException" + "'", str21, "java.io.IOException");
    }

    @Test
    public void test05421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05421");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper1 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (short) 10);
        java.lang.String str3 = unicodeEscaper1.translate((java.lang.CharSequence) "\\u0068\\u0069\\u0021");
        java.io.Writer writer5 = null;
        boolean boolean6 = unicodeEscaper1.translate((int) '#', writer5);
        java.io.Writer writer8 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper1.translate((java.lang.CharSequence) "java\\u002Eio\\u002EIOException", writer8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\u0068\\u0069\\u0021" + "'", str3, "\\u0068\\u0069\\u0021");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test05422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05422");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (byte) -1, (int) ' ');
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator4 = unicodeEscaper2.with(charSequenceTranslatorArray3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
    }

    @Test
    public void test05423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05423");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', (-1));
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "34");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper6 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper9 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between(0, (int) (byte) 100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper12 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(10, 10);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper15 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) -1, (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper17 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper19 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer21 = null;
        boolean boolean22 = unicodeEscaper19.translate((int) ' ', writer21);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper25 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str27 = unicodeEscaper25.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray28 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator29 = unicodeEscaper25.with(charSequenceTranslatorArray28);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator30 = unicodeEscaper19.with(charSequenceTranslatorArray28);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator31 = unicodeEscaper17.with(charSequenceTranslatorArray28);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper34 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer36 = null;
        boolean boolean37 = unicodeEscaper34.translate((int) '4', writer36);
        java.io.Writer writer39 = null;
        boolean boolean40 = unicodeEscaper34.translate((int) (byte) -1, writer39);
        java.io.Writer writer42 = null;
        boolean boolean43 = unicodeEscaper34.translate((int) (byte) -1, writer42);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray44 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator45 = unicodeEscaper34.with(charSequenceTranslatorArray44);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator46 = charSequenceTranslator31.with(charSequenceTranslatorArray44);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator47 = unicodeEscaper15.with(charSequenceTranslatorArray44);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator48 = unicodeEscaper12.with(charSequenceTranslatorArray44);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator49 = unicodeEscaper9.with(charSequenceTranslatorArray44);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator50 = unicodeEscaper6.with(charSequenceTranslatorArray44);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator51 = unicodeEscaper2.with(charSequenceTranslatorArray44);
        java.lang.String str53 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: ");
        java.io.Writer writer55 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate((java.lang.CharSequence) "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\\\u0075006A\\\\u00750061\\\\u00750076\\\\u00750061\\\\u0075002E\\\\u00750069\\\\u0075006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E\\\\u0075003A\\\\u00750020", writer55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\u0033\\u0034" + "'", str4, "\\u0033\\u0034");
        org.junit.Assert.assertNotNull(unicodeEscaper6);
        org.junit.Assert.assertNotNull(unicodeEscaper9);
        org.junit.Assert.assertNotNull(unicodeEscaper12);
        org.junit.Assert.assertNotNull(unicodeEscaper15);
        org.junit.Assert.assertNotNull(unicodeEscaper17);
        org.junit.Assert.assertNotNull(unicodeEscaper19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "0" + "'", str27, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray28);
        org.junit.Assert.assertNotNull(charSequenceTranslator29);
        org.junit.Assert.assertNotNull(charSequenceTranslator30);
        org.junit.Assert.assertNotNull(charSequenceTranslator31);
        org.junit.Assert.assertNotNull(unicodeEscaper34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray44);
        org.junit.Assert.assertNotNull(charSequenceTranslator45);
        org.junit.Assert.assertNotNull(charSequenceTranslator46);
        org.junit.Assert.assertNotNull(charSequenceTranslator47);
        org.junit.Assert.assertNotNull(charSequenceTranslator48);
        org.junit.Assert.assertNotNull(charSequenceTranslator49);
        org.junit.Assert.assertNotNull(charSequenceTranslator50);
        org.junit.Assert.assertNotNull(charSequenceTranslator51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\\u005C\\u0075\\u0030\\u0030\\u0036\\u0041\\u0061\\u005C\\u0075\\u0030\\u0030\\u0037\\u0036\\u0061\\u002E\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u005C\\u0075\\u0030\\u0030\\u0036\\u0046\\u002E\\u0049\\u004F\\u0045\\u005C\\u0075\\u0030\\u0030\\u0037\\u0038\\u0063\\u005C\\u0075\\u0030\\u0030\\u0036\\u0035\\u005C\\u0075\\u0030\\u0030\\u0037\\u0030\\u005C\\u0075\\u0030\\u0030\\u0037\\u0034\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u005C\\u0075\\u0030\\u0030\\u0036\\u0046\\u005C\\u0075\\u0030\\u0030\\u0036\\u0045\\u003A\\u0020" + "'", str53, "\\u005C\\u0075\\u0030\\u0030\\u0036\\u0041\\u0061\\u005C\\u0075\\u0030\\u0030\\u0037\\u0036\\u0061\\u002E\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u005C\\u0075\\u0030\\u0030\\u0036\\u0046\\u002E\\u0049\\u004F\\u0045\\u005C\\u0075\\u0030\\u0030\\u0037\\u0038\\u0063\\u005C\\u0075\\u0030\\u0030\\u0036\\u0035\\u005C\\u0075\\u0030\\u0030\\u0037\\u0030\\u005C\\u0075\\u0030\\u0030\\u0037\\u0034\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u005C\\u0075\\u0030\\u0030\\u0036\\u0046\\u005C\\u0075\\u0030\\u0030\\u0036\\u0045\\u003A\\u0020");
    }

    @Test
    public void test05424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05424");
        java.io.IOException iOException2 = new java.io.IOException("");
        java.io.IOException iOException3 = new java.io.IOException("A", (java.lang.Throwable) iOException2);
        java.lang.Throwable[] throwableArray4 = iOException2.getSuppressed();
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.io.IOException iOException9 = new java.io.IOException();
        java.io.IOException iOException10 = new java.io.IOException();
        iOException9.addSuppressed((java.lang.Throwable) iOException10);
        java.io.IOException iOException12 = new java.io.IOException();
        java.io.IOException iOException13 = new java.io.IOException();
        iOException12.addSuppressed((java.lang.Throwable) iOException13);
        java.lang.Throwable[] throwableArray15 = iOException13.getSuppressed();
        java.io.IOException iOException16 = new java.io.IOException((java.lang.Throwable) iOException13);
        java.io.IOException iOException18 = new java.io.IOException("");
        java.io.IOException iOException19 = new java.io.IOException((java.lang.Throwable) iOException18);
        iOException13.addSuppressed((java.lang.Throwable) iOException19);
        iOException10.addSuppressed((java.lang.Throwable) iOException19);
        java.io.IOException iOException22 = new java.io.IOException("java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception", (java.lang.Throwable) iOException10);
        java.io.IOException iOException25 = new java.io.IOException("23");
        java.io.IOException iOException26 = new java.io.IOException((java.lang.Throwable) iOException25);
        java.io.IOException iOException27 = new java.io.IOException("java.io.IOException: java.io.IOException: 0", (java.lang.Throwable) iOException25);
        java.io.IOException iOException29 = new java.io.IOException("");
        java.io.IOException iOException30 = new java.io.IOException((java.lang.Throwable) iOException29);
        java.io.IOException iOException32 = new java.io.IOException("");
        iOException30.addSuppressed((java.lang.Throwable) iOException32);
        java.lang.Throwable[] throwableArray34 = iOException30.getSuppressed();
        iOException25.addSuppressed((java.lang.Throwable) iOException30);
        java.io.IOException iOException36 = new java.io.IOException((java.lang.Throwable) iOException30);
        iOException10.addSuppressed((java.lang.Throwable) iOException30);
        java.io.IOException iOException38 = new java.io.IOException("", (java.lang.Throwable) iOException10);
        java.io.IOException iOException39 = new java.io.IOException((java.lang.Throwable) iOException10);
        iOException5.addSuppressed((java.lang.Throwable) iOException10);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray34);
    }

    @Test
    public void test05425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05425");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '#', 100);
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper7 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) '4', (int) (short) 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper10 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper13 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', (int) (short) 0);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray14 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper13 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator15 = unicodeEscaper10.with(charSequenceTranslatorArray14);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator16 = unicodeEscaper7.with(charSequenceTranslatorArray14);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator17 = unicodeEscaper2.with(charSequenceTranslatorArray14);
        java.io.Writer writer20 = null;
        int int21 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: 0", 0, writer20);
        java.io.Writer writer24 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int25 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: ", (int) 'a', writer24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str4, "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertNotNull(unicodeEscaper7);
        org.junit.Assert.assertNotNull(unicodeEscaper10);
        org.junit.Assert.assertNotNull(unicodeEscaper13);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray14);
        org.junit.Assert.assertNotNull(charSequenceTranslator15);
        org.junit.Assert.assertNotNull(charSequenceTranslator16);
        org.junit.Assert.assertNotNull(charSequenceTranslator17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test05426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05426");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper0 = new org.apache.commons.lang3.text.translate.UnicodeEscaper();
        java.lang.String str2 = unicodeEscaper0.translate((java.lang.CharSequence) "hi!");
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper0.translate((int) (byte) -1, writer4);
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper0.translate((int) (byte) -1, writer7);
        java.lang.String str10 = unicodeEscaper0.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: 0");
        java.io.Writer writer13 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int14 = unicodeEscaper0.translate((java.lang.CharSequence) "\\u005C\\u0075\\u0030\\u0030\\u0036\\u0038\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u0021", (int) (byte) 1, writer13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\\u0068\\u0069\\u0021" + "'", str2, "\\u0068\\u0069\\u0021");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030" + "'", str10, "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030");
    }

    @Test
    public void test05427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05427");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (byte) 10, (int) ' ');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper8 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', (int) (short) 0);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray9 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper8 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator10 = unicodeEscaper5.with(charSequenceTranslatorArray9);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator11 = unicodeEscaper2.with(charSequenceTranslatorArray9);
        java.io.Writer writer14 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int15 = unicodeEscaper2.translate((java.lang.CharSequence) "0", (int) '4', writer14);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 52");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertNotNull(unicodeEscaper8);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray9);
        org.junit.Assert.assertNotNull(charSequenceTranslator10);
        org.junit.Assert.assertNotNull(charSequenceTranslator11);
    }

    @Test
    public void test05428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05428");
        java.io.IOException iOException5 = new java.io.IOException("");
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.io.IOException iOException8 = new java.io.IOException("");
        iOException6.addSuppressed((java.lang.Throwable) iOException8);
        java.io.IOException iOException10 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException8);
        java.io.IOException iOException11 = new java.io.IOException("java.io.IOException: \\u0068\\u0069\\u0021", (java.lang.Throwable) iOException8);
        java.io.IOException iOException12 = new java.io.IOException();
        java.io.IOException iOException13 = new java.io.IOException();
        iOException12.addSuppressed((java.lang.Throwable) iOException13);
        java.lang.Throwable[] throwableArray15 = iOException13.getSuppressed();
        java.lang.Throwable[] throwableArray16 = iOException13.getSuppressed();
        java.io.IOException iOException18 = new java.io.IOException();
        java.io.IOException iOException19 = new java.io.IOException();
        iOException18.addSuppressed((java.lang.Throwable) iOException19);
        java.io.IOException iOException21 = new java.io.IOException("0", (java.lang.Throwable) iOException18);
        java.io.IOException iOException22 = new java.io.IOException((java.lang.Throwable) iOException21);
        iOException13.addSuppressed((java.lang.Throwable) iOException22);
        java.lang.Throwable[] throwableArray24 = iOException13.getSuppressed();
        iOException8.addSuppressed((java.lang.Throwable) iOException13);
        java.io.IOException iOException26 = new java.io.IOException("\\\\u00750068\\\\u00750069\\\\u00750021", (java.lang.Throwable) iOException13);
        java.io.IOException iOException27 = new java.io.IOException((java.lang.Throwable) iOException26);
        java.io.IOException iOException28 = new java.io.IOException((java.lang.Throwable) iOException26);
        java.io.IOException iOException29 = new java.io.IOException((java.lang.Throwable) iOException26);
        java.io.IOException iOException30 = new java.io.IOException("java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: 0", (java.lang.Throwable) iOException29);
        java.lang.Class<?> wildcardClass31 = iOException29.getClass();
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test05429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05429");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) 'a', 1);
        java.io.Writer writer5 = null;
        int int6 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u005C\\u007500\\u0036\\u0041\\u005C\\u007500\\u00361\\u005C\\u007500\\u0037\\u0036\\u005C\\u007500\\u00361\\u005C\\u0075002\\u0045\\u005C\\u007500\\u0036\\u0039\\u005C\\u007500\\u0036\\u0046\\u005C\\u0075002\\u0045\\u005C\\u0075004\\u0039\\u005C\\u0075004\\u0046\\u005C\\u0075004\\u0035\\u005C\\u007500\\u0037\\u0038\\u005C\\u007500\\u00363\\u005C\\u007500\\u0036\\u0035\\u005C\\u007500\\u00370\\u005C\\u007500\\u00374\\u005C\\u007500\\u0036\\u0039\\u005C\\u007500\\u0036\\u0046\\u005C\\u007500\\u0036\\u0045\\u005C\\u0075003\\u0041 \\u005C\\u00750032\\u005C\\u00750033", 0, writer5);
        java.io.Writer writer9 = null;
        int int10 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: \\\\u00750068\\\\u00750069\\\\u00750021", 10, writer9);
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test05430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05430");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper1 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) ' ');
        java.io.Writer writer3 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean4 = unicodeEscaper1.translate((int) (byte) 100, writer3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper1);
    }

    @Test
    public void test05431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05431");
        java.io.IOException iOException3 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u005C\\u0075\\u0030\\u0030\\u0036\\u0038\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u005C\\u0075\\u0030\\u0030\\u0032\\u0031");
        java.io.IOException iOException5 = new java.io.IOException();
        java.io.IOException iOException6 = new java.io.IOException();
        iOException5.addSuppressed((java.lang.Throwable) iOException6);
        java.io.IOException iOException8 = new java.io.IOException();
        java.io.IOException iOException9 = new java.io.IOException();
        iOException8.addSuppressed((java.lang.Throwable) iOException9);
        java.lang.Throwable[] throwableArray11 = iOException9.getSuppressed();
        java.io.IOException iOException12 = new java.io.IOException((java.lang.Throwable) iOException9);
        java.io.IOException iOException14 = new java.io.IOException("");
        java.io.IOException iOException15 = new java.io.IOException((java.lang.Throwable) iOException14);
        iOException9.addSuppressed((java.lang.Throwable) iOException15);
        iOException6.addSuppressed((java.lang.Throwable) iOException15);
        java.io.IOException iOException18 = new java.io.IOException("java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception", (java.lang.Throwable) iOException6);
        java.io.IOException iOException19 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException23 = new java.io.IOException("");
        java.io.IOException iOException24 = new java.io.IOException("A", (java.lang.Throwable) iOException23);
        java.lang.Throwable[] throwableArray25 = iOException23.getSuppressed();
        java.io.IOException iOException26 = new java.io.IOException("java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception", (java.lang.Throwable) iOException23);
        java.io.IOException iOException28 = new java.io.IOException("");
        java.io.IOException iOException29 = new java.io.IOException((java.lang.Throwable) iOException28);
        java.io.IOException iOException31 = new java.io.IOException("");
        iOException29.addSuppressed((java.lang.Throwable) iOException31);
        java.io.IOException iOException34 = new java.io.IOException("");
        java.io.IOException iOException35 = new java.io.IOException((java.lang.Throwable) iOException34);
        java.io.IOException iOException37 = new java.io.IOException("");
        iOException35.addSuppressed((java.lang.Throwable) iOException37);
        iOException29.addSuppressed((java.lang.Throwable) iOException35);
        iOException23.addSuppressed((java.lang.Throwable) iOException35);
        java.io.IOException iOException45 = new java.io.IOException();
        java.io.IOException iOException46 = new java.io.IOException();
        iOException45.addSuppressed((java.lang.Throwable) iOException46);
        java.io.IOException iOException48 = new java.io.IOException("0", (java.lang.Throwable) iOException45);
        java.io.IOException iOException49 = new java.io.IOException((java.lang.Throwable) iOException48);
        java.io.IOException iOException50 = new java.io.IOException((java.lang.Throwable) iOException49);
        java.io.IOException iOException51 = new java.io.IOException((java.lang.Throwable) iOException50);
        java.lang.Throwable[] throwableArray52 = iOException51.getSuppressed();
        java.io.IOException iOException53 = new java.io.IOException("java.io.IOException: java.io.IOException", (java.lang.Throwable) iOException51);
        java.io.IOException iOException54 = new java.io.IOException("\\u005Cu\\u0030\\u0030\\u0036\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0032\\u0031", (java.lang.Throwable) iOException51);
        java.io.IOException iOException55 = new java.io.IOException((java.lang.Throwable) iOException51);
        java.io.IOException iOException56 = new java.io.IOException("java.io.IOException: hi!", (java.lang.Throwable) iOException51);
        java.io.IOException iOException57 = new java.io.IOException((java.lang.Throwable) iOException51);
        iOException35.addSuppressed((java.lang.Throwable) iOException57);
        iOException6.addSuppressed((java.lang.Throwable) iOException35);
        iOException3.addSuppressed((java.lang.Throwable) iOException6);
        java.io.IOException iOException61 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0041", (java.lang.Throwable) iOException6);
        java.io.IOException iOException62 = new java.io.IOException("\\u005Cu\\u0030\\u0030\\u0034\\u0031", (java.lang.Throwable) iOException61);
        java.io.IOException iOException63 = new java.io.IOException((java.lang.Throwable) iOException62);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray52);
    }

    @Test
    public void test05432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05432");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper1 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.Class<?> wildcardClass2 = unicodeEscaper1.getClass();
        org.junit.Assert.assertNotNull(unicodeEscaper1);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test05433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05433");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((-1), (int) (short) 10);
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u0068\\u0069!");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper7 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between(0, (int) (byte) 100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper10 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(10, 10);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper13 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) -1, (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper15 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper17 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer19 = null;
        boolean boolean20 = unicodeEscaper17.translate((int) ' ', writer19);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper23 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str25 = unicodeEscaper23.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray26 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator27 = unicodeEscaper23.with(charSequenceTranslatorArray26);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator28 = unicodeEscaper17.with(charSequenceTranslatorArray26);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator29 = unicodeEscaper15.with(charSequenceTranslatorArray26);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper32 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer34 = null;
        boolean boolean35 = unicodeEscaper32.translate((int) '4', writer34);
        java.io.Writer writer37 = null;
        boolean boolean38 = unicodeEscaper32.translate((int) (byte) -1, writer37);
        java.io.Writer writer40 = null;
        boolean boolean41 = unicodeEscaper32.translate((int) (byte) -1, writer40);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray42 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator43 = unicodeEscaper32.with(charSequenceTranslatorArray42);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator44 = charSequenceTranslator29.with(charSequenceTranslatorArray42);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator45 = unicodeEscaper13.with(charSequenceTranslatorArray42);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator46 = unicodeEscaper10.with(charSequenceTranslatorArray42);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator47 = unicodeEscaper7.with(charSequenceTranslatorArray42);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator48 = unicodeEscaper2.with(charSequenceTranslatorArray42);
        java.lang.CharSequence charSequence49 = null;
        java.io.Writer writer50 = null;
        // The following exception was thrown during execution in test generation
        try {
            charSequenceTranslator48.translate(charSequence49, writer50);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\u005C\\u0075\\u0030\\u0030\\u0036\\u0041\\u0061\\u005C\\u0075\\u0030\\u0030\\u0037\\u0036\\u0061\\u002E\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u005C\\u0075\\u0030\\u0030\\u0036\\u0046\\u002E\\u0049\\u004F\\u0045\\u005C\\u0075\\u0030\\u0030\\u0037\\u0038\\u005C\\u0075\\u0030\\u0030\\u0036\\u0033\\u005C\\u0075\\u0030\\u0030\\u0036\\u0035\\u005C\\u0075\\u0030\\u0030\\u0037\\u0030\\u005C\\u0075\\u0030\\u0030\\u0037\\u0034\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u005C\\u0075\\u0030\\u0030\\u0036\\u0046\\u005C\\u0075\\u0030\\u0030\\u0036\\u0045\\u003A\\u0020\\u005C\\u0075\\u0030\\u0030\\u0036\\u0038\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u0021" + "'", str4, "\\u005C\\u0075\\u0030\\u0030\\u0036\\u0041\\u0061\\u005C\\u0075\\u0030\\u0030\\u0037\\u0036\\u0061\\u002E\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u005C\\u0075\\u0030\\u0030\\u0036\\u0046\\u002E\\u0049\\u004F\\u0045\\u005C\\u0075\\u0030\\u0030\\u0037\\u0038\\u005C\\u0075\\u0030\\u0030\\u0036\\u0033\\u005C\\u0075\\u0030\\u0030\\u0036\\u0035\\u005C\\u0075\\u0030\\u0030\\u0037\\u0030\\u005C\\u0075\\u0030\\u0030\\u0037\\u0034\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u005C\\u0075\\u0030\\u0030\\u0036\\u0046\\u005C\\u0075\\u0030\\u0030\\u0036\\u0045\\u003A\\u0020\\u005C\\u0075\\u0030\\u0030\\u0036\\u0038\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u0021");
        org.junit.Assert.assertNotNull(unicodeEscaper7);
        org.junit.Assert.assertNotNull(unicodeEscaper10);
        org.junit.Assert.assertNotNull(unicodeEscaper13);
        org.junit.Assert.assertNotNull(unicodeEscaper15);
        org.junit.Assert.assertNotNull(unicodeEscaper17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "0" + "'", str25, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray26);
        org.junit.Assert.assertNotNull(charSequenceTranslator27);
        org.junit.Assert.assertNotNull(charSequenceTranslator28);
        org.junit.Assert.assertNotNull(charSequenceTranslator29);
        org.junit.Assert.assertNotNull(unicodeEscaper32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray42);
        org.junit.Assert.assertNotNull(charSequenceTranslator43);
        org.junit.Assert.assertNotNull(charSequenceTranslator44);
        org.junit.Assert.assertNotNull(charSequenceTranslator45);
        org.junit.Assert.assertNotNull(charSequenceTranslator46);
        org.junit.Assert.assertNotNull(charSequenceTranslator47);
        org.junit.Assert.assertNotNull(charSequenceTranslator48);
    }

    @Test
    public void test05434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05434");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) -1, 0);
        java.io.Writer writer5 = null;
        int int6 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030", (int) '4', writer5);
        java.io.Writer writer9 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int10 = unicodeEscaper2.translate((java.lang.CharSequence) "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A \\u0036\\u0034", (int) 'a', writer9);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 97");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test05435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05435");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) (byte) 10);
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper6 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) (short) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper9 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '#', 100);
        java.lang.String str11 = unicodeEscaper9.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper14 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) '4', (int) (short) 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper17 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper20 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', (int) (short) 0);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray21 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper20 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator22 = unicodeEscaper17.with(charSequenceTranslatorArray21);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator23 = unicodeEscaper14.with(charSequenceTranslatorArray21);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator24 = unicodeEscaper9.with(charSequenceTranslatorArray21);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator25 = unicodeEscaper6.with(charSequenceTranslatorArray21);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper28 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper31 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer33 = null;
        boolean boolean34 = unicodeEscaper31.translate((int) '4', writer33);
        java.io.Writer writer36 = null;
        boolean boolean37 = unicodeEscaper31.translate((int) (byte) -1, writer36);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper40 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper42 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper44 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str46 = unicodeEscaper44.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray47 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper40, unicodeEscaper42, unicodeEscaper44 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator48 = unicodeEscaper31.with(charSequenceTranslatorArray47);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator49 = unicodeEscaper28.with(charSequenceTranslatorArray47);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator50 = unicodeEscaper6.with(charSequenceTranslatorArray47);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator51 = unicodeEscaper2.with(charSequenceTranslatorArray47);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper54 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 0, 10);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper57 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper59 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer61 = null;
        boolean boolean62 = unicodeEscaper59.translate((int) ' ', writer61);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper65 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str67 = unicodeEscaper65.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray68 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator69 = unicodeEscaper65.with(charSequenceTranslatorArray68);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator70 = unicodeEscaper59.with(charSequenceTranslatorArray68);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator71 = unicodeEscaper57.with(charSequenceTranslatorArray68);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper73 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) (short) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper76 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '#', 100);
        java.lang.String str78 = unicodeEscaper76.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper81 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) '4', (int) (short) 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper84 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper87 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', (int) (short) 0);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray88 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper87 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator89 = unicodeEscaper84.with(charSequenceTranslatorArray88);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator90 = unicodeEscaper81.with(charSequenceTranslatorArray88);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator91 = unicodeEscaper76.with(charSequenceTranslatorArray88);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator92 = unicodeEscaper73.with(charSequenceTranslatorArray88);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator93 = charSequenceTranslator71.with(charSequenceTranslatorArray88);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator94 = unicodeEscaper54.with(charSequenceTranslatorArray88);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator95 = charSequenceTranslator51.with(charSequenceTranslatorArray88);
        java.io.Writer writer98 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int99 = charSequenceTranslator95.translate((java.lang.CharSequence) "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u0068\\u0069\\u0021", (int) (byte) -1, writer98);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str4, "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertNotNull(unicodeEscaper6);
        org.junit.Assert.assertNotNull(unicodeEscaper9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str11, "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertNotNull(unicodeEscaper14);
        org.junit.Assert.assertNotNull(unicodeEscaper17);
        org.junit.Assert.assertNotNull(unicodeEscaper20);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray21);
        org.junit.Assert.assertNotNull(charSequenceTranslator22);
        org.junit.Assert.assertNotNull(charSequenceTranslator23);
        org.junit.Assert.assertNotNull(charSequenceTranslator24);
        org.junit.Assert.assertNotNull(charSequenceTranslator25);
        org.junit.Assert.assertNotNull(unicodeEscaper28);
        org.junit.Assert.assertNotNull(unicodeEscaper31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper40);
        org.junit.Assert.assertNotNull(unicodeEscaper42);
        org.junit.Assert.assertNotNull(unicodeEscaper44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str46, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray47);
        org.junit.Assert.assertNotNull(charSequenceTranslator48);
        org.junit.Assert.assertNotNull(charSequenceTranslator49);
        org.junit.Assert.assertNotNull(charSequenceTranslator50);
        org.junit.Assert.assertNotNull(charSequenceTranslator51);
        org.junit.Assert.assertNotNull(unicodeEscaper54);
        org.junit.Assert.assertNotNull(unicodeEscaper57);
        org.junit.Assert.assertNotNull(unicodeEscaper59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper65);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "0" + "'", str67, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray68);
        org.junit.Assert.assertNotNull(charSequenceTranslator69);
        org.junit.Assert.assertNotNull(charSequenceTranslator70);
        org.junit.Assert.assertNotNull(charSequenceTranslator71);
        org.junit.Assert.assertNotNull(unicodeEscaper73);
        org.junit.Assert.assertNotNull(unicodeEscaper76);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str78, "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertNotNull(unicodeEscaper81);
        org.junit.Assert.assertNotNull(unicodeEscaper84);
        org.junit.Assert.assertNotNull(unicodeEscaper87);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray88);
        org.junit.Assert.assertNotNull(charSequenceTranslator89);
        org.junit.Assert.assertNotNull(charSequenceTranslator90);
        org.junit.Assert.assertNotNull(charSequenceTranslator91);
        org.junit.Assert.assertNotNull(charSequenceTranslator92);
        org.junit.Assert.assertNotNull(charSequenceTranslator93);
        org.junit.Assert.assertNotNull(charSequenceTranslator94);
        org.junit.Assert.assertNotNull(charSequenceTranslator95);
    }

    @Test
    public void test05436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05436");
        java.io.IOException iOException1 = new java.io.IOException("java.io.IOException: java.io.IOException");
        java.io.IOException iOException4 = new java.io.IOException("0");
        java.lang.Throwable[] throwableArray5 = iOException4.getSuppressed();
        java.io.IOException iOException6 = new java.io.IOException("hi!", (java.lang.Throwable) iOException4);
        iOException1.addSuppressed((java.lang.Throwable) iOException4);
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.lang.Throwable[] throwableArray9 = iOException8.getSuppressed();
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException8);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray9);
    }

    @Test
    public void test05437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05437");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) ' ', 0);
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) (short) 1, writer4);
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper2.translate((int) '#', writer7);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper11 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer13 = null;
        boolean boolean14 = unicodeEscaper11.translate((int) (short) 10, writer13);
        java.lang.String str16 = unicodeEscaper11.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper19 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer21 = null;
        boolean boolean22 = unicodeEscaper19.translate((int) '4', writer21);
        java.io.Writer writer24 = null;
        boolean boolean25 = unicodeEscaper19.translate((int) (byte) -1, writer24);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper28 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper30 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper32 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str34 = unicodeEscaper32.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray35 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper28, unicodeEscaper30, unicodeEscaper32 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator36 = unicodeEscaper19.with(charSequenceTranslatorArray35);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator37 = unicodeEscaper11.with(charSequenceTranslatorArray35);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper40 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.lang.String str42 = unicodeEscaper40.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray43 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper40 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator44 = unicodeEscaper11.with(charSequenceTranslatorArray43);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator45 = unicodeEscaper2.with(charSequenceTranslatorArray43);
        java.io.Writer writer47 = null;
        boolean boolean48 = unicodeEscaper2.translate((int) ' ', writer47);
        java.lang.String str50 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: \\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034");
        java.io.Writer writer52 = null;
        boolean boolean53 = unicodeEscaper2.translate((int) (byte) -1, writer52);
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "0" + "'", str16, "0");
        org.junit.Assert.assertNotNull(unicodeEscaper19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper28);
        org.junit.Assert.assertNotNull(unicodeEscaper30);
        org.junit.Assert.assertNotNull(unicodeEscaper32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str34, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray35);
        org.junit.Assert.assertNotNull(charSequenceTranslator36);
        org.junit.Assert.assertNotNull(charSequenceTranslator37);
        org.junit.Assert.assertNotNull(unicodeEscaper40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str42, "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray43);
        org.junit.Assert.assertNotNull(charSequenceTranslator44);
        org.junit.Assert.assertNotNull(charSequenceTranslator45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "java.io.IOException: \\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034" + "'", str50, "java.io.IOException: \\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test05438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05438");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper1 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) (byte) 10);
        java.io.Writer writer3 = null;
        boolean boolean4 = unicodeEscaper1.translate((int) (short) 1, writer3);
        java.io.Writer writer6 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = unicodeEscaper1.translate((int) (short) 100, writer6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test05439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05439");
        java.io.IOException iOException3 = new java.io.IOException("");
        java.io.IOException iOException4 = new java.io.IOException((java.lang.Throwable) iOException3);
        java.io.IOException iOException6 = new java.io.IOException("");
        iOException4.addSuppressed((java.lang.Throwable) iOException6);
        java.io.IOException iOException8 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException6);
        java.io.IOException iOException9 = new java.io.IOException("java.io.IOException: \\u0068\\u0069\\u0021", (java.lang.Throwable) iOException6);
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException11 = new java.io.IOException((java.lang.Throwable) iOException10);
        java.io.IOException iOException12 = new java.io.IOException((java.lang.Throwable) iOException11);
        java.io.IOException iOException13 = new java.io.IOException((java.lang.Throwable) iOException11);
        java.lang.String str14 = iOException11.toString();
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "java.io.IOException: java.io.IOException: java.io.IOException: " + "'", str14, "java.io.IOException: java.io.IOException: java.io.IOException: ");
    }

    @Test
    public void test05440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05440");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) '4', writer4);
        java.lang.String str7 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        java.lang.String str9 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u\\u0030\\u00305Cu\\u\\u0030\\u0030\\u0033\\u0030\\u\\u0030\\u0030\\u0033\\u0030\\u\\u0030\\u0030\\u00336\\u\\u0030\\u0030\\u00338\\u\\u0030\\u00305Cu\\u\\u0030\\u0030\\u0033\\u0030\\u\\u0030\\u0030\\u0033\\u0030\\u\\u0030\\u0030\\u00336\\u\\u0030\\u0030\\u00339\\u\\u0030\\u00305Cu\\u\\u0030\\u0030\\u0033\\u0030\\u\\u0030\\u0030\\u0033\\u0030\\u\\u0030\\u0030\\u0033\\u0032\\u\\u0030\\u0030\\u0033\\u0031");
        java.io.Writer writer11 = null;
        boolean boolean12 = unicodeEscaper2.translate((int) 'a', writer11);
        java.io.Writer writer14 = null;
        boolean boolean15 = unicodeEscaper2.translate((int) 'a', writer14);
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\u0063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E: \\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\u0063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E" + "'", str7, "\\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\u0063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E: \\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\u0063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\\\u0075\\\\u00750030\\\\u007500305C\\u0075\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075\\\\u00750030\\\\u00750030\\\\u007500336\\\\u0075\\\\u00750030\\\\u00750030\\\\u007500338\\\\u0075\\\\u00750030\\\\u007500305C\\u0075\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075\\\\u00750030\\\\u00750030\\\\u007500336\\\\u0075\\\\u00750030\\\\u00750030\\\\u007500339\\\\u0075\\\\u00750030\\\\u007500305C\\u0075\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750032\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750031" + "'", str9, "\\\\u0075\\\\u00750030\\\\u007500305C\\u0075\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075\\\\u00750030\\\\u00750030\\\\u007500336\\\\u0075\\\\u00750030\\\\u00750030\\\\u007500338\\\\u0075\\\\u00750030\\\\u007500305C\\u0075\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075\\\\u00750030\\\\u00750030\\\\u007500336\\\\u0075\\\\u00750030\\\\u00750030\\\\u007500339\\\\u0075\\\\u00750030\\\\u007500305C\\u0075\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750032\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750031");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test05441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05441");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 100, (-1));
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper5.translate((int) (short) 10, writer7);
        java.lang.String str10 = unicodeEscaper5.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper13 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer15 = null;
        boolean boolean16 = unicodeEscaper13.translate((int) '4', writer15);
        java.io.Writer writer18 = null;
        boolean boolean19 = unicodeEscaper13.translate((int) (byte) -1, writer18);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper22 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper24 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper26 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str28 = unicodeEscaper26.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray29 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper22, unicodeEscaper24, unicodeEscaper26 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator30 = unicodeEscaper13.with(charSequenceTranslatorArray29);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator31 = unicodeEscaper5.with(charSequenceTranslatorArray29);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator32 = unicodeEscaper2.with(charSequenceTranslatorArray29);
        java.io.Writer writer35 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int36 = charSequenceTranslator32.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", 100, writer35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "0" + "'", str10, "0");
        org.junit.Assert.assertNotNull(unicodeEscaper13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper22);
        org.junit.Assert.assertNotNull(unicodeEscaper24);
        org.junit.Assert.assertNotNull(unicodeEscaper26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str28, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray29);
        org.junit.Assert.assertNotNull(charSequenceTranslator30);
        org.junit.Assert.assertNotNull(charSequenceTranslator31);
        org.junit.Assert.assertNotNull(charSequenceTranslator32);
    }

    @Test
    public void test05442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05442");
        java.io.IOException iOException3 = new java.io.IOException("");
        java.io.IOException iOException4 = new java.io.IOException((java.lang.Throwable) iOException3);
        java.io.IOException iOException6 = new java.io.IOException("");
        iOException4.addSuppressed((java.lang.Throwable) iOException6);
        java.lang.Throwable[] throwableArray8 = iOException6.getSuppressed();
        java.io.IOException iOException9 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException6);
        java.io.IOException iOException10 = new java.io.IOException("64", (java.lang.Throwable) iOException9);
        java.io.IOException iOException11 = new java.io.IOException((java.lang.Throwable) iOException10);
        java.lang.Class<?> wildcardClass12 = iOException10.getClass();
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test05443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05443");
        java.io.IOException iOException0 = new java.io.IOException();
        java.io.IOException iOException1 = new java.io.IOException();
        iOException0.addSuppressed((java.lang.Throwable) iOException1);
        java.lang.Throwable[] throwableArray3 = iOException1.getSuppressed();
        java.io.IOException iOException4 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.io.IOException iOException6 = new java.io.IOException("");
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException6);
        iOException1.addSuppressed((java.lang.Throwable) iOException7);
        java.lang.Throwable[] throwableArray9 = iOException1.getSuppressed();
        java.lang.Throwable[] throwableArray10 = iOException1.getSuppressed();
        java.io.IOException iOException11 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.io.IOException iOException15 = new java.io.IOException("0");
        java.lang.Throwable[] throwableArray16 = iOException15.getSuppressed();
        java.io.IOException iOException17 = new java.io.IOException("hi!", (java.lang.Throwable) iOException15);
        java.io.IOException iOException19 = new java.io.IOException("");
        java.io.IOException iOException20 = new java.io.IOException((java.lang.Throwable) iOException19);
        java.io.IOException iOException22 = new java.io.IOException("");
        iOException20.addSuppressed((java.lang.Throwable) iOException22);
        java.io.IOException iOException25 = new java.io.IOException("");
        java.io.IOException iOException26 = new java.io.IOException((java.lang.Throwable) iOException25);
        java.io.IOException iOException28 = new java.io.IOException("");
        iOException26.addSuppressed((java.lang.Throwable) iOException28);
        iOException20.addSuppressed((java.lang.Throwable) iOException26);
        iOException17.addSuppressed((java.lang.Throwable) iOException20);
        java.io.IOException iOException32 = new java.io.IOException("java.io.IOException: ", (java.lang.Throwable) iOException17);
        iOException11.addSuppressed((java.lang.Throwable) iOException17);
        java.io.IOException iOException34 = new java.io.IOException((java.lang.Throwable) iOException17);
        java.lang.String str35 = iOException17.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "java.io.IOException: hi!" + "'", str35, "java.io.IOException: hi!");
    }

    @Test
    public void test05444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05444");
        java.io.IOException iOException4 = new java.io.IOException();
        java.io.IOException iOException5 = new java.io.IOException();
        iOException4.addSuppressed((java.lang.Throwable) iOException5);
        java.io.IOException iOException7 = new java.io.IOException("0", (java.lang.Throwable) iOException4);
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.io.IOException iOException9 = new java.io.IOException((java.lang.Throwable) iOException8);
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException9);
        java.lang.Throwable[] throwableArray11 = iOException10.getSuppressed();
        java.io.IOException iOException12 = new java.io.IOException("java.io.IOException: java.io.IOException", (java.lang.Throwable) iOException10);
        java.io.IOException iOException13 = new java.io.IOException((java.lang.Throwable) iOException12);
        java.io.IOException iOException14 = new java.io.IOException("java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: 0", (java.lang.Throwable) iOException12);
        java.io.IOException iOException15 = new java.io.IOException("java.io.IOException: java.io.IOException: \\u005Cu\\u0030\\u0030\\u0036\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0032\\u0031", (java.lang.Throwable) iOException14);
        java.io.IOException iOException18 = new java.io.IOException();
        java.io.IOException iOException19 = new java.io.IOException();
        iOException18.addSuppressed((java.lang.Throwable) iOException19);
        java.io.IOException iOException21 = new java.io.IOException("0", (java.lang.Throwable) iOException18);
        java.lang.Throwable[] throwableArray22 = iOException21.getSuppressed();
        java.io.IOException iOException23 = new java.io.IOException("", (java.lang.Throwable) iOException21);
        java.lang.Throwable[] throwableArray24 = iOException21.getSuppressed();
        iOException15.addSuppressed((java.lang.Throwable) iOException21);
        java.lang.Throwable[] throwableArray26 = iOException15.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray26);
    }

    @Test
    public void test05445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05445");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) '4', (int) (short) 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper8 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', (int) (short) 0);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray9 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper8 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator10 = unicodeEscaper5.with(charSequenceTranslatorArray9);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator11 = unicodeEscaper2.with(charSequenceTranslatorArray9);
        java.io.Writer writer13 = null;
        boolean boolean14 = unicodeEscaper2.translate((int) (byte) 1, writer13);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper17 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) 'a');
        java.io.Writer writer19 = null;
        boolean boolean20 = unicodeEscaper17.translate((int) '4', writer19);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper23 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 0, (int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper26 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper29 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer31 = null;
        boolean boolean32 = unicodeEscaper29.translate((int) '4', writer31);
        java.io.Writer writer34 = null;
        boolean boolean35 = unicodeEscaper29.translate((int) (byte) -1, writer34);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper38 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper40 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper42 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str44 = unicodeEscaper42.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray45 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper38, unicodeEscaper40, unicodeEscaper42 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator46 = unicodeEscaper29.with(charSequenceTranslatorArray45);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator47 = unicodeEscaper26.with(charSequenceTranslatorArray45);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator48 = unicodeEscaper23.with(charSequenceTranslatorArray45);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator49 = unicodeEscaper17.with(charSequenceTranslatorArray45);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator50 = unicodeEscaper2.with(charSequenceTranslatorArray45);
        java.io.Writer writer53 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int54 = charSequenceTranslator50.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: java.io.IOException: 64", (int) (byte) 10, writer53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertNotNull(unicodeEscaper8);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray9);
        org.junit.Assert.assertNotNull(charSequenceTranslator10);
        org.junit.Assert.assertNotNull(charSequenceTranslator11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper23);
        org.junit.Assert.assertNotNull(unicodeEscaper26);
        org.junit.Assert.assertNotNull(unicodeEscaper29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper38);
        org.junit.Assert.assertNotNull(unicodeEscaper40);
        org.junit.Assert.assertNotNull(unicodeEscaper42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str44, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray45);
        org.junit.Assert.assertNotNull(charSequenceTranslator46);
        org.junit.Assert.assertNotNull(charSequenceTranslator47);
        org.junit.Assert.assertNotNull(charSequenceTranslator48);
        org.junit.Assert.assertNotNull(charSequenceTranslator49);
        org.junit.Assert.assertNotNull(charSequenceTranslator50);
    }

    @Test
    public void test05446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05446");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', (int) (short) 0);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray6 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper5 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator7 = unicodeEscaper2.with(charSequenceTranslatorArray6);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper10 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer12 = null;
        boolean boolean13 = unicodeEscaper10.translate((int) (short) 10, writer12);
        java.lang.String str15 = unicodeEscaper10.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper18 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer20 = null;
        boolean boolean21 = unicodeEscaper18.translate((int) '4', writer20);
        java.io.Writer writer23 = null;
        boolean boolean24 = unicodeEscaper18.translate((int) (byte) -1, writer23);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper27 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper29 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper31 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str33 = unicodeEscaper31.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray34 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper27, unicodeEscaper29, unicodeEscaper31 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator35 = unicodeEscaper18.with(charSequenceTranslatorArray34);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator36 = unicodeEscaper10.with(charSequenceTranslatorArray34);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator37 = unicodeEscaper2.with(charSequenceTranslatorArray34);
        java.io.Writer writer40 = null;
        int int41 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u005Cu\\u0030\\u0030\\u0033\\u0033\\u005Cu\\u0030\\u0030\\u0033\\u0034", (int) (byte) 1, writer40);
        java.io.Writer writer44 = null;
        int int45 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030", 100, writer44);
        java.io.Writer writer48 = null;
        int int49 = unicodeEscaper2.translate((java.lang.CharSequence) "java\\u002Eio\\u002EIOException:\\u0020java\\u002Eio\\u002EIOException:\\u0020java\\u\\u0030\\u0030\\u0032Eio\\u\\u0030\\u0030\\u0032E\\u\\u0030\\u0030\\u00349\\u\\u0030\\u0030\\u0034F\\u\\u0030\\u0030\\u00345xception\\u\\u0030\\u0030\\u0033A\\u\\u0030\\u0030\\u0032\\u0030java\\u\\u0030\\u0030\\u0032Eio\\u\\u0030\\u0030\\u0032E\\u\\u0030\\u0030\\u00349\\u\\u0030\\u0030\\u0034F\\u\\u0030\\u0030\\u00345xception", 100, writer48);
        java.io.Writer writer51 = null;
        boolean boolean52 = unicodeEscaper2.translate(100, writer51);
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray6);
        org.junit.Assert.assertNotNull(charSequenceTranslator7);
        org.junit.Assert.assertNotNull(unicodeEscaper10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "0" + "'", str15, "0");
        org.junit.Assert.assertNotNull(unicodeEscaper18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper27);
        org.junit.Assert.assertNotNull(unicodeEscaper29);
        org.junit.Assert.assertNotNull(unicodeEscaper31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str33, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray34);
        org.junit.Assert.assertNotNull(charSequenceTranslator35);
        org.junit.Assert.assertNotNull(charSequenceTranslator36);
        org.junit.Assert.assertNotNull(charSequenceTranslator37);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test05447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05447");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) '#', (int) (byte) 0);
        java.io.Writer writer5 = null;
        int int6 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030", 10, writer5);
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test05448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05448");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper1 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) 'a');
        java.lang.String str3 = unicodeEscaper1.translate((java.lang.CharSequence) "A");
        java.io.Writer writer5 = null;
        boolean boolean6 = unicodeEscaper1.translate((int) (short) 0, writer5);
        java.io.Writer writer8 = null;
        boolean boolean9 = unicodeEscaper1.translate(0, writer8);
        java.lang.Class<?> wildcardClass10 = unicodeEscaper1.getClass();
        org.junit.Assert.assertNotNull(unicodeEscaper1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "A" + "'", str3, "A");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test05449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05449");
        java.io.IOException iOException1 = new java.io.IOException();
        java.io.IOException iOException2 = new java.io.IOException();
        iOException1.addSuppressed((java.lang.Throwable) iOException2);
        java.io.IOException iOException4 = new java.io.IOException("0", (java.lang.Throwable) iOException1);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException9 = new java.io.IOException("\\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\u0063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E:\\\\u00750020\\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\u0063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E");
        java.io.IOException iOException12 = new java.io.IOException();
        java.io.IOException iOException13 = new java.io.IOException();
        iOException12.addSuppressed((java.lang.Throwable) iOException13);
        java.io.IOException iOException15 = new java.io.IOException("0", (java.lang.Throwable) iOException12);
        java.io.IOException iOException16 = new java.io.IOException((java.lang.Throwable) iOException15);
        java.io.IOException iOException17 = new java.io.IOException((java.lang.Throwable) iOException16);
        java.io.IOException iOException18 = new java.io.IOException((java.lang.Throwable) iOException17);
        java.lang.Throwable[] throwableArray19 = iOException18.getSuppressed();
        java.io.IOException iOException23 = new java.io.IOException("0");
        java.lang.Throwable[] throwableArray24 = iOException23.getSuppressed();
        java.io.IOException iOException25 = new java.io.IOException("hi!", (java.lang.Throwable) iOException23);
        java.io.IOException iOException27 = new java.io.IOException("");
        java.io.IOException iOException28 = new java.io.IOException((java.lang.Throwable) iOException27);
        java.io.IOException iOException30 = new java.io.IOException("");
        iOException28.addSuppressed((java.lang.Throwable) iOException30);
        java.io.IOException iOException33 = new java.io.IOException("");
        java.io.IOException iOException34 = new java.io.IOException((java.lang.Throwable) iOException33);
        java.io.IOException iOException36 = new java.io.IOException("");
        iOException34.addSuppressed((java.lang.Throwable) iOException36);
        iOException28.addSuppressed((java.lang.Throwable) iOException34);
        iOException25.addSuppressed((java.lang.Throwable) iOException28);
        java.io.IOException iOException40 = new java.io.IOException("java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception", (java.lang.Throwable) iOException28);
        iOException18.addSuppressed((java.lang.Throwable) iOException40);
        java.io.IOException iOException42 = new java.io.IOException("61", (java.lang.Throwable) iOException18);
        java.io.IOException iOException43 = new java.io.IOException((java.lang.Throwable) iOException18);
        java.io.IOException iOException44 = new java.io.IOException((java.lang.Throwable) iOException43);
        iOException9.addSuppressed((java.lang.Throwable) iOException43);
        iOException7.addSuppressed((java.lang.Throwable) iOException9);
        java.lang.String str47 = iOException7.toString();
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: 0" + "'", str47, "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: 0");
    }

    @Test
    public void test05450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05450");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) ' ', (int) (byte) 1);
        java.io.Writer writer4 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030", writer4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
    }

    @Test
    public void test05451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05451");
        java.io.IOException iOException3 = new java.io.IOException("0");
        java.lang.Throwable[] throwableArray4 = iOException3.getSuppressed();
        java.io.IOException iOException5 = new java.io.IOException("hi!", (java.lang.Throwable) iOException3);
        java.io.IOException iOException7 = new java.io.IOException("");
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.io.IOException iOException10 = new java.io.IOException("");
        iOException8.addSuppressed((java.lang.Throwable) iOException10);
        java.io.IOException iOException13 = new java.io.IOException("");
        java.io.IOException iOException14 = new java.io.IOException((java.lang.Throwable) iOException13);
        java.io.IOException iOException16 = new java.io.IOException("");
        iOException14.addSuppressed((java.lang.Throwable) iOException16);
        iOException8.addSuppressed((java.lang.Throwable) iOException14);
        iOException5.addSuppressed((java.lang.Throwable) iOException8);
        java.io.IOException iOException20 = new java.io.IOException("java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception", (java.lang.Throwable) iOException8);
        java.io.IOException iOException21 = new java.io.IOException((java.lang.Throwable) iOException20);
        java.lang.String str22 = iOException21.toString();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "java.io.IOException: java.io.IOException: java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str22, "java.io.IOException: java.io.IOException: java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
    }

    @Test
    public void test05452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05452");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) ' ', 0);
        java.io.Writer writer5 = null;
        int int6 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u0068\\u0069\\u0021", (int) (short) 1, writer5);
        java.io.Writer writer8 = null;
        boolean boolean9 = unicodeEscaper2.translate((int) (byte) 0, writer8);
        java.io.Writer writer11 = null;
        boolean boolean12 = unicodeEscaper2.translate(100, writer11);
        java.io.Writer writer14 = null;
        boolean boolean15 = unicodeEscaper2.translate((-1), writer14);
        java.io.Writer writer17 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate((java.lang.CharSequence) "\\u005C\\u0075\\u0030\\u0030\\u0036\\u0041\\u0061\\u005C\\u0075\\u0030\\u0030\\u0037\\u0036\\u0061\\u002E\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u005C\\u0075\\u0030\\u0030\\u0036\\u0046\\u002E\\u0049\\u004F\\u0045\\u005C\\u0075\\u0030\\u0030\\u0037\\u0038\\u005C\\u0075\\u0030\\u0030\\u0036\\u0033\\u005C\\u0075\\u0030\\u0030\\u0036\\u0035\\u005C\\u0075\\u0030\\u0030\\u0037\\u0030\\u005C\\u0075\\u0030\\u0030\\u0037\\u0034\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u005C\\u0075\\u0030\\u0030\\u0036\\u0046\\u005C\\u0075\\u0030\\u0030\\u0036\\u0045\\u003A\\u0020\\u005C\\u0075\\u0030\\u0030\\u0036\\u0038\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u0021", writer17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test05453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05453");
        java.io.IOException iOException3 = new java.io.IOException("0");
        java.lang.Throwable[] throwableArray4 = iOException3.getSuppressed();
        java.io.IOException iOException5 = new java.io.IOException("hi!", (java.lang.Throwable) iOException3);
        java.io.IOException iOException7 = new java.io.IOException("");
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.io.IOException iOException10 = new java.io.IOException("");
        iOException8.addSuppressed((java.lang.Throwable) iOException10);
        java.io.IOException iOException13 = new java.io.IOException("");
        java.io.IOException iOException14 = new java.io.IOException((java.lang.Throwable) iOException13);
        java.io.IOException iOException16 = new java.io.IOException("");
        iOException14.addSuppressed((java.lang.Throwable) iOException16);
        iOException8.addSuppressed((java.lang.Throwable) iOException14);
        iOException5.addSuppressed((java.lang.Throwable) iOException8);
        java.io.IOException iOException20 = new java.io.IOException("java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception", (java.lang.Throwable) iOException8);
        java.io.IOException iOException22 = new java.io.IOException();
        java.io.IOException iOException23 = new java.io.IOException();
        iOException22.addSuppressed((java.lang.Throwable) iOException23);
        java.io.IOException iOException25 = new java.io.IOException();
        java.io.IOException iOException26 = new java.io.IOException();
        iOException25.addSuppressed((java.lang.Throwable) iOException26);
        java.lang.Throwable[] throwableArray28 = iOException26.getSuppressed();
        java.io.IOException iOException29 = new java.io.IOException((java.lang.Throwable) iOException26);
        java.io.IOException iOException31 = new java.io.IOException("");
        java.io.IOException iOException32 = new java.io.IOException((java.lang.Throwable) iOException31);
        iOException26.addSuppressed((java.lang.Throwable) iOException32);
        iOException23.addSuppressed((java.lang.Throwable) iOException32);
        java.io.IOException iOException35 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException32);
        java.io.IOException iOException38 = new java.io.IOException("");
        java.io.IOException iOException39 = new java.io.IOException((java.lang.Throwable) iOException38);
        java.io.IOException iOException41 = new java.io.IOException("");
        iOException39.addSuppressed((java.lang.Throwable) iOException41);
        java.io.IOException iOException43 = new java.io.IOException("java.io.IOException: 0", (java.lang.Throwable) iOException41);
        iOException32.addSuppressed((java.lang.Throwable) iOException41);
        iOException20.addSuppressed((java.lang.Throwable) iOException41);
        java.lang.Class<?> wildcardClass46 = iOException41.getClass();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test05454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05454");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 10, (int) (byte) 100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', (int) (short) 100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper8 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) 'a');
        java.io.Writer writer10 = null;
        boolean boolean11 = unicodeEscaper8.translate((int) '#', writer10);
        java.io.Writer writer14 = null;
        int int15 = unicodeEscaper8.translate((java.lang.CharSequence) "\\u0068\\u0069\\u0021", (int) (short) 10, writer14);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper18 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (short) 100, 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper21 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 100, (-1));
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper24 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer26 = null;
        boolean boolean27 = unicodeEscaper24.translate((int) (short) 10, writer26);
        java.lang.String str29 = unicodeEscaper24.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper32 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer34 = null;
        boolean boolean35 = unicodeEscaper32.translate((int) '4', writer34);
        java.io.Writer writer37 = null;
        boolean boolean38 = unicodeEscaper32.translate((int) (byte) -1, writer37);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper41 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper43 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper45 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str47 = unicodeEscaper45.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray48 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper41, unicodeEscaper43, unicodeEscaper45 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator49 = unicodeEscaper32.with(charSequenceTranslatorArray48);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator50 = unicodeEscaper24.with(charSequenceTranslatorArray48);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator51 = unicodeEscaper21.with(charSequenceTranslatorArray48);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator52 = unicodeEscaper18.with(charSequenceTranslatorArray48);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator53 = unicodeEscaper8.with(charSequenceTranslatorArray48);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator54 = unicodeEscaper5.with(charSequenceTranslatorArray48);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator55 = unicodeEscaper2.with(charSequenceTranslatorArray48);
        java.lang.Class<?> wildcardClass56 = charSequenceTranslatorArray48.getClass();
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertNotNull(unicodeEscaper8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(unicodeEscaper18);
        org.junit.Assert.assertNotNull(unicodeEscaper21);
        org.junit.Assert.assertNotNull(unicodeEscaper24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "0" + "'", str29, "0");
        org.junit.Assert.assertNotNull(unicodeEscaper32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper41);
        org.junit.Assert.assertNotNull(unicodeEscaper43);
        org.junit.Assert.assertNotNull(unicodeEscaper45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str47, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray48);
        org.junit.Assert.assertNotNull(charSequenceTranslator49);
        org.junit.Assert.assertNotNull(charSequenceTranslator50);
        org.junit.Assert.assertNotNull(charSequenceTranslator51);
        org.junit.Assert.assertNotNull(charSequenceTranslator52);
        org.junit.Assert.assertNotNull(charSequenceTranslator53);
        org.junit.Assert.assertNotNull(charSequenceTranslator54);
        org.junit.Assert.assertNotNull(charSequenceTranslator55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test05455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05455");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper1 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (short) 10);
        java.lang.String str3 = unicodeEscaper1.translate((java.lang.CharSequence) "\\u0068\\u0069\\u0021");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper6 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 10, (-1));
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper9 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 100, (int) (short) 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper12 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer14 = null;
        boolean boolean15 = unicodeEscaper12.translate((int) (short) 10, writer14);
        java.lang.String str17 = unicodeEscaper12.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper20 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer22 = null;
        boolean boolean23 = unicodeEscaper20.translate((int) '4', writer22);
        java.io.Writer writer25 = null;
        boolean boolean26 = unicodeEscaper20.translate((int) (byte) -1, writer25);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper29 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper31 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper33 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str35 = unicodeEscaper33.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray36 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper29, unicodeEscaper31, unicodeEscaper33 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator37 = unicodeEscaper20.with(charSequenceTranslatorArray36);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator38 = unicodeEscaper12.with(charSequenceTranslatorArray36);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator39 = unicodeEscaper9.with(charSequenceTranslatorArray36);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator40 = unicodeEscaper6.with(charSequenceTranslatorArray36);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator41 = unicodeEscaper1.with(charSequenceTranslatorArray36);
        java.io.Writer writer43 = null;
        boolean boolean44 = unicodeEscaper1.translate(10, writer43);
        java.io.Writer writer47 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int48 = unicodeEscaper1.translate((java.lang.CharSequence) "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a\\\\u0075002E\\u0069\\u006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\\\u0075003A\\\\u00750020\\u006Aa\\u0076a\\\\u0075002E\\u0069\\u006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (-1), writer47);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\u0068\\u0069\\u0021" + "'", str3, "\\u0068\\u0069\\u0021");
        org.junit.Assert.assertNotNull(unicodeEscaper6);
        org.junit.Assert.assertNotNull(unicodeEscaper9);
        org.junit.Assert.assertNotNull(unicodeEscaper12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "0" + "'", str17, "0");
        org.junit.Assert.assertNotNull(unicodeEscaper20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper29);
        org.junit.Assert.assertNotNull(unicodeEscaper31);
        org.junit.Assert.assertNotNull(unicodeEscaper33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str35, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray36);
        org.junit.Assert.assertNotNull(charSequenceTranslator37);
        org.junit.Assert.assertNotNull(charSequenceTranslator38);
        org.junit.Assert.assertNotNull(charSequenceTranslator39);
        org.junit.Assert.assertNotNull(charSequenceTranslator40);
        org.junit.Assert.assertNotNull(charSequenceTranslator41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test05456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05456");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) ' ', 0);
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate(1, writer4);
        java.lang.String str7 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: 0");
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: 0" + "'", str7, "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: 0");
    }

    @Test
    public void test05457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05457");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) ' ', 10);
        java.io.Writer writer4 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate((java.lang.CharSequence) "j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020\\u0030", writer4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
    }

    @Test
    public void test05458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05458");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) '#', (int) '4');
        java.io.Writer writer5 = null;
        int int6 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u005Cu\\u0030\\u0030\\u0033\\u0033\\u005Cu\\u0030\\u0030\\u0033\\u0034", (int) '#', writer5);
        java.io.Writer writer9 = null;
        int int10 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\\\u00750068\\\\u00750069\\\\u00750021", (int) (short) 100, writer9);
        java.lang.String str12 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u005C\\u0075\\u0030\\u0030\\u0033\\u0032\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030");
        java.io.Writer writer14 = null;
        boolean boolean15 = unicodeEscaper2.translate((int) ' ', writer14);
        java.io.Writer writer17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = unicodeEscaper2.translate((int) '#', writer17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\u\\u0030\\u00305C\\u\\u0030\\u003075\\u\\u0030\\u0030\\u0033\\u0030\\u\\u0030\\u0030\\u0033\\u0030\\u\\u0030\\u0030\\u0033\\u0033\\u\\u0030\\u0030\\u0033\\u0032\\u\\u0030\\u00305C\\u\\u0030\\u003075\\u\\u0030\\u0030\\u0033\\u0030\\u\\u0030\\u0030\\u0033\\u0030\\u\\u0030\\u0030\\u0033\\u0033\\u\\u0030\\u0030\\u0033\\u0030" + "'", str12, "\\u\\u0030\\u00305C\\u\\u0030\\u003075\\u\\u0030\\u0030\\u0033\\u0030\\u\\u0030\\u0030\\u0033\\u0030\\u\\u0030\\u0030\\u0033\\u0033\\u\\u0030\\u0030\\u0033\\u0032\\u\\u0030\\u00305C\\u\\u0030\\u003075\\u\\u0030\\u0030\\u0033\\u0030\\u\\u0030\\u0030\\u0033\\u0030\\u\\u0030\\u0030\\u0033\\u0033\\u\\u0030\\u0030\\u0033\\u0030");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test05459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05459");
        java.io.IOException iOException3 = new java.io.IOException();
        java.io.IOException iOException4 = new java.io.IOException();
        iOException3.addSuppressed((java.lang.Throwable) iOException4);
        java.io.IOException iOException6 = new java.io.IOException("0", (java.lang.Throwable) iOException3);
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.io.IOException iOException9 = new java.io.IOException((java.lang.Throwable) iOException8);
        java.lang.Throwable[] throwableArray10 = iOException9.getSuppressed();
        java.io.IOException iOException11 = new java.io.IOException("\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException9);
        java.io.IOException iOException14 = new java.io.IOException();
        java.io.IOException iOException15 = new java.io.IOException();
        iOException14.addSuppressed((java.lang.Throwable) iOException15);
        java.io.IOException iOException17 = new java.io.IOException("0", (java.lang.Throwable) iOException14);
        java.io.IOException iOException18 = new java.io.IOException((java.lang.Throwable) iOException17);
        java.io.IOException iOException19 = new java.io.IOException("java.io.IOException:\\u0020java.io.IOException:\\u0020java.io.IOException:\\u0020java.io.IOException:\\u0020java.io.IOException:\\u00200", (java.lang.Throwable) iOException18);
        iOException9.addSuppressed((java.lang.Throwable) iOException19);
        java.io.IOException iOException21 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0036\\u0034", (java.lang.Throwable) iOException19);
        java.lang.Throwable[] throwableArray22 = iOException21.getSuppressed();
        java.lang.String str23 = iOException21.toString();
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0036\\u0034" + "'", str23, "java.io.IOException: \\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0036\\u0034");
    }

    @Test
    public void test05460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05460");
        java.io.IOException iOException2 = new java.io.IOException();
        java.io.IOException iOException3 = new java.io.IOException();
        iOException2.addSuppressed((java.lang.Throwable) iOException3);
        java.io.IOException iOException5 = new java.io.IOException("0", (java.lang.Throwable) iOException2);
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.lang.Throwable[] throwableArray9 = iOException8.getSuppressed();
        java.io.IOException iOException10 = new java.io.IOException("\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException8);
        java.io.IOException iOException11 = new java.io.IOException((java.lang.Throwable) iOException8);
        java.io.IOException iOException12 = new java.io.IOException((java.lang.Throwable) iOException11);
        java.io.IOException iOException14 = new java.io.IOException();
        java.io.IOException iOException15 = new java.io.IOException();
        iOException14.addSuppressed((java.lang.Throwable) iOException15);
        java.io.IOException iOException17 = new java.io.IOException("0", (java.lang.Throwable) iOException14);
        java.io.IOException iOException18 = new java.io.IOException((java.lang.Throwable) iOException17);
        java.io.IOException iOException19 = new java.io.IOException((java.lang.Throwable) iOException18);
        java.io.IOException iOException21 = new java.io.IOException();
        java.io.IOException iOException22 = new java.io.IOException();
        iOException21.addSuppressed((java.lang.Throwable) iOException22);
        java.lang.Throwable[] throwableArray24 = iOException22.getSuppressed();
        java.lang.Throwable[] throwableArray25 = iOException22.getSuppressed();
        java.io.IOException iOException26 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException22);
        java.io.IOException iOException27 = new java.io.IOException();
        java.io.IOException iOException28 = new java.io.IOException();
        iOException27.addSuppressed((java.lang.Throwable) iOException28);
        java.io.IOException iOException30 = new java.io.IOException((java.lang.Throwable) iOException27);
        java.lang.Throwable[] throwableArray31 = iOException30.getSuppressed();
        iOException26.addSuppressed((java.lang.Throwable) iOException30);
        iOException18.addSuppressed((java.lang.Throwable) iOException30);
        java.lang.Throwable[] throwableArray34 = iOException30.getSuppressed();
        iOException12.addSuppressed((java.lang.Throwable) iOException30);
        java.io.IOException iOException36 = new java.io.IOException((java.lang.Throwable) iOException30);
        java.io.IOException iOException38 = new java.io.IOException("0");
        java.io.IOException iOException39 = new java.io.IOException();
        java.io.IOException iOException40 = new java.io.IOException();
        iOException39.addSuppressed((java.lang.Throwable) iOException40);
        java.io.IOException iOException42 = new java.io.IOException();
        java.io.IOException iOException43 = new java.io.IOException();
        iOException42.addSuppressed((java.lang.Throwable) iOException43);
        java.lang.Throwable[] throwableArray45 = iOException43.getSuppressed();
        java.io.IOException iOException46 = new java.io.IOException((java.lang.Throwable) iOException43);
        java.io.IOException iOException48 = new java.io.IOException("");
        java.io.IOException iOException49 = new java.io.IOException((java.lang.Throwable) iOException48);
        iOException43.addSuppressed((java.lang.Throwable) iOException49);
        iOException40.addSuppressed((java.lang.Throwable) iOException49);
        iOException38.addSuppressed((java.lang.Throwable) iOException40);
        java.io.IOException iOException53 = new java.io.IOException((java.lang.Throwable) iOException40);
        java.io.IOException iOException57 = new java.io.IOException("");
        java.io.IOException iOException58 = new java.io.IOException((java.lang.Throwable) iOException57);
        java.io.IOException iOException60 = new java.io.IOException("");
        iOException58.addSuppressed((java.lang.Throwable) iOException60);
        java.io.IOException iOException62 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException60);
        java.io.IOException iOException64 = new java.io.IOException("");
        java.io.IOException iOException65 = new java.io.IOException((java.lang.Throwable) iOException64);
        java.io.IOException iOException66 = new java.io.IOException((java.lang.Throwable) iOException64);
        iOException62.addSuppressed((java.lang.Throwable) iOException64);
        java.io.IOException iOException68 = new java.io.IOException("\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u005C\\u0075\\u0030\\u0030\\u0037\\u0035\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034", (java.lang.Throwable) iOException62);
        java.lang.Throwable[] throwableArray69 = iOException68.getSuppressed();
        iOException53.addSuppressed((java.lang.Throwable) iOException68);
        java.io.IOException iOException72 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030");
        iOException53.addSuppressed((java.lang.Throwable) iOException72);
        java.io.IOException iOException74 = new java.io.IOException((java.lang.Throwable) iOException72);
        iOException36.addSuppressed((java.lang.Throwable) iOException74);
        java.lang.Class<?> wildcardClass76 = iOException36.getClass();
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test05461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05461");
        java.io.IOException iOException0 = new java.io.IOException();
        java.io.IOException iOException1 = new java.io.IOException();
        iOException0.addSuppressed((java.lang.Throwable) iOException1);
        java.io.IOException iOException3 = new java.io.IOException((java.lang.Throwable) iOException0);
        java.io.IOException iOException5 = new java.io.IOException("20");
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.lang.Throwable[] throwableArray7 = iOException6.getSuppressed();
        iOException3.addSuppressed((java.lang.Throwable) iOException6);
        java.io.IOException iOException11 = new java.io.IOException();
        java.io.IOException iOException12 = new java.io.IOException();
        iOException11.addSuppressed((java.lang.Throwable) iOException12);
        java.io.IOException iOException14 = new java.io.IOException();
        java.io.IOException iOException15 = new java.io.IOException();
        iOException14.addSuppressed((java.lang.Throwable) iOException15);
        java.lang.Throwable[] throwableArray17 = iOException15.getSuppressed();
        java.io.IOException iOException18 = new java.io.IOException((java.lang.Throwable) iOException15);
        java.io.IOException iOException20 = new java.io.IOException("");
        java.io.IOException iOException21 = new java.io.IOException((java.lang.Throwable) iOException20);
        iOException15.addSuppressed((java.lang.Throwable) iOException21);
        iOException12.addSuppressed((java.lang.Throwable) iOException21);
        java.io.IOException iOException24 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException21);
        java.io.IOException iOException25 = new java.io.IOException("64", (java.lang.Throwable) iOException24);
        java.io.IOException iOException26 = new java.io.IOException((java.lang.Throwable) iOException24);
        java.io.IOException iOException27 = new java.io.IOException((java.lang.Throwable) iOException26);
        iOException3.addSuppressed((java.lang.Throwable) iOException27);
        java.lang.String str29 = iOException3.toString();
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "java.io.IOException: java.io.IOException" + "'", str29, "java.io.IOException: java.io.IOException");
    }

    @Test
    public void test05462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05462");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 10, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 0, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper7 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer9 = null;
        boolean boolean10 = unicodeEscaper7.translate((int) ' ', writer9);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper13 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str15 = unicodeEscaper13.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray16 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator17 = unicodeEscaper13.with(charSequenceTranslatorArray16);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator18 = unicodeEscaper7.with(charSequenceTranslatorArray16);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator19 = unicodeEscaper5.with(charSequenceTranslatorArray16);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator20 = unicodeEscaper2.with(charSequenceTranslatorArray16);
        java.lang.String str22 = charSequenceTranslator20.translate((java.lang.CharSequence) "java.io.IOException: j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020");
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertNotNull(unicodeEscaper7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "0" + "'", str15, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray16);
        org.junit.Assert.assertNotNull(charSequenceTranslator17);
        org.junit.Assert.assertNotNull(charSequenceTranslator18);
        org.junit.Assert.assertNotNull(charSequenceTranslator19);
        org.junit.Assert.assertNotNull(charSequenceTranslator20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "java.io.IOException:\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020" + "'", str22, "java.io.IOException:\\u0020j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020");
    }

    @Test
    public void test05463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05463");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '#', (int) (short) 100);
        java.io.Writer writer5 = null;
        int int6 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: hi!", (int) (short) 10, writer5);
        java.io.Writer writer9 = null;
        int int10 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: \\u005Cu\\u0030\\u0030\\u0036\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0032\\u0031", (int) 'a', writer9);
        java.io.Writer writer12 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: \\\\u00750068\\\\u00750069\\\\u00750021", writer12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test05464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05464");
        java.io.IOException iOException1 = new java.io.IOException("java.io.IOException: java.io.IOException: java.io.IOException: hi!");
        java.io.IOException iOException2 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.lang.String str3 = iOException1.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: hi!" + "'", str3, "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: hi!");
    }

    @Test
    public void test05465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05465");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(10, 0);
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u005Cu\\u0030\\u0030\\u0036\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0032\\u0031");
        java.io.Writer writer7 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int8 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: 0", (int) ' ', writer7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0033\\u0038\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0033\\u0039\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0032\\u005C\\u0075\\u0030\\u0030\\u0033\\u0031" + "'", str4, "\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0033\\u0038\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0033\\u0039\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0032\\u005C\\u0075\\u0030\\u0030\\u0033\\u0031");
    }

    @Test
    public void test05466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05466");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper1 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) 'a');
        java.lang.String str3 = unicodeEscaper1.translate((java.lang.CharSequence) "java.io.IOException: \\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034");
        java.io.Writer writer6 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int7 = unicodeEscaper1.translate((java.lang.CharSequence) "java.io.IOException: \\u005Cu\\u0030\\u0030\\u0033\\u0033\\u005Cu\\u0030\\u0030\\u0033\\u0034", (int) '#', writer6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750035\\\\u00750043\\\\u00750075\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750033\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750033\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750035\\\\u00750043\\\\u00750075\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750033\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750034" + "'", str3, "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750035\\\\u00750043\\\\u00750075\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750033\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750033\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750035\\\\u00750043\\\\u00750075\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750033\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750034");
    }

    @Test
    public void test05467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05467");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) '4', writer4);
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper2.translate((int) (byte) -1, writer7);
        java.io.Writer writer10 = null;
        boolean boolean11 = unicodeEscaper2.translate((int) '4', writer10);
        java.io.Writer writer13 = null;
        boolean boolean14 = unicodeEscaper2.translate((int) (byte) 100, writer13);
        java.lang.String str16 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\\\u00750020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\\\u00750020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\\\u00750020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\\\u00750020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\\\u007500200");
        java.io.Writer writer19 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int20 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: hi!", (int) (short) 100, writer19);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\\\u00750020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\\\u00750020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\\\u00750020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\\\u00750020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\\\u007500200" + "'", str16, "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\\\u00750020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\\\u00750020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\\\u00750020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\\\u00750020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\\\u007500200");
    }

    @Test
    public void test05468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05468");
        java.io.IOException iOException4 = new java.io.IOException();
        java.io.IOException iOException5 = new java.io.IOException();
        iOException4.addSuppressed((java.lang.Throwable) iOException5);
        java.io.IOException iOException7 = new java.io.IOException();
        java.io.IOException iOException8 = new java.io.IOException();
        iOException7.addSuppressed((java.lang.Throwable) iOException8);
        java.lang.Throwable[] throwableArray10 = iOException8.getSuppressed();
        java.io.IOException iOException11 = new java.io.IOException((java.lang.Throwable) iOException8);
        java.io.IOException iOException13 = new java.io.IOException("");
        java.io.IOException iOException14 = new java.io.IOException((java.lang.Throwable) iOException13);
        iOException8.addSuppressed((java.lang.Throwable) iOException14);
        iOException5.addSuppressed((java.lang.Throwable) iOException14);
        java.io.IOException iOException17 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException14);
        java.io.IOException iOException18 = new java.io.IOException("64", (java.lang.Throwable) iOException17);
        java.io.IOException iOException20 = new java.io.IOException();
        java.io.IOException iOException21 = new java.io.IOException();
        iOException20.addSuppressed((java.lang.Throwable) iOException21);
        java.io.IOException iOException23 = new java.io.IOException("0", (java.lang.Throwable) iOException20);
        java.io.IOException iOException24 = new java.io.IOException((java.lang.Throwable) iOException23);
        java.io.IOException iOException25 = new java.io.IOException((java.lang.Throwable) iOException24);
        java.io.IOException iOException27 = new java.io.IOException();
        java.io.IOException iOException28 = new java.io.IOException();
        iOException27.addSuppressed((java.lang.Throwable) iOException28);
        java.lang.Throwable[] throwableArray30 = iOException28.getSuppressed();
        java.lang.Throwable[] throwableArray31 = iOException28.getSuppressed();
        java.io.IOException iOException32 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException28);
        java.io.IOException iOException33 = new java.io.IOException();
        java.io.IOException iOException34 = new java.io.IOException();
        iOException33.addSuppressed((java.lang.Throwable) iOException34);
        java.io.IOException iOException36 = new java.io.IOException((java.lang.Throwable) iOException33);
        java.lang.Throwable[] throwableArray37 = iOException36.getSuppressed();
        iOException32.addSuppressed((java.lang.Throwable) iOException36);
        iOException24.addSuppressed((java.lang.Throwable) iOException36);
        java.io.IOException iOException40 = new java.io.IOException((java.lang.Throwable) iOException36);
        iOException18.addSuppressed((java.lang.Throwable) iOException40);
        java.io.IOException iOException42 = new java.io.IOException((java.lang.Throwable) iOException40);
        java.io.IOException iOException43 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException40);
        java.io.IOException iOException44 = new java.io.IOException("1", (java.lang.Throwable) iOException43);
        java.io.IOException iOException45 = new java.io.IOException((java.lang.Throwable) iOException43);
        java.lang.Throwable throwable46 = null;
        java.io.IOException iOException47 = new java.io.IOException(throwable46);
        java.io.IOException iOException48 = new java.io.IOException((java.lang.Throwable) iOException47);
        java.lang.Throwable[] throwableArray49 = iOException47.getSuppressed();
        java.io.IOException iOException50 = new java.io.IOException((java.lang.Throwable) iOException47);
        java.lang.Throwable[] throwableArray51 = iOException47.getSuppressed();
        iOException45.addSuppressed((java.lang.Throwable) iOException47);
        java.lang.Throwable[] throwableArray53 = iOException45.getSuppressed();
        java.lang.Class<?> wildcardClass54 = iOException45.getClass();
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test05469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05469");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 100, (-1));
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper5.translate((int) (short) 10, writer7);
        java.io.Writer writer11 = null;
        int int12 = unicodeEscaper5.translate((java.lang.CharSequence) "0", (int) (byte) 0, writer11);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper15 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) 'a', (int) '4');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper18 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str20 = unicodeEscaper18.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray21 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator22 = unicodeEscaper18.with(charSequenceTranslatorArray21);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator23 = unicodeEscaper15.with(charSequenceTranslatorArray21);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator24 = unicodeEscaper5.with(charSequenceTranslatorArray21);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper27 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, 10);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper30 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper32 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer34 = null;
        boolean boolean35 = unicodeEscaper32.translate((int) ' ', writer34);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper38 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str40 = unicodeEscaper38.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray41 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator42 = unicodeEscaper38.with(charSequenceTranslatorArray41);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator43 = unicodeEscaper32.with(charSequenceTranslatorArray41);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator44 = unicodeEscaper30.with(charSequenceTranslatorArray41);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator45 = unicodeEscaper27.with(charSequenceTranslatorArray41);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator46 = charSequenceTranslator24.with(charSequenceTranslatorArray41);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator47 = unicodeEscaper2.with(charSequenceTranslatorArray41);
        java.io.Writer writer50 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int51 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u005C\\u0075\\u0030\\u0030\\u0036\\u0038\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u005C\\u0075\\u0030\\u0030\\u0032\\u0031", (int) (byte) -1, writer50);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(unicodeEscaper15);
        org.junit.Assert.assertNotNull(unicodeEscaper18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "0" + "'", str20, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray21);
        org.junit.Assert.assertNotNull(charSequenceTranslator22);
        org.junit.Assert.assertNotNull(charSequenceTranslator23);
        org.junit.Assert.assertNotNull(charSequenceTranslator24);
        org.junit.Assert.assertNotNull(unicodeEscaper27);
        org.junit.Assert.assertNotNull(unicodeEscaper30);
        org.junit.Assert.assertNotNull(unicodeEscaper32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "0" + "'", str40, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray41);
        org.junit.Assert.assertNotNull(charSequenceTranslator42);
        org.junit.Assert.assertNotNull(charSequenceTranslator43);
        org.junit.Assert.assertNotNull(charSequenceTranslator44);
        org.junit.Assert.assertNotNull(charSequenceTranslator45);
        org.junit.Assert.assertNotNull(charSequenceTranslator46);
        org.junit.Assert.assertNotNull(charSequenceTranslator47);
    }

    @Test
    public void test05470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05470");
        java.io.IOException iOException4 = new java.io.IOException();
        java.io.IOException iOException5 = new java.io.IOException();
        iOException4.addSuppressed((java.lang.Throwable) iOException5);
        java.io.IOException iOException7 = new java.io.IOException("0", (java.lang.Throwable) iOException4);
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.io.IOException iOException9 = new java.io.IOException((java.lang.Throwable) iOException8);
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException9);
        java.lang.Throwable[] throwableArray11 = iOException10.getSuppressed();
        java.io.IOException iOException12 = new java.io.IOException("java.io.IOException: java.io.IOException", (java.lang.Throwable) iOException10);
        java.io.IOException iOException13 = new java.io.IOException((java.lang.Throwable) iOException12);
        java.io.IOException iOException17 = new java.io.IOException("0");
        java.lang.Throwable[] throwableArray18 = iOException17.getSuppressed();
        java.io.IOException iOException19 = new java.io.IOException("hi!", (java.lang.Throwable) iOException17);
        java.io.IOException iOException20 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException17);
        iOException12.addSuppressed((java.lang.Throwable) iOException20);
        java.io.IOException iOException22 = new java.io.IOException((java.lang.Throwable) iOException20);
        java.io.IOException iOException23 = new java.io.IOException("\\\\u0075006A\\\\u00750061\\\\u00750076\\\\u00750061\\\\u0075002E\\\\u00750069\\\\u0075006F\\\\u0075002E\\\\u00750049\\\\u0075004F\\\\u00750045\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E\\\\u0075003A\\\\u00750020", (java.lang.Throwable) iOException22);
        java.io.IOException iOException24 = new java.io.IOException("\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: 0", (java.lang.Throwable) iOException22);
        java.io.IOException iOException26 = new java.io.IOException("java.io.IOException: java.io.IOException");
        java.io.IOException iOException29 = new java.io.IOException("0");
        java.lang.Throwable[] throwableArray30 = iOException29.getSuppressed();
        java.io.IOException iOException31 = new java.io.IOException("hi!", (java.lang.Throwable) iOException29);
        iOException26.addSuppressed((java.lang.Throwable) iOException29);
        java.io.IOException iOException33 = new java.io.IOException((java.lang.Throwable) iOException26);
        java.io.IOException iOException34 = new java.io.IOException((java.lang.Throwable) iOException33);
        iOException22.addSuppressed((java.lang.Throwable) iOException33);
        java.io.IOException iOException36 = new java.io.IOException();
        java.io.IOException iOException37 = new java.io.IOException();
        iOException36.addSuppressed((java.lang.Throwable) iOException37);
        java.io.IOException iOException39 = new java.io.IOException((java.lang.Throwable) iOException36);
        java.io.IOException iOException41 = new java.io.IOException("20");
        java.io.IOException iOException42 = new java.io.IOException((java.lang.Throwable) iOException41);
        java.lang.Throwable[] throwableArray43 = iOException42.getSuppressed();
        iOException39.addSuppressed((java.lang.Throwable) iOException42);
        java.lang.Throwable[] throwableArray45 = iOException42.getSuppressed();
        iOException22.addSuppressed((java.lang.Throwable) iOException42);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray45);
    }

    @Test
    public void test05471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05471");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 0, 100);
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: ");
        java.io.Writer writer6 = null;
        boolean boolean7 = unicodeEscaper2.translate((int) (short) 100, writer6);
        java.io.Writer writer10 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int11 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u005Cu\\u0030\\u0030\\u0033\\u0033\\u005Cu\\u0030\\u0030\\u0033\\u0034", (int) (short) 1, writer10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: " + "'", str4, "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: ");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test05472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05472");
        java.io.IOException iOException3 = new java.io.IOException();
        java.io.IOException iOException4 = new java.io.IOException();
        iOException3.addSuppressed((java.lang.Throwable) iOException4);
        java.lang.Throwable[] throwableArray6 = iOException4.getSuppressed();
        java.lang.Throwable[] throwableArray7 = iOException4.getSuppressed();
        java.io.IOException iOException8 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException4);
        java.io.IOException iOException9 = new java.io.IOException();
        java.io.IOException iOException10 = new java.io.IOException();
        iOException9.addSuppressed((java.lang.Throwable) iOException10);
        java.io.IOException iOException12 = new java.io.IOException((java.lang.Throwable) iOException9);
        java.lang.Throwable[] throwableArray13 = iOException12.getSuppressed();
        iOException8.addSuppressed((java.lang.Throwable) iOException12);
        java.io.IOException iOException16 = new java.io.IOException();
        java.io.IOException iOException17 = new java.io.IOException();
        iOException16.addSuppressed((java.lang.Throwable) iOException17);
        java.io.IOException iOException19 = new java.io.IOException();
        java.io.IOException iOException20 = new java.io.IOException();
        iOException19.addSuppressed((java.lang.Throwable) iOException20);
        java.lang.Throwable[] throwableArray22 = iOException20.getSuppressed();
        java.io.IOException iOException23 = new java.io.IOException((java.lang.Throwable) iOException20);
        java.io.IOException iOException25 = new java.io.IOException("");
        java.io.IOException iOException26 = new java.io.IOException((java.lang.Throwable) iOException25);
        iOException20.addSuppressed((java.lang.Throwable) iOException26);
        iOException17.addSuppressed((java.lang.Throwable) iOException26);
        java.io.IOException iOException29 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException26);
        iOException12.addSuppressed((java.lang.Throwable) iOException29);
        java.io.IOException iOException32 = new java.io.IOException("");
        java.io.IOException iOException33 = new java.io.IOException((java.lang.Throwable) iOException32);
        java.io.IOException iOException35 = new java.io.IOException("");
        iOException33.addSuppressed((java.lang.Throwable) iOException35);
        java.lang.Throwable[] throwableArray37 = iOException35.getSuppressed();
        iOException29.addSuppressed((java.lang.Throwable) iOException35);
        java.io.IOException iOException39 = new java.io.IOException("java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: 0", (java.lang.Throwable) iOException29);
        java.io.IOException iOException40 = new java.io.IOException("\\u005Cu\\u0030\\u0030\\u0033\\u0030", (java.lang.Throwable) iOException39);
        java.io.IOException iOException41 = new java.io.IOException((java.lang.Throwable) iOException39);
        java.io.IOException iOException44 = new java.io.IOException();
        java.io.IOException iOException45 = new java.io.IOException();
        iOException44.addSuppressed((java.lang.Throwable) iOException45);
        java.io.IOException iOException47 = new java.io.IOException("0", (java.lang.Throwable) iOException44);
        java.io.IOException iOException48 = new java.io.IOException((java.lang.Throwable) iOException47);
        java.io.IOException iOException49 = new java.io.IOException((java.lang.Throwable) iOException48);
        java.io.IOException iOException50 = new java.io.IOException((java.lang.Throwable) iOException49);
        java.lang.Throwable[] throwableArray51 = iOException50.getSuppressed();
        java.io.IOException iOException52 = new java.io.IOException("java.io.IOException: java.io.IOException", (java.lang.Throwable) iOException50);
        java.io.IOException iOException53 = new java.io.IOException((java.lang.Throwable) iOException52);
        java.lang.Throwable throwable55 = null;
        java.io.IOException iOException56 = new java.io.IOException("java.io.IOException: \\u0068\\u0069\\u0021", throwable55);
        java.io.IOException iOException59 = new java.io.IOException("");
        java.io.IOException iOException60 = new java.io.IOException((java.lang.Throwable) iOException59);
        java.io.IOException iOException62 = new java.io.IOException("");
        iOException60.addSuppressed((java.lang.Throwable) iOException62);
        java.io.IOException iOException64 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException62);
        iOException56.addSuppressed((java.lang.Throwable) iOException62);
        java.io.IOException iOException66 = new java.io.IOException((java.lang.Throwable) iOException62);
        iOException52.addSuppressed((java.lang.Throwable) iOException66);
        iOException39.addSuppressed((java.lang.Throwable) iOException52);
        java.lang.Class<?> wildcardClass69 = iOException39.getClass();
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test05473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05473");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, 10);
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "hi!");
        java.lang.String str6 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: hi!");
        java.io.Writer writer9 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int10 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u\\u0030\\u0030\\u0033\\u0030", (int) (short) 0, writer9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\u0068\\u0069\\u0021" + "'", str4, "\\u0068\\u0069\\u0021");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0068\\u0069\\u0021" + "'", str6, "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0068\\u0069\\u0021");
    }

    @Test
    public void test05474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05474");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper1 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (short) 10);
        java.lang.String str3 = unicodeEscaper1.translate((java.lang.CharSequence) "\\u0068\\u0069\\u0021");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper6 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 10, (-1));
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper9 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 100, (int) (short) 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper12 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer14 = null;
        boolean boolean15 = unicodeEscaper12.translate((int) (short) 10, writer14);
        java.lang.String str17 = unicodeEscaper12.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper20 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer22 = null;
        boolean boolean23 = unicodeEscaper20.translate((int) '4', writer22);
        java.io.Writer writer25 = null;
        boolean boolean26 = unicodeEscaper20.translate((int) (byte) -1, writer25);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper29 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper31 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper33 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str35 = unicodeEscaper33.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray36 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper29, unicodeEscaper31, unicodeEscaper33 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator37 = unicodeEscaper20.with(charSequenceTranslatorArray36);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator38 = unicodeEscaper12.with(charSequenceTranslatorArray36);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator39 = unicodeEscaper9.with(charSequenceTranslatorArray36);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator40 = unicodeEscaper6.with(charSequenceTranslatorArray36);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator41 = unicodeEscaper1.with(charSequenceTranslatorArray36);
        java.lang.String str43 = unicodeEscaper1.translate((java.lang.CharSequence) "\\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E: \\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E: \\\\\\u007500750068\\\\\\u007500750069\\\\\\u007500750021");
        java.lang.String str45 = unicodeEscaper1.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0032\\u0033");
        java.io.Writer writer47 = null;
        boolean boolean48 = unicodeEscaper1.translate((int) 'a', writer47);
        java.io.Writer writer51 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int52 = unicodeEscaper1.translate((java.lang.CharSequence) "j\\u0061v\\u0061.io.IOEx\\u0063eption: \\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (-1), writer51);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\u0068\\u0069\\u0021" + "'", str3, "\\u0068\\u0069\\u0021");
        org.junit.Assert.assertNotNull(unicodeEscaper6);
        org.junit.Assert.assertNotNull(unicodeEscaper9);
        org.junit.Assert.assertNotNull(unicodeEscaper12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "0" + "'", str17, "0");
        org.junit.Assert.assertNotNull(unicodeEscaper20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper29);
        org.junit.Assert.assertNotNull(unicodeEscaper31);
        org.junit.Assert.assertNotNull(unicodeEscaper33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str35, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray36);
        org.junit.Assert.assertNotNull(charSequenceTranslator37);
        org.junit.Assert.assertNotNull(charSequenceTranslator38);
        org.junit.Assert.assertNotNull(charSequenceTranslator39);
        org.junit.Assert.assertNotNull(charSequenceTranslator40);
        org.junit.Assert.assertNotNull(charSequenceTranslator41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E: \\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E: \\\\\\u007500750068\\\\\\u007500750069\\\\\\u007500750021" + "'", str43, "\\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E: \\\\u0075006Aa\\\\u00750076a.\\\\u00750069\\\\u0075006F.IOE\\\\u00750078\\\\u00750063\\\\u00750065\\\\u00750070\\\\u00750074\\\\u00750069\\\\u0075006F\\\\u0075006E: \\\\\\u007500750068\\\\\\u007500750069\\\\\\u007500750021");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0032\\u0033" + "'", str45, "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0032\\u0033");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test05475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05475");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (byte) 100, (int) (byte) 100);
        java.io.Writer writer4 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean5 = unicodeEscaper2.translate((int) (short) 0, writer4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
    }

    @Test
    public void test05476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05476");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (short) 10, (int) (short) 100);
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((-1), writer4);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper8 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', 10);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper11 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) '#', (int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper13 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper16 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between(0, (int) (byte) 100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper19 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(10, 10);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper22 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) -1, (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper24 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper26 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer28 = null;
        boolean boolean29 = unicodeEscaper26.translate((int) ' ', writer28);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper32 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str34 = unicodeEscaper32.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray35 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator36 = unicodeEscaper32.with(charSequenceTranslatorArray35);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator37 = unicodeEscaper26.with(charSequenceTranslatorArray35);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator38 = unicodeEscaper24.with(charSequenceTranslatorArray35);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper41 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer43 = null;
        boolean boolean44 = unicodeEscaper41.translate((int) '4', writer43);
        java.io.Writer writer46 = null;
        boolean boolean47 = unicodeEscaper41.translate((int) (byte) -1, writer46);
        java.io.Writer writer49 = null;
        boolean boolean50 = unicodeEscaper41.translate((int) (byte) -1, writer49);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray51 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator52 = unicodeEscaper41.with(charSequenceTranslatorArray51);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator53 = charSequenceTranslator38.with(charSequenceTranslatorArray51);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator54 = unicodeEscaper22.with(charSequenceTranslatorArray51);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator55 = unicodeEscaper19.with(charSequenceTranslatorArray51);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator56 = unicodeEscaper16.with(charSequenceTranslatorArray51);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator57 = unicodeEscaper13.with(charSequenceTranslatorArray51);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator58 = unicodeEscaper11.with(charSequenceTranslatorArray51);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator59 = unicodeEscaper8.with(charSequenceTranslatorArray51);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator60 = unicodeEscaper2.with(charSequenceTranslatorArray51);
        java.io.Writer writer62 = null;
        boolean boolean63 = unicodeEscaper2.translate(1, writer62);
        java.io.Writer writer65 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean66 = unicodeEscaper2.translate((int) (byte) 10, writer65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper8);
        org.junit.Assert.assertNotNull(unicodeEscaper11);
        org.junit.Assert.assertNotNull(unicodeEscaper13);
        org.junit.Assert.assertNotNull(unicodeEscaper16);
        org.junit.Assert.assertNotNull(unicodeEscaper19);
        org.junit.Assert.assertNotNull(unicodeEscaper22);
        org.junit.Assert.assertNotNull(unicodeEscaper24);
        org.junit.Assert.assertNotNull(unicodeEscaper26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "0" + "'", str34, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray35);
        org.junit.Assert.assertNotNull(charSequenceTranslator36);
        org.junit.Assert.assertNotNull(charSequenceTranslator37);
        org.junit.Assert.assertNotNull(charSequenceTranslator38);
        org.junit.Assert.assertNotNull(unicodeEscaper41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray51);
        org.junit.Assert.assertNotNull(charSequenceTranslator52);
        org.junit.Assert.assertNotNull(charSequenceTranslator53);
        org.junit.Assert.assertNotNull(charSequenceTranslator54);
        org.junit.Assert.assertNotNull(charSequenceTranslator55);
        org.junit.Assert.assertNotNull(charSequenceTranslator56);
        org.junit.Assert.assertNotNull(charSequenceTranslator57);
        org.junit.Assert.assertNotNull(charSequenceTranslator58);
        org.junit.Assert.assertNotNull(charSequenceTranslator59);
        org.junit.Assert.assertNotNull(charSequenceTranslator60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test05477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05477");
        java.io.IOException iOException3 = new java.io.IOException();
        java.io.IOException iOException4 = new java.io.IOException();
        iOException3.addSuppressed((java.lang.Throwable) iOException4);
        java.io.IOException iOException6 = new java.io.IOException("0", (java.lang.Throwable) iOException3);
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.io.IOException iOException9 = new java.io.IOException((java.lang.Throwable) iOException8);
        java.lang.Throwable[] throwableArray10 = iOException9.getSuppressed();
        java.io.IOException iOException11 = new java.io.IOException("java.io.IOException: java.io.IOException", (java.lang.Throwable) iOException9);
        java.io.IOException iOException12 = new java.io.IOException("\\u005Cu\\u0030\\u0030\\u0036\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0032\\u0031", (java.lang.Throwable) iOException9);
        java.io.IOException iOException13 = new java.io.IOException((java.lang.Throwable) iOException12);
        java.io.IOException iOException15 = new java.io.IOException();
        java.io.IOException iOException16 = new java.io.IOException();
        iOException15.addSuppressed((java.lang.Throwable) iOException16);
        java.io.IOException iOException18 = new java.io.IOException();
        java.io.IOException iOException19 = new java.io.IOException();
        iOException18.addSuppressed((java.lang.Throwable) iOException19);
        java.lang.Throwable[] throwableArray21 = iOException19.getSuppressed();
        java.io.IOException iOException22 = new java.io.IOException((java.lang.Throwable) iOException19);
        java.io.IOException iOException24 = new java.io.IOException("");
        java.io.IOException iOException25 = new java.io.IOException((java.lang.Throwable) iOException24);
        iOException19.addSuppressed((java.lang.Throwable) iOException25);
        iOException16.addSuppressed((java.lang.Throwable) iOException25);
        java.io.IOException iOException28 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException25);
        java.io.IOException iOException31 = new java.io.IOException("");
        java.io.IOException iOException32 = new java.io.IOException((java.lang.Throwable) iOException31);
        java.io.IOException iOException34 = new java.io.IOException("");
        iOException32.addSuppressed((java.lang.Throwable) iOException34);
        java.io.IOException iOException36 = new java.io.IOException("java.io.IOException: 0", (java.lang.Throwable) iOException34);
        iOException25.addSuppressed((java.lang.Throwable) iOException34);
        java.io.IOException iOException38 = new java.io.IOException((java.lang.Throwable) iOException25);
        iOException13.addSuppressed((java.lang.Throwable) iOException25);
        java.io.IOException iOException40 = new java.io.IOException((java.lang.Throwable) iOException13);
        java.io.IOException iOException43 = new java.io.IOException("");
        java.io.IOException iOException44 = new java.io.IOException((java.lang.Throwable) iOException43);
        java.io.IOException iOException46 = new java.io.IOException("");
        iOException44.addSuppressed((java.lang.Throwable) iOException46);
        java.lang.Throwable[] throwableArray48 = iOException46.getSuppressed();
        java.io.IOException iOException49 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (java.lang.Throwable) iOException46);
        java.lang.Throwable[] throwableArray50 = iOException46.getSuppressed();
        iOException13.addSuppressed((java.lang.Throwable) iOException46);
        java.lang.Throwable[] throwableArray52 = iOException13.getSuppressed();
        java.lang.Throwable[] throwableArray53 = iOException13.getSuppressed();
        java.io.IOException iOException56 = new java.io.IOException("");
        java.io.IOException iOException57 = new java.io.IOException("A", (java.lang.Throwable) iOException56);
        java.io.IOException iOException58 = new java.io.IOException((java.lang.Throwable) iOException56);
        java.io.IOException iOException59 = new java.io.IOException((java.lang.Throwable) iOException58);
        java.lang.Throwable throwable61 = null;
        java.io.IOException iOException62 = new java.io.IOException(throwable61);
        java.io.IOException iOException63 = new java.io.IOException("java.io.IOException: \\u0068\\u0069\\u0021", (java.lang.Throwable) iOException62);
        iOException58.addSuppressed((java.lang.Throwable) iOException62);
        iOException13.addSuppressed((java.lang.Throwable) iOException62);
        java.lang.Class<?> wildcardClass66 = iOException62.getClass();
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test05478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05478");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 10, (int) (short) 1);
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper7 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer9 = null;
        boolean boolean10 = unicodeEscaper7.translate((int) (short) 10, writer9);
        java.lang.String str12 = unicodeEscaper7.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper15 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer17 = null;
        boolean boolean18 = unicodeEscaper15.translate((int) '4', writer17);
        java.io.Writer writer20 = null;
        boolean boolean21 = unicodeEscaper15.translate((int) (byte) -1, writer20);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper24 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper26 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper28 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str30 = unicodeEscaper28.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray31 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper24, unicodeEscaper26, unicodeEscaper28 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator32 = unicodeEscaper15.with(charSequenceTranslatorArray31);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator33 = unicodeEscaper7.with(charSequenceTranslatorArray31);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper36 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.lang.String str38 = unicodeEscaper36.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray39 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper36 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator40 = unicodeEscaper7.with(charSequenceTranslatorArray39);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper42 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer44 = null;
        boolean boolean45 = unicodeEscaper42.translate((int) ' ', writer44);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper48 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str50 = unicodeEscaper48.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray51 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator52 = unicodeEscaper48.with(charSequenceTranslatorArray51);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator53 = unicodeEscaper42.with(charSequenceTranslatorArray51);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator54 = unicodeEscaper7.with(charSequenceTranslatorArray51);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper57 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer59 = null;
        boolean boolean60 = unicodeEscaper57.translate((int) (short) 10, writer59);
        java.io.Writer writer62 = null;
        boolean boolean63 = unicodeEscaper57.translate((int) '#', writer62);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper66 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 0, (int) 'a');
        java.io.Writer writer68 = null;
        boolean boolean69 = unicodeEscaper66.translate(100, writer68);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper72 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper75 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', (int) (short) 0);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray76 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper75 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator77 = unicodeEscaper72.with(charSequenceTranslatorArray76);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator78 = unicodeEscaper66.with(charSequenceTranslatorArray76);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator79 = unicodeEscaper57.with(charSequenceTranslatorArray76);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator80 = charSequenceTranslator54.with(charSequenceTranslatorArray76);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator81 = unicodeEscaper2.with(charSequenceTranslatorArray76);
        java.lang.Class<?> wildcardClass82 = unicodeEscaper2.getClass();
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034" + "'", str4, "\\u005C\\u0075\\u0030\\u0030\\u0033\\u0036\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034");
        org.junit.Assert.assertNotNull(unicodeEscaper7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "0" + "'", str12, "0");
        org.junit.Assert.assertNotNull(unicodeEscaper15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper24);
        org.junit.Assert.assertNotNull(unicodeEscaper26);
        org.junit.Assert.assertNotNull(unicodeEscaper28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str30, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray31);
        org.junit.Assert.assertNotNull(charSequenceTranslator32);
        org.junit.Assert.assertNotNull(charSequenceTranslator33);
        org.junit.Assert.assertNotNull(unicodeEscaper36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str38, "\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u0069\\u006F\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray39);
        org.junit.Assert.assertNotNull(charSequenceTranslator40);
        org.junit.Assert.assertNotNull(unicodeEscaper42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "0" + "'", str50, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray51);
        org.junit.Assert.assertNotNull(charSequenceTranslator52);
        org.junit.Assert.assertNotNull(charSequenceTranslator53);
        org.junit.Assert.assertNotNull(charSequenceTranslator54);
        org.junit.Assert.assertNotNull(unicodeEscaper57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper72);
        org.junit.Assert.assertNotNull(unicodeEscaper75);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray76);
        org.junit.Assert.assertNotNull(charSequenceTranslator77);
        org.junit.Assert.assertNotNull(charSequenceTranslator78);
        org.junit.Assert.assertNotNull(charSequenceTranslator79);
        org.junit.Assert.assertNotNull(charSequenceTranslator80);
        org.junit.Assert.assertNotNull(charSequenceTranslator81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test05479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05479");
        java.io.IOException iOException1 = new java.io.IOException("\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u0030");
    }

    @Test
    public void test05480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05480");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) '#', (int) (short) 0);
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) (byte) 10, writer4);
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper2.translate((int) (byte) 100, writer7);
        java.lang.CharSequence charSequence9 = null;
        java.io.Writer writer11 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int12 = unicodeEscaper2.translate(charSequence9, (int) '#', writer11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test05481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05481");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (short) 100, (int) (short) 1);
        java.io.Writer writer5 = null;
        int int6 = unicodeEscaper2.translate((java.lang.CharSequence) "61", (int) (byte) 0, writer5);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper8 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper11 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str13 = unicodeEscaper11.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray14 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator15 = unicodeEscaper11.with(charSequenceTranslatorArray14);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator16 = unicodeEscaper8.with(charSequenceTranslatorArray14);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator17 = unicodeEscaper2.with(charSequenceTranslatorArray14);
        java.io.Writer writer19 = null;
        boolean boolean20 = unicodeEscaper2.translate((int) (byte) 1, writer19);
        java.io.Writer writer22 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u005C\\u0075\\u0030\\u0030\\u0036\\u0041\\u005C\\u0075\\u0030\\u0030\\u0036\\u0031\\u005C\\u0075\\u0030\\u0030\\u0037\\u0036\\u005C\\u0075\\u0030\\u0030\\u0036\\u0031\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u005C\\u0075\\u0030\\u0030\\u0036\\u0046\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u005C\\u0075\\u0030\\u0030\\u0037\\u0038\\u005C\\u0075\\u0030\\u0030\\u0036\\u0033\\u005C\\u0075\\u0030\\u0030\\u0036\\u0035\\u005C\\u0075\\u0030\\u0030\\u0037\\u0030\\u005C\\u0075\\u0030\\u0030\\u0037\\u0034\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u005C\\u0075\\u0030\\u0030\\u0036\\u0046\\u005C\\u0075\\u0030\\u0030\\u0036\\u0045", writer22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(unicodeEscaper8);
        org.junit.Assert.assertNotNull(unicodeEscaper11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "0" + "'", str13, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray14);
        org.junit.Assert.assertNotNull(charSequenceTranslator15);
        org.junit.Assert.assertNotNull(charSequenceTranslator16);
        org.junit.Assert.assertNotNull(charSequenceTranslator17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test05482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05482");
        java.io.IOException iOException1 = new java.io.IOException("");
        java.io.IOException iOException2 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.io.IOException iOException3 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.io.IOException iOException5 = new java.io.IOException();
        java.io.IOException iOException6 = new java.io.IOException();
        iOException5.addSuppressed((java.lang.Throwable) iOException6);
        java.io.IOException iOException8 = new java.io.IOException("0", (java.lang.Throwable) iOException5);
        java.io.IOException iOException9 = new java.io.IOException((java.lang.Throwable) iOException8);
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException8);
        iOException1.addSuppressed((java.lang.Throwable) iOException8);
        java.io.IOException iOException12 = new java.io.IOException((java.lang.Throwable) iOException8);
        java.io.IOException iOException13 = new java.io.IOException((java.lang.Throwable) iOException8);
        java.lang.Throwable[] throwableArray14 = iOException8.getSuppressed();
        java.io.IOException iOException16 = new java.io.IOException();
        java.io.IOException iOException17 = new java.io.IOException();
        iOException16.addSuppressed((java.lang.Throwable) iOException17);
        java.io.IOException iOException19 = new java.io.IOException();
        java.io.IOException iOException20 = new java.io.IOException();
        iOException19.addSuppressed((java.lang.Throwable) iOException20);
        java.lang.Throwable[] throwableArray22 = iOException20.getSuppressed();
        java.io.IOException iOException23 = new java.io.IOException((java.lang.Throwable) iOException20);
        java.io.IOException iOException25 = new java.io.IOException("");
        java.io.IOException iOException26 = new java.io.IOException((java.lang.Throwable) iOException25);
        iOException20.addSuppressed((java.lang.Throwable) iOException26);
        iOException17.addSuppressed((java.lang.Throwable) iOException26);
        java.io.IOException iOException29 = new java.io.IOException((java.lang.Throwable) iOException26);
        java.io.IOException iOException33 = new java.io.IOException("0");
        java.lang.Throwable[] throwableArray34 = iOException33.getSuppressed();
        java.io.IOException iOException35 = new java.io.IOException("hi!", (java.lang.Throwable) iOException33);
        java.io.IOException iOException37 = new java.io.IOException("");
        java.io.IOException iOException38 = new java.io.IOException((java.lang.Throwable) iOException37);
        java.io.IOException iOException40 = new java.io.IOException("");
        iOException38.addSuppressed((java.lang.Throwable) iOException40);
        java.io.IOException iOException43 = new java.io.IOException("");
        java.io.IOException iOException44 = new java.io.IOException((java.lang.Throwable) iOException43);
        java.io.IOException iOException46 = new java.io.IOException("");
        iOException44.addSuppressed((java.lang.Throwable) iOException46);
        iOException38.addSuppressed((java.lang.Throwable) iOException44);
        iOException35.addSuppressed((java.lang.Throwable) iOException38);
        java.io.IOException iOException50 = new java.io.IOException("java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception", (java.lang.Throwable) iOException38);
        iOException29.addSuppressed((java.lang.Throwable) iOException38);
        java.io.IOException iOException52 = new java.io.IOException("java.io.IOException: 0", (java.lang.Throwable) iOException38);
        java.io.IOException iOException53 = new java.io.IOException((java.lang.Throwable) iOException52);
        iOException8.addSuppressed((java.lang.Throwable) iOException52);
        java.lang.Class<?> wildcardClass55 = iOException8.getClass();
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test05483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05483");
        java.io.IOException iOException1 = new java.io.IOException();
        java.io.IOException iOException2 = new java.io.IOException();
        iOException1.addSuppressed((java.lang.Throwable) iOException2);
        java.io.IOException iOException4 = new java.io.IOException();
        java.io.IOException iOException5 = new java.io.IOException();
        iOException4.addSuppressed((java.lang.Throwable) iOException5);
        java.lang.Throwable[] throwableArray7 = iOException5.getSuppressed();
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.io.IOException iOException10 = new java.io.IOException("");
        java.io.IOException iOException11 = new java.io.IOException((java.lang.Throwable) iOException10);
        iOException5.addSuppressed((java.lang.Throwable) iOException11);
        iOException2.addSuppressed((java.lang.Throwable) iOException11);
        java.io.IOException iOException14 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException11);
        java.io.IOException iOException15 = new java.io.IOException((java.lang.Throwable) iOException11);
        java.io.IOException iOException17 = new java.io.IOException("23");
        iOException11.addSuppressed((java.lang.Throwable) iOException17);
        java.io.IOException iOException20 = new java.io.IOException();
        java.io.IOException iOException21 = new java.io.IOException();
        iOException20.addSuppressed((java.lang.Throwable) iOException21);
        java.lang.Throwable[] throwableArray23 = iOException21.getSuppressed();
        java.lang.Throwable[] throwableArray24 = iOException21.getSuppressed();
        java.io.IOException iOException25 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException21);
        java.io.IOException iOException26 = new java.io.IOException();
        java.io.IOException iOException27 = new java.io.IOException();
        iOException26.addSuppressed((java.lang.Throwable) iOException27);
        java.io.IOException iOException29 = new java.io.IOException((java.lang.Throwable) iOException26);
        java.lang.Throwable[] throwableArray30 = iOException29.getSuppressed();
        iOException25.addSuppressed((java.lang.Throwable) iOException29);
        java.io.IOException iOException33 = new java.io.IOException();
        java.io.IOException iOException34 = new java.io.IOException();
        iOException33.addSuppressed((java.lang.Throwable) iOException34);
        java.io.IOException iOException36 = new java.io.IOException();
        java.io.IOException iOException37 = new java.io.IOException();
        iOException36.addSuppressed((java.lang.Throwable) iOException37);
        java.lang.Throwable[] throwableArray39 = iOException37.getSuppressed();
        java.io.IOException iOException40 = new java.io.IOException((java.lang.Throwable) iOException37);
        java.io.IOException iOException42 = new java.io.IOException("");
        java.io.IOException iOException43 = new java.io.IOException((java.lang.Throwable) iOException42);
        iOException37.addSuppressed((java.lang.Throwable) iOException43);
        iOException34.addSuppressed((java.lang.Throwable) iOException43);
        java.io.IOException iOException46 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException43);
        iOException29.addSuppressed((java.lang.Throwable) iOException46);
        iOException17.addSuppressed((java.lang.Throwable) iOException29);
        java.lang.Throwable[] throwableArray49 = iOException29.getSuppressed();
        java.io.IOException iOException51 = new java.io.IOException();
        java.io.IOException iOException52 = new java.io.IOException();
        iOException51.addSuppressed((java.lang.Throwable) iOException52);
        java.io.IOException iOException54 = new java.io.IOException("0", (java.lang.Throwable) iOException51);
        java.io.IOException iOException55 = new java.io.IOException((java.lang.Throwable) iOException54);
        java.io.IOException iOException56 = new java.io.IOException((java.lang.Throwable) iOException55);
        java.io.IOException iOException57 = new java.io.IOException((java.lang.Throwable) iOException56);
        java.lang.Throwable[] throwableArray58 = iOException57.getSuppressed();
        java.io.IOException iOException62 = new java.io.IOException("0");
        java.lang.Throwable[] throwableArray63 = iOException62.getSuppressed();
        java.io.IOException iOException64 = new java.io.IOException("hi!", (java.lang.Throwable) iOException62);
        java.io.IOException iOException66 = new java.io.IOException("");
        java.io.IOException iOException67 = new java.io.IOException((java.lang.Throwable) iOException66);
        java.io.IOException iOException69 = new java.io.IOException("");
        iOException67.addSuppressed((java.lang.Throwable) iOException69);
        java.io.IOException iOException72 = new java.io.IOException("");
        java.io.IOException iOException73 = new java.io.IOException((java.lang.Throwable) iOException72);
        java.io.IOException iOException75 = new java.io.IOException("");
        iOException73.addSuppressed((java.lang.Throwable) iOException75);
        iOException67.addSuppressed((java.lang.Throwable) iOException73);
        iOException64.addSuppressed((java.lang.Throwable) iOException67);
        java.io.IOException iOException79 = new java.io.IOException("java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception", (java.lang.Throwable) iOException67);
        iOException57.addSuppressed((java.lang.Throwable) iOException79);
        iOException29.addSuppressed((java.lang.Throwable) iOException57);
        java.lang.Throwable[] throwableArray82 = iOException57.getSuppressed();
        java.lang.String str83 = iOException57.toString();
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: 0" + "'", str83, "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: 0");
    }

    @Test
    public void test05484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05484");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) (short) 10, writer4);
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper2.translate((int) '#', writer7);
        java.io.Writer writer10 = null;
        boolean boolean11 = unicodeEscaper2.translate(10, writer10);
        java.io.Writer writer14 = null;
        int int15 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: A", (int) (byte) 10, writer14);
        java.io.Writer writer18 = null;
        int int19 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException:\\u0020java.io.IOException:\\u0020java.io.IOException:\\u0020java.io.IOException:\\u0020java.io.IOException:\\u00200", (int) '#', writer18);
        java.io.Writer writer21 = null;
        boolean boolean22 = unicodeEscaper2.translate((int) (short) 10, writer21);
        java.io.Writer writer25 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int26 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u005Cu\\u0030\\u0030\\u0036\\u0041\\u005Cu\\u0030\\u0030\\u0036\\u0031\\u005Cu\\u0030\\u0030\\u0037\\u0036\\u005Cu\\u0030\\u0030\\u0036\\u0031\\u005Cu\\u0030\\u0030\\u0032\\u0045\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0036\\u0046\\u005Cu\\u0030\\u0030\\u0032\\u0045\\u005Cu\\u0030\\u0030\\u0034\\u0039\\u005Cu\\u0030\\u0030\\u0034\\u0046\\u005Cu\\u0030\\u0030\\u0034\\u0035\\u005Cu\\u0030\\u0030\\u0037\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0033\\u005Cu\\u0030\\u0030\\u0036\\u0035\\u005Cu\\u0030\\u0030\\u0037\\u0030\\u005Cu\\u0030\\u0030\\u0037\\u0034\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0036\\u0046\\u005Cu\\u0030\\u0030\\u0036\\u0045\\u005Cu\\u0030\\u0030\\u0033\\u0041\\u005Cu\\u0030\\u0030\\u0032\\u0030", (int) (byte) 1, writer25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test05485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05485");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) (short) 10, writer4);
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper2.translate((int) '#', writer7);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper11 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((-1), (int) (short) 100);
        java.io.Writer writer13 = null;
        boolean boolean14 = unicodeEscaper11.translate((int) (short) 1, writer13);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper17 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(10, 10);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper20 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) -1, (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper22 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper24 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer26 = null;
        boolean boolean27 = unicodeEscaper24.translate((int) ' ', writer26);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper30 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str32 = unicodeEscaper30.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray33 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator34 = unicodeEscaper30.with(charSequenceTranslatorArray33);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator35 = unicodeEscaper24.with(charSequenceTranslatorArray33);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator36 = unicodeEscaper22.with(charSequenceTranslatorArray33);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper39 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer41 = null;
        boolean boolean42 = unicodeEscaper39.translate((int) '4', writer41);
        java.io.Writer writer44 = null;
        boolean boolean45 = unicodeEscaper39.translate((int) (byte) -1, writer44);
        java.io.Writer writer47 = null;
        boolean boolean48 = unicodeEscaper39.translate((int) (byte) -1, writer47);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray49 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator50 = unicodeEscaper39.with(charSequenceTranslatorArray49);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator51 = charSequenceTranslator36.with(charSequenceTranslatorArray49);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator52 = unicodeEscaper20.with(charSequenceTranslatorArray49);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator53 = unicodeEscaper17.with(charSequenceTranslatorArray49);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator54 = unicodeEscaper11.with(charSequenceTranslatorArray49);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator55 = unicodeEscaper2.with(charSequenceTranslatorArray49);
        java.io.Writer writer58 = null;
        int int59 = charSequenceTranslator55.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: ", (int) (byte) 1, writer58);
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper17);
        org.junit.Assert.assertNotNull(unicodeEscaper20);
        org.junit.Assert.assertNotNull(unicodeEscaper22);
        org.junit.Assert.assertNotNull(unicodeEscaper24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "0" + "'", str32, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray33);
        org.junit.Assert.assertNotNull(charSequenceTranslator34);
        org.junit.Assert.assertNotNull(charSequenceTranslator35);
        org.junit.Assert.assertNotNull(charSequenceTranslator36);
        org.junit.Assert.assertNotNull(unicodeEscaper39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray49);
        org.junit.Assert.assertNotNull(charSequenceTranslator50);
        org.junit.Assert.assertNotNull(charSequenceTranslator51);
        org.junit.Assert.assertNotNull(charSequenceTranslator52);
        org.junit.Assert.assertNotNull(charSequenceTranslator53);
        org.junit.Assert.assertNotNull(charSequenceTranslator54);
        org.junit.Assert.assertNotNull(charSequenceTranslator55);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
    }

    @Test
    public void test05486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05486");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 100, (int) (byte) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 1, (int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper7 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (byte) 0);
        java.io.Writer writer9 = null;
        boolean boolean10 = unicodeEscaper7.translate((int) ' ', writer9);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper13 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str15 = unicodeEscaper13.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray16 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] {};
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator17 = unicodeEscaper13.with(charSequenceTranslatorArray16);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator18 = unicodeEscaper7.with(charSequenceTranslatorArray16);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator19 = unicodeEscaper5.with(charSequenceTranslatorArray16);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper21 = org.apache.commons.lang3.text.translate.UnicodeEscaper.above((int) (short) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper24 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '#', 100);
        java.lang.String str26 = unicodeEscaper24.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper29 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) '4', (int) (short) 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper32 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper35 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', (int) (short) 0);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray36 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper35 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator37 = unicodeEscaper32.with(charSequenceTranslatorArray36);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator38 = unicodeEscaper29.with(charSequenceTranslatorArray36);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator39 = unicodeEscaper24.with(charSequenceTranslatorArray36);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator40 = unicodeEscaper21.with(charSequenceTranslatorArray36);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator41 = charSequenceTranslator19.with(charSequenceTranslatorArray36);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator42 = unicodeEscaper2.with(charSequenceTranslatorArray36);
        java.io.Writer writer44 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate((java.lang.CharSequence) "\\u005C\\u007500\\u0036\\u0041\\u0061\\u005C\\u007500\\u0037\\u0036\\u0061.\\u005C\\u007500\\u0036\\u0039\\u005C\\u007500\\u0036\\u0046.\\u0049\\u004F\\u0045\\u005C\\u007500\\u0037\\u0038\\u0063\\u005C\\u007500\\u0036\\u0035\\u005C\\u007500\\u00370\\u005C\\u007500\\u00374\\u005C\\u007500\\u0036\\u0039\\u005C\\u007500\\u0036\\u0046\\u005C\\u007500\\u0036\\u0045\\u003A \\u005C\\u005C\\u007500\\u0037\\u003500\\u0036\\u0038\\u005C\\u005C\\u007500\\u0037\\u003500\\u0036\\u0039\\u005C\\u005C\\u007500\\u0037\\u00350021", writer44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertNotNull(unicodeEscaper7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "0" + "'", str15, "0");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray16);
        org.junit.Assert.assertNotNull(charSequenceTranslator17);
        org.junit.Assert.assertNotNull(charSequenceTranslator18);
        org.junit.Assert.assertNotNull(charSequenceTranslator19);
        org.junit.Assert.assertNotNull(unicodeEscaper21);
        org.junit.Assert.assertNotNull(unicodeEscaper24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E" + "'", str26, "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E");
        org.junit.Assert.assertNotNull(unicodeEscaper29);
        org.junit.Assert.assertNotNull(unicodeEscaper32);
        org.junit.Assert.assertNotNull(unicodeEscaper35);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray36);
        org.junit.Assert.assertNotNull(charSequenceTranslator37);
        org.junit.Assert.assertNotNull(charSequenceTranslator38);
        org.junit.Assert.assertNotNull(charSequenceTranslator39);
        org.junit.Assert.assertNotNull(charSequenceTranslator40);
        org.junit.Assert.assertNotNull(charSequenceTranslator41);
        org.junit.Assert.assertNotNull(charSequenceTranslator42);
    }

    @Test
    public void test05487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05487");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 100, (int) (short) 100);
        java.io.Writer writer5 = null;
        int int6 = unicodeEscaper2.translate((java.lang.CharSequence) "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception", (int) (byte) 0, writer5);
        java.io.Writer writer8 = null;
        boolean boolean9 = unicodeEscaper2.translate((int) (short) 0, writer8);
        java.io.Writer writer11 = null;
        boolean boolean12 = unicodeEscaper2.translate((int) (byte) 10, writer11);
        java.io.Writer writer14 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate((java.lang.CharSequence) "\\u005C\\u0075\\u0030\\u0030\\u0036\\u0041\\u005C\\u0075\\u0030\\u0030\\u0036\\u0031\\u005C\\u0075\\u0030\\u0030\\u0037\\u0036\\u005C\\u0075\\u0030\\u0030\\u0036\\u0031\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u005C\\u0075\\u0030\\u0030\\u0036\\u0046\\u005C\\u0075\\u0030\\u0030\\u0032\\u0045\\u005C\\u0075\\u0030\\u0030\\u0034\\u0039\\u005C\\u0075\\u0030\\u0030\\u0034\\u0046\\u005C\\u0075\\u0030\\u0030\\u0034\\u0035\\u005C\\u0075\\u0030\\u0030\\u0037\\u0038\\u005C\\u0075\\u0030\\u0030\\u0036\\u0033\\u005C\\u0075\\u0030\\u0030\\u0036\\u0035\\u005C\\u0075\\u0030\\u0030\\u0037\\u0030\\u005C\\u0075\\u0030\\u0030\\u0037\\u0034\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u005C\\u0075\\u0030\\u0030\\u0036\\u0046\\u005C\\u0075\\u0030\\u0030\\u0036\\u0045\\u005C\\u0075\\u0030\\u0030\\u0033\\u0041\\u005C\\u0075\\u0030\\u0030\\u0032\\u0030\\u005C\\u0075\\u0030\\u0030\\u0034\\u0031", writer14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test05488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05488");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) (short) 10, writer4);
        java.lang.String str7 = unicodeEscaper2.translate((java.lang.CharSequence) "0");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper10 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer12 = null;
        boolean boolean13 = unicodeEscaper10.translate((int) '4', writer12);
        java.io.Writer writer15 = null;
        boolean boolean16 = unicodeEscaper10.translate((int) (byte) -1, writer15);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper19 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper21 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper23 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str25 = unicodeEscaper23.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray26 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper19, unicodeEscaper21, unicodeEscaper23 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator27 = unicodeEscaper10.with(charSequenceTranslatorArray26);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator28 = unicodeEscaper2.with(charSequenceTranslatorArray26);
        java.io.Writer writer30 = null;
        boolean boolean31 = unicodeEscaper2.translate((int) '#', writer30);
        java.io.Writer writer34 = null;
        int int35 = unicodeEscaper2.translate((java.lang.CharSequence) "\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750035\\\\u00750043\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750037\\\\u00750035\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750033\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750032\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750035\\\\u00750043\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750037\\\\u00750035\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750033\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030", 10, writer34);
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0" + "'", str7, "0");
        org.junit.Assert.assertNotNull(unicodeEscaper10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper19);
        org.junit.Assert.assertNotNull(unicodeEscaper21);
        org.junit.Assert.assertNotNull(unicodeEscaper23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str25, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray26);
        org.junit.Assert.assertNotNull(charSequenceTranslator27);
        org.junit.Assert.assertNotNull(charSequenceTranslator28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
    }

    @Test
    public void test05489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05489");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (short) 0);
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: 23");
        java.lang.String str6 = unicodeEscaper2.translate((java.lang.CharSequence) "34");
        java.io.Writer writer9 = null;
        int int10 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u0036\\u0034", 10, writer9);
        java.lang.String str12 = unicodeEscaper2.translate((java.lang.CharSequence) "\\\\u0075\\\\u00750030\\\\u007500305C\\u0075\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075\\\\u00750030\\\\u00750030\\\\u007500336\\\\u0075\\\\u00750030\\\\u00750030\\\\u007500338\\\\u0075\\\\u00750030\\\\u007500305C\\u0075\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075\\\\u00750030\\\\u00750030\\\\u007500336\\\\u0075\\\\u00750030\\\\u00750030\\\\u007500339\\\\u0075\\\\u00750030\\\\u007500305C\\u0075\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750032\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750031");
        java.io.Writer writer14 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException:\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", writer14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "java.io.IOException: java.io.IOException: 23" + "'", str4, "java.io.IOException: java.io.IOException: 23");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "34" + "'", str6, "34");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\\\u0075\\\\u00750030\\\\u007500305C\\u0075\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075\\\\u00750030\\\\u00750030\\\\u007500336\\\\u0075\\\\u00750030\\\\u00750030\\\\u007500338\\\\u0075\\\\u00750030\\\\u007500305C\\u0075\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075\\\\u00750030\\\\u00750030\\\\u007500336\\\\u0075\\\\u00750030\\\\u00750030\\\\u007500339\\\\u0075\\\\u00750030\\\\u007500305C\\u0075\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750032\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750031" + "'", str12, "\\\\u0075\\\\u00750030\\\\u007500305C\\u0075\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075\\\\u00750030\\\\u00750030\\\\u007500336\\\\u0075\\\\u00750030\\\\u00750030\\\\u007500338\\\\u0075\\\\u00750030\\\\u007500305C\\u0075\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075\\\\u00750030\\\\u00750030\\\\u007500336\\\\u0075\\\\u00750030\\\\u00750030\\\\u007500339\\\\u0075\\\\u00750030\\\\u007500305C\\u0075\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750032\\\\u0075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750031");
    }

    @Test
    public void test05490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05490");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) (short) 10, writer4);
        java.io.Writer writer8 = null;
        int int9 = unicodeEscaper2.translate((java.lang.CharSequence) "0", (int) (byte) 0, writer8);
        java.io.Writer writer11 = null;
        boolean boolean12 = unicodeEscaper2.translate((int) (byte) 1, writer11);
        java.io.Writer writer15 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int16 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: java.io.IOException: \\u005Cu\\u0030\\u0030\\u0036\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0032\\u0031", (int) (byte) -1, writer15);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test05491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05491");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, (int) 'a');
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) (short) 10, writer4);
        java.lang.String str7 = unicodeEscaper2.translate((java.lang.CharSequence) "0");
        java.io.Writer writer9 = null;
        boolean boolean10 = unicodeEscaper2.translate((int) ' ', writer9);
        java.io.Writer writer12 = null;
        boolean boolean13 = unicodeEscaper2.translate(1, writer12);
        java.io.Writer writer15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = unicodeEscaper2.translate((int) (short) -1, writer15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0" + "'", str7, "0");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test05492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05492");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (short) 0, 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 0, (int) 'a');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper8 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) -1, (int) (short) 0);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper11 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer13 = null;
        boolean boolean14 = unicodeEscaper11.translate((int) '4', writer13);
        java.io.Writer writer16 = null;
        boolean boolean17 = unicodeEscaper11.translate((int) (byte) -1, writer16);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper20 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper22 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below(100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper24 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) 'a');
        java.lang.String str26 = unicodeEscaper24.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray27 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper20, unicodeEscaper22, unicodeEscaper24 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator28 = unicodeEscaper11.with(charSequenceTranslatorArray27);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator29 = unicodeEscaper8.with(charSequenceTranslatorArray27);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator30 = unicodeEscaper5.with(charSequenceTranslatorArray27);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator31 = unicodeEscaper2.with(charSequenceTranslatorArray27);
        java.io.Writer writer34 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int35 = charSequenceTranslator31.translate((java.lang.CharSequence) "java.io.IOException: \\u005Cu\\u0030\\u0030\\u0033\\u0030", (int) (short) 10, writer34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertNotNull(unicodeEscaper8);
        org.junit.Assert.assertNotNull(unicodeEscaper11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper20);
        org.junit.Assert.assertNotNull(unicodeEscaper22);
        org.junit.Assert.assertNotNull(unicodeEscaper24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception" + "'", str26, "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception");
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray27);
        org.junit.Assert.assertNotNull(charSequenceTranslator28);
        org.junit.Assert.assertNotNull(charSequenceTranslator29);
        org.junit.Assert.assertNotNull(charSequenceTranslator30);
        org.junit.Assert.assertNotNull(charSequenceTranslator31);
    }

    @Test
    public void test05493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05493");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) '4', writer4);
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper2.translate((int) (byte) -1, writer7);
        java.io.Writer writer10 = null;
        boolean boolean11 = unicodeEscaper2.translate((int) (byte) -1, writer10);
        java.io.Writer writer14 = null;
        int int15 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: java.io.IOException: \\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\u0020\\\\u00750068\\\\u00750069\\\\u00750021", (int) ' ', writer14);
        java.io.Writer writer18 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int19 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException:\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E", (int) (short) -1, writer18);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test05494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05494");
        java.io.IOException iOException3 = new java.io.IOException();
        java.io.IOException iOException4 = new java.io.IOException();
        iOException3.addSuppressed((java.lang.Throwable) iOException4);
        java.io.IOException iOException6 = new java.io.IOException("0", (java.lang.Throwable) iOException3);
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.io.IOException iOException9 = new java.io.IOException((java.lang.Throwable) iOException8);
        java.lang.Throwable[] throwableArray10 = iOException9.getSuppressed();
        java.io.IOException iOException11 = new java.io.IOException("java.io.IOException: java.io.IOException", (java.lang.Throwable) iOException9);
        java.io.IOException iOException12 = new java.io.IOException((java.lang.Throwable) iOException11);
        java.lang.Throwable throwable14 = null;
        java.io.IOException iOException15 = new java.io.IOException("java.io.IOException: \\u0068\\u0069\\u0021", throwable14);
        java.io.IOException iOException18 = new java.io.IOException("");
        java.io.IOException iOException19 = new java.io.IOException((java.lang.Throwable) iOException18);
        java.io.IOException iOException21 = new java.io.IOException("");
        iOException19.addSuppressed((java.lang.Throwable) iOException21);
        java.io.IOException iOException23 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException21);
        iOException15.addSuppressed((java.lang.Throwable) iOException21);
        java.io.IOException iOException25 = new java.io.IOException((java.lang.Throwable) iOException21);
        iOException11.addSuppressed((java.lang.Throwable) iOException25);
        java.io.IOException iOException28 = new java.io.IOException();
        java.io.IOException iOException29 = new java.io.IOException();
        iOException28.addSuppressed((java.lang.Throwable) iOException29);
        java.lang.Throwable[] throwableArray31 = iOException29.getSuppressed();
        java.lang.Throwable[] throwableArray32 = iOException29.getSuppressed();
        java.io.IOException iOException33 = new java.io.IOException("java.io.IOException", (java.lang.Throwable) iOException29);
        java.io.IOException iOException34 = new java.io.IOException();
        java.io.IOException iOException35 = new java.io.IOException();
        iOException34.addSuppressed((java.lang.Throwable) iOException35);
        java.io.IOException iOException37 = new java.io.IOException((java.lang.Throwable) iOException34);
        java.lang.Throwable[] throwableArray38 = iOException37.getSuppressed();
        iOException33.addSuppressed((java.lang.Throwable) iOException37);
        iOException25.addSuppressed((java.lang.Throwable) iOException33);
        java.io.IOException iOException41 = new java.io.IOException((java.lang.Throwable) iOException33);
        java.io.IOException iOException42 = new java.io.IOException("\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078c\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E:\\\\u007500200", (java.lang.Throwable) iOException41);
        java.lang.Class<?> wildcardClass43 = iOException41.getClass();
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test05495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05495");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) '4', (int) '#');
        java.lang.String str4 = unicodeEscaper2.translate((java.lang.CharSequence) "34");
        java.lang.String str6 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030");
        java.lang.String str8 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: \\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034");
        java.io.Writer writer11 = null;
        int int12 = unicodeEscaper2.translate((java.lang.CharSequence) "\\u006Aa\\u0076a.\\u0069\\u006F.IOE\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E: \\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750035\\\\u00750043\\\\u00750075\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750033\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750033\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750035\\\\u00750043\\\\u00750075\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750030\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750033\\\\u0075005C\\\\u00750075\\\\u00750030\\\\u00750030\\\\u00750033\\\\u00750034", (int) (short) 100, writer11);
        java.io.Writer writer14 = null;
        boolean boolean15 = unicodeEscaper2.translate((int) '#', writer14);
        java.lang.String str17 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: java.io.IOException: java.io.IOException: \\u005Cu\\u0030\\u0030\\u0036\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0032\\u0031");
        java.io.Writer writer19 = null;
        boolean boolean20 = unicodeEscaper2.translate(0, writer19);
        java.io.Writer writer22 = null;
        boolean boolean23 = unicodeEscaper2.translate((int) (byte) -1, writer22);
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "34" + "'", str4, "34");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030" + "'", str6, "\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u006A\\u0061\\u0076\\u0061\\u002E\\u0069\\u006F\\u002E\\u0049\\u004F\\u0045\\u0078\\u0063\\u0065\\u0070\\u0074\\u0069\\u006F\\u006E\\u003A\\u0020\\u0030");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "java.io.IOException: \\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034" + "'", str8, "java.io.IOException: \\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0035\\u0043\\u0075\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0030\\u005C\\u0075\\u0030\\u0030\\u0033\\u0033\\u005C\\u0075\\u0030\\u0030\\u0033\\u0034");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "java.io.IOException: java.io.IOException: java.io.IOException: \\u005Cu\\u0030\\u0030\\u0036\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0032\\u0031" + "'", str17, "java.io.IOException: java.io.IOException: java.io.IOException: \\u005Cu\\u0030\\u0030\\u0036\\u0038\\u005Cu\\u0030\\u0030\\u0036\\u0039\\u005Cu\\u0030\\u0030\\u0032\\u0031");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test05496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05496");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper1 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) '#');
        java.lang.String str3 = unicodeEscaper1.translate((java.lang.CharSequence) "1");
        java.io.Writer writer6 = null;
        int int7 = unicodeEscaper1.translate((java.lang.CharSequence) "\\\\u00750068\\\\u00750069\\\\u00750021", (int) (short) 0, writer6);
        org.junit.Assert.assertNotNull(unicodeEscaper1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "1" + "'", str3, "1");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test05497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05497");
        java.io.IOException iOException3 = new java.io.IOException("");
        java.io.IOException iOException4 = new java.io.IOException("A", (java.lang.Throwable) iOException3);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException3);
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.io.IOException iOException7 = new java.io.IOException("\\u0036\\u0034", (java.lang.Throwable) iOException5);
        java.io.IOException iOException9 = new java.io.IOException();
        java.io.IOException iOException10 = new java.io.IOException();
        iOException9.addSuppressed((java.lang.Throwable) iOException10);
        java.io.IOException iOException12 = new java.io.IOException("0", (java.lang.Throwable) iOException9);
        java.io.IOException iOException13 = new java.io.IOException((java.lang.Throwable) iOException12);
        java.io.IOException iOException14 = new java.io.IOException((java.lang.Throwable) iOException13);
        iOException5.addSuppressed((java.lang.Throwable) iOException13);
        java.lang.Throwable[] throwableArray16 = iOException13.getSuppressed();
        java.lang.Class<?> wildcardClass17 = throwableArray16.getClass();
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test05498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05498");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) (byte) -1, (int) '#');
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate(1, writer4);
        java.io.Writer writer7 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: j\\u0061v\\u0061\\u002Eio\\u002E\\u0049\\u004F\\u0045x\\u0063eption\\u003A\\u0020j\\u0061v\\u0061\\u005Cu\\u0030\\u0030\\u0032\\u0045io\\u005Cu\\u0030\\u0030\\u0032\\u0045\\u005Cu\\u0030\\u0030\\u0034\\u0039\\u005Cu\\u0030\\u0030\\u0034\\u0046\\u005Cu\\u0030\\u0030\\u0034\\u0035x\\u0063eption\\u005Cu\\u0030\\u0030\\u0033\\u0041\\u005Cu\\u0030\\u0030\\u0032\\u0030j\\u0061v\\u0061\\u005Cu\\u0030\\u0030\\u0032\\u0045io\\u005Cu\\u0030\\u0030\\u0032\\u0045\\u005Cu\\u0030\\u0030\\u0034\\u0039\\u005Cu\\u0030\\u0030\\u0034\\u0046\\u005Cu\\u0030\\u0030\\u0034\\u0035x\\u0063eption", writer7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test05499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05499");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 1, (int) '#');
        java.io.Writer writer4 = null;
        boolean boolean5 = unicodeEscaper2.translate((int) '4', writer4);
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper2.translate((int) (byte) -1, writer7);
        java.io.Writer writer11 = null;
        int int12 = unicodeEscaper2.translate((java.lang.CharSequence) "java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception\\u003A\\u0020java\\u002Eio\\u002E\\u0049\\u004F\\u0045xception", 1, writer11);
        java.io.Writer writer15 = null;
        int int16 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: hi!", 0, writer15);
        java.lang.String str18 = unicodeEscaper2.translate((java.lang.CharSequence) "java.io.IOException: 1");
        java.io.Writer writer20 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = unicodeEscaper2.translate((int) (byte) 1, writer20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "java.io.IOException:\\u00201" + "'", str18, "java.io.IOException:\\u00201");
    }

    @Test
    public void test05500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05500");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper2 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(1, (int) (byte) 100);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper5 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) (byte) 100, (int) (short) 10);
        java.io.Writer writer7 = null;
        boolean boolean8 = unicodeEscaper5.translate(0, writer7);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper10 = org.apache.commons.lang3.text.translate.UnicodeEscaper.below((int) (short) 10);
        java.lang.String str12 = unicodeEscaper10.translate((java.lang.CharSequence) "\\u0068\\u0069\\u0021");
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper15 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((int) '4', (int) (short) 1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper18 = org.apache.commons.lang3.text.translate.UnicodeEscaper.between((-1), (int) (byte) -1);
        org.apache.commons.lang3.text.translate.UnicodeEscaper unicodeEscaper21 = org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf((int) '4', (int) (short) 0);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator[] charSequenceTranslatorArray22 = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[] { unicodeEscaper21 };
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator23 = unicodeEscaper18.with(charSequenceTranslatorArray22);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator24 = unicodeEscaper15.with(charSequenceTranslatorArray22);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator25 = unicodeEscaper10.with(charSequenceTranslatorArray22);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator26 = unicodeEscaper5.with(charSequenceTranslatorArray22);
        org.apache.commons.lang3.text.translate.CharSequenceTranslator charSequenceTranslator27 = unicodeEscaper2.with(charSequenceTranslatorArray22);
        java.lang.CharSequence charSequence28 = null;
        java.io.Writer writer29 = null;
        // The following exception was thrown during execution in test generation
        try {
            unicodeEscaper2.translate(charSequence28, writer29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Writer must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unicodeEscaper2);
        org.junit.Assert.assertNotNull(unicodeEscaper5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(unicodeEscaper10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\u0068\\u0069\\u0021" + "'", str12, "\\u0068\\u0069\\u0021");
        org.junit.Assert.assertNotNull(unicodeEscaper15);
        org.junit.Assert.assertNotNull(unicodeEscaper18);
        org.junit.Assert.assertNotNull(unicodeEscaper21);
        org.junit.Assert.assertNotNull(charSequenceTranslatorArray22);
        org.junit.Assert.assertNotNull(charSequenceTranslator23);
        org.junit.Assert.assertNotNull(charSequenceTranslator24);
        org.junit.Assert.assertNotNull(charSequenceTranslator25);
        org.junit.Assert.assertNotNull(charSequenceTranslator26);
        org.junit.Assert.assertNotNull(charSequenceTranslator27);
    }
}

