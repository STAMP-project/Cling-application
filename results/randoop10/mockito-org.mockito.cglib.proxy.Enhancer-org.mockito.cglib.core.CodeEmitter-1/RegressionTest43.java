import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest43 {

    public static boolean debug = false;

    @Test
    public void test21501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21501");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.Object obj1 = label0.info;
        org.mockito.cglib.proxy.Enhancer enhancer2 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = null;
        enhancer2.setNamingPolicy(namingPolicy3);
        java.lang.ClassLoader classLoader5 = null;
        enhancer2.setClassLoader(classLoader5);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter7 = null;
        enhancer2.setCallbackFilter(callbackFilter7);
        enhancer2.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy12 = null;
        enhancer11.setNamingPolicy(namingPolicy12);
        java.lang.ClassLoader classLoader14 = null;
        enhancer11.setClassLoader(classLoader14);
        boolean boolean16 = enhancer11.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy17 = enhancer11.getNamingPolicy();
        org.mockito.cglib.proxy.Callback callback18 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray19 = new org.mockito.cglib.proxy.Callback[] { callback18 };
        enhancer11.setCallbacks(callbackArray19);
        enhancer2.setCallbacks(callbackArray19);
        enhancer2.setAttemptLoad(true);
        label0.info = enhancer2;
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = enhancer2.getNamingPolicy();
        org.mockito.cglib.proxy.Callback callback26 = null;
        enhancer2.setCallback(callback26);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter28 = null;
        enhancer2.setCallbackFilter(callbackFilter28);
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(namingPolicy17);
        org.junit.Assert.assertNotNull(callbackArray19);
        org.junit.Assert.assertNotNull(namingPolicy25);
    }

    @Test
    public void test21502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21502");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = null;
        enhancer5.setNamingPolicy(namingPolicy6);
        java.lang.ClassLoader classLoader8 = null;
        enhancer5.setClassLoader(classLoader8);
        java.lang.Class<?> wildcardClass10 = enhancer5.getClass();
        java.lang.String str11 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass10);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = null;
        enhancer12.setNamingPolicy(namingPolicy13);
        java.lang.ClassLoader classLoader15 = null;
        enhancer12.setClassLoader(classLoader15);
        java.lang.Class<?> wildcardClass17 = enhancer12.getClass();
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass10, wildcardClass17 };
        enhancer0.setInterfaces(classArray18);
        boolean boolean20 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = null;
        enhancer21.setNamingPolicy(namingPolicy22);
        java.lang.ClassLoader classLoader24 = null;
        enhancer21.setClassLoader(classLoader24);
        java.lang.Class<?> wildcardClass26 = enhancer21.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass26);
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = enhancer0.getNamingPolicy();
        boolean boolean30 = enhancer0.getAttemptLoad();
        boolean boolean31 = enhancer0.getUseCache();
        enhancer0.setUseFactory(true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str11, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(namingPolicy28);
        org.junit.Assert.assertNotNull(namingPolicy29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test21503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21503");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("L694739012");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21504");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter13 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter9.visitInsn(159);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21505");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo4 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo5 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.asm.ClassVisitor classVisitor7 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter(classVisitor7);
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter(classVisitor7);
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter9.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter9);
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        org.mockito.asm.ClassVisitor classVisitor13 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter(classVisitor13);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter(classVisitor13);
        org.mockito.cglib.core.ClassInfo classInfo16 = classEmitter15.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo17 = classEmitter15.getClassInfo();
        classEmitter12.setTarget((org.mockito.asm.ClassVisitor) classEmitter15);
        org.mockito.asm.ClassVisitor classVisitor19 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter(classVisitor19);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter(classVisitor19);
        org.mockito.cglib.core.ClassInfo classInfo22 = classEmitter21.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter24);
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter24);
        classEmitter15.setTarget((org.mockito.asm.ClassVisitor) classEmitter24);
        classEmitter6.setTarget((org.mockito.asm.ClassVisitor) classEmitter24);
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor30 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter(classVisitor30);
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter(classVisitor30);
        classEmitter29.setTarget((org.mockito.asm.ClassVisitor) classEmitter32);
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter32);
        org.mockito.asm.ClassVisitor classVisitor35 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter(classVisitor35);
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter(classVisitor35);
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter37);
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter37);
        org.mockito.cglib.core.ClassEmitter classEmitter40 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter40);
        classEmitter37.setTarget((org.mockito.asm.ClassVisitor) classEmitter41);
        org.mockito.asm.ClassVisitor classVisitor43 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter(classVisitor43);
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter(classVisitor43);
        org.mockito.cglib.core.ClassInfo classInfo46 = classEmitter45.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter47 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter45);
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter47);
        org.mockito.asm.ClassVisitor classVisitor49 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter50 = new org.mockito.cglib.core.ClassEmitter(classVisitor49);
        org.mockito.cglib.core.ClassEmitter classEmitter51 = new org.mockito.cglib.core.ClassEmitter(classVisitor49);
        org.mockito.cglib.core.ClassInfo classInfo52 = classEmitter51.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo53 = classEmitter51.getClassInfo();
        classEmitter48.setTarget((org.mockito.asm.ClassVisitor) classEmitter51);
        classEmitter41.setTarget((org.mockito.asm.ClassVisitor) classEmitter51);
        org.mockito.cglib.core.ClassInfo classInfo56 = classEmitter51.getClassInfo();
        classEmitter34.setTarget((org.mockito.asm.ClassVisitor) classEmitter51);
        classEmitter24.setTarget((org.mockito.asm.ClassVisitor) classEmitter34);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.getReturnType("LL2115054512;");
        int int65 = type64.getSize();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.FieldVisitor fieldVisitor66 = classEmitter34.visitField(33, "L172715535", "L785979022", "L691454350", (java.lang.Object) type64);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo4);
        org.junit.Assert.assertNull(classInfo5);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo16);
        org.junit.Assert.assertNull(classInfo17);
        org.junit.Assert.assertNull(classInfo22);
        org.junit.Assert.assertNull(classInfo46);
        org.junit.Assert.assertNull(classInfo52);
        org.junit.Assert.assertNull(classInfo53);
        org.junit.Assert.assertNull(classInfo56);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
    }

    @Test
    public void test21506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21506");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = null;
        enhancer5.setNamingPolicy(namingPolicy6);
        java.lang.ClassLoader classLoader8 = null;
        enhancer5.setClassLoader(classLoader8);
        java.lang.Class<?> wildcardClass10 = enhancer5.getClass();
        java.lang.String str11 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass10);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = null;
        enhancer12.setNamingPolicy(namingPolicy13);
        java.lang.ClassLoader classLoader15 = null;
        enhancer12.setClassLoader(classLoader15);
        java.lang.Class<?> wildcardClass17 = enhancer12.getClass();
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass10, wildcardClass17 };
        enhancer0.setInterfaces(classArray18);
        boolean boolean20 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = null;
        enhancer21.setNamingPolicy(namingPolicy22);
        java.lang.ClassLoader classLoader24 = null;
        enhancer21.setClassLoader(classLoader24);
        java.lang.Class<?> wildcardClass26 = enhancer21.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass26);
        java.lang.ClassLoader classLoader28 = enhancer0.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = enhancer0.getNamingPolicy();
        java.lang.Class<?> wildcardClass30 = enhancer0.getClass();
        boolean boolean31 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str11, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(namingPolicy29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test21507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21507");
        org.mockito.cglib.proxy.Enhancer enhancer1 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy2 = null;
        enhancer1.setNamingPolicy(namingPolicy2);
        java.lang.ClassLoader classLoader4 = null;
        enhancer1.setClassLoader(classLoader4);
        org.mockito.cglib.proxy.Enhancer enhancer6 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = null;
        enhancer6.setNamingPolicy(namingPolicy7);
        java.lang.ClassLoader classLoader9 = null;
        enhancer6.setClassLoader(classLoader9);
        java.lang.Class<?> wildcardClass11 = enhancer6.getClass();
        java.lang.String str12 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass11);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = null;
        enhancer13.setNamingPolicy(namingPolicy14);
        java.lang.ClassLoader classLoader16 = null;
        enhancer13.setClassLoader(classLoader16);
        java.lang.Class<?> wildcardClass18 = enhancer13.getClass();
        java.lang.Class[] classArray19 = new java.lang.Class[] { wildcardClass11, wildcardClass18 };
        enhancer1.setInterfaces(classArray19);
        boolean boolean21 = enhancer1.getAttemptLoad();
        enhancer1.setAttemptLoad(false);
        org.mockito.asm.ClassVisitor classVisitor24 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter(classVisitor24);
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter(classVisitor24);
        org.mockito.cglib.core.ClassInfo classInfo27 = classEmitter26.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter26);
        java.lang.Class<?> wildcardClass29 = classEmitter26.getClass();
        enhancer1.setSuperclass((java.lang.Class) wildcardClass29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass29);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass29);
        int int33 = type32.getSort();
        int int34 = type32.getSize();
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy37 = null;
        enhancer36.setNamingPolicy(namingPolicy37);
        java.lang.ClassLoader classLoader39 = null;
        enhancer36.setClassLoader(classLoader39);
        java.lang.Class<?> wildcardClass41 = enhancer36.getClass();
        java.lang.String str42 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass41);
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass41);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass41);
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy46 = null;
        enhancer45.setNamingPolicy(namingPolicy46);
        java.lang.ClassLoader classLoader48 = null;
        enhancer45.setClassLoader(classLoader48);
        java.lang.Class<?> wildcardClass50 = enhancer45.getClass();
        java.lang.String str51 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass50);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass50);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type55 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray56 = new org.mockito.asm.Type[] {};
        java.lang.String str57 = org.mockito.asm.Type.getMethodDescriptor(type55, typeArray56);
        org.mockito.cglib.core.Signature signature58 = new org.mockito.cglib.core.Signature("double", type54, typeArray56);
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type52, typeArray56);
        org.mockito.cglib.core.Signature signature60 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type44, typeArray56);
        org.mockito.asm.Type[] typeArray61 = signature60.getArgumentTypes();
        org.mockito.cglib.core.Signature signature62 = new org.mockito.cglib.core.Signature("V", type32, typeArray61);
        java.lang.String str63 = type32.getClassName();
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str12, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(classInfo27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10 + "'", int33 == 10);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str42, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str51, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "()D" + "'", str57, "()D");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "()Lorg/mockito/cglib/proxy/Enhancer;" + "'", str59, "()Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "org.mockito.cglib.core.ClassEmitter" + "'", str63, "org.mockito.cglib.core.ClassEmitter");
    }

    @Test
    public void test21508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21508");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        boolean boolean5 = enhancer0.getAttemptLoad();
        java.lang.Class class6 = null;
        enhancer0.setSuperclass(class6);
        org.mockito.cglib.proxy.Callback callback8 = null;
        enhancer0.setCallback(callback8);
        org.mockito.cglib.core.NamingPolicy namingPolicy10 = enhancer0.getNamingPolicy();
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter13 = null;
        enhancer0.setCallbackFilter(callbackFilter13);
        java.lang.Class<?> wildcardClass15 = enhancer0.getClass();
        boolean boolean16 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass15);
        org.mockito.asm.Label label17 = new org.mockito.asm.Label();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getObjectType("byte");
        label17.info = "byte";
        java.lang.String str21 = label17.toString();
        java.lang.String str22 = label17.toString();
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy24 = null;
        enhancer23.setNamingPolicy(namingPolicy24);
        java.lang.ClassLoader classLoader26 = null;
        enhancer23.setClassLoader(classLoader26);
        boolean boolean28 = enhancer23.getAttemptLoad();
        java.lang.Class class29 = null;
        enhancer23.setSuperclass(class29);
        java.lang.ClassLoader classLoader31 = enhancer23.getClassLoader();
        enhancer23.setSerialVersionUID((java.lang.Long) 100L);
        enhancer23.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = enhancer23.getNamingPolicy();
        enhancer23.setUseCache(false);
        java.lang.ClassLoader classLoader39 = null;
        enhancer23.setClassLoader(classLoader39);
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy42 = null;
        enhancer41.setNamingPolicy(namingPolicy42);
        java.lang.ClassLoader classLoader44 = null;
        enhancer41.setClassLoader(classLoader44);
        boolean boolean46 = enhancer41.getAttemptLoad();
        enhancer41.setUseCache(true);
        java.lang.ClassLoader classLoader49 = enhancer41.getClassLoader();
        enhancer41.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.asm.Type type53 = org.mockito.asm.Type.getObjectType("byte");
        int int54 = type53.getSize();
        org.mockito.cglib.proxy.Enhancer enhancer55 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy56 = null;
        enhancer55.setNamingPolicy(namingPolicy56);
        java.lang.ClassLoader classLoader58 = null;
        enhancer55.setClassLoader(classLoader58);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter60 = null;
        enhancer55.setCallbackFilter(callbackFilter60);
        org.mockito.cglib.proxy.Callback callback62 = null;
        enhancer55.setCallback(callback62);
        enhancer55.setUseCache(false);
        boolean boolean66 = type53.equals((java.lang.Object) enhancer55);
        org.mockito.cglib.proxy.Callback callback67 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray68 = new org.mockito.cglib.proxy.Callback[] { callback67 };
        enhancer55.setCallbacks(callbackArray68);
        enhancer41.setCallbacks(callbackArray68);
        enhancer23.setCallbacks(callbackArray68);
        label17.info = callbackArray68;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.proxy.Enhancer.registerCallbacks((java.lang.Class) wildcardClass15, callbackArray68);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class org.mockito.cglib.proxy.Enhancer is not an enhanced class");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(namingPolicy10);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(type19);
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L1829243896" + "'", str21, "L1829243896");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L1829243896" + "'", str22, "L1829243896");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(namingPolicy36);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(classLoader49);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(callbackArray68);
    }

    @Test
    public void test21509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21509");
        org.mockito.cglib.proxy.Enhancer enhancer1 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy2 = null;
        enhancer1.setNamingPolicy(namingPolicy2);
        java.lang.ClassLoader classLoader4 = null;
        enhancer1.setClassLoader(classLoader4);
        org.mockito.cglib.proxy.Enhancer enhancer6 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = null;
        enhancer6.setNamingPolicy(namingPolicy7);
        java.lang.ClassLoader classLoader9 = null;
        enhancer6.setClassLoader(classLoader9);
        java.lang.Class<?> wildcardClass11 = enhancer6.getClass();
        java.lang.String str12 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass11);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = null;
        enhancer13.setNamingPolicy(namingPolicy14);
        java.lang.ClassLoader classLoader16 = null;
        enhancer13.setClassLoader(classLoader16);
        java.lang.Class<?> wildcardClass18 = enhancer13.getClass();
        java.lang.Class[] classArray19 = new java.lang.Class[] { wildcardClass11, wildcardClass18 };
        enhancer1.setInterfaces(classArray19);
        boolean boolean21 = enhancer1.getAttemptLoad();
        enhancer1.setAttemptLoad(false);
        org.mockito.asm.ClassVisitor classVisitor24 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter(classVisitor24);
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter(classVisitor24);
        org.mockito.cglib.core.ClassInfo classInfo27 = classEmitter26.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter26);
        java.lang.Class<?> wildcardClass29 = classEmitter26.getClass();
        enhancer1.setSuperclass((java.lang.Class) wildcardClass29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass29);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass29);
        int int33 = type32.getSort();
        int int34 = type32.getSize();
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy39 = null;
        enhancer38.setNamingPolicy(namingPolicy39);
        java.lang.ClassLoader classLoader41 = null;
        enhancer38.setClassLoader(classLoader41);
        java.lang.Class<?> wildcardClass43 = enhancer38.getClass();
        java.lang.String str44 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass43);
        boolean boolean45 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass43);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass43);
        int int47 = type46.getSize();
        org.mockito.cglib.core.Local local48 = new org.mockito.cglib.core.Local(108, type46);
        org.mockito.cglib.core.Local local49 = new org.mockito.cglib.core.Local(108, type46);
        org.mockito.asm.Type type50 = local49.getType();
        java.lang.String str51 = type50.getClassName();
        org.mockito.asm.Type type52 = type50.getElementType();
        int int53 = type50.getSize();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.BYTE_TYPE;
        int int56 = type55.getSize();
        java.lang.String str57 = type55.getClassName();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type59 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type60 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type61 = org.mockito.asm.Type.BYTE_TYPE;
        int int62 = type61.getSize();
        java.lang.String str63 = type61.getClassName();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str65 = type64.getClassName();
        org.mockito.asm.Type[] typeArray66 = new org.mockito.asm.Type[] { type58, type59, type60, type61, type64 };
        org.mockito.cglib.core.Signature signature67 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type55, typeArray66);
        org.mockito.asm.Type[] typeArray68 = signature67.getArgumentTypes();
        java.lang.String str69 = signature67.toString();
        org.mockito.cglib.core.Signature signature72 = new org.mockito.cglib.core.Signature("byte", "()D");
        boolean boolean73 = signature67.equals((java.lang.Object) signature72);
        java.lang.String str74 = signature72.getDescriptor();
        org.mockito.asm.Type[] typeArray75 = signature72.getArgumentTypes();
        org.mockito.cglib.core.Signature signature76 = new org.mockito.cglib.core.Signature("L609610250", type50, typeArray75);
        org.mockito.cglib.core.Signature signature77 = new org.mockito.cglib.core.Signature("L1014253825", type32, typeArray75);
        int int78 = type32.getDimensions();
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str12, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(classInfo27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10 + "'", int33 == 10);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str44, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "org.mockito.cglib.proxy.Enhancer" + "'", str51, "org.mockito.cglib.proxy.Enhancer");
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "byte" + "'", str57, "byte");
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "byte" + "'", str63, "byte");
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "double" + "'", str65, "double");
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B" + "'", str69, "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "()D" + "'", str74, "()D");
        org.junit.Assert.assertNotNull(typeArray75);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
    }

    @Test
    public void test21510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21510");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.asm.ClassVisitor classVisitor6 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassInfo classInfo9 = classEmitter8.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter8.getClassInfo();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.asm.ClassVisitor classVisitor12 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter(classVisitor12);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter(classVisitor12);
        org.mockito.cglib.core.ClassInfo classInfo15 = classEmitter14.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter17);
        classEmitter8.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        org.mockito.cglib.core.ClassInfo classInfo23 = classEmitter22.getClassInfo();
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter22);
        org.mockito.cglib.core.Signature signature26 = null;
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = null;
        enhancer30.setNamingPolicy(namingPolicy31);
        java.lang.ClassLoader classLoader33 = null;
        enhancer30.setClassLoader(classLoader33);
        java.lang.Class<?> wildcardClass35 = enhancer30.getClass();
        java.lang.String str36 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass35);
        boolean boolean37 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass35);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass35);
        int int39 = type38.getSize();
        org.mockito.cglib.core.Local local40 = new org.mockito.cglib.core.Local(108, type38);
        java.lang.String str41 = type38.getDescriptor();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.getObjectType("byte");
        org.mockito.asm.Type type44 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray45 = new org.mockito.asm.Type[] {};
        java.lang.String str46 = org.mockito.asm.Type.getMethodDescriptor(type44, typeArray45);
        java.lang.String str47 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray45);
        org.mockito.cglib.core.Signature signature48 = new org.mockito.cglib.core.Signature("J", type38, typeArray45);
        int int49 = type38.getDimensions();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.getReturnType("()F");
        org.mockito.asm.Type type54 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type55 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray56 = new org.mockito.asm.Type[] {};
        java.lang.String str57 = org.mockito.asm.Type.getMethodDescriptor(type55, typeArray56);
        org.mockito.cglib.core.Signature signature58 = new org.mockito.cglib.core.Signature("double", type54, typeArray56);
        org.mockito.cglib.core.Signature signature59 = new org.mockito.cglib.core.Signature("L344090587", type52, typeArray56);
        org.mockito.cglib.core.Signature signature60 = new org.mockito.cglib.core.Signature("L616505288", type38, typeArray56);
        org.mockito.asm.Type[] typeArray61 = signature60.getArgumentTypes();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.core.CodeEmitter codeEmitter62 = classEmitter17.begin_method(100, signature26, typeArray61);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: classInfo is null! org.mockito.cglib.core.ClassEmitter@46529939");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo9);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo15);
        org.junit.Assert.assertNull(classInfo23);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str36, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str41, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "()D" + "'", str46, "()D");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "()Lbyte;" + "'", str47, "()Lbyte;");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "()D" + "'", str57, "()D");
        org.junit.Assert.assertNotNull(typeArray61);
    }

    @Test
    public void test21511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21511");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter3 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter4.visitFieldInsn(104, "L813676152", "L1391932106", "L1393077681");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21512");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        enhancer0.setUseFactory(true);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy9 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy10 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy11 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = null;
        enhancer12.setNamingPolicy(namingPolicy13);
        java.lang.ClassLoader classLoader15 = null;
        enhancer12.setClassLoader(classLoader15);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter17 = null;
        enhancer12.setCallbackFilter(callbackFilter17);
        org.mockito.cglib.proxy.Callback callback19 = null;
        enhancer12.setCallback(callback19);
        enhancer12.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy24 = null;
        enhancer23.setNamingPolicy(namingPolicy24);
        java.lang.ClassLoader classLoader26 = null;
        enhancer23.setClassLoader(classLoader26);
        boolean boolean28 = enhancer23.getAttemptLoad();
        java.lang.Class class29 = null;
        enhancer23.setSuperclass(class29);
        java.lang.ClassLoader classLoader31 = enhancer23.getClassLoader();
        boolean boolean32 = enhancer23.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy34 = null;
        enhancer33.setNamingPolicy(namingPolicy34);
        java.lang.ClassLoader classLoader36 = null;
        enhancer33.setClassLoader(classLoader36);
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy39 = null;
        enhancer38.setNamingPolicy(namingPolicy39);
        java.lang.ClassLoader classLoader41 = null;
        enhancer38.setClassLoader(classLoader41);
        java.lang.Class<?> wildcardClass43 = enhancer38.getClass();
        java.lang.String str44 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass43);
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy46 = null;
        enhancer45.setNamingPolicy(namingPolicy46);
        java.lang.ClassLoader classLoader48 = null;
        enhancer45.setClassLoader(classLoader48);
        java.lang.Class<?> wildcardClass50 = enhancer45.getClass();
        java.lang.Class[] classArray51 = new java.lang.Class[] { wildcardClass43, wildcardClass50 };
        enhancer33.setInterfaces(classArray51);
        boolean boolean53 = enhancer33.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = null;
        enhancer54.setNamingPolicy(namingPolicy55);
        java.lang.ClassLoader classLoader57 = null;
        enhancer54.setClassLoader(classLoader57);
        java.lang.Class<?> wildcardClass59 = enhancer54.getClass();
        enhancer33.setSuperclass((java.lang.Class) wildcardClass59);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass59);
        java.lang.String str62 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass59);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass59);
        enhancer23.setSuperclass((java.lang.Class) wildcardClass59);
        org.mockito.cglib.core.NamingPolicy namingPolicy65 = enhancer23.getNamingPolicy();
        enhancer12.setNamingPolicy(namingPolicy65);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy67 = enhancer12.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer68 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy69 = null;
        enhancer68.setNamingPolicy(namingPolicy69);
        java.lang.ClassLoader classLoader71 = null;
        enhancer68.setClassLoader(classLoader71);
        java.lang.Class<?> wildcardClass73 = enhancer68.getClass();
        boolean boolean74 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass73);
        java.lang.String str75 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass73);
        enhancer12.setSuperclass((java.lang.Class) wildcardClass73);
        org.mockito.cglib.proxy.Enhancer enhancer77 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy78 = null;
        enhancer77.setNamingPolicy(namingPolicy78);
        java.lang.ClassLoader classLoader80 = null;
        enhancer77.setClassLoader(classLoader80);
        boolean boolean82 = enhancer77.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy83 = enhancer77.getNamingPolicy();
        org.mockito.cglib.proxy.Callback callback84 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray85 = new org.mockito.cglib.proxy.Callback[] { callback84 };
        enhancer77.setCallbacks(callbackArray85);
        enhancer12.setCallbacks(callbackArray85);
        enhancer0.setCallbacks(callbackArray85);
        org.mockito.cglib.proxy.Callback callback89 = null;
        enhancer0.setCallback(callback89);
        org.junit.Assert.assertNotNull(namingPolicy9);
        org.junit.Assert.assertNotNull(namingPolicy10);
        org.junit.Assert.assertNotNull(namingPolicy11);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str44, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(classArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str62, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(namingPolicy65);
        org.junit.Assert.assertNotNull(generatorStrategy67);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str75, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(namingPolicy83);
        org.junit.Assert.assertNotNull(callbackArray85);
    }

    @Test
    public void test21513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21513");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        boolean boolean5 = enhancer0.getAttemptLoad();
        java.lang.Class class6 = null;
        enhancer0.setSuperclass(class6);
        org.mockito.cglib.proxy.Callback callback8 = null;
        enhancer0.setCallback(callback8);
        boolean boolean10 = enhancer0.getUseCache();
        boolean boolean11 = enhancer0.getUseCache();
        enhancer0.setUseFactory(false);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy18 = null;
        enhancer17.setNamingPolicy(namingPolicy18);
        java.lang.ClassLoader classLoader20 = null;
        enhancer17.setClassLoader(classLoader20);
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = null;
        enhancer22.setNamingPolicy(namingPolicy23);
        java.lang.ClassLoader classLoader25 = null;
        enhancer22.setClassLoader(classLoader25);
        java.lang.Class<?> wildcardClass27 = enhancer22.getClass();
        java.lang.String str28 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass27);
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy30 = null;
        enhancer29.setNamingPolicy(namingPolicy30);
        java.lang.ClassLoader classLoader32 = null;
        enhancer29.setClassLoader(classLoader32);
        java.lang.Class<?> wildcardClass34 = enhancer29.getClass();
        java.lang.Class[] classArray35 = new java.lang.Class[] { wildcardClass27, wildcardClass34 };
        enhancer17.setInterfaces(classArray35);
        boolean boolean37 = enhancer17.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy39 = null;
        enhancer38.setNamingPolicy(namingPolicy39);
        java.lang.ClassLoader classLoader41 = null;
        enhancer38.setClassLoader(classLoader41);
        java.lang.Class<?> wildcardClass43 = enhancer38.getClass();
        enhancer17.setSuperclass((java.lang.Class) wildcardClass43);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass43);
        java.lang.String str46 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass43);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass43);
        org.mockito.cglib.core.Local local48 = new org.mockito.cglib.core.Local((int) (byte) 100, type47);
        java.lang.Class<?> wildcardClass49 = type47.getClass();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass49);
        java.lang.String str51 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass49);
        java.lang.String str52 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass49);
        java.lang.String str53 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass49);
        boolean boolean54 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass49);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str28, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str46, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str51, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "org/mockito/asm/Type" + "'", str52, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str53, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test21514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21514");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = null;
        enhancer5.setNamingPolicy(namingPolicy6);
        java.lang.ClassLoader classLoader8 = null;
        enhancer5.setClassLoader(classLoader8);
        java.lang.Class<?> wildcardClass10 = enhancer5.getClass();
        java.lang.String str11 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass10);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = null;
        enhancer12.setNamingPolicy(namingPolicy13);
        java.lang.ClassLoader classLoader15 = null;
        enhancer12.setClassLoader(classLoader15);
        java.lang.Class<?> wildcardClass17 = enhancer12.getClass();
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass10, wildcardClass17 };
        enhancer0.setInterfaces(classArray18);
        boolean boolean20 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = null;
        enhancer21.setNamingPolicy(namingPolicy22);
        java.lang.ClassLoader classLoader24 = null;
        enhancer21.setClassLoader(classLoader24);
        java.lang.Class<?> wildcardClass26 = enhancer21.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass26);
        java.lang.String str29 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass26);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass26);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass26);
        java.lang.String str32 = type31.getClassName();
        int int34 = type31.getOpcode((int) (short) 1);
        int int36 = type31.getOpcode(3);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy38 = null;
        enhancer37.setNamingPolicy(namingPolicy38);
        java.lang.ClassLoader classLoader40 = null;
        enhancer37.setClassLoader(classLoader40);
        boolean boolean42 = enhancer37.getAttemptLoad();
        java.lang.Class class43 = null;
        enhancer37.setSuperclass(class43);
        org.mockito.cglib.proxy.Callback callback45 = null;
        enhancer37.setCallback(callback45);
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy48 = null;
        enhancer47.setNamingPolicy(namingPolicy48);
        java.lang.ClassLoader classLoader50 = null;
        enhancer47.setClassLoader(classLoader50);
        boolean boolean52 = enhancer47.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy53 = enhancer47.getNamingPolicy();
        boolean boolean54 = enhancer47.getAttemptLoad();
        enhancer47.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy58 = null;
        enhancer57.setNamingPolicy(namingPolicy58);
        java.lang.ClassLoader classLoader60 = null;
        enhancer57.setClassLoader(classLoader60);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter62 = null;
        enhancer57.setCallbackFilter(callbackFilter62);
        org.mockito.cglib.proxy.Callback callback64 = null;
        enhancer57.setCallback(callback64);
        java.lang.ClassLoader classLoader66 = null;
        enhancer57.setClassLoader(classLoader66);
        enhancer57.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer70 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy71 = null;
        enhancer70.setNamingPolicy(namingPolicy71);
        java.lang.ClassLoader classLoader73 = null;
        enhancer70.setClassLoader(classLoader73);
        boolean boolean75 = enhancer70.getAttemptLoad();
        enhancer70.setUseCache(true);
        java.lang.ClassLoader classLoader78 = enhancer70.getClassLoader();
        enhancer57.setClassLoader(classLoader78);
        enhancer47.setClassLoader(classLoader78);
        enhancer37.setClassLoader(classLoader78);
        java.lang.ClassLoader classLoader82 = enhancer37.getClassLoader();
        boolean boolean83 = type31.equals((java.lang.Object) classLoader82);
        java.lang.String str84 = type31.getInternalName();
        int int85 = type31.getSize();
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str11, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str29, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org.mockito.cglib.proxy.Enhancer" + "'", str32, "org.mockito.cglib.proxy.Enhancer");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 5 + "'", int34 == 5);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 7 + "'", int36 == 7);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(namingPolicy53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(classLoader78);
        org.junit.Assert.assertNotNull(classLoader82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str84, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
    }

    @Test
    public void test21515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21515");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = null;
        enhancer5.setNamingPolicy(namingPolicy6);
        java.lang.ClassLoader classLoader8 = null;
        enhancer5.setClassLoader(classLoader8);
        java.lang.Class<?> wildcardClass10 = enhancer5.getClass();
        java.lang.String str11 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass10);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = null;
        enhancer12.setNamingPolicy(namingPolicy13);
        java.lang.ClassLoader classLoader15 = null;
        enhancer12.setClassLoader(classLoader15);
        java.lang.Class<?> wildcardClass17 = enhancer12.getClass();
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass10, wildcardClass17 };
        enhancer0.setInterfaces(classArray18);
        boolean boolean20 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = null;
        enhancer21.setNamingPolicy(namingPolicy22);
        java.lang.ClassLoader classLoader24 = null;
        enhancer21.setClassLoader(classLoader24);
        java.lang.Class<?> wildcardClass26 = enhancer21.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass26);
        java.lang.String str29 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass26);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass26);
        java.lang.String str31 = type30.getDescriptor();
        org.mockito.asm.Type type32 = type30.getElementType();
        java.lang.String str33 = type30.toString();
        org.mockito.asm.ClassVisitor classVisitor34 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter(classVisitor34);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter(classVisitor34);
        org.mockito.cglib.core.ClassInfo classInfo37 = classEmitter36.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter36);
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter38);
        org.mockito.cglib.core.ClassInfo classInfo40 = classEmitter39.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter39);
        boolean boolean42 = type30.equals((java.lang.Object) classEmitter39);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter39.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str11, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str29, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str31, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str33, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNull(classInfo37);
        org.junit.Assert.assertNull(classInfo40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test21516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21516");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.asm.ClassVisitor classVisitor4 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter(classVisitor4);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter(classVisitor4);
        org.mockito.cglib.core.ClassInfo classInfo7 = classEmitter6.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter6);
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter9);
        org.mockito.cglib.core.ClassInfo classInfo11 = classEmitter9.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter9.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo13 = classEmitter9.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor14 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.cglib.core.ClassInfo classInfo17 = classEmitter16.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter18);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter19);
        org.mockito.cglib.core.ClassInfo classInfo21 = classEmitter19.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter19);
        classEmitter9.setTarget((org.mockito.asm.ClassVisitor) classEmitter19);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter9);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter24);
        org.mockito.cglib.core.ClassInfo classInfo26 = classEmitter24.getClassInfo();
        // The following exception was thrown during execution in test generation
        try {
            classEmitter24.visitSource("L1719759537", "L1896510863");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo7);
        org.junit.Assert.assertNull(classInfo11);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNull(classInfo13);
        org.junit.Assert.assertNull(classInfo17);
        org.junit.Assert.assertNull(classInfo21);
        org.junit.Assert.assertNull(classInfo26);
    }

    @Test
    public void test21517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21517");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.cglib.core.ClassInfo classInfo6 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.Signature signature9 = new org.mockito.cglib.core.Signature("L1622326596", "V");
        org.mockito.asm.ClassVisitor classVisitor10 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter(classVisitor10);
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter(classVisitor10);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.cglib.core.ClassInfo classInfo14 = classEmitter12.getClassInfo();
        boolean boolean15 = signature9.equals((java.lang.Object) classEmitter12);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor17 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter(classVisitor17);
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter(classVisitor17);
        classEmitter16.setTarget((org.mockito.asm.ClassVisitor) classEmitter19);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter19);
        classEmitter12.setTarget((org.mockito.asm.ClassVisitor) classEmitter21);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter21);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.AnnotationVisitor annotationVisitor27 = classEmitter24.visitAnnotation("L1074809046", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo6);
        org.junit.Assert.assertNull(classInfo14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test21518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21518");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.cglib.core.Local local2 = new org.mockito.cglib.core.Local(124, type1);
        boolean boolean4 = type1.equals((java.lang.Object) 0);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.BYTE_TYPE;
        int int7 = type6.getSize();
        java.lang.String str8 = type6.getClassName();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type10 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type11 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type12 = org.mockito.asm.Type.BYTE_TYPE;
        int int13 = type12.getSize();
        java.lang.String str14 = type12.getClassName();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str16 = type15.getClassName();
        org.mockito.asm.Type[] typeArray17 = new org.mockito.asm.Type[] { type9, type10, type11, type12, type15 };
        org.mockito.cglib.core.Signature signature18 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type6, typeArray17);
        java.lang.String str19 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray17);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = null;
        enhancer20.setNamingPolicy(namingPolicy21);
        java.lang.ClassLoader classLoader23 = null;
        enhancer20.setClassLoader(classLoader23);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter25 = null;
        enhancer20.setCallbackFilter(callbackFilter25);
        org.mockito.cglib.proxy.Callback callback27 = null;
        enhancer20.setCallback(callback27);
        java.lang.ClassLoader classLoader29 = null;
        enhancer20.setClassLoader(classLoader29);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy31 = null;
        enhancer20.setStrategy(generatorStrategy31);
        org.mockito.cglib.core.NamingPolicy namingPolicy33 = enhancer20.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy34 = enhancer20.getNamingPolicy();
        org.mockito.cglib.proxy.Callback callback35 = null;
        enhancer20.setCallback(callback35);
        enhancer20.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer20.setAttemptLoad(false);
        org.mockito.cglib.proxy.Callback callback41 = null;
        enhancer20.setCallback(callback41);
        boolean boolean43 = type1.equals((java.lang.Object) enhancer20);
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor45 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter46 = new org.mockito.cglib.core.ClassEmitter(classVisitor45);
        org.mockito.cglib.core.ClassEmitter classEmitter47 = new org.mockito.cglib.core.ClassEmitter(classVisitor45);
        classEmitter44.setTarget((org.mockito.asm.ClassVisitor) classEmitter47);
        org.mockito.cglib.core.ClassEmitter classEmitter49 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter44);
        // The following exception was thrown during execution in test generation
        try {
            enhancer20.generateClass((org.mockito.asm.ClassVisitor) classEmitter49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "byte" + "'", str8, "byte");
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "byte" + "'", str14, "byte");
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "double" + "'", str16, "double");
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(CBBBD)B" + "'", str19, "(CBBBD)B");
        org.junit.Assert.assertNotNull(namingPolicy33);
        org.junit.Assert.assertNotNull(namingPolicy34);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test21519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21519");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(56, "()Lorg/mockito/cglib/core/ClassEmitter;", (org.mockito.asm.MethodVisitor) localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter8.visitIntInsn(126, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21520");
        org.mockito.asm.MethodVisitor methodVisitor10 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor10);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter11);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter13 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter14 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter15 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter16 = new org.mockito.cglib.core.LocalVariablesSorter(102, "()Lorg/mockito/cglib/proxy/Enhancer;", (org.mockito.asm.MethodVisitor) localVariablesSorter11);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter17 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter16);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter18 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter17);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter19 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter17);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter20 = new org.mockito.cglib.core.LocalVariablesSorter(161, "()L()Lorg/mockito/cglib/core/ClassEmitter;;", (org.mockito.asm.MethodVisitor) localVariablesSorter17);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter21 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter17);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter22 = new org.mockito.cglib.core.LocalVariablesSorter(0, "(CBBBD)J", (org.mockito.asm.MethodVisitor) localVariablesSorter17);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter23 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter22);
        org.mockito.asm.Label label26 = new org.mockito.asm.Label();
        java.lang.Object obj27 = label26.info;
        java.lang.String str28 = label26.toString();
        java.lang.Object obj29 = label26.info;
        org.mockito.asm.Type type30 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type31 = org.mockito.asm.Type.BYTE_TYPE;
        boolean boolean33 = type31.equals((java.lang.Object) 9);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type36 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] {};
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type36, typeArray37);
        org.mockito.cglib.core.Signature signature39 = new org.mockito.cglib.core.Signature("double", type35, typeArray37);
        java.lang.String str40 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray37);
        java.lang.String str41 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray37);
        label26.info = type30;
        java.lang.Object obj43 = label26.info;
        java.lang.Object obj44 = label26.info;
        java.lang.String str45 = label26.toString();
        java.lang.String str46 = label26.toString();
        org.mockito.asm.Label label47 = new org.mockito.asm.Label();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type type50 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.cglib.core.Local local51 = new org.mockito.cglib.core.Local(124, type50);
        boolean boolean53 = type50.equals((java.lang.Object) 0);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.BYTE_TYPE;
        int int56 = type55.getSize();
        java.lang.String str57 = type55.getClassName();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type59 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type60 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type61 = org.mockito.asm.Type.BYTE_TYPE;
        int int62 = type61.getSize();
        java.lang.String str63 = type61.getClassName();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str65 = type64.getClassName();
        org.mockito.asm.Type[] typeArray66 = new org.mockito.asm.Type[] { type58, type59, type60, type61, type64 };
        org.mockito.cglib.core.Signature signature67 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type55, typeArray66);
        java.lang.String str68 = org.mockito.asm.Type.getMethodDescriptor(type50, typeArray66);
        java.lang.String str69 = org.mockito.asm.Type.getMethodDescriptor(type48, typeArray66);
        label47.info = type48;
        java.lang.Object obj71 = label47.info;
        java.lang.Object obj72 = label47.info;
        java.lang.String str73 = label47.toString();
        java.lang.String str74 = label47.toString();
        org.mockito.asm.Label label75 = new org.mockito.asm.Label();
        java.lang.Object obj76 = label75.info;
        org.mockito.asm.ClassVisitor classVisitor77 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter78 = new org.mockito.cglib.core.ClassEmitter(classVisitor77);
        org.mockito.cglib.core.ClassEmitter classEmitter79 = new org.mockito.cglib.core.ClassEmitter(classVisitor77);
        org.mockito.cglib.core.ClassInfo classInfo80 = classEmitter79.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter81 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter79);
        org.mockito.cglib.core.ClassEmitter classEmitter82 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter81);
        org.mockito.cglib.core.ClassInfo classInfo83 = classEmitter82.getClassInfo();
        label75.info = classInfo83;
        java.lang.String str85 = label75.toString();
        java.lang.Object obj86 = label75.info;
        java.lang.Object obj87 = label75.info;
        java.lang.Object obj88 = label75.info;
        java.lang.String str89 = label75.toString();
        java.lang.String str90 = label75.toString();
        java.lang.Object obj91 = label75.info;
        org.mockito.asm.Label[] labelArray92 = new org.mockito.asm.Label[] { label47, label75 };
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter22.visitTableSwitchInsn(12, 167, label26, labelArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj27);
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "L811194953" + "'", str28, "L811194953");
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "()D" + "'", str38, "()D");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "()B" + "'", str40, "()B");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "()F" + "'", str41, "()F");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "F");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "F");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "F");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "F");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "F");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "F");
// flaky:         org.junit.Assert.assertEquals("'" + str45 + "' != '" + "L811194953" + "'", str45, "L811194953");
// flaky:         org.junit.Assert.assertEquals("'" + str46 + "' != '" + "L811194953" + "'", str46, "L811194953");
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "byte" + "'", str57, "byte");
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "byte" + "'", str63, "byte");
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "double" + "'", str65, "double");
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "(CBBBD)B" + "'", str68, "(CBBBD)B");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(CBBBD)I" + "'", str69, "(CBBBD)I");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "I");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "I");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "I");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "I");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "I");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "I");
// flaky:         org.junit.Assert.assertEquals("'" + str73 + "' != '" + "L2096639045" + "'", str73, "L2096639045");
// flaky:         org.junit.Assert.assertEquals("'" + str74 + "' != '" + "L2096639045" + "'", str74, "L2096639045");
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNull(classInfo80);
        org.junit.Assert.assertNull(classInfo83);
// flaky:         org.junit.Assert.assertEquals("'" + str85 + "' != '" + "L2127397151" + "'", str85, "L2127397151");
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertNull(obj88);
// flaky:         org.junit.Assert.assertEquals("'" + str89 + "' != '" + "L2127397151" + "'", str89, "L2127397151");
// flaky:         org.junit.Assert.assertEquals("'" + str90 + "' != '" + "L2127397151" + "'", str90, "L2127397151");
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertNotNull(labelArray92);
    }

    @Test
    public void test21521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21521");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy10 = null;
        enhancer9.setNamingPolicy(namingPolicy10);
        java.lang.ClassLoader classLoader12 = null;
        enhancer9.setClassLoader(classLoader12);
        java.lang.Class<?> wildcardClass14 = enhancer9.getClass();
        java.lang.String str15 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass14);
        boolean boolean16 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass14);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass14);
        int int18 = type17.getSize();
        org.mockito.cglib.core.Local local19 = new org.mockito.cglib.core.Local(108, type17);
        org.mockito.cglib.core.Local local20 = new org.mockito.cglib.core.Local(108, type17);
        org.mockito.asm.Type type21 = local20.getType();
        java.lang.String str22 = type21.getClassName();
        org.mockito.asm.Type type23 = type21.getElementType();
        org.mockito.asm.ClassVisitor classVisitor24 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter(classVisitor24);
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter(classVisitor24);
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter26);
        boolean boolean28 = type21.equals((java.lang.Object) classEmitter27);
        org.mockito.cglib.core.ClassInfo classInfo29 = classEmitter27.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter27);
        classEmitter4.setTarget((org.mockito.asm.ClassVisitor) classEmitter27);
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy39 = null;
        enhancer38.setNamingPolicy(namingPolicy39);
        java.lang.ClassLoader classLoader41 = null;
        enhancer38.setClassLoader(classLoader41);
        java.lang.Class<?> wildcardClass43 = enhancer38.getClass();
        java.lang.String str44 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass43);
        boolean boolean45 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass43);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass43);
        int int47 = type46.getSize();
        org.mockito.cglib.core.Local local48 = new org.mockito.cglib.core.Local(108, type46);
        org.mockito.cglib.core.Local local49 = new org.mockito.cglib.core.Local(108, type46);
        org.mockito.asm.Type type50 = local49.getType();
        java.lang.String str51 = type50.getClassName();
        org.mockito.asm.Type type52 = type50.getElementType();
        org.mockito.asm.Type type53 = type52.getElementType();
        java.lang.String str54 = type53.getInternalName();
        java.lang.String str55 = type53.getClassName();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.FieldVisitor fieldVisitor56 = classEmitter4.visitField((-1), "L1854834029", "L1335442630", "D", (java.lang.Object) str55);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str15, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org.mockito.cglib.proxy.Enhancer" + "'", str22, "org.mockito.cglib.proxy.Enhancer");
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(classInfo29);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str44, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "org.mockito.cglib.proxy.Enhancer" + "'", str51, "org.mockito.cglib.proxy.Enhancer");
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "mockito/cglib/proxy/Enhancer" + "'", str54, "mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "mockito.cglib.proxy.Enhancer" + "'", str55, "mockito.cglib.proxy.Enhancer");
    }

    @Test
    public void test21522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21522");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(160, "(CBBBD)LLorg/mockito/cglib/proxy/Enhancer;(CBBBD)B;", (org.mockito.asm.MethodVisitor) localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter10);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter11.visitVarInsn(11, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21523");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str1 = type0.getClassName();
        org.mockito.cglib.core.Signature signature4 = new org.mockito.cglib.core.Signature("", "hi!");
        java.lang.String str5 = signature4.getDescriptor();
        java.lang.String str6 = signature4.toString();
        boolean boolean7 = type0.equals((java.lang.Object) str6);
        java.lang.String str8 = type0.toString();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "double" + "'", str1, "double");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "D" + "'", str8, "D");
    }

    @Test
    public void test21524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21524");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        boolean boolean5 = enhancer0.getAttemptLoad();
        java.lang.Class class6 = null;
        enhancer0.setSuperclass(class6);
        java.lang.ClassLoader classLoader8 = enhancer0.getClassLoader();
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer0.setCallback(callback14);
        org.mockito.asm.ClassVisitor classVisitor16 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter(classVisitor16);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter(classVisitor16);
        org.mockito.cglib.core.ClassInfo classInfo19 = classEmitter18.getClassInfo();
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass((org.mockito.asm.ClassVisitor) classEmitter18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(namingPolicy13);
        org.junit.Assert.assertNull(classInfo19);
    }

    @Test
    public void test21525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21525");
        org.mockito.cglib.core.Signature signature2 = new org.mockito.cglib.core.Signature("L1622326596", "V");
        org.mockito.asm.ClassVisitor classVisitor3 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter(classVisitor3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter(classVisitor3);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassInfo classInfo7 = classEmitter5.getClassInfo();
        boolean boolean8 = signature2.equals((java.lang.Object) classEmitter5);
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor10 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter(classVisitor10);
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter(classVisitor10);
        classEmitter9.setTarget((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter12);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassInfo classInfo17 = classEmitter16.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo18 = classEmitter16.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo19 = classEmitter16.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassInfo classInfo22 = classEmitter21.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor23 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter(classVisitor23);
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter(classVisitor23);
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter25);
        org.mockito.cglib.core.ClassInfo classInfo27 = classEmitter25.getClassInfo();
        classEmitter21.setTarget((org.mockito.asm.ClassVisitor) classEmitter25);
        org.mockito.asm.ClassVisitor classVisitor29 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter(classVisitor29);
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter(classVisitor29);
        org.mockito.cglib.core.ClassInfo classInfo32 = classEmitter31.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter31);
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter33);
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter34);
        org.mockito.cglib.core.ClassInfo classInfo36 = classEmitter34.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor37 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter(classVisitor37);
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter(classVisitor37);
        org.mockito.cglib.core.ClassEmitter classEmitter40 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter39);
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter40);
        classEmitter34.setTarget((org.mockito.asm.ClassVisitor) classEmitter41);
        classEmitter21.setTarget((org.mockito.asm.ClassVisitor) classEmitter41);
        classEmitter16.setTarget((org.mockito.asm.ClassVisitor) classEmitter41);
        org.mockito.asm.Attribute attribute45 = null;
        // The following exception was thrown during execution in test generation
        try {
            classEmitter16.visitAttribute(attribute45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(classInfo17);
        org.junit.Assert.assertNull(classInfo18);
        org.junit.Assert.assertNull(classInfo19);
        org.junit.Assert.assertNull(classInfo22);
        org.junit.Assert.assertNull(classInfo27);
        org.junit.Assert.assertNull(classInfo32);
        org.junit.Assert.assertNull(classInfo36);
    }

    @Test
    public void test21526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21526");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = "L97833253";
        org.mockito.cglib.core.Signature signature5 = new org.mockito.cglib.core.Signature("L842693193", "L1804543443");
        org.mockito.asm.MethodVisitor methodVisitor10 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor10);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter11);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter13 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter14 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter15 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter14);
        boolean boolean16 = signature5.equals((java.lang.Object) localVariablesSorter15);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter17 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter15);
        label0.info = localVariablesSorter15;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter19 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter15);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter20 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter15);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter21 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter15);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter22 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter15);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter15.visitIincInsn(166, 61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test21527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21527");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassInfo classInfo2 = classEmitter1.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor3 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter(classVisitor3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter(classVisitor3);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassInfo classInfo7 = classEmitter5.getClassInfo();
        classEmitter1.setTarget((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.asm.ClassVisitor classVisitor9 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter(classVisitor9);
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter(classVisitor9);
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassInfo classInfo16 = classEmitter14.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor17 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter(classVisitor17);
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter(classVisitor17);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter19);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        classEmitter14.setTarget((org.mockito.asm.ClassVisitor) classEmitter21);
        classEmitter1.setTarget((org.mockito.asm.ClassVisitor) classEmitter21);
        org.mockito.cglib.core.ClassInfo classInfo24 = classEmitter1.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo25 = classEmitter1.getClassInfo();
        java.lang.String[] strArray30 = new java.lang.String[] {};
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.MethodVisitor methodVisitor31 = classEmitter1.visitMethod(155, "L1954064112", "L2109216748", "L1193240686", strArray30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: classInfo is null! org.mockito.cglib.core.ClassEmitter@60d53f4d");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo2);
        org.junit.Assert.assertNull(classInfo7);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNull(classInfo16);
        org.junit.Assert.assertNull(classInfo24);
        org.junit.Assert.assertNull(classInfo25);
        org.junit.Assert.assertNotNull(strArray30);
    }

    @Test
    public void test21528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21528");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.BYTE_TYPE;
        int int2 = type1.getSize();
        java.lang.String str3 = type1.getClassName();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type5 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type6 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type7 = org.mockito.asm.Type.BYTE_TYPE;
        int int8 = type7.getSize();
        java.lang.String str9 = type7.getClassName();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str11 = type10.getClassName();
        org.mockito.asm.Type[] typeArray12 = new org.mockito.asm.Type[] { type4, type5, type6, type7, type10 };
        org.mockito.cglib.core.Signature signature13 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type1, typeArray12);
        java.lang.String str14 = signature13.getDescriptor();
        java.lang.String str15 = signature13.getDescriptor();
        java.lang.String str16 = signature13.getName();
        org.mockito.asm.Type type17 = signature13.getReturnType();
        org.mockito.asm.ClassVisitor classVisitor18 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter(classVisitor18);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter(classVisitor18);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter23);
        classEmitter20.setTarget((org.mockito.asm.ClassVisitor) classEmitter24);
        org.mockito.asm.ClassVisitor classVisitor26 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter(classVisitor26);
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter(classVisitor26);
        org.mockito.cglib.core.ClassInfo classInfo29 = classEmitter28.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter28);
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter30);
        org.mockito.asm.ClassVisitor classVisitor32 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter(classVisitor32);
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter(classVisitor32);
        org.mockito.cglib.core.ClassInfo classInfo35 = classEmitter34.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo36 = classEmitter34.getClassInfo();
        classEmitter31.setTarget((org.mockito.asm.ClassVisitor) classEmitter34);
        classEmitter24.setTarget((org.mockito.asm.ClassVisitor) classEmitter34);
        org.mockito.asm.ClassVisitor classVisitor39 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter40 = new org.mockito.cglib.core.ClassEmitter(classVisitor39);
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter(classVisitor39);
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter(classVisitor39);
        org.mockito.cglib.core.ClassEmitter classEmitter43 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter42);
        classEmitter24.setTarget((org.mockito.asm.ClassVisitor) classEmitter43);
        org.mockito.cglib.core.ClassInfo classInfo45 = classEmitter43.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter46 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter43);
        boolean boolean47 = signature13.equals((java.lang.Object) classEmitter43);
        org.mockito.cglib.core.Signature signature50 = new org.mockito.cglib.core.Signature("hi!", "B");
        java.lang.String str51 = signature50.getDescriptor();
        java.lang.String str52 = signature50.toString();
        org.mockito.asm.ClassVisitor classVisitor53 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter54 = new org.mockito.cglib.core.ClassEmitter(classVisitor53);
        org.mockito.cglib.core.ClassEmitter classEmitter55 = new org.mockito.cglib.core.ClassEmitter(classVisitor53);
        org.mockito.cglib.core.ClassInfo classInfo56 = classEmitter55.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter57 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter55);
        org.mockito.cglib.core.ClassEmitter classEmitter58 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter57);
        org.mockito.cglib.core.ClassEmitter classEmitter59 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter58);
        org.mockito.cglib.core.ClassInfo classInfo60 = classEmitter58.getClassInfo();
        boolean boolean61 = signature50.equals((java.lang.Object) classEmitter58);
        classEmitter43.setTarget((org.mockito.asm.ClassVisitor) classEmitter58);
        org.mockito.asm.ClassVisitor classVisitor63 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter64 = new org.mockito.cglib.core.ClassEmitter(classVisitor63);
        org.mockito.cglib.core.ClassEmitter classEmitter65 = new org.mockito.cglib.core.ClassEmitter(classVisitor63);
        org.mockito.cglib.core.ClassInfo classInfo66 = classEmitter65.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter67 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter65);
        org.mockito.cglib.core.ClassEmitter classEmitter68 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter67);
        org.mockito.asm.ClassVisitor classVisitor69 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter70 = new org.mockito.cglib.core.ClassEmitter(classVisitor69);
        org.mockito.cglib.core.ClassEmitter classEmitter71 = new org.mockito.cglib.core.ClassEmitter(classVisitor69);
        org.mockito.cglib.core.ClassInfo classInfo72 = classEmitter71.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter73 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter71);
        org.mockito.cglib.core.ClassEmitter classEmitter74 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter73);
        classEmitter68.setTarget((org.mockito.asm.ClassVisitor) classEmitter73);
        org.mockito.cglib.core.ClassEmitter classEmitter76 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter73.setTarget((org.mockito.asm.ClassVisitor) classEmitter76);
        org.mockito.asm.ClassVisitor classVisitor78 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter79 = new org.mockito.cglib.core.ClassEmitter(classVisitor78);
        org.mockito.cglib.core.ClassEmitter classEmitter80 = new org.mockito.cglib.core.ClassEmitter(classVisitor78);
        org.mockito.cglib.core.ClassInfo classInfo81 = classEmitter80.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter82 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter80);
        org.mockito.cglib.core.ClassEmitter classEmitter83 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter82);
        org.mockito.cglib.core.ClassEmitter classEmitter84 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter83);
        org.mockito.cglib.core.ClassInfo classInfo85 = classEmitter83.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor86 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter87 = new org.mockito.cglib.core.ClassEmitter(classVisitor86);
        org.mockito.cglib.core.ClassEmitter classEmitter88 = new org.mockito.cglib.core.ClassEmitter(classVisitor86);
        org.mockito.cglib.core.ClassEmitter classEmitter89 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter88);
        org.mockito.cglib.core.ClassEmitter classEmitter90 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter89);
        classEmitter83.setTarget((org.mockito.asm.ClassVisitor) classEmitter90);
        org.mockito.cglib.core.ClassEmitter classEmitter92 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter83);
        org.mockito.cglib.core.ClassEmitter classEmitter93 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter92);
        classEmitter76.setTarget((org.mockito.asm.ClassVisitor) classEmitter93);
        org.mockito.cglib.core.ClassEmitter classEmitter95 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter93);
        classEmitter43.setTarget((org.mockito.asm.ClassVisitor) classEmitter93);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.AnnotationVisitor annotationVisitor99 = classEmitter43.visitAnnotation("L1316819559", true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "byte" + "'", str3, "byte");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "byte" + "'", str9, "byte");
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "double" + "'", str11, "double");
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(CBBBD)B" + "'", str14, "(CBBBD)B");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(CBBBD)B" + "'", str15, "(CBBBD)B");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str16, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNull(classInfo29);
        org.junit.Assert.assertNull(classInfo35);
        org.junit.Assert.assertNull(classInfo36);
        org.junit.Assert.assertNull(classInfo45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "B" + "'", str51, "B");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!B" + "'", str52, "hi!B");
        org.junit.Assert.assertNull(classInfo56);
        org.junit.Assert.assertNull(classInfo60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(classInfo66);
        org.junit.Assert.assertNull(classInfo72);
        org.junit.Assert.assertNull(classInfo81);
        org.junit.Assert.assertNull(classInfo85);
    }

    @Test
    public void test21529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21529");
        org.mockito.cglib.proxy.Enhancer enhancer1 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy2 = null;
        enhancer1.setNamingPolicy(namingPolicy2);
        java.lang.ClassLoader classLoader4 = null;
        enhancer1.setClassLoader(classLoader4);
        org.mockito.cglib.proxy.Enhancer enhancer6 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = null;
        enhancer6.setNamingPolicy(namingPolicy7);
        java.lang.ClassLoader classLoader9 = null;
        enhancer6.setClassLoader(classLoader9);
        java.lang.Class<?> wildcardClass11 = enhancer6.getClass();
        java.lang.String str12 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass11);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = null;
        enhancer13.setNamingPolicy(namingPolicy14);
        java.lang.ClassLoader classLoader16 = null;
        enhancer13.setClassLoader(classLoader16);
        java.lang.Class<?> wildcardClass18 = enhancer13.getClass();
        java.lang.Class[] classArray19 = new java.lang.Class[] { wildcardClass11, wildcardClass18 };
        enhancer1.setInterfaces(classArray19);
        boolean boolean21 = enhancer1.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = null;
        enhancer22.setNamingPolicy(namingPolicy23);
        java.lang.ClassLoader classLoader25 = null;
        enhancer22.setClassLoader(classLoader25);
        java.lang.Class<?> wildcardClass27 = enhancer22.getClass();
        enhancer1.setSuperclass((java.lang.Class) wildcardClass27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass27);
        java.lang.String str30 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass27);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass27);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass27);
        java.lang.String str33 = type32.getClassName();
        int int34 = type32.getSort();
        java.lang.String str35 = type32.getClassName();
        java.lang.String str36 = type32.getClassName();
        boolean boolean38 = type32.equals((java.lang.Object) "float");
        org.mockito.cglib.core.Local local39 = new org.mockito.cglib.core.Local(126, type32);
        java.lang.String str40 = type32.toString();
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str12, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str30, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.mockito.cglib.proxy.Enhancer" + "'", str33, "org.mockito.cglib.proxy.Enhancer");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org.mockito.cglib.proxy.Enhancer" + "'", str35, "org.mockito.cglib.proxy.Enhancer");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "org.mockito.cglib.proxy.Enhancer" + "'", str36, "org.mockito.cglib.proxy.Enhancer");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str40, "Lorg/mockito/cglib/proxy/Enhancer;");
    }

    @Test
    public void test21530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21530");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.BYTE_TYPE;
        int int2 = type1.getSize();
        java.lang.String str3 = type1.getClassName();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type5 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type6 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type7 = org.mockito.asm.Type.BYTE_TYPE;
        int int8 = type7.getSize();
        java.lang.String str9 = type7.getClassName();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str11 = type10.getClassName();
        org.mockito.asm.Type[] typeArray12 = new org.mockito.asm.Type[] { type4, type5, type6, type7, type10 };
        org.mockito.cglib.core.Signature signature13 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type1, typeArray12);
        org.mockito.asm.Type[] typeArray14 = signature13.getArgumentTypes();
        java.lang.String str15 = signature13.toString();
        org.mockito.cglib.core.Signature signature18 = new org.mockito.cglib.core.Signature("byte", "()D");
        boolean boolean19 = signature13.equals((java.lang.Object) signature18);
        java.lang.String str20 = signature13.toString();
        java.lang.String str21 = signature13.getName();
        org.mockito.asm.Type[] typeArray22 = signature13.getArgumentTypes();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "byte" + "'", str3, "byte");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "byte" + "'", str9, "byte");
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "double" + "'", str11, "double");
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B" + "'", str15, "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B" + "'", str20, "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str21, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(typeArray22);
    }

    @Test
    public void test21531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21531");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        enhancer0.setUseCache(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy9 = enhancer0.getNamingPolicy();
        boolean boolean10 = enhancer0.getAttemptLoad();
        enhancer0.setUseCache(false);
        java.lang.ClassLoader classLoader13 = enhancer0.getClassLoader();
        boolean boolean14 = enhancer0.getUseCache();
        org.mockito.asm.ClassVisitor classVisitor15 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter(classVisitor15);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter(classVisitor15);
        org.mockito.cglib.core.ClassInfo classInfo18 = classEmitter17.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter19);
        org.mockito.asm.ClassVisitor classVisitor21 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassInfo classInfo24 = classEmitter23.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo25 = classEmitter23.getClassInfo();
        classEmitter20.setTarget((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.asm.ClassVisitor classVisitor27 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter(classVisitor27);
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter(classVisitor27);
        org.mockito.cglib.core.ClassInfo classInfo30 = classEmitter29.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter31);
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter32);
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter32);
        classEmitter23.setTarget((org.mockito.asm.ClassVisitor) classEmitter32);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter36);
        org.mockito.cglib.core.ClassInfo classInfo38 = classEmitter37.getClassInfo();
        classEmitter32.setTarget((org.mockito.asm.ClassVisitor) classEmitter37);
        org.mockito.cglib.core.ClassEmitter classEmitter40 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter40);
        org.mockito.asm.ClassVisitor classVisitor42 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter43 = new org.mockito.cglib.core.ClassEmitter(classVisitor42);
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter(classVisitor42);
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter44);
        org.mockito.cglib.core.ClassEmitter classEmitter46 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter44);
        org.mockito.cglib.core.ClassEmitter classEmitter47 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter47);
        classEmitter44.setTarget((org.mockito.asm.ClassVisitor) classEmitter48);
        org.mockito.asm.ClassVisitor classVisitor50 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter51 = new org.mockito.cglib.core.ClassEmitter(classVisitor50);
        org.mockito.cglib.core.ClassEmitter classEmitter52 = new org.mockito.cglib.core.ClassEmitter(classVisitor50);
        org.mockito.cglib.core.ClassInfo classInfo53 = classEmitter52.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter54 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter52);
        org.mockito.cglib.core.ClassEmitter classEmitter55 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter54);
        org.mockito.asm.ClassVisitor classVisitor56 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter57 = new org.mockito.cglib.core.ClassEmitter(classVisitor56);
        org.mockito.cglib.core.ClassEmitter classEmitter58 = new org.mockito.cglib.core.ClassEmitter(classVisitor56);
        org.mockito.cglib.core.ClassInfo classInfo59 = classEmitter58.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo60 = classEmitter58.getClassInfo();
        classEmitter55.setTarget((org.mockito.asm.ClassVisitor) classEmitter58);
        classEmitter48.setTarget((org.mockito.asm.ClassVisitor) classEmitter58);
        org.mockito.asm.ClassVisitor classVisitor63 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter64 = new org.mockito.cglib.core.ClassEmitter(classVisitor63);
        org.mockito.cglib.core.ClassEmitter classEmitter65 = new org.mockito.cglib.core.ClassEmitter(classVisitor63);
        org.mockito.cglib.core.ClassEmitter classEmitter66 = new org.mockito.cglib.core.ClassEmitter(classVisitor63);
        org.mockito.cglib.core.ClassEmitter classEmitter67 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter66);
        classEmitter48.setTarget((org.mockito.asm.ClassVisitor) classEmitter67);
        classEmitter40.setTarget((org.mockito.asm.ClassVisitor) classEmitter67);
        classEmitter37.setTarget((org.mockito.asm.ClassVisitor) classEmitter40);
        org.mockito.cglib.core.ClassEmitter classEmitter71 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter37);
        org.mockito.cglib.core.ClassInfo classInfo72 = classEmitter37.getClassInfo();
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass((org.mockito.asm.ClassVisitor) classEmitter37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(classLoader13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(classInfo18);
        org.junit.Assert.assertNull(classInfo24);
        org.junit.Assert.assertNull(classInfo25);
        org.junit.Assert.assertNull(classInfo30);
        org.junit.Assert.assertNull(classInfo38);
        org.junit.Assert.assertNull(classInfo53);
        org.junit.Assert.assertNull(classInfo59);
        org.junit.Assert.assertNull(classInfo60);
        org.junit.Assert.assertNull(classInfo72);
    }

    @Test
    public void test21532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21532");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        java.lang.ClassLoader classLoader9 = null;
        enhancer0.setClassLoader(classLoader9);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = null;
        enhancer0.setStrategy(generatorStrategy11);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = null;
        enhancer13.setNamingPolicy(namingPolicy14);
        java.lang.ClassLoader classLoader16 = null;
        enhancer13.setClassLoader(classLoader16);
        boolean boolean18 = enhancer13.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer13.getStrategy();
        enhancer0.setStrategy(generatorStrategy19);
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = null;
        enhancer21.setNamingPolicy(namingPolicy22);
        java.lang.ClassLoader classLoader24 = null;
        enhancer21.setClassLoader(classLoader24);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter26 = null;
        enhancer21.setCallbackFilter(callbackFilter26);
        org.mockito.cglib.proxy.Callback callback28 = null;
        enhancer21.setCallback(callback28);
        java.lang.ClassLoader classLoader30 = null;
        enhancer21.setClassLoader(classLoader30);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy32 = null;
        enhancer21.setStrategy(generatorStrategy32);
        org.mockito.cglib.proxy.Enhancer enhancer34 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy35 = null;
        enhancer34.setNamingPolicy(namingPolicy35);
        java.lang.ClassLoader classLoader37 = null;
        enhancer34.setClassLoader(classLoader37);
        boolean boolean39 = enhancer34.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy40 = enhancer34.getStrategy();
        enhancer21.setStrategy(generatorStrategy40);
        enhancer0.setStrategy(generatorStrategy40);
        org.mockito.asm.ClassVisitor classVisitor43 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter(classVisitor43);
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter(classVisitor43);
        org.mockito.cglib.core.ClassInfo classInfo46 = classEmitter45.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter47 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter45);
        java.lang.Class<?> wildcardClass48 = classEmitter47.getClass();
        java.lang.String str49 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass48);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass48);
        java.lang.String str51 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass48);
        boolean boolean52 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        java.lang.String str53 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass48);
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = null;
        enhancer54.setNamingPolicy(namingPolicy55);
        java.lang.ClassLoader classLoader57 = null;
        enhancer54.setClassLoader(classLoader57);
        boolean boolean59 = enhancer54.getAttemptLoad();
        java.lang.Class class60 = null;
        enhancer54.setSuperclass(class60);
        org.mockito.cglib.proxy.Callback callback62 = null;
        enhancer54.setCallback(callback62);
        org.mockito.cglib.core.NamingPolicy namingPolicy64 = enhancer54.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer65 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy66 = null;
        enhancer65.setNamingPolicy(namingPolicy66);
        java.lang.ClassLoader classLoader68 = null;
        enhancer65.setClassLoader(classLoader68);
        org.mockito.cglib.core.NamingPolicy namingPolicy70 = enhancer65.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer71 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy72 = null;
        enhancer71.setNamingPolicy(namingPolicy72);
        java.lang.ClassLoader classLoader74 = null;
        enhancer71.setClassLoader(classLoader74);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter76 = null;
        enhancer71.setCallbackFilter(callbackFilter76);
        enhancer71.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer80 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy81 = null;
        enhancer80.setNamingPolicy(namingPolicy81);
        java.lang.ClassLoader classLoader83 = null;
        enhancer80.setClassLoader(classLoader83);
        boolean boolean85 = enhancer80.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy86 = enhancer80.getNamingPolicy();
        org.mockito.cglib.proxy.Callback callback87 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray88 = new org.mockito.cglib.proxy.Callback[] { callback87 };
        enhancer80.setCallbacks(callbackArray88);
        enhancer71.setCallbacks(callbackArray88);
        enhancer65.setCallbacks(callbackArray88);
        enhancer54.setCallbacks(callbackArray88);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.proxy.Enhancer.registerStaticCallbacks((java.lang.Class) wildcardClass48, callbackArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class org.mockito.cglib.core.ClassEmitter is not an enhanced class");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(generatorStrategy40);
        org.junit.Assert.assertNull(classInfo46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "org/mockito/cglib/core/ClassEmitter" + "'", str49, "org/mockito/cglib/core/ClassEmitter");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Lorg/mockito/cglib/core/ClassEmitter;" + "'", str51, "Lorg/mockito/cglib/core/ClassEmitter;");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Lorg/mockito/cglib/core/ClassEmitter;" + "'", str53, "Lorg/mockito/cglib/core/ClassEmitter;");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(namingPolicy64);
        org.junit.Assert.assertNotNull(namingPolicy70);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(namingPolicy86);
        org.junit.Assert.assertNotNull(callbackArray88);
    }

    @Test
    public void test21533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21533");
        org.mockito.cglib.core.Signature signature2 = new org.mockito.cglib.core.Signature("hi!", "B");
        java.lang.String str3 = signature2.toString();
        org.mockito.asm.ClassVisitor classVisitor4 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter(classVisitor4);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter(classVisitor4);
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter6);
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter7);
        boolean boolean9 = signature2.equals((java.lang.Object) classEmitter8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter(classVisitor11);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter(classVisitor11);
        org.mockito.cglib.core.ClassInfo classInfo14 = classEmitter13.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassInfo classInfo16 = classEmitter13.getClassInfo();
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.asm.Attribute attribute18 = null;
        // The following exception was thrown during execution in test generation
        try {
            classEmitter10.visitAttribute(attribute18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!B" + "'", str3, "hi!B");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(classInfo14);
        org.junit.Assert.assertNull(classInfo16);
    }

    @Test
    public void test21534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21534");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("L1695142235");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21535");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter8.visitMultiANewArrayInsn("L613438889", 176);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21536");
        org.mockito.asm.MethodVisitor methodVisitor12 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter13 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor12);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter14 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter13);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter15 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter13);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter16 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter13);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter17 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter13);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter18 = new org.mockito.cglib.core.LocalVariablesSorter(102, "()Lorg/mockito/cglib/proxy/Enhancer;", (org.mockito.asm.MethodVisitor) localVariablesSorter13);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter19 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter18);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter20 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter19);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter21 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter19);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter22 = new org.mockito.cglib.core.LocalVariablesSorter(161, "()L()Lorg/mockito/cglib/core/ClassEmitter;;", (org.mockito.asm.MethodVisitor) localVariablesSorter19);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter23 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter19);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter24 = new org.mockito.cglib.core.LocalVariablesSorter(0, "(CBBBD)J", (org.mockito.asm.MethodVisitor) localVariablesSorter19);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter25 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter24);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter26 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) -1, "(CBBBD)LL965545342;", (org.mockito.asm.MethodVisitor) localVariablesSorter24);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter27 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter26);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.AnnotationVisitor annotationVisitor31 = localVariablesSorter27.visitParameterAnnotation(124, "L1691517500", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21537");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("L307594124");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21538");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        enhancer0.setUseFactory(true);
        boolean boolean7 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.Callback callback8 = null;
        enhancer0.setCallback(callback8);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy10 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter11 = null;
        enhancer0.setCallbackFilter(callbackFilter11);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        java.lang.Class[] classArray15 = null;
        enhancer0.setInterfaces(classArray15);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(generatorStrategy10);
    }

    @Test
    public void test21539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21539");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.asm.ClassVisitor classVisitor2 = null;
        classEmitter1.setTarget(classVisitor2);
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter1);
        org.mockito.cglib.core.ClassInfo classInfo5 = classEmitter4.getClassInfo();
        java.lang.String[] strArray15 = new java.lang.String[] { "L1704697917", "L904064132", "L415954201Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B", "L544597136", "L867426449" };
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.MethodVisitor methodVisitor16 = classEmitter4.visitMethod(165, "byte()D", "L853435574", "L765858520", strArray15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Name 'byte()D' is invalid");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo5);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test21540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21540");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.Object obj1 = label0.info;
        org.mockito.cglib.proxy.Enhancer enhancer2 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = null;
        enhancer2.setNamingPolicy(namingPolicy3);
        java.lang.ClassLoader classLoader5 = null;
        enhancer2.setClassLoader(classLoader5);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter7 = null;
        enhancer2.setCallbackFilter(callbackFilter7);
        enhancer2.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy12 = null;
        enhancer11.setNamingPolicy(namingPolicy12);
        java.lang.ClassLoader classLoader14 = null;
        enhancer11.setClassLoader(classLoader14);
        boolean boolean16 = enhancer11.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy17 = enhancer11.getNamingPolicy();
        org.mockito.cglib.proxy.Callback callback18 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray19 = new org.mockito.cglib.proxy.Callback[] { callback18 };
        enhancer11.setCallbacks(callbackArray19);
        enhancer2.setCallbacks(callbackArray19);
        enhancer2.setAttemptLoad(true);
        label0.info = enhancer2;
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = enhancer2.getNamingPolicy();
        java.lang.Class<?> wildcardClass26 = enhancer2.getClass();
        java.lang.String str27 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass26);
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(namingPolicy17);
        org.junit.Assert.assertNotNull(callbackArray19);
        org.junit.Assert.assertNotNull(namingPolicy25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str27, "org/mockito/cglib/proxy/Enhancer");
    }

    @Test
    public void test21541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21541");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        java.lang.ClassLoader classLoader9 = null;
        enhancer0.setClassLoader(classLoader9);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = null;
        enhancer0.setStrategy(generatorStrategy11);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = null;
        enhancer13.setNamingPolicy(namingPolicy14);
        java.lang.ClassLoader classLoader16 = null;
        enhancer13.setClassLoader(classLoader16);
        boolean boolean18 = enhancer13.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer13.getStrategy();
        enhancer0.setStrategy(generatorStrategy19);
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = null;
        enhancer21.setNamingPolicy(namingPolicy22);
        java.lang.ClassLoader classLoader24 = null;
        enhancer21.setClassLoader(classLoader24);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter26 = null;
        enhancer21.setCallbackFilter(callbackFilter26);
        org.mockito.cglib.proxy.Callback callback28 = null;
        enhancer21.setCallback(callback28);
        java.lang.ClassLoader classLoader30 = null;
        enhancer21.setClassLoader(classLoader30);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy32 = null;
        enhancer21.setStrategy(generatorStrategy32);
        org.mockito.cglib.proxy.Enhancer enhancer34 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy35 = null;
        enhancer34.setNamingPolicy(namingPolicy35);
        java.lang.ClassLoader classLoader37 = null;
        enhancer34.setClassLoader(classLoader37);
        boolean boolean39 = enhancer34.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy40 = enhancer34.getStrategy();
        enhancer21.setStrategy(generatorStrategy40);
        enhancer0.setStrategy(generatorStrategy40);
        org.mockito.cglib.proxy.Enhancer enhancer43 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy44 = null;
        enhancer43.setNamingPolicy(namingPolicy44);
        java.lang.ClassLoader classLoader46 = null;
        enhancer43.setClassLoader(classLoader46);
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy49 = null;
        enhancer48.setNamingPolicy(namingPolicy49);
        java.lang.ClassLoader classLoader51 = null;
        enhancer48.setClassLoader(classLoader51);
        java.lang.Class<?> wildcardClass53 = enhancer48.getClass();
        java.lang.String str54 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass53);
        org.mockito.cglib.proxy.Enhancer enhancer55 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy56 = null;
        enhancer55.setNamingPolicy(namingPolicy56);
        java.lang.ClassLoader classLoader58 = null;
        enhancer55.setClassLoader(classLoader58);
        java.lang.Class<?> wildcardClass60 = enhancer55.getClass();
        java.lang.Class[] classArray61 = new java.lang.Class[] { wildcardClass53, wildcardClass60 };
        enhancer43.setInterfaces(classArray61);
        java.lang.ClassLoader classLoader63 = enhancer43.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer64 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy65 = null;
        enhancer64.setNamingPolicy(namingPolicy65);
        java.lang.ClassLoader classLoader67 = null;
        enhancer64.setClassLoader(classLoader67);
        boolean boolean69 = enhancer64.getAttemptLoad();
        enhancer64.setUseCache(true);
        java.lang.ClassLoader classLoader72 = enhancer64.getClassLoader();
        enhancer43.setClassLoader(classLoader72);
        enhancer0.setClassLoader(classLoader72);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj75 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(generatorStrategy40);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str54, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(classArray61);
        org.junit.Assert.assertNotNull(classLoader63);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(classLoader72);
    }

    @Test
    public void test21542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21542");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = "L97833253";
        org.mockito.cglib.core.Signature signature5 = new org.mockito.cglib.core.Signature("L842693193", "L1804543443");
        org.mockito.asm.MethodVisitor methodVisitor10 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor10);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter11);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter13 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter14 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter15 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter14);
        boolean boolean16 = signature5.equals((java.lang.Object) localVariablesSorter15);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter17 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter15);
        label0.info = localVariablesSorter15;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter19 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter15);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter15.visitInsn(159);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test21543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21543");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.asm.ClassVisitor classVisitor6 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassInfo classInfo9 = classEmitter8.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter8.getClassInfo();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.asm.ClassVisitor classVisitor12 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter(classVisitor12);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter(classVisitor12);
        org.mockito.cglib.core.ClassInfo classInfo15 = classEmitter14.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter17);
        classEmitter8.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        org.mockito.cglib.core.ClassInfo classInfo23 = classEmitter22.getClassInfo();
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter22);
        java.lang.String[] strArray29 = new java.lang.String[] {};
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.MethodVisitor methodVisitor30 = classEmitter22.visitMethod(64, "L1308638922", "", "L1201239862", strArray29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: classInfo is null! org.mockito.cglib.core.ClassEmitter@4ac15545");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo9);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo15);
        org.junit.Assert.assertNull(classInfo23);
        org.junit.Assert.assertNotNull(strArray29);
    }

    @Test
    public void test21544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21544");
        org.mockito.cglib.proxy.Enhancer enhancer3 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy4 = null;
        enhancer3.setNamingPolicy(namingPolicy4);
        java.lang.ClassLoader classLoader6 = null;
        enhancer3.setClassLoader(classLoader6);
        java.lang.Class<?> wildcardClass8 = enhancer3.getClass();
        java.lang.String str9 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass8);
        boolean boolean10 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass8);
        int int12 = type11.getSize();
        org.mockito.cglib.core.Local local13 = new org.mockito.cglib.core.Local(108, type11);
        org.mockito.cglib.core.Local local14 = new org.mockito.cglib.core.Local(108, type11);
        org.mockito.asm.Type type15 = type11.getElementType();
        java.lang.String str16 = type11.toString();
        int int17 = type11.getSort();
        org.mockito.cglib.core.Local local18 = new org.mockito.cglib.core.Local(0, type11);
        org.mockito.asm.Type type19 = local18.getType();
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str9, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str16, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10 + "'", int17 == 10);
        org.junit.Assert.assertNotNull(type19);
    }

    @Test
    public void test21545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21545");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassInfo classInfo7 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo8 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo9 = classEmitter5.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor10 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter(classVisitor10);
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter(classVisitor10);
        org.mockito.cglib.core.ClassInfo classInfo13 = classEmitter12.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter15);
        org.mockito.cglib.core.ClassInfo classInfo17 = classEmitter15.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter15);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter15);
        org.mockito.cglib.core.Signature signature22 = new org.mockito.cglib.core.Signature("hi!", "B");
        java.lang.String str23 = signature22.toString();
        org.mockito.asm.ClassVisitor classVisitor24 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter(classVisitor24);
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter(classVisitor24);
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter26);
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter27);
        boolean boolean29 = signature22.equals((java.lang.Object) classEmitter28);
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter28);
        org.mockito.asm.ClassVisitor classVisitor31 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter(classVisitor31);
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter(classVisitor31);
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter33);
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter33);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter36);
        classEmitter33.setTarget((org.mockito.asm.ClassVisitor) classEmitter37);
        org.mockito.asm.ClassVisitor classVisitor39 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter40 = new org.mockito.cglib.core.ClassEmitter(classVisitor39);
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter(classVisitor39);
        org.mockito.cglib.core.ClassInfo classInfo42 = classEmitter41.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter43 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter41);
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter43);
        org.mockito.asm.ClassVisitor classVisitor45 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter46 = new org.mockito.cglib.core.ClassEmitter(classVisitor45);
        org.mockito.cglib.core.ClassEmitter classEmitter47 = new org.mockito.cglib.core.ClassEmitter(classVisitor45);
        org.mockito.cglib.core.ClassInfo classInfo48 = classEmitter47.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo49 = classEmitter47.getClassInfo();
        classEmitter44.setTarget((org.mockito.asm.ClassVisitor) classEmitter47);
        classEmitter37.setTarget((org.mockito.asm.ClassVisitor) classEmitter47);
        org.mockito.asm.ClassVisitor classVisitor52 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter53 = new org.mockito.cglib.core.ClassEmitter(classVisitor52);
        org.mockito.cglib.core.ClassEmitter classEmitter54 = new org.mockito.cglib.core.ClassEmitter(classVisitor52);
        org.mockito.cglib.core.ClassEmitter classEmitter55 = new org.mockito.cglib.core.ClassEmitter(classVisitor52);
        org.mockito.cglib.core.ClassEmitter classEmitter56 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter55);
        classEmitter37.setTarget((org.mockito.asm.ClassVisitor) classEmitter56);
        classEmitter28.setTarget((org.mockito.asm.ClassVisitor) classEmitter56);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter28);
        org.mockito.cglib.core.ClassInfo classInfo60 = classEmitter5.getClassInfo();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.core.CodeEmitter codeEmitter61 = classEmitter5.begin_static();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: classInfo is null! org.mockito.cglib.core.ClassEmitter@7a20283d");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo7);
        org.junit.Assert.assertNull(classInfo8);
        org.junit.Assert.assertNull(classInfo9);
        org.junit.Assert.assertNull(classInfo13);
        org.junit.Assert.assertNull(classInfo17);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!B" + "'", str23, "hi!B");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(classInfo42);
        org.junit.Assert.assertNull(classInfo48);
        org.junit.Assert.assertNull(classInfo49);
        org.junit.Assert.assertNull(classInfo60);
    }

    @Test
    public void test21546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21546");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        classEmitter2.setTarget((org.mockito.asm.ClassVisitor) classEmitter6);
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassInfo classInfo11 = classEmitter10.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.asm.ClassVisitor classVisitor14 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.cglib.core.ClassInfo classInfo17 = classEmitter16.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo18 = classEmitter16.getClassInfo();
        classEmitter13.setTarget((org.mockito.asm.ClassVisitor) classEmitter16);
        classEmitter6.setTarget((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.asm.ClassVisitor classVisitor21 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter24);
        classEmitter6.setTarget((org.mockito.asm.ClassVisitor) classEmitter25);
        org.mockito.cglib.core.ClassInfo classInfo27 = classEmitter25.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter25);
        org.mockito.asm.ClassVisitor classVisitor29 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter(classVisitor29);
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter(classVisitor29);
        org.mockito.cglib.core.ClassInfo classInfo32 = classEmitter31.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter31);
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter33);
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter34);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter34);
        classEmitter25.setTarget((org.mockito.asm.ClassVisitor) classEmitter34);
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter25);
        org.mockito.asm.ClassVisitor classVisitor43 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter(classVisitor43);
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter(classVisitor43);
        org.mockito.cglib.core.ClassInfo classInfo46 = classEmitter45.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter47 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter45);
        java.lang.Class<?> wildcardClass48 = classEmitter47.getClass();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass48);
        int int50 = type49.getSize();
        int int52 = type49.getOpcode(154);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.FieldVisitor fieldVisitor53 = classEmitter38.visitField(132, "L1007324532", "L2115054512", "()V", (java.lang.Object) int52);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo11);
        org.junit.Assert.assertNull(classInfo17);
        org.junit.Assert.assertNull(classInfo18);
        org.junit.Assert.assertNull(classInfo27);
        org.junit.Assert.assertNull(classInfo32);
        org.junit.Assert.assertNull(classInfo46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 158 + "'", int52 == 158);
    }

    @Test
    public void test21547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21547");
        org.mockito.asm.MethodVisitor methodVisitor6 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(102, "()Lorg/mockito/cglib/proxy/Enhancer;", (org.mockito.asm.MethodVisitor) localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter13 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter12);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter14 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter12);
        org.mockito.asm.Label label16 = new org.mockito.asm.Label();
        java.lang.Object obj17 = label16.info;
        java.lang.String str18 = label16.toString();
        java.lang.String str19 = label16.toString();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.LONG_TYPE;
        java.lang.String str21 = type20.getDescriptor();
        label16.info = str21;
        java.lang.Object obj23 = label16.info;
        java.lang.Object obj24 = label16.info;
        java.lang.Object obj25 = label16.info;
        java.lang.Object obj26 = label16.info;
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter12.visitLineNumber((int) (byte) 100, label16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj17);
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "L66377606" + "'", str18, "L66377606");
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L66377606" + "'", str19, "L66377606");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "J" + "'", str21, "J");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "J" + "'", obj23, "J");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "J" + "'", obj24, "J");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "J" + "'", obj25, "J");
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + "J" + "'", obj26, "J");
    }

    @Test
    public void test21548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21548");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter10);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter10);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter10.visitMultiANewArrayInsn("L569774367", 141);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21549");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        java.lang.Class<?> wildcardClass5 = enhancer0.getClass();
        java.lang.String str6 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass5);
        boolean boolean7 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        int int11 = type10.getSize();
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = null;
        enhancer12.setNamingPolicy(namingPolicy13);
        java.lang.ClassLoader classLoader15 = null;
        enhancer12.setClassLoader(classLoader15);
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy18 = null;
        enhancer17.setNamingPolicy(namingPolicy18);
        java.lang.ClassLoader classLoader20 = null;
        enhancer17.setClassLoader(classLoader20);
        java.lang.Class<?> wildcardClass22 = enhancer17.getClass();
        java.lang.String str23 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = null;
        enhancer24.setNamingPolicy(namingPolicy25);
        java.lang.ClassLoader classLoader27 = null;
        enhancer24.setClassLoader(classLoader27);
        java.lang.Class<?> wildcardClass29 = enhancer24.getClass();
        java.lang.Class[] classArray30 = new java.lang.Class[] { wildcardClass22, wildcardClass29 };
        enhancer12.setInterfaces(classArray30);
        boolean boolean32 = enhancer12.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy34 = null;
        enhancer33.setNamingPolicy(namingPolicy34);
        java.lang.ClassLoader classLoader36 = null;
        enhancer33.setClassLoader(classLoader36);
        java.lang.Class<?> wildcardClass38 = enhancer33.getClass();
        enhancer12.setSuperclass((java.lang.Class) wildcardClass38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass38);
        java.lang.String str41 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass38);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass38);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.BYTE_TYPE;
        int int45 = type44.getSize();
        java.lang.String str46 = type44.getClassName();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type48 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type49 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type50 = org.mockito.asm.Type.BYTE_TYPE;
        int int51 = type50.getSize();
        java.lang.String str52 = type50.getClassName();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str54 = type53.getClassName();
        org.mockito.asm.Type[] typeArray55 = new org.mockito.asm.Type[] { type47, type48, type49, type50, type53 };
        org.mockito.cglib.core.Signature signature56 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type44, typeArray55);
        java.lang.String str57 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray55);
        java.lang.String str58 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray55);
        org.mockito.asm.Type type59 = type10.getElementType();
        org.mockito.cglib.core.ClassEmitter classEmitter60 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter61 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter60);
        boolean boolean62 = type59.equals((java.lang.Object) classEmitter60);
        org.mockito.asm.ClassVisitor classVisitor63 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter64 = new org.mockito.cglib.core.ClassEmitter(classVisitor63);
        org.mockito.cglib.core.ClassEmitter classEmitter65 = new org.mockito.cglib.core.ClassEmitter(classVisitor63);
        org.mockito.cglib.core.ClassInfo classInfo66 = classEmitter65.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter67 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter65);
        org.mockito.cglib.core.ClassEmitter classEmitter68 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter67);
        org.mockito.cglib.core.ClassEmitter classEmitter69 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter68);
        org.mockito.cglib.core.ClassInfo classInfo70 = classEmitter68.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor71 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter72 = new org.mockito.cglib.core.ClassEmitter(classVisitor71);
        org.mockito.cglib.core.ClassEmitter classEmitter73 = new org.mockito.cglib.core.ClassEmitter(classVisitor71);
        org.mockito.cglib.core.ClassEmitter classEmitter74 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter73);
        org.mockito.cglib.core.ClassEmitter classEmitter75 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter74);
        classEmitter68.setTarget((org.mockito.asm.ClassVisitor) classEmitter75);
        classEmitter60.setTarget((org.mockito.asm.ClassVisitor) classEmitter75);
        org.mockito.cglib.core.ClassEmitter classEmitter78 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter75);
        org.mockito.cglib.core.ClassEmitter classEmitter79 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter75);
        java.lang.String[] strArray90 = new java.lang.String[] { "L764013078", "L232846177", "L832025776", "L1409451303", "L1750185763", "L1074869467" };
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.MethodVisitor methodVisitor91 = classEmitter79.visitMethod(96, "L660057075", "L403753843", "()Lorg/mockito/cglib/core/ClassEmitter;", strArray90);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: classInfo is null! org.mockito.cglib.core.ClassEmitter@3f22da34");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str6, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str23, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str41, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "byte" + "'", str46, "byte");
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "byte" + "'", str52, "byte");
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "double" + "'", str54, "double");
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;" + "'", str57, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;" + "'", str58, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(classInfo66);
        org.junit.Assert.assertNull(classInfo70);
        org.junit.Assert.assertNotNull(strArray90);
    }

    @Test
    public void test21550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21550");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        enhancer0.setUseCache(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy9 = enhancer0.getNamingPolicy();
        boolean boolean10 = enhancer0.getAttemptLoad();
        enhancer0.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = null;
        enhancer13.setNamingPolicy(namingPolicy14);
        java.lang.ClassLoader classLoader16 = null;
        enhancer13.setClassLoader(classLoader16);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter18 = null;
        enhancer13.setCallbackFilter(callbackFilter18);
        org.mockito.cglib.proxy.Callback callback20 = null;
        enhancer13.setCallback(callback20);
        enhancer13.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = null;
        enhancer24.setNamingPolicy(namingPolicy25);
        java.lang.ClassLoader classLoader27 = null;
        enhancer24.setClassLoader(classLoader27);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter29 = null;
        enhancer24.setCallbackFilter(callbackFilter29);
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy32 = null;
        enhancer31.setNamingPolicy(namingPolicy32);
        java.lang.ClassLoader classLoader34 = null;
        enhancer31.setClassLoader(classLoader34);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter36 = null;
        enhancer31.setCallbackFilter(callbackFilter36);
        org.mockito.cglib.proxy.Callback callback38 = null;
        enhancer31.setCallback(callback38);
        java.lang.ClassLoader classLoader40 = null;
        enhancer31.setClassLoader(classLoader40);
        enhancer31.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy45 = null;
        enhancer44.setNamingPolicy(namingPolicy45);
        java.lang.ClassLoader classLoader47 = null;
        enhancer44.setClassLoader(classLoader47);
        boolean boolean49 = enhancer44.getAttemptLoad();
        enhancer44.setUseCache(true);
        java.lang.ClassLoader classLoader52 = enhancer44.getClassLoader();
        enhancer31.setClassLoader(classLoader52);
        enhancer24.setClassLoader(classLoader52);
        enhancer13.setClassLoader(classLoader52);
        enhancer0.setClassLoader(classLoader52);
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy58 = null;
        enhancer57.setNamingPolicy(namingPolicy58);
        java.lang.ClassLoader classLoader60 = null;
        enhancer57.setClassLoader(classLoader60);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter62 = null;
        enhancer57.setCallbackFilter(callbackFilter62);
        org.mockito.cglib.proxy.Callback callback64 = null;
        enhancer57.setCallback(callback64);
        java.lang.ClassLoader classLoader66 = null;
        enhancer57.setClassLoader(classLoader66);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy68 = null;
        enhancer57.setStrategy(generatorStrategy68);
        org.mockito.cglib.proxy.Enhancer enhancer70 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy71 = null;
        enhancer70.setNamingPolicy(namingPolicy71);
        java.lang.ClassLoader classLoader73 = null;
        enhancer70.setClassLoader(classLoader73);
        boolean boolean75 = enhancer70.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy76 = enhancer70.getStrategy();
        enhancer57.setStrategy(generatorStrategy76);
        enhancer0.setStrategy(generatorStrategy76);
        org.mockito.cglib.proxy.Callback callback79 = null;
        enhancer0.setCallback(callback79);
        org.mockito.cglib.proxy.Callback callback81 = null;
        enhancer0.setCallback(callback81);
        boolean boolean83 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Callback callback84 = null;
        enhancer0.setCallback(callback84);
        org.junit.Assert.assertNotNull(namingPolicy9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(classLoader52);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(generatorStrategy76);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test21551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21551");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        enhancer0.setAttemptLoad(false);
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy8 = null;
        enhancer7.setNamingPolicy(namingPolicy8);
        java.lang.ClassLoader classLoader10 = null;
        enhancer7.setClassLoader(classLoader10);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter12 = null;
        enhancer7.setCallbackFilter(callbackFilter12);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy15 = null;
        enhancer14.setNamingPolicy(namingPolicy15);
        java.lang.ClassLoader classLoader17 = null;
        enhancer14.setClassLoader(classLoader17);
        boolean boolean19 = enhancer14.getAttemptLoad();
        java.lang.Class class20 = null;
        enhancer14.setSuperclass(class20);
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = enhancer14.getNamingPolicy();
        enhancer7.setNamingPolicy(namingPolicy22);
        enhancer0.setNamingPolicy(namingPolicy22);
        org.mockito.cglib.proxy.Callback callback25 = null;
        enhancer0.setCallback(callback25);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy27 = enhancer0.getStrategy();
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        enhancer0.setAttemptLoad(true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(namingPolicy22);
        org.junit.Assert.assertNotNull(generatorStrategy27);
    }

    @Test
    public void test21552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21552");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassInfo classInfo2 = classEmitter1.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor3 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter(classVisitor3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter(classVisitor3);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassInfo classInfo7 = classEmitter5.getClassInfo();
        classEmitter1.setTarget((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.asm.ClassVisitor classVisitor9 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter(classVisitor9);
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter(classVisitor9);
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.asm.ClassVisitor classVisitor14 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter17);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter18);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter18);
        org.mockito.asm.ClassVisitor classVisitor21 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter26);
        classEmitter23.setTarget((org.mockito.asm.ClassVisitor) classEmitter27);
        org.mockito.asm.ClassVisitor classVisitor29 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter(classVisitor29);
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter(classVisitor29);
        org.mockito.cglib.core.ClassInfo classInfo32 = classEmitter31.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter31);
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter33);
        org.mockito.asm.ClassVisitor classVisitor35 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter(classVisitor35);
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter(classVisitor35);
        org.mockito.cglib.core.ClassInfo classInfo38 = classEmitter37.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo39 = classEmitter37.getClassInfo();
        classEmitter34.setTarget((org.mockito.asm.ClassVisitor) classEmitter37);
        classEmitter27.setTarget((org.mockito.asm.ClassVisitor) classEmitter37);
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter37);
        org.mockito.cglib.core.ClassEmitter classEmitter43 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter42);
        classEmitter18.setTarget((org.mockito.asm.ClassVisitor) classEmitter43);
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter46 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter45);
        org.mockito.cglib.core.ClassInfo classInfo47 = classEmitter46.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor48 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter49 = new org.mockito.cglib.core.ClassEmitter(classVisitor48);
        org.mockito.cglib.core.ClassEmitter classEmitter50 = new org.mockito.cglib.core.ClassEmitter(classVisitor48);
        org.mockito.cglib.core.ClassEmitter classEmitter51 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter50);
        org.mockito.cglib.core.ClassInfo classInfo52 = classEmitter50.getClassInfo();
        classEmitter46.setTarget((org.mockito.asm.ClassVisitor) classEmitter50);
        org.mockito.asm.ClassVisitor classVisitor54 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter55 = new org.mockito.cglib.core.ClassEmitter(classVisitor54);
        org.mockito.cglib.core.ClassEmitter classEmitter56 = new org.mockito.cglib.core.ClassEmitter(classVisitor54);
        org.mockito.cglib.core.ClassEmitter classEmitter57 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter56);
        classEmitter50.setTarget((org.mockito.asm.ClassVisitor) classEmitter57);
        org.mockito.cglib.core.ClassEmitter classEmitter59 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor60 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter61 = new org.mockito.cglib.core.ClassEmitter(classVisitor60);
        org.mockito.cglib.core.ClassEmitter classEmitter62 = new org.mockito.cglib.core.ClassEmitter(classVisitor60);
        classEmitter59.setTarget((org.mockito.asm.ClassVisitor) classEmitter62);
        org.mockito.cglib.core.ClassEmitter classEmitter64 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter65 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter64);
        org.mockito.cglib.core.ClassInfo classInfo66 = classEmitter65.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor67 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter68 = new org.mockito.cglib.core.ClassEmitter(classVisitor67);
        org.mockito.cglib.core.ClassEmitter classEmitter69 = new org.mockito.cglib.core.ClassEmitter(classVisitor67);
        org.mockito.cglib.core.ClassEmitter classEmitter70 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter69);
        org.mockito.cglib.core.ClassInfo classInfo71 = classEmitter69.getClassInfo();
        classEmitter65.setTarget((org.mockito.asm.ClassVisitor) classEmitter69);
        classEmitter59.setTarget((org.mockito.asm.ClassVisitor) classEmitter69);
        classEmitter50.setTarget((org.mockito.asm.ClassVisitor) classEmitter59);
        org.mockito.cglib.core.ClassInfo classInfo75 = classEmitter50.getClassInfo();
        classEmitter43.setTarget((org.mockito.asm.ClassVisitor) classEmitter50);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.core.CodeEmitter codeEmitter77 = classEmitter50.getStaticHook();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo2);
        org.junit.Assert.assertNull(classInfo7);
        org.junit.Assert.assertNull(classInfo32);
        org.junit.Assert.assertNull(classInfo38);
        org.junit.Assert.assertNull(classInfo39);
        org.junit.Assert.assertNull(classInfo47);
        org.junit.Assert.assertNull(classInfo52);
        org.junit.Assert.assertNull(classInfo66);
        org.junit.Assert.assertNull(classInfo71);
        org.junit.Assert.assertNull(classInfo75);
    }

    @Test
    public void test21553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21553");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassInfo classInfo5 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter6);
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter12);
        classEmitter6.setTarget((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.asm.ClassVisitor classVisitor15 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter(classVisitor15);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter(classVisitor15);
        org.mockito.cglib.core.ClassInfo classInfo18 = classEmitter17.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter19);
        org.mockito.asm.ClassVisitor classVisitor21 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassInfo classInfo24 = classEmitter23.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter25);
        classEmitter20.setTarget((org.mockito.asm.ClassVisitor) classEmitter25);
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.Signature signature31 = new org.mockito.cglib.core.Signature("hi!", "B");
        java.lang.String str32 = signature31.toString();
        org.mockito.asm.ClassVisitor classVisitor33 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter(classVisitor33);
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter(classVisitor33);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter35);
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter36);
        boolean boolean38 = signature31.equals((java.lang.Object) classEmitter37);
        classEmitter20.setTarget((org.mockito.asm.ClassVisitor) classEmitter37);
        org.mockito.cglib.core.ClassInfo classInfo40 = classEmitter20.getClassInfo();
        classEmitter6.setTarget((org.mockito.asm.ClassVisitor) classEmitter20);
        java.lang.String[] strArray46 = new java.lang.String[] {};
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.MethodVisitor methodVisitor47 = classEmitter6.visitMethod(159, "int", "F", "L313317688", strArray46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: classInfo is null! org.mockito.cglib.core.ClassEmitter@1690094f");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo5);
        org.junit.Assert.assertNull(classInfo18);
        org.junit.Assert.assertNull(classInfo24);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!B" + "'", str32, "hi!B");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(classInfo40);
        org.junit.Assert.assertNotNull(strArray46);
    }

    @Test
    public void test21554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21554");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(128, "(CBBBD)Lg/mockito/cglib/proxy/Enhancer;", (org.mockito.asm.MethodVisitor) localVariablesSorter8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter13 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter12);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter14 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter12);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter14.visitMultiANewArrayInsn("L1082304522", 167);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21555");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy8 = null;
        enhancer7.setNamingPolicy(namingPolicy8);
        java.lang.ClassLoader classLoader10 = null;
        enhancer7.setClassLoader(classLoader10);
        org.mockito.cglib.core.NamingPolicy namingPolicy12 = enhancer7.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = null;
        enhancer13.setNamingPolicy(namingPolicy14);
        java.lang.ClassLoader classLoader16 = null;
        enhancer13.setClassLoader(classLoader16);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter18 = null;
        enhancer13.setCallbackFilter(callbackFilter18);
        enhancer13.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = null;
        enhancer22.setNamingPolicy(namingPolicy23);
        java.lang.ClassLoader classLoader25 = null;
        enhancer22.setClassLoader(classLoader25);
        boolean boolean27 = enhancer22.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = enhancer22.getNamingPolicy();
        org.mockito.cglib.proxy.Callback callback29 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray30 = new org.mockito.cglib.proxy.Callback[] { callback29 };
        enhancer22.setCallbacks(callbackArray30);
        enhancer13.setCallbacks(callbackArray30);
        enhancer7.setCallbacks(callbackArray30);
        enhancer0.setCallbacks(callbackArray30);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy35 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer39 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy40 = null;
        enhancer39.setNamingPolicy(namingPolicy40);
        java.lang.ClassLoader classLoader42 = null;
        enhancer39.setClassLoader(classLoader42);
        java.lang.Class<?> wildcardClass44 = enhancer39.getClass();
        java.lang.String str45 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass44);
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass44);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass44);
        int int48 = type47.getSize();
        org.mockito.cglib.core.Local local49 = new org.mockito.cglib.core.Local(108, type47);
        org.mockito.cglib.core.Local local50 = new org.mockito.cglib.core.Local(108, type47);
        org.mockito.asm.Type type51 = local50.getType();
        java.lang.String str52 = type51.getClassName();
        org.mockito.asm.Label label53 = new org.mockito.asm.Label();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type56 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray57 = new org.mockito.asm.Type[] {};
        java.lang.String str58 = org.mockito.asm.Type.getMethodDescriptor(type56, typeArray57);
        org.mockito.cglib.core.Signature signature59 = new org.mockito.cglib.core.Signature("double", type55, typeArray57);
        label53.info = typeArray57;
        java.lang.String str61 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray57);
        org.mockito.cglib.core.Local local62 = new org.mockito.cglib.core.Local(128, type51);
        java.lang.Class<?> wildcardClass63 = type51.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass63);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter65 = null;
        enhancer0.setCallbackFilter(callbackFilter65);
        org.junit.Assert.assertNotNull(namingPolicy12);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(namingPolicy28);
        org.junit.Assert.assertNotNull(callbackArray30);
        org.junit.Assert.assertNotNull(generatorStrategy35);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str45, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "org.mockito.cglib.proxy.Enhancer" + "'", str52, "org.mockito.cglib.proxy.Enhancer");
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "()D" + "'", str58, "()D");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "()Lorg/mockito/cglib/proxy/Enhancer;" + "'", str61, "()Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test21556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21556");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        java.lang.Class<?> wildcardClass7 = classEmitter5.getClass();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass7);
        org.mockito.asm.Label label9 = new org.mockito.asm.Label();
        java.lang.Object obj10 = label9.info;
        java.lang.String str11 = label9.toString();
        java.lang.String str12 = label9.toString();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.LONG_TYPE;
        java.lang.String str14 = type13.getDescriptor();
        label9.info = str14;
        java.lang.Object obj16 = label9.info;
        java.lang.Object obj17 = label9.info;
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy19 = null;
        enhancer18.setNamingPolicy(namingPolicy19);
        java.lang.ClassLoader classLoader21 = null;
        enhancer18.setClassLoader(classLoader21);
        enhancer18.setUseFactory(true);
        enhancer18.setInterceptDuringConstruction(true);
        enhancer18.setAttemptLoad(true);
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy30 = null;
        enhancer29.setNamingPolicy(namingPolicy30);
        java.lang.ClassLoader classLoader32 = null;
        enhancer29.setClassLoader(classLoader32);
        java.lang.Class<?> wildcardClass34 = enhancer29.getClass();
        java.lang.String str35 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass34);
        boolean boolean36 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass34);
        boolean boolean38 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass34);
        boolean boolean40 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        boolean boolean41 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        java.lang.Class[] classArray42 = new java.lang.Class[] { wildcardClass34 };
        enhancer18.setInterfaces(classArray42);
        label9.info = classArray42;
        java.lang.Object obj45 = label9.info;
        boolean boolean46 = type8.equals((java.lang.Object) label9);
        int int47 = type8.getSize();
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNull(obj10);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "L1416065911" + "'", str11, "L1416065911");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L1416065911" + "'", str12, "L1416065911");
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "J" + "'", str14, "J");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "J" + "'", obj16, "J");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + "J" + "'", obj17, "J");
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str35, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(classArray42);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
    }

    @Test
    public void test21557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21557");
        org.mockito.asm.MethodVisitor methodVisitor12 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter13 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor12);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter14 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter13);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter15 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter13);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter16 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter13);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter17 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter13);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter18 = new org.mockito.cglib.core.LocalVariablesSorter(102, "()Lorg/mockito/cglib/proxy/Enhancer;", (org.mockito.asm.MethodVisitor) localVariablesSorter13);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter19 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter18);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter20 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter19);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter21 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter19);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter22 = new org.mockito.cglib.core.LocalVariablesSorter(161, "()L()Lorg/mockito/cglib/core/ClassEmitter;;", (org.mockito.asm.MethodVisitor) localVariablesSorter19);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter23 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter19);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter24 = new org.mockito.cglib.core.LocalVariablesSorter(0, "(CBBBD)J", (org.mockito.asm.MethodVisitor) localVariablesSorter19);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter25 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter24);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter26 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) -1, "(CBBBD)LL965545342;", (org.mockito.asm.MethodVisitor) localVariablesSorter24);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter27 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter26);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.AnnotationVisitor annotationVisitor30 = localVariablesSorter26.visitAnnotation("L1166669008", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21558");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        boolean boolean5 = enhancer0.getAttemptLoad();
        java.lang.Class class6 = null;
        enhancer0.setSuperclass(class6);
        java.lang.ClassLoader classLoader8 = enhancer0.getClassLoader();
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = enhancer0.getNamingPolicy();
        enhancer0.setUseCache(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy17 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy18 = enhancer0.getStrategy();
        boolean boolean19 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader20 = enhancer0.getClassLoader();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(namingPolicy13);
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertNotNull(namingPolicy17);
        org.junit.Assert.assertNotNull(generatorStrategy18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(classLoader20);
    }

    @Test
    public void test21559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21559");
        org.mockito.cglib.proxy.Enhancer enhancer1 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy2 = null;
        enhancer1.setNamingPolicy(namingPolicy2);
        java.lang.ClassLoader classLoader4 = null;
        enhancer1.setClassLoader(classLoader4);
        org.mockito.cglib.proxy.Enhancer enhancer6 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = null;
        enhancer6.setNamingPolicy(namingPolicy7);
        java.lang.ClassLoader classLoader9 = null;
        enhancer6.setClassLoader(classLoader9);
        java.lang.Class<?> wildcardClass11 = enhancer6.getClass();
        java.lang.String str12 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass11);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = null;
        enhancer13.setNamingPolicy(namingPolicy14);
        java.lang.ClassLoader classLoader16 = null;
        enhancer13.setClassLoader(classLoader16);
        java.lang.Class<?> wildcardClass18 = enhancer13.getClass();
        java.lang.Class[] classArray19 = new java.lang.Class[] { wildcardClass11, wildcardClass18 };
        enhancer1.setInterfaces(classArray19);
        boolean boolean21 = enhancer1.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = null;
        enhancer22.setNamingPolicy(namingPolicy23);
        java.lang.ClassLoader classLoader25 = null;
        enhancer22.setClassLoader(classLoader25);
        java.lang.Class<?> wildcardClass27 = enhancer22.getClass();
        enhancer1.setSuperclass((java.lang.Class) wildcardClass27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass27);
        java.lang.String str30 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass27);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass27);
        java.lang.String str32 = type31.getInternalName();
        java.lang.String str33 = type31.toString();
        java.lang.String str34 = type31.toString();
        java.lang.String str35 = type31.toString();
        int int36 = type31.getSize();
        java.lang.String str37 = type31.toString();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type40 = org.mockito.asm.Type.getObjectType("byte");
        org.mockito.asm.Type type41 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray42 = new org.mockito.asm.Type[] {};
        java.lang.String str43 = org.mockito.asm.Type.getMethodDescriptor(type41, typeArray42);
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray42);
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type38, typeArray42);
        org.mockito.cglib.core.Signature signature46 = new org.mockito.cglib.core.Signature("L688118684", type31, typeArray42);
        org.mockito.asm.Type type47 = type31.getElementType();
        org.mockito.asm.Type type48 = type31.getElementType();
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str12, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str30, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str32, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str33, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str34, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str35, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str37, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "()D" + "'", str43, "()D");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "()Lbyte;" + "'", str44, "()Lbyte;");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "()V" + "'", str45, "()V");
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type48);
    }

    @Test
    public void test21560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21560");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.asm.ClassVisitor classVisitor6 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassInfo classInfo9 = classEmitter8.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter10);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.asm.ClassVisitor classVisitor15 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter(classVisitor15);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter(classVisitor15);
        org.mockito.cglib.core.ClassInfo classInfo18 = classEmitter17.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter19);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassInfo classInfo22 = classEmitter20.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor23 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter(classVisitor23);
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter(classVisitor23);
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter25);
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter26);
        classEmitter20.setTarget((org.mockito.asm.ClassVisitor) classEmitter27);
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter29);
        classEmitter13.setTarget((org.mockito.asm.ClassVisitor) classEmitter30);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type32 = classEmitter30.getClassType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo9);
        org.junit.Assert.assertNull(classInfo18);
        org.junit.Assert.assertNull(classInfo22);
    }

    @Test
    public void test21561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21561");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        boolean boolean5 = enhancer0.getAttemptLoad();
        boolean boolean6 = enhancer0.getUseCache();
        boolean boolean7 = enhancer0.getAttemptLoad();
        enhancer0.setAttemptLoad(true);
        java.lang.ClassLoader classLoader10 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy12 = null;
        enhancer11.setNamingPolicy(namingPolicy12);
        java.lang.ClassLoader classLoader14 = null;
        enhancer11.setClassLoader(classLoader14);
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy17 = null;
        enhancer16.setNamingPolicy(namingPolicy17);
        java.lang.ClassLoader classLoader19 = null;
        enhancer16.setClassLoader(classLoader19);
        java.lang.Class<?> wildcardClass21 = enhancer16.getClass();
        java.lang.String str22 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass21);
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy24 = null;
        enhancer23.setNamingPolicy(namingPolicy24);
        java.lang.ClassLoader classLoader26 = null;
        enhancer23.setClassLoader(classLoader26);
        java.lang.Class<?> wildcardClass28 = enhancer23.getClass();
        java.lang.Class[] classArray29 = new java.lang.Class[] { wildcardClass21, wildcardClass28 };
        enhancer11.setInterfaces(classArray29);
        enhancer11.setUseCache(false);
        enhancer11.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = null;
        enhancer35.setNamingPolicy(namingPolicy36);
        java.lang.ClassLoader classLoader38 = null;
        enhancer35.setClassLoader(classLoader38);
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy41 = null;
        enhancer40.setNamingPolicy(namingPolicy41);
        java.lang.ClassLoader classLoader43 = null;
        enhancer40.setClassLoader(classLoader43);
        java.lang.Class<?> wildcardClass45 = enhancer40.getClass();
        java.lang.String str46 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass45);
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy48 = null;
        enhancer47.setNamingPolicy(namingPolicy48);
        java.lang.ClassLoader classLoader50 = null;
        enhancer47.setClassLoader(classLoader50);
        java.lang.Class<?> wildcardClass52 = enhancer47.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[] { wildcardClass45, wildcardClass52 };
        enhancer35.setInterfaces(classArray53);
        enhancer11.setInterfaces(classArray53);
        enhancer0.setInterfaces(classArray53);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy57 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter58 = null;
        enhancer0.setCallbackFilter(callbackFilter58);
        java.lang.ClassLoader classLoader60 = enhancer0.getClassLoader();
        boolean boolean61 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter62 = null;
        enhancer0.setCallbackFilter(callbackFilter62);
        org.mockito.cglib.proxy.Enhancer enhancer64 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy65 = null;
        enhancer64.setNamingPolicy(namingPolicy65);
        java.lang.ClassLoader classLoader67 = null;
        enhancer64.setClassLoader(classLoader67);
        boolean boolean69 = enhancer64.getAttemptLoad();
        java.lang.Class class70 = null;
        enhancer64.setSuperclass(class70);
        org.mockito.cglib.proxy.Enhancer enhancer72 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy73 = null;
        enhancer72.setNamingPolicy(namingPolicy73);
        java.lang.ClassLoader classLoader75 = null;
        enhancer72.setClassLoader(classLoader75);
        boolean boolean77 = enhancer72.getAttemptLoad();
        java.lang.Class class78 = null;
        enhancer72.setSuperclass(class78);
        java.lang.ClassLoader classLoader80 = enhancer72.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy81 = enhancer72.getNamingPolicy();
        enhancer64.setNamingPolicy(namingPolicy81);
        boolean boolean83 = enhancer64.getUseCache();
        enhancer64.setUseFactory(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy86 = enhancer64.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy86);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str22, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(classArray29);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str46, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(generatorStrategy57);
        org.junit.Assert.assertNotNull(classLoader60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(classLoader80);
        org.junit.Assert.assertNotNull(namingPolicy81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(namingPolicy86);
    }

    @Test
    public void test21562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21562");
        org.mockito.cglib.proxy.Enhancer enhancer1 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy2 = null;
        enhancer1.setNamingPolicy(namingPolicy2);
        java.lang.ClassLoader classLoader4 = null;
        enhancer1.setClassLoader(classLoader4);
        java.lang.Class<?> wildcardClass6 = enhancer1.getClass();
        java.lang.String str7 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass6);
        boolean boolean8 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass6);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        int int11 = type9.getOpcode(128);
        java.lang.String str12 = type9.toString();
        org.mockito.cglib.core.Local local13 = new org.mockito.cglib.core.Local(65, type9);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str7, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 132 + "'", int11 == 132);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str12, "Lorg/mockito/cglib/proxy/Enhancer;");
    }

    @Test
    public void test21563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21563");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = null;
        enhancer5.setNamingPolicy(namingPolicy6);
        java.lang.ClassLoader classLoader8 = null;
        enhancer5.setClassLoader(classLoader8);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter10 = null;
        enhancer5.setCallbackFilter(callbackFilter10);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = null;
        enhancer12.setNamingPolicy(namingPolicy13);
        java.lang.ClassLoader classLoader15 = null;
        enhancer12.setClassLoader(classLoader15);
        boolean boolean17 = enhancer12.getAttemptLoad();
        java.lang.Class class18 = null;
        enhancer12.setSuperclass(class18);
        org.mockito.cglib.core.NamingPolicy namingPolicy20 = enhancer12.getNamingPolicy();
        enhancer5.setNamingPolicy(namingPolicy20);
        enhancer0.setNamingPolicy(namingPolicy20);
        boolean boolean23 = enhancer0.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy24 = enhancer0.getStrategy();
        org.mockito.asm.Label label25 = new org.mockito.asm.Label();
        java.lang.Object obj26 = label25.info;
        java.lang.String str27 = label25.toString();
        java.lang.Object obj28 = label25.info;
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy30 = null;
        enhancer29.setNamingPolicy(namingPolicy30);
        java.lang.ClassLoader classLoader32 = null;
        enhancer29.setClassLoader(classLoader32);
        enhancer29.setUseFactory(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = enhancer29.getNamingPolicy();
        label25.info = enhancer29;
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy39 = null;
        enhancer38.setNamingPolicy(namingPolicy39);
        enhancer38.setAttemptLoad(false);
        enhancer38.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy46 = null;
        enhancer45.setNamingPolicy(namingPolicy46);
        java.lang.ClassLoader classLoader48 = null;
        enhancer45.setClassLoader(classLoader48);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter50 = null;
        enhancer45.setCallbackFilter(callbackFilter50);
        org.mockito.cglib.proxy.Callback callback52 = null;
        enhancer45.setCallback(callback52);
        java.lang.ClassLoader classLoader54 = null;
        enhancer45.setClassLoader(classLoader54);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy56 = null;
        enhancer45.setStrategy(generatorStrategy56);
        org.mockito.cglib.proxy.Enhancer enhancer58 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy59 = null;
        enhancer58.setNamingPolicy(namingPolicy59);
        java.lang.ClassLoader classLoader61 = null;
        enhancer58.setClassLoader(classLoader61);
        boolean boolean63 = enhancer58.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy64 = enhancer58.getStrategy();
        enhancer45.setStrategy(generatorStrategy64);
        enhancer45.setAttemptLoad(false);
        boolean boolean68 = enhancer45.getAttemptLoad();
        boolean boolean69 = enhancer45.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy70 = enhancer45.getStrategy();
        enhancer38.setStrategy(generatorStrategy70);
        enhancer29.setStrategy(generatorStrategy70);
        org.mockito.cglib.proxy.Callback callback73 = null;
        enhancer29.setCallback(callback73);
        org.mockito.cglib.proxy.Enhancer enhancer75 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy76 = null;
        enhancer75.setNamingPolicy(namingPolicy76);
        java.lang.ClassLoader classLoader78 = null;
        enhancer75.setClassLoader(classLoader78);
        boolean boolean80 = enhancer75.getAttemptLoad();
        enhancer75.setUseCache(true);
        java.lang.ClassLoader classLoader83 = enhancer75.getClassLoader();
        boolean boolean84 = enhancer75.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer85 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy86 = null;
        enhancer85.setNamingPolicy(namingPolicy86);
        java.lang.ClassLoader classLoader88 = null;
        enhancer85.setClassLoader(classLoader88);
        boolean boolean90 = enhancer85.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy91 = enhancer85.getNamingPolicy();
        org.mockito.cglib.proxy.Callback callback92 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray93 = new org.mockito.cglib.proxy.Callback[] { callback92 };
        enhancer85.setCallbacks(callbackArray93);
        enhancer75.setCallbacks(callbackArray93);
        enhancer29.setCallbacks(callbackArray93);
        enhancer0.setCallbacks(callbackArray93);
        enhancer0.setAttemptLoad(false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(namingPolicy20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(generatorStrategy24);
        org.junit.Assert.assertNull(obj26);
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "L2091241505" + "'", str27, "L2091241505");
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(namingPolicy36);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(generatorStrategy64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(generatorStrategy70);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(classLoader83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(namingPolicy91);
        org.junit.Assert.assertNotNull(callbackArray93);
    }

    @Test
    public void test21564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21564");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        boolean boolean5 = enhancer0.getAttemptLoad();
        java.lang.Class class6 = null;
        enhancer0.setSuperclass(class6);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy9 = null;
        enhancer8.setNamingPolicy(namingPolicy9);
        java.lang.ClassLoader classLoader11 = null;
        enhancer8.setClassLoader(classLoader11);
        boolean boolean13 = enhancer8.getAttemptLoad();
        java.lang.Class class14 = null;
        enhancer8.setSuperclass(class14);
        java.lang.ClassLoader classLoader16 = enhancer8.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy17 = enhancer8.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy17);
        boolean boolean19 = enhancer0.getAttemptLoad();
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = null;
        enhancer22.setNamingPolicy(namingPolicy23);
        java.lang.ClassLoader classLoader25 = null;
        enhancer22.setClassLoader(classLoader25);
        java.lang.Class<?> wildcardClass27 = enhancer22.getClass();
        java.lang.String str28 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass27);
        boolean boolean29 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass27);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass27);
        boolean boolean31 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass27);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass27);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass27);
        java.lang.String str34 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass27);
        java.lang.String str35 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass27);
        java.lang.String str36 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass27);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(classLoader16);
        org.junit.Assert.assertNotNull(namingPolicy17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str28, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str34, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str35, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str36, "org/mockito/cglib/proxy/Enhancer");
    }

    @Test
    public void test21565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21565");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        boolean boolean5 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader6 = enhancer0.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer0.getNamingPolicy();
        boolean boolean8 = enhancer0.getUseCache();
        enhancer0.setUseFactory(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy11 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter12 = null;
        enhancer0.setCallbackFilter(callbackFilter12);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy15 = null;
        enhancer14.setNamingPolicy(namingPolicy15);
        java.lang.ClassLoader classLoader17 = null;
        enhancer14.setClassLoader(classLoader17);
        enhancer14.setUseFactory(true);
        boolean boolean21 = enhancer14.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy22 = null;
        enhancer14.setStrategy(generatorStrategy22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = null;
        enhancer24.setNamingPolicy(namingPolicy25);
        java.lang.ClassLoader classLoader27 = null;
        enhancer24.setClassLoader(classLoader27);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter29 = null;
        enhancer24.setCallbackFilter(callbackFilter29);
        org.mockito.cglib.proxy.Callback callback31 = null;
        enhancer24.setCallback(callback31);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter33 = null;
        enhancer24.setCallbackFilter(callbackFilter33);
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = null;
        enhancer35.setNamingPolicy(namingPolicy36);
        java.lang.ClassLoader classLoader38 = null;
        enhancer35.setClassLoader(classLoader38);
        java.lang.Class<?> wildcardClass40 = enhancer35.getClass();
        java.lang.String str41 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass40);
        boolean boolean42 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass40);
        enhancer24.setSuperclass((java.lang.Class) wildcardClass40);
        boolean boolean44 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass40);
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy46 = null;
        enhancer45.setNamingPolicy(namingPolicy46);
        java.lang.ClassLoader classLoader48 = null;
        enhancer45.setClassLoader(classLoader48);
        java.lang.Class<?> wildcardClass50 = enhancer45.getClass();
        java.lang.String str51 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass50);
        java.lang.String str52 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass50);
        java.lang.String str53 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass50);
        java.lang.Class[] classArray54 = new java.lang.Class[] { wildcardClass40, wildcardClass50 };
        enhancer14.setInterfaces(classArray54);
        org.mockito.cglib.proxy.Callback callback56 = null;
        enhancer14.setCallback(callback56);
        org.mockito.cglib.proxy.Enhancer enhancer58 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy59 = null;
        enhancer58.setNamingPolicy(namingPolicy59);
        java.lang.ClassLoader classLoader61 = null;
        enhancer58.setClassLoader(classLoader61);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter63 = null;
        enhancer58.setCallbackFilter(callbackFilter63);
        org.mockito.cglib.proxy.Callback callback65 = null;
        enhancer58.setCallback(callback65);
        java.lang.ClassLoader classLoader67 = null;
        enhancer58.setClassLoader(classLoader67);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy69 = null;
        enhancer58.setStrategy(generatorStrategy69);
        org.mockito.cglib.proxy.Enhancer enhancer71 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy72 = null;
        enhancer71.setNamingPolicy(namingPolicy72);
        java.lang.ClassLoader classLoader74 = null;
        enhancer71.setClassLoader(classLoader74);
        boolean boolean76 = enhancer71.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy77 = enhancer71.getStrategy();
        enhancer58.setStrategy(generatorStrategy77);
        enhancer58.setAttemptLoad(false);
        boolean boolean81 = enhancer58.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy82 = enhancer58.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer83 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy84 = null;
        enhancer83.setNamingPolicy(namingPolicy84);
        java.lang.ClassLoader classLoader86 = null;
        enhancer83.setClassLoader(classLoader86);
        enhancer83.setUseFactory(true);
        boolean boolean90 = enhancer83.getUseCache();
        java.lang.Class<?> wildcardClass91 = enhancer83.getClass();
        enhancer58.setSuperclass((java.lang.Class) wildcardClass91);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy93 = enhancer58.getStrategy();
        enhancer14.setStrategy(generatorStrategy93);
        enhancer0.setStrategy(generatorStrategy93);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(namingPolicy11);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str41, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str51, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str52, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str53, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(generatorStrategy77);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(namingPolicy82);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(generatorStrategy93);
    }

    @Test
    public void test21566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21566");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.BYTE_TYPE;
        boolean boolean4 = type2.equals((java.lang.Object) 9);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type7 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray8 = new org.mockito.asm.Type[] {};
        java.lang.String str9 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray8);
        org.mockito.cglib.core.Signature signature10 = new org.mockito.cglib.core.Signature("double", type6, typeArray8);
        java.lang.String str11 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray8);
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray8);
        java.lang.String str13 = type1.getClassName();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.BYTE_TYPE;
        int int16 = type15.getSize();
        java.lang.String str17 = type15.getClassName();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type19 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type20 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type21 = org.mockito.asm.Type.BYTE_TYPE;
        int int22 = type21.getSize();
        java.lang.String str23 = type21.getClassName();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str25 = type24.getClassName();
        org.mockito.asm.Type[] typeArray26 = new org.mockito.asm.Type[] { type18, type19, type20, type21, type24 };
        org.mockito.cglib.core.Signature signature27 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type15, typeArray26);
        org.mockito.asm.Type[] typeArray28 = signature27.getArgumentTypes();
        org.mockito.cglib.core.Signature signature29 = new org.mockito.cglib.core.Signature("D", type1, typeArray28);
        org.mockito.asm.Label label30 = new org.mockito.asm.Label();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type33 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] {};
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type33, typeArray34);
        org.mockito.cglib.core.Signature signature36 = new org.mockito.cglib.core.Signature("double", type32, typeArray34);
        label30.info = typeArray34;
        boolean boolean38 = signature29.equals((java.lang.Object) typeArray34);
        org.mockito.asm.Type type39 = signature29.getReturnType();
        java.lang.String str40 = signature29.getDescriptor();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "()D" + "'", str9, "()D");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "()B" + "'", str11, "()B");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "()F" + "'", str12, "()F");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "float" + "'", str13, "float");
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "byte" + "'", str17, "byte");
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "byte" + "'", str23, "byte");
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "double" + "'", str25, "double");
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "()D" + "'", str35, "()D");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(CBBBD)F" + "'", str40, "(CBBBD)F");
    }

    @Test
    public void test21567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21567");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.BYTE_TYPE;
        int int2 = type1.getSize();
        java.lang.String str3 = type1.getClassName();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type5 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type6 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type7 = org.mockito.asm.Type.BYTE_TYPE;
        int int8 = type7.getSize();
        java.lang.String str9 = type7.getClassName();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str11 = type10.getClassName();
        org.mockito.asm.Type[] typeArray12 = new org.mockito.asm.Type[] { type4, type5, type6, type7, type10 };
        org.mockito.cglib.core.Signature signature13 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type1, typeArray12);
        java.lang.String str14 = signature13.getDescriptor();
        java.lang.Object obj15 = null;
        boolean boolean16 = signature13.equals(obj15);
        java.lang.String str17 = signature13.toString();
        org.mockito.asm.Type type18 = signature13.getReturnType();
        org.mockito.asm.ClassVisitor classVisitor19 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter(classVisitor19);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter(classVisitor19);
        org.mockito.cglib.core.ClassInfo classInfo22 = classEmitter21.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.asm.ClassVisitor classVisitor25 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter(classVisitor25);
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter(classVisitor25);
        org.mockito.cglib.core.ClassInfo classInfo28 = classEmitter27.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo29 = classEmitter27.getClassInfo();
        classEmitter24.setTarget((org.mockito.asm.ClassVisitor) classEmitter27);
        org.mockito.asm.ClassVisitor classVisitor31 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter(classVisitor31);
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter(classVisitor31);
        org.mockito.cglib.core.ClassInfo classInfo34 = classEmitter33.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter33);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter35);
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter36);
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter36);
        classEmitter27.setTarget((org.mockito.asm.ClassVisitor) classEmitter36);
        org.mockito.cglib.core.ClassEmitter classEmitter40 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter40);
        org.mockito.cglib.core.ClassInfo classInfo42 = classEmitter41.getClassInfo();
        classEmitter36.setTarget((org.mockito.asm.ClassVisitor) classEmitter41);
        boolean boolean44 = signature13.equals((java.lang.Object) classEmitter41);
        org.mockito.cglib.core.ClassInfo classInfo45 = classEmitter41.getClassInfo();
        // The following exception was thrown during execution in test generation
        try {
            classEmitter41.visitOuterClass("L2094920105", "L1123111044", "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "byte" + "'", str3, "byte");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "byte" + "'", str9, "byte");
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "double" + "'", str11, "double");
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(CBBBD)B" + "'", str14, "(CBBBD)B");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B" + "'", str17, "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B");
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNull(classInfo22);
        org.junit.Assert.assertNull(classInfo28);
        org.junit.Assert.assertNull(classInfo29);
        org.junit.Assert.assertNull(classInfo34);
        org.junit.Assert.assertNull(classInfo42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(classInfo45);
    }

    @Test
    public void test21568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21568");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.cglib.core.ClassInfo classInfo6 = classEmitter5.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor7 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter(classVisitor7);
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter(classVisitor7);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter9);
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter9);
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter12);
        classEmitter9.setTarget((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.asm.ClassVisitor classVisitor15 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter(classVisitor15);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter(classVisitor15);
        org.mockito.cglib.core.ClassInfo classInfo18 = classEmitter17.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter19);
        org.mockito.asm.ClassVisitor classVisitor21 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassInfo classInfo24 = classEmitter23.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo25 = classEmitter23.getClassInfo();
        classEmitter20.setTarget((org.mockito.asm.ClassVisitor) classEmitter23);
        classEmitter13.setTarget((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.cglib.core.ClassInfo classInfo29 = classEmitter23.getClassInfo();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.cglib.core.Signature signature33 = new org.mockito.cglib.core.Signature("hi!", "B");
        java.lang.String str34 = signature33.toString();
        org.mockito.asm.ClassVisitor classVisitor35 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter(classVisitor35);
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter(classVisitor35);
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter37);
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter38);
        boolean boolean40 = signature33.equals((java.lang.Object) classEmitter39);
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter39);
        org.mockito.asm.ClassVisitor classVisitor42 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter43 = new org.mockito.cglib.core.ClassEmitter(classVisitor42);
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter(classVisitor42);
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter44);
        org.mockito.cglib.core.ClassEmitter classEmitter46 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter44);
        org.mockito.cglib.core.ClassEmitter classEmitter47 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter47);
        classEmitter44.setTarget((org.mockito.asm.ClassVisitor) classEmitter48);
        org.mockito.asm.ClassVisitor classVisitor50 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter51 = new org.mockito.cglib.core.ClassEmitter(classVisitor50);
        org.mockito.cglib.core.ClassEmitter classEmitter52 = new org.mockito.cglib.core.ClassEmitter(classVisitor50);
        org.mockito.cglib.core.ClassInfo classInfo53 = classEmitter52.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter54 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter52);
        org.mockito.cglib.core.ClassEmitter classEmitter55 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter54);
        org.mockito.asm.ClassVisitor classVisitor56 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter57 = new org.mockito.cglib.core.ClassEmitter(classVisitor56);
        org.mockito.cglib.core.ClassEmitter classEmitter58 = new org.mockito.cglib.core.ClassEmitter(classVisitor56);
        org.mockito.cglib.core.ClassInfo classInfo59 = classEmitter58.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo60 = classEmitter58.getClassInfo();
        classEmitter55.setTarget((org.mockito.asm.ClassVisitor) classEmitter58);
        classEmitter48.setTarget((org.mockito.asm.ClassVisitor) classEmitter58);
        org.mockito.asm.ClassVisitor classVisitor63 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter64 = new org.mockito.cglib.core.ClassEmitter(classVisitor63);
        org.mockito.cglib.core.ClassEmitter classEmitter65 = new org.mockito.cglib.core.ClassEmitter(classVisitor63);
        org.mockito.cglib.core.ClassEmitter classEmitter66 = new org.mockito.cglib.core.ClassEmitter(classVisitor63);
        org.mockito.cglib.core.ClassEmitter classEmitter67 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter66);
        classEmitter48.setTarget((org.mockito.asm.ClassVisitor) classEmitter67);
        classEmitter39.setTarget((org.mockito.asm.ClassVisitor) classEmitter67);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter67);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter67.visitSource("L704347320", "org.mockito.cglib.core.ClassEmitter");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo6);
        org.junit.Assert.assertNull(classInfo18);
        org.junit.Assert.assertNull(classInfo24);
        org.junit.Assert.assertNull(classInfo25);
        org.junit.Assert.assertNull(classInfo29);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!B" + "'", str34, "hi!B");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(classInfo53);
        org.junit.Assert.assertNull(classInfo59);
        org.junit.Assert.assertNull(classInfo60);
    }

    @Test
    public void test21569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21569");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        boolean boolean5 = enhancer0.getAttemptLoad();
        boolean boolean6 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter9 = null;
        enhancer0.setCallbackFilter(callbackFilter9);
        java.lang.ClassLoader classLoader11 = enhancer0.getClassLoader();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class12 = enhancer0.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: createClass does not accept callbacks");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(classLoader11);
    }

    @Test
    public void test21570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21570");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getObjectType("byte");
        label0.info = "byte";
        java.lang.String str4 = label0.toString();
        org.mockito.asm.MethodVisitor methodVisitor9 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter10);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        label0.info = localVariablesSorter11;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter14 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter15 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter14);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter15.visitFieldInsn(110, "L1341371882I", "L876263990", "L419978418");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type2);
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L1568811358" + "'", str4, "L1568811358");
    }

    @Test
    public void test21571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21571");
        org.mockito.cglib.core.Signature signature2 = new org.mockito.cglib.core.Signature("", "hi!");
        java.lang.String str3 = signature2.getDescriptor();
        boolean boolean5 = signature2.equals((java.lang.Object) (short) 1);
        java.lang.String str6 = signature2.getDescriptor();
        boolean boolean8 = signature2.equals((java.lang.Object) 1.0d);
        org.mockito.asm.ClassVisitor classVisitor9 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter(classVisitor9);
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter(classVisitor9);
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo13 = classEmitter11.getClassInfo();
        boolean boolean14 = signature2.equals((java.lang.Object) classInfo13);
        org.mockito.asm.MethodVisitor methodVisitor17 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter18 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor17);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter19 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter18);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter20 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter19);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter21 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter20);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter22 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter21);
        boolean boolean23 = signature2.equals((java.lang.Object) localVariablesSorter21);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter24 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter21);
        org.mockito.asm.Attribute attribute25 = null;
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter21.visitAttribute(attribute25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNull(classInfo13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test21572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21572");
        org.mockito.cglib.core.Signature signature2 = new org.mockito.cglib.core.Signature("L1622326596", "V");
        java.lang.String str3 = signature2.getName();
        java.lang.String str4 = signature2.toString();
        java.lang.String str5 = signature2.getDescriptor();
        org.mockito.asm.Type type6 = signature2.getReturnType();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "L1622326596" + "'", str3, "L1622326596");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L1622326596V" + "'", str4, "L1622326596V");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "V" + "'", str5, "V");
        org.junit.Assert.assertNotNull(type6);
    }

    @Test
    public void test21573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21573");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("byte");
        int int2 = type1.getSize();
        org.mockito.cglib.proxy.Enhancer enhancer3 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy4 = null;
        enhancer3.setNamingPolicy(namingPolicy4);
        java.lang.ClassLoader classLoader6 = null;
        enhancer3.setClassLoader(classLoader6);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter8 = null;
        enhancer3.setCallbackFilter(callbackFilter8);
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer3.setCallback(callback10);
        enhancer3.setUseCache(false);
        boolean boolean14 = type1.equals((java.lang.Object) enhancer3);
        boolean boolean15 = enhancer3.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy17 = null;
        enhancer16.setNamingPolicy(namingPolicy17);
        java.lang.ClassLoader classLoader19 = null;
        enhancer16.setClassLoader(classLoader19);
        enhancer16.setUseFactory(true);
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy24 = null;
        enhancer23.setNamingPolicy(namingPolicy24);
        java.lang.ClassLoader classLoader26 = null;
        enhancer23.setClassLoader(classLoader26);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter28 = null;
        enhancer23.setCallbackFilter(callbackFilter28);
        org.mockito.cglib.proxy.Callback callback30 = null;
        enhancer23.setCallback(callback30);
        java.lang.ClassLoader classLoader32 = null;
        enhancer23.setClassLoader(classLoader32);
        enhancer23.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy37 = null;
        enhancer36.setNamingPolicy(namingPolicy37);
        java.lang.ClassLoader classLoader39 = null;
        enhancer36.setClassLoader(classLoader39);
        boolean boolean41 = enhancer36.getAttemptLoad();
        enhancer36.setUseCache(true);
        java.lang.ClassLoader classLoader44 = enhancer36.getClassLoader();
        enhancer23.setClassLoader(classLoader44);
        enhancer16.setClassLoader(classLoader44);
        enhancer3.setClassLoader(classLoader44);
        org.mockito.cglib.core.NamingPolicy namingPolicy48 = enhancer3.getNamingPolicy();
        java.lang.ClassLoader classLoader49 = enhancer3.getClassLoader();
        enhancer3.setSerialVersionUID((java.lang.Long) 1L);
        boolean boolean52 = enhancer3.getAttemptLoad();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter53 = null;
        enhancer3.setCallbackFilter(callbackFilter53);
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = enhancer3.getNamingPolicy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter56 = null;
        enhancer3.setCallbackFilter(callbackFilter56);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(classLoader44);
        org.junit.Assert.assertNotNull(namingPolicy48);
        org.junit.Assert.assertNotNull(classLoader49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(namingPolicy55);
    }

    @Test
    public void test21574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21574");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        boolean boolean5 = enhancer0.getAttemptLoad();
        enhancer0.setUseCache(true);
        java.lang.ClassLoader classLoader8 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy10 = null;
        enhancer9.setNamingPolicy(namingPolicy10);
        java.lang.ClassLoader classLoader12 = null;
        enhancer9.setClassLoader(classLoader12);
        boolean boolean14 = enhancer9.getAttemptLoad();
        java.lang.Class class15 = null;
        enhancer9.setSuperclass(class15);
        org.mockito.cglib.proxy.Callback callback17 = null;
        enhancer9.setCallback(callback17);
        java.lang.ClassLoader classLoader19 = enhancer9.getClassLoader();
        enhancer0.setClassLoader(classLoader19);
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = null;
        enhancer21.setNamingPolicy(namingPolicy22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = null;
        enhancer24.setNamingPolicy(namingPolicy25);
        java.lang.ClassLoader classLoader27 = null;
        enhancer24.setClassLoader(classLoader27);
        java.lang.Class<?> wildcardClass29 = enhancer24.getClass();
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = null;
        enhancer30.setNamingPolicy(namingPolicy31);
        java.lang.ClassLoader classLoader33 = null;
        enhancer30.setClassLoader(classLoader33);
        java.lang.Class<?> wildcardClass35 = enhancer30.getClass();
        java.lang.String str36 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass35);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass35);
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy39 = null;
        enhancer38.setNamingPolicy(namingPolicy39);
        java.lang.ClassLoader classLoader41 = null;
        enhancer38.setClassLoader(classLoader41);
        java.lang.Class<?> wildcardClass43 = enhancer38.getClass();
        java.lang.String str44 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass43);
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy46 = null;
        enhancer45.setNamingPolicy(namingPolicy46);
        java.lang.ClassLoader classLoader48 = null;
        enhancer45.setClassLoader(classLoader48);
        java.lang.Class<?> wildcardClass50 = enhancer45.getClass();
        org.mockito.cglib.proxy.Enhancer enhancer51 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy52 = null;
        enhancer51.setNamingPolicy(namingPolicy52);
        java.lang.ClassLoader classLoader54 = null;
        enhancer51.setClassLoader(classLoader54);
        java.lang.Class<?> wildcardClass56 = enhancer51.getClass();
        java.lang.String str57 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass56);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass56);
        java.lang.Class[] classArray59 = new java.lang.Class[] { wildcardClass29, wildcardClass35, wildcardClass43, wildcardClass50, wildcardClass56 };
        enhancer21.setInterfaces(classArray59);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy61 = enhancer21.getStrategy();
        enhancer0.setStrategy(generatorStrategy61);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(classLoader19);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str36, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str44, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str57, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(generatorStrategy61);
    }

    @Test
    public void test21575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21575");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = null;
        enhancer5.setNamingPolicy(namingPolicy6);
        java.lang.ClassLoader classLoader8 = null;
        enhancer5.setClassLoader(classLoader8);
        java.lang.Class<?> wildcardClass10 = enhancer5.getClass();
        java.lang.String str11 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass10);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = null;
        enhancer12.setNamingPolicy(namingPolicy13);
        java.lang.ClassLoader classLoader15 = null;
        enhancer12.setClassLoader(classLoader15);
        java.lang.Class<?> wildcardClass17 = enhancer12.getClass();
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass10, wildcardClass17 };
        enhancer0.setInterfaces(classArray18);
        boolean boolean20 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = null;
        enhancer21.setNamingPolicy(namingPolicy22);
        java.lang.ClassLoader classLoader24 = null;
        enhancer21.setClassLoader(classLoader24);
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = null;
        enhancer26.setNamingPolicy(namingPolicy27);
        java.lang.ClassLoader classLoader29 = null;
        enhancer26.setClassLoader(classLoader29);
        java.lang.Class<?> wildcardClass31 = enhancer26.getClass();
        java.lang.String str32 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass31);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy34 = null;
        enhancer33.setNamingPolicy(namingPolicy34);
        java.lang.ClassLoader classLoader36 = null;
        enhancer33.setClassLoader(classLoader36);
        java.lang.Class<?> wildcardClass38 = enhancer33.getClass();
        java.lang.Class[] classArray39 = new java.lang.Class[] { wildcardClass31, wildcardClass38 };
        enhancer21.setInterfaces(classArray39);
        enhancer0.setInterfaces(classArray39);
        enhancer0.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy45 = null;
        enhancer44.setNamingPolicy(namingPolicy45);
        boolean boolean47 = enhancer44.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy49 = null;
        enhancer48.setNamingPolicy(namingPolicy49);
        java.lang.ClassLoader classLoader51 = null;
        enhancer48.setClassLoader(classLoader51);
        org.mockito.cglib.proxy.Enhancer enhancer53 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy54 = null;
        enhancer53.setNamingPolicy(namingPolicy54);
        java.lang.ClassLoader classLoader56 = null;
        enhancer53.setClassLoader(classLoader56);
        java.lang.Class<?> wildcardClass58 = enhancer53.getClass();
        java.lang.String str59 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass58);
        org.mockito.cglib.proxy.Enhancer enhancer60 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy61 = null;
        enhancer60.setNamingPolicy(namingPolicy61);
        java.lang.ClassLoader classLoader63 = null;
        enhancer60.setClassLoader(classLoader63);
        java.lang.Class<?> wildcardClass65 = enhancer60.getClass();
        java.lang.Class[] classArray66 = new java.lang.Class[] { wildcardClass58, wildcardClass65 };
        enhancer48.setInterfaces(classArray66);
        enhancer44.setInterfaces(classArray66);
        enhancer0.setInterfaces(classArray66);
        enhancer0.setInterceptDuringConstruction(false);
        enhancer0.setUseCache(true);
        org.mockito.cglib.proxy.Callback callback74 = null;
        enhancer0.setCallback(callback74);
        boolean boolean76 = enhancer0.getAttemptLoad();
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str11, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str32, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(classArray39);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str59, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(classArray66);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test21576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21576");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        boolean boolean3 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy5 = null;
        enhancer4.setNamingPolicy(namingPolicy5);
        java.lang.ClassLoader classLoader7 = null;
        enhancer4.setClassLoader(classLoader7);
        enhancer4.setUseFactory(true);
        boolean boolean11 = enhancer4.getUseCache();
        java.lang.Class<?> wildcardClass12 = enhancer4.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass12);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy15 = null;
        enhancer14.setNamingPolicy(namingPolicy15);
        java.lang.ClassLoader classLoader17 = null;
        enhancer14.setClassLoader(classLoader17);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter19 = null;
        enhancer14.setCallbackFilter(callbackFilter19);
        org.mockito.cglib.proxy.Callback callback21 = null;
        enhancer14.setCallback(callback21);
        java.lang.ClassLoader classLoader23 = null;
        enhancer14.setClassLoader(classLoader23);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy25 = null;
        enhancer14.setStrategy(generatorStrategy25);
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = null;
        enhancer27.setNamingPolicy(namingPolicy28);
        java.lang.ClassLoader classLoader30 = null;
        enhancer27.setClassLoader(classLoader30);
        boolean boolean32 = enhancer27.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy33 = enhancer27.getStrategy();
        enhancer14.setStrategy(generatorStrategy33);
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = null;
        enhancer35.setNamingPolicy(namingPolicy36);
        java.lang.ClassLoader classLoader38 = null;
        enhancer35.setClassLoader(classLoader38);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter40 = null;
        enhancer35.setCallbackFilter(callbackFilter40);
        org.mockito.cglib.proxy.Callback callback42 = null;
        enhancer35.setCallback(callback42);
        java.lang.ClassLoader classLoader44 = null;
        enhancer35.setClassLoader(classLoader44);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy46 = null;
        enhancer35.setStrategy(generatorStrategy46);
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy49 = null;
        enhancer48.setNamingPolicy(namingPolicy49);
        java.lang.ClassLoader classLoader51 = null;
        enhancer48.setClassLoader(classLoader51);
        boolean boolean53 = enhancer48.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy54 = enhancer48.getStrategy();
        enhancer35.setStrategy(generatorStrategy54);
        enhancer14.setStrategy(generatorStrategy54);
        org.mockito.asm.ClassVisitor classVisitor57 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter58 = new org.mockito.cglib.core.ClassEmitter(classVisitor57);
        org.mockito.cglib.core.ClassEmitter classEmitter59 = new org.mockito.cglib.core.ClassEmitter(classVisitor57);
        org.mockito.cglib.core.ClassInfo classInfo60 = classEmitter59.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter61 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter59);
        java.lang.Class<?> wildcardClass62 = classEmitter61.getClass();
        java.lang.String str63 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass62);
        enhancer14.setSuperclass((java.lang.Class) wildcardClass62);
        java.lang.String str65 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass62);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass62);
        boolean boolean67 = enhancer0.getUseCache();
        boolean boolean68 = enhancer0.getUseCache();
        org.mockito.cglib.core.NamingPolicy namingPolicy69 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter70 = null;
        enhancer0.setCallbackFilter(callbackFilter70);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(generatorStrategy33);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(generatorStrategy54);
        org.junit.Assert.assertNull(classInfo60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "org/mockito/cglib/core/ClassEmitter" + "'", str63, "org/mockito/cglib/core/ClassEmitter");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "org/mockito/cglib/core/ClassEmitter" + "'", str65, "org/mockito/cglib/core/ClassEmitter");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(namingPolicy69);
    }

    @Test
    public void test21577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21577");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = null;
        enhancer5.setNamingPolicy(namingPolicy6);
        java.lang.ClassLoader classLoader8 = null;
        enhancer5.setClassLoader(classLoader8);
        java.lang.Class<?> wildcardClass10 = enhancer5.getClass();
        java.lang.String str11 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass10);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = null;
        enhancer12.setNamingPolicy(namingPolicy13);
        java.lang.ClassLoader classLoader15 = null;
        enhancer12.setClassLoader(classLoader15);
        java.lang.Class<?> wildcardClass17 = enhancer12.getClass();
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass10, wildcardClass17 };
        enhancer0.setInterfaces(classArray18);
        java.lang.ClassLoader classLoader20 = enhancer0.getClassLoader();
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setAttemptLoad(false);
        enhancer0.setUseCache(true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str11, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(classLoader20);
    }

    @Test
    public void test21578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21578");
        org.mockito.cglib.proxy.Enhancer enhancer3 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy4 = null;
        enhancer3.setNamingPolicy(namingPolicy4);
        java.lang.ClassLoader classLoader6 = null;
        enhancer3.setClassLoader(classLoader6);
        java.lang.Class<?> wildcardClass8 = enhancer3.getClass();
        java.lang.String str9 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass8);
        boolean boolean10 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass8);
        int int12 = type11.getSize();
        org.mockito.cglib.core.Local local13 = new org.mockito.cglib.core.Local(108, type11);
        org.mockito.cglib.core.Local local14 = new org.mockito.cglib.core.Local(108, type11);
        org.mockito.asm.Type type15 = local14.getType();
        java.lang.String str16 = type15.getClassName();
        org.mockito.asm.Type type17 = type15.getElementType();
        org.mockito.asm.ClassVisitor classVisitor18 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter(classVisitor18);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter(classVisitor18);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        boolean boolean22 = type15.equals((java.lang.Object) classEmitter21);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.cglib.core.Local local25 = new org.mockito.cglib.core.Local(124, type24);
        boolean boolean27 = type24.equals((java.lang.Object) 0);
        int int28 = type24.getSize();
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy30 = null;
        enhancer29.setNamingPolicy(namingPolicy30);
        java.lang.ClassLoader classLoader32 = null;
        enhancer29.setClassLoader(classLoader32);
        org.mockito.cglib.proxy.Enhancer enhancer34 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy35 = null;
        enhancer34.setNamingPolicy(namingPolicy35);
        java.lang.ClassLoader classLoader37 = null;
        enhancer34.setClassLoader(classLoader37);
        java.lang.Class<?> wildcardClass39 = enhancer34.getClass();
        java.lang.String str40 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass39);
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy42 = null;
        enhancer41.setNamingPolicy(namingPolicy42);
        java.lang.ClassLoader classLoader44 = null;
        enhancer41.setClassLoader(classLoader44);
        java.lang.Class<?> wildcardClass46 = enhancer41.getClass();
        java.lang.Class[] classArray47 = new java.lang.Class[] { wildcardClass39, wildcardClass46 };
        enhancer29.setInterfaces(classArray47);
        boolean boolean49 = enhancer29.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer50 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy51 = null;
        enhancer50.setNamingPolicy(namingPolicy51);
        java.lang.ClassLoader classLoader53 = null;
        enhancer50.setClassLoader(classLoader53);
        java.lang.Class<?> wildcardClass55 = enhancer50.getClass();
        enhancer29.setSuperclass((java.lang.Class) wildcardClass55);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass55);
        java.lang.String str58 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass55);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass55);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.BYTE_TYPE;
        int int62 = type61.getSize();
        java.lang.String str63 = type61.getClassName();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type65 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type66 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type67 = org.mockito.asm.Type.BYTE_TYPE;
        int int68 = type67.getSize();
        java.lang.String str69 = type67.getClassName();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str71 = type70.getClassName();
        org.mockito.asm.Type[] typeArray72 = new org.mockito.asm.Type[] { type64, type65, type66, type67, type70 };
        org.mockito.cglib.core.Signature signature73 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type61, typeArray72);
        java.lang.String str74 = org.mockito.asm.Type.getMethodDescriptor(type59, typeArray72);
        java.lang.String str75 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray72);
        java.lang.String str76 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray72);
        int int77 = type15.getSize();
        org.mockito.cglib.core.Local local78 = new org.mockito.cglib.core.Local(106, type15);
        boolean boolean80 = type15.equals((java.lang.Object) "org.mockito.cglib.proxy.Enhancer");
        java.lang.String str81 = type15.getInternalName();
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str9, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.mockito.cglib.proxy.Enhancer" + "'", str16, "org.mockito.cglib.proxy.Enhancer");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str40, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(classArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str58, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "byte" + "'", str63, "byte");
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "byte" + "'", str69, "byte");
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "double" + "'", str71, "double");
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;" + "'", str74, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(CBBBD)B" + "'", str75, "(CBBBD)B");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;" + "'", str76, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str81, "org/mockito/cglib/proxy/Enhancer");
    }

    @Test
    public void test21579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21579");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.asm.ClassVisitor classVisitor6 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassInfo classInfo9 = classEmitter8.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter10);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter15);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter16.visitInnerClass("L849118109", "L735394652", "L5949614L183352280", 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo9);
    }

    @Test
    public void test21580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21580");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter3 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.asm.Label label8 = new org.mockito.asm.Label();
        java.lang.Object obj9 = label8.info;
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy11 = null;
        enhancer10.setNamingPolicy(namingPolicy11);
        java.lang.ClassLoader classLoader13 = null;
        enhancer10.setClassLoader(classLoader13);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter15 = null;
        enhancer10.setCallbackFilter(callbackFilter15);
        enhancer10.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer19 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy20 = null;
        enhancer19.setNamingPolicy(namingPolicy20);
        java.lang.ClassLoader classLoader22 = null;
        enhancer19.setClassLoader(classLoader22);
        boolean boolean24 = enhancer19.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = enhancer19.getNamingPolicy();
        org.mockito.cglib.proxy.Callback callback26 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray27 = new org.mockito.cglib.proxy.Callback[] { callback26 };
        enhancer19.setCallbacks(callbackArray27);
        enhancer10.setCallbacks(callbackArray27);
        enhancer10.setAttemptLoad(true);
        label8.info = enhancer10;
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter6.visitLabel(label8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(namingPolicy25);
        org.junit.Assert.assertNotNull(callbackArray27);
    }

    @Test
    public void test21581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21581");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter3);
        org.mockito.asm.ClassVisitor classVisitor5 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter(classVisitor5);
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter(classVisitor5);
        org.mockito.cglib.core.ClassInfo classInfo8 = classEmitter7.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter9);
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter(classVisitor11);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter(classVisitor11);
        org.mockito.cglib.core.ClassInfo classInfo14 = classEmitter13.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter15);
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classEmitter15);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        classEmitter3.setTarget((org.mockito.asm.ClassVisitor) classEmitter18);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter18);
        org.mockito.asm.Attribute attribute21 = null;
        // The following exception was thrown during execution in test generation
        try {
            classEmitter18.visitAttribute(attribute21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo8);
        org.junit.Assert.assertNull(classInfo14);
    }

    @Test
    public void test21582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21582");
        org.mockito.cglib.proxy.Enhancer enhancer2 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = null;
        enhancer2.setNamingPolicy(namingPolicy3);
        java.lang.ClassLoader classLoader5 = null;
        enhancer2.setClassLoader(classLoader5);
        java.lang.Class<?> wildcardClass7 = enhancer2.getClass();
        java.lang.String str8 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass7);
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass7);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass7);
        int int11 = type10.getSize();
        org.mockito.cglib.core.Local local12 = new org.mockito.cglib.core.Local(108, type10);
        org.mockito.cglib.core.Local local13 = new org.mockito.cglib.core.Local(108, type10);
        org.mockito.asm.Type type14 = local13.getType();
        java.lang.String str15 = type14.getClassName();
        org.mockito.asm.Type type16 = type14.getElementType();
        org.mockito.asm.ClassVisitor classVisitor17 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter(classVisitor17);
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter(classVisitor17);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter19);
        boolean boolean21 = type14.equals((java.lang.Object) classEmitter20);
        org.mockito.cglib.core.ClassInfo classInfo22 = classEmitter20.getClassInfo();
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = null;
        enhancer27.setNamingPolicy(namingPolicy28);
        java.lang.ClassLoader classLoader30 = null;
        enhancer27.setClassLoader(classLoader30);
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy33 = null;
        enhancer32.setNamingPolicy(namingPolicy33);
        java.lang.ClassLoader classLoader35 = null;
        enhancer32.setClassLoader(classLoader35);
        java.lang.Class<?> wildcardClass37 = enhancer32.getClass();
        java.lang.String str38 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass37);
        org.mockito.cglib.proxy.Enhancer enhancer39 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy40 = null;
        enhancer39.setNamingPolicy(namingPolicy40);
        java.lang.ClassLoader classLoader42 = null;
        enhancer39.setClassLoader(classLoader42);
        java.lang.Class<?> wildcardClass44 = enhancer39.getClass();
        java.lang.Class[] classArray45 = new java.lang.Class[] { wildcardClass37, wildcardClass44 };
        enhancer27.setInterfaces(classArray45);
        boolean boolean47 = enhancer27.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy49 = null;
        enhancer48.setNamingPolicy(namingPolicy49);
        java.lang.ClassLoader classLoader51 = null;
        enhancer48.setClassLoader(classLoader51);
        java.lang.Class<?> wildcardClass53 = enhancer48.getClass();
        enhancer27.setSuperclass((java.lang.Class) wildcardClass53);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass53);
        java.lang.String str56 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass53);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass53);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass53);
        boolean boolean59 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass53);
        java.lang.String str60 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass53);
        java.lang.String str61 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass53);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass53);
        org.mockito.asm.ClassVisitor classVisitor63 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter64 = new org.mockito.cglib.core.ClassEmitter(classVisitor63);
        org.mockito.cglib.core.ClassEmitter classEmitter65 = new org.mockito.cglib.core.ClassEmitter(classVisitor63);
        org.mockito.cglib.core.ClassInfo classInfo66 = classEmitter65.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter67 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter65);
        java.lang.Class<?> wildcardClass68 = classEmitter67.getClass();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass68);
        int int70 = type69.getSize();
        int int72 = type69.getOpcode(154);
        org.mockito.asm.Type[] typeArray74 = org.mockito.asm.Type.getArgumentTypes("(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;");
        java.lang.String str75 = org.mockito.asm.Type.getMethodDescriptor(type69, typeArray74);
        java.lang.String str76 = org.mockito.asm.Type.getMethodDescriptor(type62, typeArray74);
        java.lang.String str77 = type62.getInternalName();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.FieldVisitor fieldVisitor78 = classEmitter20.visitField(104, "L1540486198()Lg/mockito/cglib/proxy/Enhancer;", "L2065190129", "L2060532003", (java.lang.Object) str77);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str8, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.mockito.cglib.proxy.Enhancer" + "'", str15, "org.mockito.cglib.proxy.Enhancer");
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(classInfo22);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str38, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(classArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str56, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str60, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str61, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNull(classInfo66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 158 + "'", int72 == 158);
        org.junit.Assert.assertNotNull(typeArray74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(CBBBD)Lorg/mockito/cglib/core/ClassEmitter;" + "'", str75, "(CBBBD)Lorg/mockito/cglib/core/ClassEmitter;");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;" + "'", str76, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str77, "org/mockito/cglib/proxy/Enhancer");
    }

    @Test
    public void test21583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21583");
        org.mockito.cglib.proxy.Enhancer enhancer1 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy2 = null;
        enhancer1.setNamingPolicy(namingPolicy2);
        java.lang.ClassLoader classLoader4 = null;
        enhancer1.setClassLoader(classLoader4);
        java.lang.Class<?> wildcardClass6 = enhancer1.getClass();
        java.lang.String str7 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass6);
        boolean boolean8 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass6);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        int int10 = type9.getSize();
        org.mockito.cglib.core.Signature signature13 = new org.mockito.cglib.core.Signature("", "hi!");
        java.lang.String str14 = signature13.getDescriptor();
        java.lang.String str15 = signature13.getDescriptor();
        boolean boolean16 = type9.equals((java.lang.Object) signature13);
        int int18 = type9.getOpcode(8);
        int int19 = type9.getSize();
        java.lang.String str20 = type9.getInternalName();
        int int21 = type9.getDimensions();
        int int22 = type9.getSize();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.getObjectType("LL1591299506;");
        org.mockito.asm.Type type27 = org.mockito.asm.Type.getObjectType("Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B");
        int int28 = type27.getDimensions();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.getObjectType("Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B");
        int int31 = type30.getSize();
        org.mockito.asm.Type[] typeArray33 = org.mockito.asm.Type.getArgumentTypes("()B");
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray33);
        org.mockito.cglib.core.Signature signature35 = new org.mockito.cglib.core.Signature("L1622326596V", type27, typeArray33);
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray33);
        org.mockito.cglib.core.Signature signature37 = new org.mockito.cglib.core.Signature("L263765043", type9, typeArray33);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str7, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 12 + "'", int18 == 12);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str20, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "()LLorg/mockito/cglib/proxy/Enhancer;(CBBBD)B;" + "'", str34, "()LLorg/mockito/cglib/proxy/Enhancer;(CBBBD)B;");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "()LLL1591299506;;" + "'", str36, "()LLL1591299506;;");
    }

    @Test
    public void test21584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21584");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter1);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor4 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter(classVisitor4);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter(classVisitor4);
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter6);
        org.mockito.cglib.core.ClassInfo classInfo8 = classEmitter6.getClassInfo();
        classEmitter2.setTarget((org.mockito.asm.ClassVisitor) classEmitter6);
        org.mockito.asm.ClassVisitor classVisitor10 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter(classVisitor10);
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter(classVisitor10);
        org.mockito.cglib.core.ClassInfo classInfo13 = classEmitter12.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter15);
        org.mockito.cglib.core.ClassInfo classInfo17 = classEmitter15.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor18 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter(classVisitor18);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter(classVisitor18);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        classEmitter15.setTarget((org.mockito.asm.ClassVisitor) classEmitter22);
        classEmitter2.setTarget((org.mockito.asm.ClassVisitor) classEmitter22);
        org.mockito.asm.ClassVisitor classVisitor25 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter(classVisitor25);
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter(classVisitor25);
        org.mockito.cglib.core.ClassInfo classInfo28 = classEmitter27.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter27);
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter30);
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter30);
        org.mockito.cglib.core.ClassInfo classInfo33 = classEmitter30.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter30);
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter30);
        classEmitter22.setTarget((org.mockito.asm.ClassVisitor) classEmitter35);
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter22);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter22);
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassInfo classInfo40 = classEmitter0.getClassInfo();
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo8);
        org.junit.Assert.assertNull(classInfo13);
        org.junit.Assert.assertNull(classInfo17);
        org.junit.Assert.assertNull(classInfo28);
        org.junit.Assert.assertNull(classInfo33);
        org.junit.Assert.assertNull(classInfo40);
    }

    @Test
    public void test21585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21585");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        classEmitter2.setTarget((org.mockito.asm.ClassVisitor) classEmitter6);
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassInfo classInfo11 = classEmitter10.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.asm.ClassVisitor classVisitor14 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.cglib.core.ClassInfo classInfo17 = classEmitter16.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo18 = classEmitter16.getClassInfo();
        classEmitter13.setTarget((org.mockito.asm.ClassVisitor) classEmitter16);
        classEmitter6.setTarget((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassInfo classInfo22 = classEmitter21.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.core.CodeEmitter codeEmitter24 = classEmitter23.begin_static();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: classInfo is null! org.mockito.cglib.core.ClassEmitter@d745772");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo11);
        org.junit.Assert.assertNull(classInfo17);
        org.junit.Assert.assertNull(classInfo18);
        org.junit.Assert.assertNull(classInfo22);
    }

    @Test
    public void test21586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21586");
        org.mockito.asm.MethodVisitor methodVisitor12 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter13 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor12);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter14 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter13);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter15 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter13);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter16 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter13);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter17 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter13);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter18 = new org.mockito.cglib.core.LocalVariablesSorter(102, "()Lorg/mockito/cglib/proxy/Enhancer;", (org.mockito.asm.MethodVisitor) localVariablesSorter13);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter19 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter18);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter20 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter19);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter21 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter19);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter22 = new org.mockito.cglib.core.LocalVariablesSorter(161, "()L()Lorg/mockito/cglib/core/ClassEmitter;;", (org.mockito.asm.MethodVisitor) localVariablesSorter19);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter23 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter19);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter24 = new org.mockito.cglib.core.LocalVariablesSorter(0, "(CBBBD)J", (org.mockito.asm.MethodVisitor) localVariablesSorter19);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter25 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter24);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter26 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) -1, "(CBBBD)LL965545342;", (org.mockito.asm.MethodVisitor) localVariablesSorter24);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter26.visitTypeInsn(130, "L1215949361");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21587");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        java.lang.Class<?> wildcardClass5 = enhancer0.getClass();
        java.lang.String str6 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass5);
        boolean boolean7 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy12 = null;
        enhancer11.setNamingPolicy(namingPolicy12);
        java.lang.ClassLoader classLoader14 = null;
        enhancer11.setClassLoader(classLoader14);
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy17 = null;
        enhancer16.setNamingPolicy(namingPolicy17);
        java.lang.ClassLoader classLoader19 = null;
        enhancer16.setClassLoader(classLoader19);
        java.lang.Class<?> wildcardClass21 = enhancer16.getClass();
        java.lang.String str22 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass21);
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy24 = null;
        enhancer23.setNamingPolicy(namingPolicy24);
        java.lang.ClassLoader classLoader26 = null;
        enhancer23.setClassLoader(classLoader26);
        java.lang.Class<?> wildcardClass28 = enhancer23.getClass();
        java.lang.Class[] classArray29 = new java.lang.Class[] { wildcardClass21, wildcardClass28 };
        enhancer11.setInterfaces(classArray29);
        enhancer11.setUseCache(false);
        enhancer11.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = null;
        enhancer35.setNamingPolicy(namingPolicy36);
        java.lang.ClassLoader classLoader38 = null;
        enhancer35.setClassLoader(classLoader38);
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy41 = null;
        enhancer40.setNamingPolicy(namingPolicy41);
        java.lang.ClassLoader classLoader43 = null;
        enhancer40.setClassLoader(classLoader43);
        java.lang.Class<?> wildcardClass45 = enhancer40.getClass();
        java.lang.String str46 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass45);
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy48 = null;
        enhancer47.setNamingPolicy(namingPolicy48);
        java.lang.ClassLoader classLoader50 = null;
        enhancer47.setClassLoader(classLoader50);
        java.lang.Class<?> wildcardClass52 = enhancer47.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[] { wildcardClass45, wildcardClass52 };
        enhancer35.setInterfaces(classArray53);
        enhancer11.setInterfaces(classArray53);
        boolean boolean56 = type10.equals((java.lang.Object) classArray53);
        java.lang.String str57 = type10.getInternalName();
        org.mockito.cglib.proxy.Enhancer enhancer58 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy59 = null;
        enhancer58.setNamingPolicy(namingPolicy59);
        java.lang.ClassLoader classLoader61 = null;
        enhancer58.setClassLoader(classLoader61);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter63 = null;
        enhancer58.setCallbackFilter(callbackFilter63);
        org.mockito.cglib.proxy.Callback callback65 = null;
        enhancer58.setCallback(callback65);
        enhancer58.setInterceptDuringConstruction(true);
        boolean boolean69 = type10.equals((java.lang.Object) enhancer58);
        enhancer58.setUseCache(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy72 = enhancer58.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer73 = new org.mockito.cglib.proxy.Enhancer();
        enhancer73.setUseCache(false);
        enhancer73.setSerialVersionUID((java.lang.Long) 10L);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy78 = enhancer73.getStrategy();
        enhancer58.setStrategy(generatorStrategy78);
        enhancer58.setSerialVersionUID((java.lang.Long) 0L);
        org.mockito.cglib.proxy.Enhancer enhancer82 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy83 = null;
        enhancer82.setNamingPolicy(namingPolicy83);
        java.lang.ClassLoader classLoader85 = null;
        enhancer82.setClassLoader(classLoader85);
        boolean boolean87 = enhancer82.getAttemptLoad();
        boolean boolean88 = enhancer82.getUseCache();
        org.mockito.cglib.proxy.Callback callback89 = null;
        enhancer82.setCallback(callback89);
        boolean boolean91 = enhancer82.getUseCache();
        boolean boolean92 = enhancer82.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy93 = enhancer82.getStrategy();
        enhancer58.setStrategy(generatorStrategy93);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str6, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str22, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(classArray29);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str46, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str57, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(generatorStrategy72);
        org.junit.Assert.assertNotNull(generatorStrategy78);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(generatorStrategy93);
    }

    @Test
    public void test21588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21588");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter10.visitIntInsn(129, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21589");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.asm.ClassVisitor classVisitor5 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter(classVisitor5);
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter(classVisitor5);
        org.mockito.cglib.core.ClassInfo classInfo8 = classEmitter7.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter9);
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter10.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor13 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter(classVisitor13);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter(classVisitor13);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter15);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        classEmitter2.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.asm.ClassVisitor classVisitor21 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassInfo classInfo24 = classEmitter23.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter25);
        org.mockito.cglib.core.ClassInfo classInfo27 = classEmitter26.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter26);
        classEmitter20.setTarget((org.mockito.asm.ClassVisitor) classEmitter28);
        org.mockito.cglib.core.ClassInfo classInfo30 = classEmitter28.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter28);
        java.lang.String[] strArray40 = new java.lang.String[] { "L1962117470", "()LLg/mockito/cglib/proxy/Enhancer;;", "L1451002418", "L62303395" };
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.MethodVisitor methodVisitor41 = classEmitter31.visitMethod(149, "L729854282", "L1882854811", "L1559302689()LD;", strArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: classInfo is null! org.mockito.cglib.core.ClassEmitter@6bce04ff");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo8);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNull(classInfo24);
        org.junit.Assert.assertNull(classInfo27);
        org.junit.Assert.assertNull(classInfo30);
        org.junit.Assert.assertNotNull(strArray40);
    }

    @Test
    public void test21590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21590");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getObjectType("L2039098490");
        org.mockito.asm.Type[] typeArray4 = org.mockito.asm.Type.getArgumentTypes("(CBBBD)Lbyte;");
        org.mockito.cglib.core.Signature signature5 = new org.mockito.cglib.core.Signature("hi!hi!", type2, typeArray4);
        java.lang.String str6 = type2.toString();
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(typeArray4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "LL2039098490;" + "'", str6, "LL2039098490;");
    }

    @Test
    public void test21591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21591");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter10);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter11.visitMaxs(125, 102);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21592");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        java.lang.Class<?> wildcardClass5 = enhancer0.getClass();
        java.lang.String str6 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass5);
        boolean boolean7 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        int int9 = type8.getSize();
        org.mockito.cglib.core.Signature signature12 = new org.mockito.cglib.core.Signature("", "hi!");
        java.lang.String str13 = signature12.getDescriptor();
        java.lang.String str14 = signature12.getDescriptor();
        boolean boolean15 = type8.equals((java.lang.Object) signature12);
        java.lang.String str16 = signature12.getDescriptor();
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy18 = null;
        enhancer17.setNamingPolicy(namingPolicy18);
        java.lang.ClassLoader classLoader20 = null;
        enhancer17.setClassLoader(classLoader20);
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = null;
        enhancer22.setNamingPolicy(namingPolicy23);
        java.lang.ClassLoader classLoader25 = null;
        enhancer22.setClassLoader(classLoader25);
        java.lang.Class<?> wildcardClass27 = enhancer22.getClass();
        java.lang.String str28 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass27);
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy30 = null;
        enhancer29.setNamingPolicy(namingPolicy30);
        java.lang.ClassLoader classLoader32 = null;
        enhancer29.setClassLoader(classLoader32);
        java.lang.Class<?> wildcardClass34 = enhancer29.getClass();
        java.lang.Class[] classArray35 = new java.lang.Class[] { wildcardClass27, wildcardClass34 };
        enhancer17.setInterfaces(classArray35);
        boolean boolean37 = enhancer17.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy39 = null;
        enhancer38.setNamingPolicy(namingPolicy39);
        java.lang.ClassLoader classLoader41 = null;
        enhancer38.setClassLoader(classLoader41);
        java.lang.Class<?> wildcardClass43 = enhancer38.getClass();
        enhancer17.setSuperclass((java.lang.Class) wildcardClass43);
        java.lang.ClassLoader classLoader45 = enhancer17.getClassLoader();
        java.lang.Class<?> wildcardClass46 = enhancer17.getClass();
        boolean boolean47 = signature12.equals((java.lang.Object) wildcardClass46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass46);
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass46);
        boolean boolean50 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass46);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass46);
        java.lang.String str52 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str6, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str28, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(classLoader45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str52, "org/mockito/cglib/proxy/Enhancer");
    }

    @Test
    public void test21593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21593");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = null;
        enhancer5.setNamingPolicy(namingPolicy6);
        java.lang.ClassLoader classLoader8 = null;
        enhancer5.setClassLoader(classLoader8);
        java.lang.Class<?> wildcardClass10 = enhancer5.getClass();
        java.lang.String str11 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass10);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = null;
        enhancer12.setNamingPolicy(namingPolicy13);
        java.lang.ClassLoader classLoader15 = null;
        enhancer12.setClassLoader(classLoader15);
        java.lang.Class<?> wildcardClass17 = enhancer12.getClass();
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass10, wildcardClass17 };
        enhancer0.setInterfaces(classArray18);
        enhancer0.setUseCache(false);
        boolean boolean22 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.Callback callback23 = null;
        enhancer0.setCallback(callback23);
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = null;
        enhancer26.setNamingPolicy(namingPolicy27);
        java.lang.ClassLoader classLoader29 = null;
        enhancer26.setClassLoader(classLoader29);
        enhancer26.setUseFactory(true);
        enhancer26.setInterceptDuringConstruction(true);
        enhancer26.setAttemptLoad(true);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy38 = null;
        enhancer37.setNamingPolicy(namingPolicy38);
        java.lang.ClassLoader classLoader40 = null;
        enhancer37.setClassLoader(classLoader40);
        java.lang.Class<?> wildcardClass42 = enhancer37.getClass();
        java.lang.String str43 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass42);
        boolean boolean44 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass42);
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass42);
        boolean boolean48 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        java.lang.Class[] classArray50 = new java.lang.Class[] { wildcardClass42 };
        enhancer26.setInterfaces(classArray50);
        enhancer26.setUseCache(false);
        enhancer26.setUseFactory(false);
        org.mockito.cglib.proxy.Enhancer enhancer56 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy57 = null;
        enhancer56.setNamingPolicy(namingPolicy57);
        java.lang.ClassLoader classLoader59 = null;
        enhancer56.setClassLoader(classLoader59);
        org.mockito.cglib.proxy.Enhancer enhancer61 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy62 = null;
        enhancer61.setNamingPolicy(namingPolicy62);
        java.lang.ClassLoader classLoader64 = null;
        enhancer61.setClassLoader(classLoader64);
        java.lang.Class<?> wildcardClass66 = enhancer61.getClass();
        java.lang.String str67 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass66);
        org.mockito.cglib.proxy.Enhancer enhancer68 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy69 = null;
        enhancer68.setNamingPolicy(namingPolicy69);
        java.lang.ClassLoader classLoader71 = null;
        enhancer68.setClassLoader(classLoader71);
        java.lang.Class<?> wildcardClass73 = enhancer68.getClass();
        java.lang.Class[] classArray74 = new java.lang.Class[] { wildcardClass66, wildcardClass73 };
        enhancer56.setInterfaces(classArray74);
        boolean boolean76 = enhancer56.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer77 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy78 = null;
        enhancer77.setNamingPolicy(namingPolicy78);
        java.lang.ClassLoader classLoader80 = null;
        enhancer77.setClassLoader(classLoader80);
        java.lang.Class<?> wildcardClass82 = enhancer77.getClass();
        enhancer56.setSuperclass((java.lang.Class) wildcardClass82);
        java.lang.ClassLoader classLoader84 = enhancer56.getClassLoader();
        java.lang.Class<?> wildcardClass85 = enhancer56.getClass();
        enhancer26.setSuperclass((java.lang.Class) wildcardClass85);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.setCallbackType((java.lang.Class) wildcardClass85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown callback type class org.mockito.cglib.proxy.Enhancer");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str11, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(namingPolicy25);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str43, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(classArray50);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str67, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(classArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(classLoader84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test21594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21594");
        org.mockito.cglib.proxy.Enhancer enhancer2 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = null;
        enhancer2.setNamingPolicy(namingPolicy3);
        java.lang.ClassLoader classLoader5 = null;
        enhancer2.setClassLoader(classLoader5);
        java.lang.Class<?> wildcardClass7 = enhancer2.getClass();
        java.lang.String str8 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass7);
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass7);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass7);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type type13 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.cglib.core.Local local14 = new org.mockito.cglib.core.Local(124, type13);
        boolean boolean16 = type13.equals((java.lang.Object) 0);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.BYTE_TYPE;
        int int19 = type18.getSize();
        java.lang.String str20 = type18.getClassName();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type22 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type23 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type24 = org.mockito.asm.Type.BYTE_TYPE;
        int int25 = type24.getSize();
        java.lang.String str26 = type24.getClassName();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str28 = type27.getClassName();
        org.mockito.asm.Type[] typeArray29 = new org.mockito.asm.Type[] { type21, type22, type23, type24, type27 };
        org.mockito.cglib.core.Signature signature30 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type18, typeArray29);
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray29);
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type11, typeArray29);
        org.mockito.cglib.core.Signature signature33 = new org.mockito.cglib.core.Signature("L1219436756", type10, typeArray29);
        java.lang.String str34 = signature33.getName();
        java.lang.String str35 = signature33.getName();
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy37 = null;
        enhancer36.setNamingPolicy(namingPolicy37);
        java.lang.ClassLoader classLoader39 = null;
        enhancer36.setClassLoader(classLoader39);
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy42 = null;
        enhancer41.setNamingPolicy(namingPolicy42);
        java.lang.ClassLoader classLoader44 = null;
        enhancer41.setClassLoader(classLoader44);
        java.lang.Class<?> wildcardClass46 = enhancer41.getClass();
        java.lang.String str47 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass46);
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy49 = null;
        enhancer48.setNamingPolicy(namingPolicy49);
        java.lang.ClassLoader classLoader51 = null;
        enhancer48.setClassLoader(classLoader51);
        java.lang.Class<?> wildcardClass53 = enhancer48.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[] { wildcardClass46, wildcardClass53 };
        enhancer36.setInterfaces(classArray54);
        boolean boolean56 = enhancer36.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy58 = null;
        enhancer57.setNamingPolicy(namingPolicy58);
        java.lang.ClassLoader classLoader60 = null;
        enhancer57.setClassLoader(classLoader60);
        java.lang.Class<?> wildcardClass62 = enhancer57.getClass();
        enhancer36.setSuperclass((java.lang.Class) wildcardClass62);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass62);
        boolean boolean65 = signature33.equals((java.lang.Object) type64);
        int int66 = type64.getSort();
        org.mockito.cglib.core.Local local67 = new org.mockito.cglib.core.Local((int) '4', type64);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str8, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "byte" + "'", str20, "byte");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "byte" + "'", str26, "byte");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "double" + "'", str28, "double");
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(CBBBD)B" + "'", str31, "(CBBBD)B");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(CBBBD)I" + "'", str32, "(CBBBD)I");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "L1219436756" + "'", str34, "L1219436756");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "L1219436756" + "'", str35, "L1219436756");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str47, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 10 + "'", int66 == 10);
    }

    @Test
    public void test21595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21595");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        boolean boolean5 = enhancer0.getAttemptLoad();
        enhancer0.setUseCache(true);
        java.lang.ClassLoader classLoader8 = enhancer0.getClassLoader();
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.asm.Type type12 = org.mockito.asm.Type.getObjectType("byte");
        int int13 = type12.getSize();
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy15 = null;
        enhancer14.setNamingPolicy(namingPolicy15);
        java.lang.ClassLoader classLoader17 = null;
        enhancer14.setClassLoader(classLoader17);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter19 = null;
        enhancer14.setCallbackFilter(callbackFilter19);
        org.mockito.cglib.proxy.Callback callback21 = null;
        enhancer14.setCallback(callback21);
        enhancer14.setUseCache(false);
        boolean boolean25 = type12.equals((java.lang.Object) enhancer14);
        org.mockito.cglib.proxy.Callback callback26 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray27 = new org.mockito.cglib.proxy.Callback[] { callback26 };
        enhancer14.setCallbacks(callbackArray27);
        enhancer0.setCallbacks(callbackArray27);
        enhancer0.setAttemptLoad(false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class32 = enhancer0.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: createClass does not accept callbacks");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(callbackArray27);
    }

    @Test
    public void test21596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21596");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        java.lang.ClassLoader classLoader9 = null;
        enhancer0.setClassLoader(classLoader9);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = null;
        enhancer0.setStrategy(generatorStrategy11);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = null;
        enhancer13.setNamingPolicy(namingPolicy14);
        java.lang.ClassLoader classLoader16 = null;
        enhancer13.setClassLoader(classLoader16);
        boolean boolean18 = enhancer13.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer13.getStrategy();
        enhancer0.setStrategy(generatorStrategy19);
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = null;
        enhancer21.setNamingPolicy(namingPolicy22);
        java.lang.ClassLoader classLoader24 = null;
        enhancer21.setClassLoader(classLoader24);
        boolean boolean26 = enhancer21.getAttemptLoad();
        enhancer21.setUseCache(true);
        java.lang.ClassLoader classLoader29 = enhancer21.getClassLoader();
        boolean boolean30 = enhancer21.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy32 = null;
        enhancer31.setNamingPolicy(namingPolicy32);
        java.lang.ClassLoader classLoader34 = null;
        enhancer31.setClassLoader(classLoader34);
        boolean boolean36 = enhancer31.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy37 = enhancer31.getNamingPolicy();
        org.mockito.cglib.proxy.Callback callback38 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray39 = new org.mockito.cglib.proxy.Callback[] { callback38 };
        enhancer31.setCallbacks(callbackArray39);
        enhancer21.setCallbacks(callbackArray39);
        enhancer0.setCallbacks(callbackArray39);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setUseCache(true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj47 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(namingPolicy37);
        org.junit.Assert.assertNotNull(callbackArray39);
    }

    @Test
    public void test21597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21597");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        boolean boolean5 = enhancer0.getAttemptLoad();
        java.lang.Class class6 = null;
        enhancer0.setSuperclass(class6);
        org.mockito.cglib.proxy.Callback callback8 = null;
        enhancer0.setCallback(callback8);
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy11 = null;
        enhancer10.setNamingPolicy(namingPolicy11);
        java.lang.ClassLoader classLoader13 = null;
        enhancer10.setClassLoader(classLoader13);
        boolean boolean15 = enhancer10.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer10.getNamingPolicy();
        boolean boolean17 = enhancer10.getAttemptLoad();
        enhancer10.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = null;
        enhancer20.setNamingPolicy(namingPolicy21);
        java.lang.ClassLoader classLoader23 = null;
        enhancer20.setClassLoader(classLoader23);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter25 = null;
        enhancer20.setCallbackFilter(callbackFilter25);
        org.mockito.cglib.proxy.Callback callback27 = null;
        enhancer20.setCallback(callback27);
        java.lang.ClassLoader classLoader29 = null;
        enhancer20.setClassLoader(classLoader29);
        enhancer20.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy34 = null;
        enhancer33.setNamingPolicy(namingPolicy34);
        java.lang.ClassLoader classLoader36 = null;
        enhancer33.setClassLoader(classLoader36);
        boolean boolean38 = enhancer33.getAttemptLoad();
        enhancer33.setUseCache(true);
        java.lang.ClassLoader classLoader41 = enhancer33.getClassLoader();
        enhancer20.setClassLoader(classLoader41);
        enhancer10.setClassLoader(classLoader41);
        enhancer0.setClassLoader(classLoader41);
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy46 = null;
        enhancer45.setNamingPolicy(namingPolicy46);
        java.lang.ClassLoader classLoader48 = null;
        enhancer45.setClassLoader(classLoader48);
        boolean boolean50 = enhancer45.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy51 = enhancer45.getNamingPolicy();
        org.mockito.cglib.proxy.Callback callback52 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray53 = new org.mockito.cglib.proxy.Callback[] { callback52 };
        enhancer45.setCallbacks(callbackArray53);
        enhancer0.setCallbacks(callbackArray53);
        org.mockito.cglib.proxy.Callback callback56 = null;
        enhancer0.setCallback(callback56);
        enhancer0.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer60 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback61 = null;
        enhancer60.setCallback(callback61);
        org.mockito.cglib.proxy.Callback callback63 = null;
        enhancer60.setCallback(callback63);
        boolean boolean65 = enhancer60.getUseCache();
        java.lang.ClassLoader classLoader66 = enhancer60.getClassLoader();
        enhancer0.setClassLoader(classLoader66);
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.Callback callback70 = null;
        enhancer0.setCallback(callback70);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(classLoader41);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(namingPolicy51);
        org.junit.Assert.assertNotNull(callbackArray53);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(classLoader66);
    }

    @Test
    public void test21598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21598");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        boolean boolean3 = enhancer0.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy4 = enhancer0.getNamingPolicy();
        boolean boolean5 = enhancer0.getAttemptLoad();
        enhancer0.setUseCache(false);
        enhancer0.setUseCache(true);
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = null;
        enhancer12.setNamingPolicy(namingPolicy13);
        java.lang.ClassLoader classLoader15 = null;
        enhancer12.setClassLoader(classLoader15);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter17 = null;
        enhancer12.setCallbackFilter(callbackFilter17);
        enhancer12.setUseCache(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = enhancer12.getNamingPolicy();
        enhancer12.setAttemptLoad(false);
        org.mockito.asm.Label label24 = new org.mockito.asm.Label();
        java.lang.Object obj25 = label24.info;
        java.lang.String str26 = label24.toString();
        java.lang.Class<?> wildcardClass27 = label24.getClass();
        enhancer12.setSuperclass((java.lang.Class) wildcardClass27);
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy30 = null;
        enhancer29.setNamingPolicy(namingPolicy30);
        java.lang.ClassLoader classLoader32 = null;
        enhancer29.setClassLoader(classLoader32);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter34 = null;
        enhancer29.setCallbackFilter(callbackFilter34);
        enhancer29.setUseCache(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy38 = enhancer29.getNamingPolicy();
        boolean boolean39 = enhancer29.getAttemptLoad();
        enhancer29.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy43 = null;
        enhancer42.setNamingPolicy(namingPolicy43);
        java.lang.ClassLoader classLoader45 = null;
        enhancer42.setClassLoader(classLoader45);
        boolean boolean47 = enhancer42.getAttemptLoad();
        java.lang.Class class48 = null;
        enhancer42.setSuperclass(class48);
        java.lang.ClassLoader classLoader50 = enhancer42.getClassLoader();
        enhancer42.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.core.NamingPolicy namingPolicy53 = enhancer42.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy54 = enhancer42.getNamingPolicy();
        enhancer29.setNamingPolicy(namingPolicy54);
        enhancer29.setAttemptLoad(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy58 = enhancer29.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer59 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy60 = null;
        enhancer59.setNamingPolicy(namingPolicy60);
        java.lang.ClassLoader classLoader62 = null;
        enhancer59.setClassLoader(classLoader62);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter64 = null;
        enhancer59.setCallbackFilter(callbackFilter64);
        org.mockito.cglib.proxy.Callback callback66 = null;
        enhancer59.setCallback(callback66);
        java.lang.ClassLoader classLoader68 = null;
        enhancer59.setClassLoader(classLoader68);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy70 = null;
        enhancer59.setStrategy(generatorStrategy70);
        org.mockito.cglib.core.NamingPolicy namingPolicy72 = enhancer59.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy73 = enhancer59.getNamingPolicy();
        org.mockito.cglib.proxy.Callback callback74 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray75 = new org.mockito.cglib.proxy.Callback[] { callback74 };
        enhancer59.setCallbacks(callbackArray75);
        enhancer29.setCallbacks(callbackArray75);
        enhancer12.setCallbacks(callbackArray75);
        enhancer0.setCallbacks(callbackArray75);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(namingPolicy4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(namingPolicy21);
        org.junit.Assert.assertNull(obj25);
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L1111978331" + "'", str26, "L1111978331");
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(namingPolicy38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(classLoader50);
        org.junit.Assert.assertNotNull(namingPolicy53);
        org.junit.Assert.assertNotNull(namingPolicy54);
        org.junit.Assert.assertNotNull(generatorStrategy58);
        org.junit.Assert.assertNotNull(namingPolicy72);
        org.junit.Assert.assertNotNull(namingPolicy73);
        org.junit.Assert.assertNotNull(callbackArray75);
    }

    @Test
    public void test21599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21599");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        java.lang.Class<?> wildcardClass5 = enhancer0.getClass();
        java.lang.String str6 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass5);
        boolean boolean7 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        int int9 = type8.getSize();
        org.mockito.cglib.core.Signature signature12 = new org.mockito.cglib.core.Signature("", "hi!");
        java.lang.String str13 = signature12.getDescriptor();
        java.lang.String str14 = signature12.getDescriptor();
        boolean boolean15 = type8.equals((java.lang.Object) signature12);
        java.lang.String str16 = signature12.getDescriptor();
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy18 = null;
        enhancer17.setNamingPolicy(namingPolicy18);
        java.lang.ClassLoader classLoader20 = null;
        enhancer17.setClassLoader(classLoader20);
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = null;
        enhancer22.setNamingPolicy(namingPolicy23);
        java.lang.ClassLoader classLoader25 = null;
        enhancer22.setClassLoader(classLoader25);
        java.lang.Class<?> wildcardClass27 = enhancer22.getClass();
        java.lang.String str28 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass27);
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy30 = null;
        enhancer29.setNamingPolicy(namingPolicy30);
        java.lang.ClassLoader classLoader32 = null;
        enhancer29.setClassLoader(classLoader32);
        java.lang.Class<?> wildcardClass34 = enhancer29.getClass();
        java.lang.Class[] classArray35 = new java.lang.Class[] { wildcardClass27, wildcardClass34 };
        enhancer17.setInterfaces(classArray35);
        boolean boolean37 = enhancer17.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy39 = null;
        enhancer38.setNamingPolicy(namingPolicy39);
        java.lang.ClassLoader classLoader41 = null;
        enhancer38.setClassLoader(classLoader41);
        java.lang.Class<?> wildcardClass43 = enhancer38.getClass();
        enhancer17.setSuperclass((java.lang.Class) wildcardClass43);
        java.lang.ClassLoader classLoader45 = enhancer17.getClassLoader();
        java.lang.Class<?> wildcardClass46 = enhancer17.getClass();
        boolean boolean47 = signature12.equals((java.lang.Object) wildcardClass46);
        boolean boolean48 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass46);
        java.lang.String str49 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str6, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str28, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(classLoader45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str49, "org/mockito/cglib/proxy/Enhancer");
    }

    @Test
    public void test21600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21600");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        boolean boolean5 = enhancer0.getAttemptLoad();
        java.lang.Class class6 = null;
        enhancer0.setSuperclass(class6);
        java.lang.ClassLoader classLoader8 = enhancer0.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy9 = enhancer0.getNamingPolicy();
        enhancer0.setUseCache(true);
        org.mockito.cglib.proxy.Callback callback12 = null;
        enhancer0.setCallback(callback12);
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy17 = null;
        enhancer16.setNamingPolicy(namingPolicy17);
        java.lang.ClassLoader classLoader19 = null;
        enhancer16.setClassLoader(classLoader19);
        java.lang.Class<?> wildcardClass21 = enhancer16.getClass();
        java.lang.String str22 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass21);
        boolean boolean23 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass21);
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass21);
        boolean boolean27 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass21);
        java.lang.String str29 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass21);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass21);
        boolean boolean31 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader32 = null;
        enhancer0.setClassLoader(classLoader32);
        org.mockito.cglib.core.NamingPolicy namingPolicy34 = enhancer0.getNamingPolicy();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(namingPolicy9);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str22, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str29, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(namingPolicy34);
    }

    @Test
    public void test21601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21601");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        classEmitter2.setTarget((org.mockito.asm.ClassVisitor) classEmitter6);
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassInfo classInfo11 = classEmitter10.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.asm.ClassVisitor classVisitor14 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.cglib.core.ClassInfo classInfo17 = classEmitter16.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo18 = classEmitter16.getClassInfo();
        classEmitter13.setTarget((org.mockito.asm.ClassVisitor) classEmitter16);
        classEmitter6.setTarget((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        org.mockito.asm.ClassVisitor classVisitor23 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter(classVisitor23);
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter(classVisitor23);
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter25);
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter25);
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter28);
        classEmitter25.setTarget((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.asm.ClassVisitor classVisitor31 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter(classVisitor31);
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter(classVisitor31);
        org.mockito.cglib.core.ClassInfo classInfo34 = classEmitter33.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter33);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter35);
        org.mockito.asm.ClassVisitor classVisitor37 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter(classVisitor37);
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter(classVisitor37);
        org.mockito.cglib.core.ClassInfo classInfo40 = classEmitter39.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo41 = classEmitter39.getClassInfo();
        classEmitter36.setTarget((org.mockito.asm.ClassVisitor) classEmitter39);
        classEmitter29.setTarget((org.mockito.asm.ClassVisitor) classEmitter39);
        org.mockito.asm.ClassVisitor classVisitor44 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter(classVisitor44);
        org.mockito.cglib.core.ClassEmitter classEmitter46 = new org.mockito.cglib.core.ClassEmitter(classVisitor44);
        org.mockito.cglib.core.ClassEmitter classEmitter47 = new org.mockito.cglib.core.ClassEmitter(classVisitor44);
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter47);
        classEmitter29.setTarget((org.mockito.asm.ClassVisitor) classEmitter48);
        org.mockito.cglib.core.ClassInfo classInfo50 = classEmitter48.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter51 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter48);
        org.mockito.asm.ClassVisitor classVisitor52 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter53 = new org.mockito.cglib.core.ClassEmitter(classVisitor52);
        org.mockito.cglib.core.ClassEmitter classEmitter54 = new org.mockito.cglib.core.ClassEmitter(classVisitor52);
        org.mockito.cglib.core.ClassInfo classInfo55 = classEmitter54.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter56 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter54);
        org.mockito.cglib.core.ClassEmitter classEmitter57 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter56);
        org.mockito.cglib.core.ClassEmitter classEmitter58 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter57);
        org.mockito.cglib.core.ClassEmitter classEmitter59 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter57);
        classEmitter48.setTarget((org.mockito.asm.ClassVisitor) classEmitter57);
        org.mockito.cglib.core.ClassEmitter classEmitter61 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter48);
        classEmitter21.setTarget((org.mockito.asm.ClassVisitor) classEmitter61);
        org.mockito.cglib.core.ClassEmitter classEmitter63 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter61);
        org.mockito.asm.Attribute attribute64 = null;
        // The following exception was thrown during execution in test generation
        try {
            classEmitter61.visitAttribute(attribute64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo11);
        org.junit.Assert.assertNull(classInfo17);
        org.junit.Assert.assertNull(classInfo18);
        org.junit.Assert.assertNull(classInfo34);
        org.junit.Assert.assertNull(classInfo40);
        org.junit.Assert.assertNull(classInfo41);
        org.junit.Assert.assertNull(classInfo50);
        org.junit.Assert.assertNull(classInfo55);
    }

    @Test
    public void test21602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21602");
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor1);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter(classVisitor1);
        org.mockito.cglib.core.ClassInfo classInfo4 = classEmitter3.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter3);
        java.lang.Class<?> wildcardClass6 = classEmitter5.getClass();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy10 = null;
        enhancer9.setNamingPolicy(namingPolicy10);
        java.lang.ClassLoader classLoader12 = null;
        enhancer9.setClassLoader(classLoader12);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy15 = null;
        enhancer14.setNamingPolicy(namingPolicy15);
        java.lang.ClassLoader classLoader17 = null;
        enhancer14.setClassLoader(classLoader17);
        java.lang.Class<?> wildcardClass19 = enhancer14.getClass();
        java.lang.String str20 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass19);
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = null;
        enhancer21.setNamingPolicy(namingPolicy22);
        java.lang.ClassLoader classLoader24 = null;
        enhancer21.setClassLoader(classLoader24);
        java.lang.Class<?> wildcardClass26 = enhancer21.getClass();
        java.lang.Class[] classArray27 = new java.lang.Class[] { wildcardClass19, wildcardClass26 };
        enhancer9.setInterfaces(classArray27);
        boolean boolean29 = enhancer9.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = null;
        enhancer30.setNamingPolicy(namingPolicy31);
        java.lang.ClassLoader classLoader33 = null;
        enhancer30.setClassLoader(classLoader33);
        java.lang.Class<?> wildcardClass35 = enhancer30.getClass();
        enhancer9.setSuperclass((java.lang.Class) wildcardClass35);
        java.lang.ClassLoader classLoader37 = enhancer9.getClassLoader();
        java.lang.Class<?> wildcardClass38 = enhancer9.getClass();
        boolean boolean39 = type8.equals((java.lang.Object) wildcardClass38);
        java.lang.String str40 = type8.getDescriptor();
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy45 = null;
        enhancer44.setNamingPolicy(namingPolicy45);
        java.lang.ClassLoader classLoader47 = null;
        enhancer44.setClassLoader(classLoader47);
        java.lang.Class<?> wildcardClass49 = enhancer44.getClass();
        java.lang.String str50 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass49);
        boolean boolean51 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass49);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass49);
        int int53 = type52.getSize();
        org.mockito.cglib.core.Local local54 = new org.mockito.cglib.core.Local(108, type52);
        org.mockito.cglib.core.Local local55 = new org.mockito.cglib.core.Local(108, type52);
        org.mockito.asm.Type type56 = type52.getElementType();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.BYTE_TYPE;
        int int59 = type58.getSize();
        java.lang.String str60 = type58.getClassName();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type62 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type63 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type64 = org.mockito.asm.Type.BYTE_TYPE;
        int int65 = type64.getSize();
        java.lang.String str66 = type64.getClassName();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str68 = type67.getClassName();
        org.mockito.asm.Type[] typeArray69 = new org.mockito.asm.Type[] { type61, type62, type63, type64, type67 };
        org.mockito.cglib.core.Signature signature70 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type58, typeArray69);
        java.lang.String str71 = signature70.getDescriptor();
        java.lang.Object obj72 = null;
        boolean boolean73 = signature70.equals(obj72);
        org.mockito.asm.Type[] typeArray74 = signature70.getArgumentTypes();
        org.mockito.cglib.core.Signature signature75 = new org.mockito.cglib.core.Signature("", type56, typeArray74);
        org.mockito.cglib.core.Signature signature76 = new org.mockito.cglib.core.Signature("L1896510863", type8, typeArray74);
        org.mockito.asm.Type[] typeArray77 = signature76.getArgumentTypes();
        java.lang.String str78 = signature76.getDescriptor();
        java.lang.String str79 = signature76.toString();
        java.lang.String str80 = signature76.getName();
        java.lang.String str81 = signature76.getName();
        org.junit.Assert.assertNull(classInfo4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str20, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(classArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Lorg/mockito/cglib/core/ClassEmitter;" + "'", str40, "Lorg/mockito/cglib/core/ClassEmitter;");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str50, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "byte" + "'", str60, "byte");
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "byte" + "'", str66, "byte");
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "double" + "'", str68, "double");
        org.junit.Assert.assertNotNull(typeArray69);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(CBBBD)B" + "'", str71, "(CBBBD)B");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(typeArray74);
        org.junit.Assert.assertNotNull(typeArray77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "(CBBBD)Lorg/mockito/cglib/core/ClassEmitter;" + "'", str78, "(CBBBD)Lorg/mockito/cglib/core/ClassEmitter;");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "L1896510863(CBBBD)Lorg/mockito/cglib/core/ClassEmitter;" + "'", str79, "L1896510863(CBBBD)Lorg/mockito/cglib/core/ClassEmitter;");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "L1896510863" + "'", str80, "L1896510863");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "L1896510863" + "'", str81, "L1896510863");
    }

    @Test
    public void test21603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21603");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = null;
        enhancer5.setNamingPolicy(namingPolicy6);
        java.lang.ClassLoader classLoader8 = null;
        enhancer5.setClassLoader(classLoader8);
        java.lang.Class<?> wildcardClass10 = enhancer5.getClass();
        java.lang.String str11 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass10);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = null;
        enhancer12.setNamingPolicy(namingPolicy13);
        java.lang.ClassLoader classLoader15 = null;
        enhancer12.setClassLoader(classLoader15);
        java.lang.Class<?> wildcardClass17 = enhancer12.getClass();
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass10, wildcardClass17 };
        enhancer0.setInterfaces(classArray18);
        boolean boolean20 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = null;
        enhancer21.setNamingPolicy(namingPolicy22);
        java.lang.ClassLoader classLoader24 = null;
        enhancer21.setClassLoader(classLoader24);
        java.lang.Class<?> wildcardClass26 = enhancer21.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass26);
        java.lang.ClassLoader classLoader28 = enhancer0.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = enhancer0.getNamingPolicy();
        java.lang.Class<?> wildcardClass30 = enhancer0.getClass();
        java.lang.String str31 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass30);
        boolean boolean32 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass30);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass30);
        int int34 = type33.getDimensions();
        boolean boolean36 = type33.equals((java.lang.Object) "L1165950211");
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str11, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(namingPolicy29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str31, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test21604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21604");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("L1570394950");
        java.lang.String str2 = type1.toString();
        java.lang.String str3 = type1.getInternalName();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "LL1570394950;" + "'", str2, "LL1570394950;");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "L1570394950" + "'", str3, "L1570394950");
    }

    @Test
    public void test21605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21605");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.asm.ClassVisitor classVisitor6 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassInfo classInfo9 = classEmitter8.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter10);
        org.mockito.cglib.core.ClassInfo classInfo13 = classEmitter10.getClassInfo();
        // The following exception was thrown during execution in test generation
        try {
            classEmitter10.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo9);
        org.junit.Assert.assertNull(classInfo13);
    }

    @Test
    public void test21606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21606");
        org.mockito.cglib.proxy.Enhancer enhancer1 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy2 = null;
        enhancer1.setNamingPolicy(namingPolicy2);
        java.lang.ClassLoader classLoader4 = null;
        enhancer1.setClassLoader(classLoader4);
        java.lang.Class<?> wildcardClass6 = enhancer1.getClass();
        java.lang.String str7 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass6);
        boolean boolean8 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass6);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        boolean boolean10 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass6);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass6);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        int int15 = type13.getOpcode(104);
        int int16 = type13.getSort();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray18 = new org.mockito.asm.Type[] {};
        java.lang.String str19 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray18);
        org.mockito.cglib.core.Signature signature20 = new org.mockito.cglib.core.Signature("L916385731", type13, typeArray18);
        org.mockito.asm.Type[] typeArray21 = signature20.getArgumentTypes();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str7, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 108 + "'", int15 == 108);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "()D" + "'", str19, "()D");
        org.junit.Assert.assertNotNull(typeArray21);
    }

    @Test
    public void test21607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21607");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = null;
        enhancer5.setNamingPolicy(namingPolicy6);
        java.lang.ClassLoader classLoader8 = null;
        enhancer5.setClassLoader(classLoader8);
        java.lang.Class<?> wildcardClass10 = enhancer5.getClass();
        java.lang.String str11 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass10);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = null;
        enhancer12.setNamingPolicy(namingPolicy13);
        java.lang.ClassLoader classLoader15 = null;
        enhancer12.setClassLoader(classLoader15);
        java.lang.Class<?> wildcardClass17 = enhancer12.getClass();
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass10, wildcardClass17 };
        enhancer0.setInterfaces(classArray18);
        enhancer0.setUseCache(false);
        enhancer0.setUseCache(false);
        boolean boolean24 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy26 = null;
        enhancer25.setNamingPolicy(namingPolicy26);
        java.lang.ClassLoader classLoader28 = null;
        enhancer25.setClassLoader(classLoader28);
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = null;
        enhancer30.setNamingPolicy(namingPolicy31);
        java.lang.ClassLoader classLoader33 = null;
        enhancer30.setClassLoader(classLoader33);
        java.lang.Class<?> wildcardClass35 = enhancer30.getClass();
        java.lang.String str36 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass35);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy38 = null;
        enhancer37.setNamingPolicy(namingPolicy38);
        java.lang.ClassLoader classLoader40 = null;
        enhancer37.setClassLoader(classLoader40);
        java.lang.Class<?> wildcardClass42 = enhancer37.getClass();
        java.lang.Class[] classArray43 = new java.lang.Class[] { wildcardClass35, wildcardClass42 };
        enhancer25.setInterfaces(classArray43);
        boolean boolean45 = enhancer25.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy47 = null;
        enhancer46.setNamingPolicy(namingPolicy47);
        java.lang.ClassLoader classLoader49 = null;
        enhancer46.setClassLoader(classLoader49);
        java.lang.Class<?> wildcardClass51 = enhancer46.getClass();
        enhancer25.setSuperclass((java.lang.Class) wildcardClass51);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass51);
        java.lang.String str54 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass51);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass51);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass51);
        enhancer0.setUseCache(true);
        enhancer0.setInterceptDuringConstruction(false);
        java.lang.Class<?> wildcardClass61 = enhancer0.getClass();
        java.lang.String str62 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass61);
        java.lang.String str63 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str11, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str36, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(classArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str54, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str62, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str63, "org/mockito/cglib/proxy/Enhancer");
    }

    @Test
    public void test21608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21608");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        boolean boolean5 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader6 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy8 = null;
        enhancer7.setNamingPolicy(namingPolicy8);
        java.lang.ClassLoader classLoader10 = null;
        enhancer7.setClassLoader(classLoader10);
        boolean boolean12 = enhancer7.getAttemptLoad();
        java.lang.Class class13 = null;
        enhancer7.setSuperclass(class13);
        java.lang.ClassLoader classLoader15 = enhancer7.getClassLoader();
        enhancer7.setSerialVersionUID((java.lang.Long) 100L);
        enhancer7.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = null;
        enhancer20.setNamingPolicy(namingPolicy21);
        java.lang.ClassLoader classLoader23 = null;
        enhancer20.setClassLoader(classLoader23);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter25 = null;
        enhancer20.setCallbackFilter(callbackFilter25);
        org.mockito.cglib.proxy.Callback callback27 = null;
        enhancer20.setCallback(callback27);
        java.lang.ClassLoader classLoader29 = null;
        enhancer20.setClassLoader(classLoader29);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy31 = null;
        enhancer20.setStrategy(generatorStrategy31);
        org.mockito.cglib.core.NamingPolicy namingPolicy33 = enhancer20.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy34 = enhancer20.getNamingPolicy();
        enhancer7.setNamingPolicy(namingPolicy34);
        enhancer0.setNamingPolicy(namingPolicy34);
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter41 = null;
        enhancer0.setCallbackFilter(callbackFilter41);
        java.lang.ClassLoader classLoader43 = enhancer0.getClassLoader();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(classLoader15);
        org.junit.Assert.assertNotNull(namingPolicy33);
        org.junit.Assert.assertNotNull(namingPolicy34);
        org.junit.Assert.assertNotNull(classLoader43);
    }

    @Test
    public void test21609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21609");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B");
        int int2 = type1.getDimensions();
        int int3 = type1.getSort();
        java.lang.String str4 = type1.getClassName();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType("Lorg/mockito/cglib/proxy/Enhancer;");
        boolean boolean7 = type1.equals((java.lang.Object) type6);
        int int8 = type1.getSize();
        java.lang.Class<?> wildcardClass9 = type1.getClass();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass9);
        int int11 = type10.getDimensions();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 10 + "'", int3 == 10);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg.mockito.cglib.proxy.Enhancer;(CBBBD)B" + "'", str4, "Lorg.mockito.cglib.proxy.Enhancer;(CBBBD)B");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
    }

    @Test
    public void test21610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21610");
        org.mockito.asm.Label label2 = new org.mockito.asm.Label();
        label2.info = "L97833253";
        org.mockito.cglib.core.Signature signature7 = new org.mockito.cglib.core.Signature("L842693193", "L1804543443");
        org.mockito.asm.MethodVisitor methodVisitor12 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter13 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor12);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter14 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter13);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter15 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter13);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter16 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter13);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter17 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter16);
        boolean boolean18 = signature7.equals((java.lang.Object) localVariablesSorter17);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter19 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter17);
        label2.info = localVariablesSorter17;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter21 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter17);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter22 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter17);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter23 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter17);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter24 = new org.mockito.cglib.core.LocalVariablesSorter(97, "()Lorg/mockito/cglib/core/DefaultGeneratorStrategy;", (org.mockito.asm.MethodVisitor) localVariablesSorter23);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter25 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter24);
        org.mockito.asm.Label label27 = new org.mockito.asm.Label();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type30 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray31 = new org.mockito.asm.Type[] {};
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray31);
        org.mockito.cglib.core.Signature signature33 = new org.mockito.cglib.core.Signature("double", type29, typeArray31);
        label27.info = typeArray31;
        java.lang.String str35 = label27.toString();
        java.lang.Object obj36 = label27.info;
        org.mockito.asm.Label label37 = new org.mockito.asm.Label();
        java.lang.Object obj38 = label37.info;
        org.mockito.cglib.proxy.Enhancer enhancer39 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy40 = null;
        enhancer39.setNamingPolicy(namingPolicy40);
        java.lang.ClassLoader classLoader42 = null;
        enhancer39.setClassLoader(classLoader42);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter44 = null;
        enhancer39.setCallbackFilter(callbackFilter44);
        enhancer39.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy49 = null;
        enhancer48.setNamingPolicy(namingPolicy49);
        java.lang.ClassLoader classLoader51 = null;
        enhancer48.setClassLoader(classLoader51);
        boolean boolean53 = enhancer48.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy54 = enhancer48.getNamingPolicy();
        org.mockito.cglib.proxy.Callback callback55 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray56 = new org.mockito.cglib.proxy.Callback[] { callback55 };
        enhancer48.setCallbacks(callbackArray56);
        enhancer39.setCallbacks(callbackArray56);
        enhancer39.setAttemptLoad(true);
        label37.info = enhancer39;
        label27.info = label37;
        java.lang.Object obj63 = label27.info;
        java.lang.Object obj64 = label27.info;
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter24.visitJumpInsn(128, label27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "()D" + "'", str32, "()D");
// flaky:         org.junit.Assert.assertEquals("'" + str35 + "' != '" + "L521737663" + "'", str35, "L521737663");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(namingPolicy54);
        org.junit.Assert.assertNotNull(callbackArray56);
        org.junit.Assert.assertNotNull(obj63);
// flaky:         org.junit.Assert.assertEquals(obj63.toString(), "L731445395");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "L731445395");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "L731445395");
        org.junit.Assert.assertNotNull(obj64);
// flaky:         org.junit.Assert.assertEquals(obj64.toString(), "L731445395");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "L731445395");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "L731445395");
    }

    @Test
    public void test21611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21611");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter3 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.BYTE_TYPE;
        int int13 = type12.getSize();
        java.lang.String str14 = type12.getClassName();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type16 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type17 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type18 = org.mockito.asm.Type.BYTE_TYPE;
        int int19 = type18.getSize();
        java.lang.String str20 = type18.getClassName();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str22 = type21.getClassName();
        org.mockito.asm.Type[] typeArray23 = new org.mockito.asm.Type[] { type15, type16, type17, type18, type21 };
        org.mockito.cglib.core.Signature signature24 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type12, typeArray23);
        java.lang.String str25 = signature24.getDescriptor();
        java.lang.Object obj26 = null;
        boolean boolean27 = signature24.equals(obj26);
        org.mockito.asm.Type[] typeArray28 = signature24.getArgumentTypes();
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = null;
        enhancer30.setNamingPolicy(namingPolicy31);
        java.lang.ClassLoader classLoader33 = null;
        enhancer30.setClassLoader(classLoader33);
        boolean boolean35 = enhancer30.getAttemptLoad();
        java.lang.Class class36 = null;
        enhancer30.setSuperclass(class36);
        java.lang.ClassLoader classLoader38 = enhancer30.getClassLoader();
        enhancer30.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy41 = enhancer30.getStrategy();
        enhancer30.setAttemptLoad(false);
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy45 = null;
        enhancer44.setNamingPolicy(namingPolicy45);
        enhancer44.setAttemptLoad(false);
        enhancer44.setUseCache(true);
        enhancer44.setAttemptLoad(true);
        org.mockito.cglib.proxy.Enhancer enhancer53 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy54 = null;
        enhancer53.setNamingPolicy(namingPolicy54);
        java.lang.ClassLoader classLoader56 = null;
        enhancer53.setClassLoader(classLoader56);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter58 = null;
        enhancer53.setCallbackFilter(callbackFilter58);
        enhancer53.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer62 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy63 = null;
        enhancer62.setNamingPolicy(namingPolicy63);
        java.lang.ClassLoader classLoader65 = null;
        enhancer62.setClassLoader(classLoader65);
        boolean boolean67 = enhancer62.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy68 = enhancer62.getNamingPolicy();
        org.mockito.cglib.proxy.Callback callback69 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray70 = new org.mockito.cglib.proxy.Callback[] { callback69 };
        enhancer62.setCallbacks(callbackArray70);
        enhancer53.setCallbacks(callbackArray70);
        enhancer44.setCallbacks(callbackArray70);
        enhancer30.setCallbacks(callbackArray70);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter8.visitFrame(122, 33, (java.lang.Object[]) typeArray28, 176, (java.lang.Object[]) callbackArray70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "byte" + "'", str14, "byte");
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "byte" + "'", str20, "byte");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "double" + "'", str22, "double");
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "(CBBBD)B" + "'", str25, "(CBBBD)B");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(classLoader38);
        org.junit.Assert.assertNotNull(generatorStrategy41);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(namingPolicy68);
        org.junit.Assert.assertNotNull(callbackArray70);
    }

    @Test
    public void test21612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21612");
        org.mockito.cglib.core.Signature signature2 = new org.mockito.cglib.core.Signature("L842693193L1804543443", "L1804543443");
        java.lang.Class<?> wildcardClass3 = signature2.getClass();
        org.mockito.cglib.proxy.Callback callback4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj5 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass3, callback4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test21613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21613");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.BYTE_TYPE;
        int int2 = type1.getSize();
        java.lang.String str3 = type1.getClassName();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type5 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type6 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type7 = org.mockito.asm.Type.BYTE_TYPE;
        int int8 = type7.getSize();
        java.lang.String str9 = type7.getClassName();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str11 = type10.getClassName();
        org.mockito.asm.Type[] typeArray12 = new org.mockito.asm.Type[] { type4, type5, type6, type7, type10 };
        org.mockito.cglib.core.Signature signature13 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type1, typeArray12);
        java.lang.String str14 = signature13.toString();
        java.lang.String str15 = signature13.getName();
        org.mockito.asm.Label label16 = new org.mockito.asm.Label();
        java.lang.Object obj17 = label16.info;
        java.lang.String str18 = label16.toString();
        java.lang.String str19 = label16.toString();
        boolean boolean20 = signature13.equals((java.lang.Object) label16);
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = null;
        enhancer21.setNamingPolicy(namingPolicy22);
        java.lang.ClassLoader classLoader24 = null;
        enhancer21.setClassLoader(classLoader24);
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = null;
        enhancer26.setNamingPolicy(namingPolicy27);
        java.lang.ClassLoader classLoader29 = null;
        enhancer26.setClassLoader(classLoader29);
        java.lang.Class<?> wildcardClass31 = enhancer26.getClass();
        java.lang.String str32 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass31);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy34 = null;
        enhancer33.setNamingPolicy(namingPolicy34);
        java.lang.ClassLoader classLoader36 = null;
        enhancer33.setClassLoader(classLoader36);
        java.lang.Class<?> wildcardClass38 = enhancer33.getClass();
        java.lang.Class[] classArray39 = new java.lang.Class[] { wildcardClass31, wildcardClass38 };
        enhancer21.setInterfaces(classArray39);
        boolean boolean41 = enhancer21.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy43 = null;
        enhancer42.setNamingPolicy(namingPolicy43);
        java.lang.ClassLoader classLoader45 = null;
        enhancer42.setClassLoader(classLoader45);
        java.lang.Class<?> wildcardClass47 = enhancer42.getClass();
        enhancer21.setSuperclass((java.lang.Class) wildcardClass47);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass47);
        java.lang.String str50 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass47);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass47);
        java.lang.String str52 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass47);
        label16.info = str52;
        java.lang.Object obj54 = label16.info;
        // The following exception was thrown during execution in test generation
        try {
            int int55 = label16.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "byte" + "'", str3, "byte");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "byte" + "'", str9, "byte");
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "double" + "'", str11, "double");
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B" + "'", str14, "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str15, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNull(obj17);
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "L903182946" + "'", str18, "L903182946");
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L903182946" + "'", str19, "L903182946");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str32, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(classArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str50, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str52, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", obj54, "Lorg/mockito/cglib/proxy/Enhancer;");
    }

    @Test
    public void test21614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21614");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = null;
        enhancer5.setNamingPolicy(namingPolicy6);
        java.lang.ClassLoader classLoader8 = null;
        enhancer5.setClassLoader(classLoader8);
        java.lang.Class<?> wildcardClass10 = enhancer5.getClass();
        java.lang.String str11 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass10);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = null;
        enhancer12.setNamingPolicy(namingPolicy13);
        java.lang.ClassLoader classLoader15 = null;
        enhancer12.setClassLoader(classLoader15);
        java.lang.Class<?> wildcardClass17 = enhancer12.getClass();
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass10, wildcardClass17 };
        enhancer0.setInterfaces(classArray18);
        boolean boolean20 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = null;
        enhancer21.setNamingPolicy(namingPolicy22);
        java.lang.ClassLoader classLoader24 = null;
        enhancer21.setClassLoader(classLoader24);
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = null;
        enhancer26.setNamingPolicy(namingPolicy27);
        java.lang.ClassLoader classLoader29 = null;
        enhancer26.setClassLoader(classLoader29);
        java.lang.Class<?> wildcardClass31 = enhancer26.getClass();
        java.lang.String str32 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass31);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy34 = null;
        enhancer33.setNamingPolicy(namingPolicy34);
        java.lang.ClassLoader classLoader36 = null;
        enhancer33.setClassLoader(classLoader36);
        java.lang.Class<?> wildcardClass38 = enhancer33.getClass();
        java.lang.Class[] classArray39 = new java.lang.Class[] { wildcardClass31, wildcardClass38 };
        enhancer21.setInterfaces(classArray39);
        enhancer0.setInterfaces(classArray39);
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy43 = null;
        enhancer42.setNamingPolicy(namingPolicy43);
        java.lang.ClassLoader classLoader45 = null;
        enhancer42.setClassLoader(classLoader45);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter47 = null;
        enhancer42.setCallbackFilter(callbackFilter47);
        org.mockito.cglib.proxy.Callback callback49 = null;
        enhancer42.setCallback(callback49);
        java.lang.ClassLoader classLoader51 = null;
        enhancer42.setClassLoader(classLoader51);
        enhancer42.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer55 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy56 = null;
        enhancer55.setNamingPolicy(namingPolicy56);
        java.lang.ClassLoader classLoader58 = null;
        enhancer55.setClassLoader(classLoader58);
        boolean boolean60 = enhancer55.getAttemptLoad();
        enhancer55.setUseCache(true);
        java.lang.ClassLoader classLoader63 = enhancer55.getClassLoader();
        enhancer42.setClassLoader(classLoader63);
        enhancer0.setClassLoader(classLoader63);
        org.mockito.cglib.proxy.Callback[] callbackArray66 = null;
        enhancer0.setCallbacks(callbackArray66);
        org.mockito.cglib.proxy.Callback callback68 = null;
        enhancer0.setCallback(callback68);
        enhancer0.setAttemptLoad(false);
        enhancer0.setUseCache(true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str11, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str32, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(classArray39);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(classLoader63);
    }

    @Test
    public void test21615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21615");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassInfo classInfo11 = classEmitter10.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassInfo classInfo15 = classEmitter13.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor16 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter(classVisitor16);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter(classVisitor16);
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter18);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter19);
        classEmitter13.setTarget((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassInfo classInfo22 = classEmitter13.getClassInfo();
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.asm.ClassVisitor classVisitor25 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter(classVisitor25);
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter(classVisitor25);
        org.mockito.cglib.core.ClassInfo classInfo28 = classEmitter27.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter27);
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.asm.ClassVisitor classVisitor31 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter(classVisitor31);
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter(classVisitor31);
        org.mockito.cglib.core.ClassInfo classInfo34 = classEmitter33.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo35 = classEmitter33.getClassInfo();
        classEmitter30.setTarget((org.mockito.asm.ClassVisitor) classEmitter33);
        org.mockito.asm.ClassVisitor classVisitor37 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter(classVisitor37);
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter(classVisitor37);
        org.mockito.cglib.core.ClassInfo classInfo40 = classEmitter39.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter39);
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter41);
        org.mockito.cglib.core.ClassEmitter classEmitter43 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter42);
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter42);
        classEmitter33.setTarget((org.mockito.asm.ClassVisitor) classEmitter42);
        org.mockito.cglib.core.ClassInfo classInfo46 = classEmitter42.getClassInfo();
        classEmitter24.setTarget((org.mockito.asm.ClassVisitor) classEmitter42);
        org.mockito.asm.ClassVisitor classVisitor48 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter49 = new org.mockito.cglib.core.ClassEmitter(classVisitor48);
        org.mockito.cglib.core.ClassEmitter classEmitter50 = new org.mockito.cglib.core.ClassEmitter(classVisitor48);
        org.mockito.cglib.core.ClassInfo classInfo51 = classEmitter50.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter52 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter50);
        org.mockito.cglib.core.ClassInfo classInfo53 = classEmitter50.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter54 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter50);
        org.mockito.cglib.core.ClassEmitter classEmitter55 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter50);
        classEmitter42.setTarget((org.mockito.asm.ClassVisitor) classEmitter50);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type57 = classEmitter42.getSuperType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo11);
        org.junit.Assert.assertNull(classInfo15);
        org.junit.Assert.assertNull(classInfo22);
        org.junit.Assert.assertNull(classInfo28);
        org.junit.Assert.assertNull(classInfo34);
        org.junit.Assert.assertNull(classInfo35);
        org.junit.Assert.assertNull(classInfo40);
        org.junit.Assert.assertNull(classInfo46);
        org.junit.Assert.assertNull(classInfo51);
        org.junit.Assert.assertNull(classInfo53);
    }

    @Test
    public void test21616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21616");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        boolean boolean3 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy5 = null;
        enhancer4.setNamingPolicy(namingPolicy5);
        java.lang.ClassLoader classLoader7 = null;
        enhancer4.setClassLoader(classLoader7);
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy10 = null;
        enhancer9.setNamingPolicy(namingPolicy10);
        java.lang.ClassLoader classLoader12 = null;
        enhancer9.setClassLoader(classLoader12);
        java.lang.Class<?> wildcardClass14 = enhancer9.getClass();
        java.lang.String str15 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass14);
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy17 = null;
        enhancer16.setNamingPolicy(namingPolicy17);
        java.lang.ClassLoader classLoader19 = null;
        enhancer16.setClassLoader(classLoader19);
        java.lang.Class<?> wildcardClass21 = enhancer16.getClass();
        java.lang.Class[] classArray22 = new java.lang.Class[] { wildcardClass14, wildcardClass21 };
        enhancer4.setInterfaces(classArray22);
        enhancer0.setInterfaces(classArray22);
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback27 = null;
        enhancer0.setCallback(callback27);
        java.lang.ClassLoader classLoader29 = enhancer0.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy30 = enhancer0.getStrategy();
        boolean boolean31 = enhancer0.getUseCache();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str15, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(classArray22);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(generatorStrategy30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test21617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21617");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        boolean boolean3 = enhancer0.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy4 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = null;
        enhancer5.setNamingPolicy(namingPolicy6);
        java.lang.ClassLoader classLoader8 = null;
        enhancer5.setClassLoader(classLoader8);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter10 = null;
        enhancer5.setCallbackFilter(callbackFilter10);
        org.mockito.cglib.proxy.Callback callback12 = null;
        enhancer5.setCallback(callback12);
        java.lang.ClassLoader classLoader14 = null;
        enhancer5.setClassLoader(classLoader14);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy16 = null;
        enhancer5.setStrategy(generatorStrategy16);
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy19 = null;
        enhancer18.setNamingPolicy(namingPolicy19);
        java.lang.ClassLoader classLoader21 = null;
        enhancer18.setClassLoader(classLoader21);
        boolean boolean23 = enhancer18.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy24 = enhancer18.getStrategy();
        enhancer5.setStrategy(generatorStrategy24);
        enhancer5.setAttemptLoad(false);
        org.mockito.asm.Label label28 = new org.mockito.asm.Label();
        java.lang.Object obj29 = label28.info;
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = null;
        enhancer30.setNamingPolicy(namingPolicy31);
        java.lang.ClassLoader classLoader33 = null;
        enhancer30.setClassLoader(classLoader33);
        boolean boolean35 = enhancer30.getAttemptLoad();
        boolean boolean36 = enhancer30.getUseCache();
        org.mockito.cglib.proxy.Callback callback37 = null;
        enhancer30.setCallback(callback37);
        boolean boolean39 = enhancer30.getUseCache();
        org.mockito.cglib.proxy.Callback callback40 = null;
        enhancer30.setCallback(callback40);
        enhancer30.setAttemptLoad(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy44 = enhancer30.getStrategy();
        label28.info = enhancer30;
        enhancer30.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy49 = null;
        enhancer48.setNamingPolicy(namingPolicy49);
        java.lang.ClassLoader classLoader51 = null;
        enhancer48.setClassLoader(classLoader51);
        org.mockito.cglib.proxy.Enhancer enhancer53 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy54 = null;
        enhancer53.setNamingPolicy(namingPolicy54);
        java.lang.ClassLoader classLoader56 = null;
        enhancer53.setClassLoader(classLoader56);
        java.lang.Class<?> wildcardClass58 = enhancer53.getClass();
        java.lang.String str59 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass58);
        org.mockito.cglib.proxy.Enhancer enhancer60 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy61 = null;
        enhancer60.setNamingPolicy(namingPolicy61);
        java.lang.ClassLoader classLoader63 = null;
        enhancer60.setClassLoader(classLoader63);
        java.lang.Class<?> wildcardClass65 = enhancer60.getClass();
        java.lang.Class[] classArray66 = new java.lang.Class[] { wildcardClass58, wildcardClass65 };
        enhancer48.setInterfaces(classArray66);
        enhancer30.setInterfaces(classArray66);
        enhancer5.setInterfaces(classArray66);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.setCallbackTypes(classArray66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown callback type class org.mockito.cglib.proxy.Enhancer");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(namingPolicy4);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(generatorStrategy24);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(generatorStrategy44);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str59, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(classArray66);
    }

    @Test
    public void test21618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21618");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter3);
        org.mockito.cglib.core.ClassInfo classInfo5 = classEmitter4.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.BYTE_TYPE;
        int int13 = type12.getSize();
        java.lang.String str14 = type12.getClassName();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type16 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type17 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type18 = org.mockito.asm.Type.BYTE_TYPE;
        int int19 = type18.getSize();
        java.lang.String str20 = type18.getClassName();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str22 = type21.getClassName();
        org.mockito.asm.Type[] typeArray23 = new org.mockito.asm.Type[] { type15, type16, type17, type18, type21 };
        org.mockito.cglib.core.Signature signature24 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type12, typeArray23);
        org.mockito.asm.Type[] typeArray25 = signature24.getArgumentTypes();
        java.lang.String str26 = signature24.toString();
        java.lang.String str27 = signature24.toString();
        java.lang.String str28 = signature24.toString();
        org.mockito.asm.Type[] typeArray29 = signature24.getArgumentTypes();
        org.mockito.asm.Type[] typeArray30 = signature24.getArgumentTypes();
        java.lang.String str31 = signature24.getName();
        java.lang.String str32 = signature24.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.FieldVisitor fieldVisitor33 = classEmitter6.visitField(159, "Lte;", "L75743112", "L68107451", (java.lang.Object) signature24);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo5);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "byte" + "'", str14, "byte");
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "byte" + "'", str20, "byte");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "double" + "'", str22, "double");
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B" + "'", str26, "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B" + "'", str27, "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B" + "'", str28, "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B");
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str31, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B" + "'", str32, "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B");
    }

    @Test
    public void test21619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21619");
        org.mockito.cglib.proxy.Enhancer enhancer2 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = null;
        enhancer2.setNamingPolicy(namingPolicy3);
        java.lang.ClassLoader classLoader5 = null;
        enhancer2.setClassLoader(classLoader5);
        java.lang.Class<?> wildcardClass7 = enhancer2.getClass();
        java.lang.String str8 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass7);
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass7);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass7);
        int int12 = type10.getOpcode(128);
        org.mockito.cglib.core.Local local13 = new org.mockito.cglib.core.Local(108, type10);
        org.mockito.asm.Type type14 = local13.getType();
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy18 = null;
        enhancer17.setNamingPolicy(namingPolicy18);
        java.lang.ClassLoader classLoader20 = null;
        enhancer17.setClassLoader(classLoader20);
        java.lang.Class<?> wildcardClass22 = enhancer17.getClass();
        java.lang.String str23 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass22);
        boolean boolean24 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass22);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass22);
        int int26 = type25.getSize();
        org.mockito.cglib.core.Local local27 = new org.mockito.cglib.core.Local(108, type25);
        java.lang.String str28 = type25.getDescriptor();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.getObjectType("byte");
        org.mockito.asm.Type type31 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray32 = new org.mockito.asm.Type[] {};
        java.lang.String str33 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray32);
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray32);
        org.mockito.cglib.core.Signature signature35 = new org.mockito.cglib.core.Signature("J", type25, typeArray32);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy38 = null;
        enhancer37.setNamingPolicy(namingPolicy38);
        java.lang.ClassLoader classLoader40 = null;
        enhancer37.setClassLoader(classLoader40);
        java.lang.Class<?> wildcardClass42 = enhancer37.getClass();
        java.lang.String str43 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass42);
        boolean boolean44 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass42);
        int int47 = type45.getOpcode(128);
        org.mockito.cglib.core.Local local48 = new org.mockito.cglib.core.Local(108, type45);
        org.mockito.asm.Type type49 = local48.getType();
        boolean boolean50 = type25.equals((java.lang.Object) type49);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type52 = org.mockito.asm.Type.BYTE_TYPE;
        boolean boolean54 = type52.equals((java.lang.Object) 9);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type57 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray58 = new org.mockito.asm.Type[] {};
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type57, typeArray58);
        org.mockito.cglib.core.Signature signature60 = new org.mockito.cglib.core.Signature("double", type56, typeArray58);
        java.lang.String str61 = org.mockito.asm.Type.getMethodDescriptor(type52, typeArray58);
        java.lang.String str62 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray58);
        java.lang.String str63 = org.mockito.asm.Type.getMethodDescriptor(type25, typeArray58);
        org.mockito.cglib.core.Signature signature64 = new org.mockito.cglib.core.Signature("L1144664822", type14, typeArray58);
        java.lang.String str65 = signature64.toString();
        java.lang.String str66 = signature64.getDescriptor();
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str8, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 132 + "'", int12 == 132);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str23, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str28, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "()D" + "'", str33, "()D");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "()Lbyte;" + "'", str34, "()Lbyte;");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str43, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 132 + "'", int47 == 132);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "()D" + "'", str59, "()D");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "()B" + "'", str61, "()B");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "()F" + "'", str62, "()F");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "()Lorg/mockito/cglib/proxy/Enhancer;" + "'", str63, "()Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "L1144664822()Lorg/mockito/cglib/proxy/Enhancer;" + "'", str65, "L1144664822()Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "()Lorg/mockito/cglib/proxy/Enhancer;" + "'", str66, "()Lorg/mockito/cglib/proxy/Enhancer;");
    }

    @Test
    public void test21620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21620");
        org.mockito.cglib.core.Signature signature2 = new org.mockito.cglib.core.Signature("", "hi!");
        java.lang.String str3 = signature2.getDescriptor();
        boolean boolean5 = signature2.equals((java.lang.Object) (short) 1);
        java.lang.String str6 = signature2.getDescriptor();
        boolean boolean8 = signature2.equals((java.lang.Object) 1.0d);
        org.mockito.asm.ClassVisitor classVisitor9 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter(classVisitor9);
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter(classVisitor9);
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo13 = classEmitter11.getClassInfo();
        boolean boolean14 = signature2.equals((java.lang.Object) classInfo13);
        org.mockito.asm.MethodVisitor methodVisitor17 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter18 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor17);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter19 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter18);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter20 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter19);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter21 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter20);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter22 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter21);
        boolean boolean23 = signature2.equals((java.lang.Object) localVariablesSorter21);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter24 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter21);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter21.visitCode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNull(classInfo13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test21621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21621");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassInfo classInfo11 = classEmitter10.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassInfo classInfo15 = classEmitter13.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor16 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter(classVisitor16);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter(classVisitor16);
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter18);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter19);
        classEmitter13.setTarget((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassInfo classInfo22 = classEmitter13.getClassInfo();
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter13);
        java.lang.String[] strArray31 = new java.lang.String[] { "L544597136" };
        // The following exception was thrown during execution in test generation
        try {
            classEmitter24.visit(4, 139, "", "L1909071159", "L524911636", strArray31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo11);
        org.junit.Assert.assertNull(classInfo15);
        org.junit.Assert.assertNull(classInfo22);
        org.junit.Assert.assertNotNull(strArray31);
    }

    @Test
    public void test21622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21622");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter13 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.AnnotationVisitor annotationVisitor17 = localVariablesSorter13.visitParameterAnnotation(10, "L1062703671", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21623");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        boolean boolean3 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy5 = null;
        enhancer4.setNamingPolicy(namingPolicy5);
        java.lang.ClassLoader classLoader7 = null;
        enhancer4.setClassLoader(classLoader7);
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy10 = null;
        enhancer9.setNamingPolicy(namingPolicy10);
        java.lang.ClassLoader classLoader12 = null;
        enhancer9.setClassLoader(classLoader12);
        java.lang.Class<?> wildcardClass14 = enhancer9.getClass();
        java.lang.String str15 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass14);
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy17 = null;
        enhancer16.setNamingPolicy(namingPolicy17);
        java.lang.ClassLoader classLoader19 = null;
        enhancer16.setClassLoader(classLoader19);
        java.lang.Class<?> wildcardClass21 = enhancer16.getClass();
        java.lang.Class[] classArray22 = new java.lang.Class[] { wildcardClass14, wildcardClass21 };
        enhancer4.setInterfaces(classArray22);
        enhancer0.setInterfaces(classArray22);
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback27 = null;
        enhancer0.setCallback(callback27);
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter31 = null;
        enhancer0.setCallbackFilter(callbackFilter31);
        boolean boolean33 = enhancer0.getAttemptLoad();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str15, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(classArray22);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test21624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21624");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassInfo classInfo8 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter9.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter9);
        org.mockito.asm.ClassVisitor classVisitor12 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter(classVisitor12);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter(classVisitor12);
        org.mockito.cglib.core.ClassInfo classInfo15 = classEmitter14.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassInfo classInfo20 = classEmitter17.getClassInfo();
        classEmitter11.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.asm.Attribute attribute22 = null;
        // The following exception was thrown during execution in test generation
        try {
            classEmitter17.visitAttribute(attribute22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo8);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo15);
        org.junit.Assert.assertNull(classInfo20);
    }

    @Test
    public void test21625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21625");
        org.mockito.cglib.core.Signature signature2 = new org.mockito.cglib.core.Signature("hi!", "B");
        java.lang.String str3 = signature2.toString();
        org.mockito.asm.ClassVisitor classVisitor4 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter(classVisitor4);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter(classVisitor4);
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter6);
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter7);
        boolean boolean9 = signature2.equals((java.lang.Object) classEmitter8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter(classVisitor11);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter(classVisitor11);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        classEmitter13.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.asm.ClassVisitor classVisitor19 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter(classVisitor19);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter(classVisitor19);
        org.mockito.cglib.core.ClassInfo classInfo22 = classEmitter21.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.asm.ClassVisitor classVisitor25 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter(classVisitor25);
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter(classVisitor25);
        org.mockito.cglib.core.ClassInfo classInfo28 = classEmitter27.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo29 = classEmitter27.getClassInfo();
        classEmitter24.setTarget((org.mockito.asm.ClassVisitor) classEmitter27);
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter27);
        org.mockito.asm.ClassVisitor classVisitor32 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter(classVisitor32);
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter(classVisitor32);
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter(classVisitor32);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter35);
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter36);
        classEmitter8.setTarget((org.mockito.asm.ClassVisitor) classEmitter36);
        org.mockito.cglib.core.ClassInfo classInfo39 = classEmitter36.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo40 = classEmitter36.getClassInfo();
        // The following exception was thrown during execution in test generation
        try {
            classEmitter36.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!B" + "'", str3, "hi!B");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(classInfo22);
        org.junit.Assert.assertNull(classInfo28);
        org.junit.Assert.assertNull(classInfo29);
        org.junit.Assert.assertNull(classInfo39);
        org.junit.Assert.assertNull(classInfo40);
    }

    @Test
    public void test21626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21626");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.asm.ClassVisitor classVisitor6 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassInfo classInfo9 = classEmitter8.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter8.getClassInfo();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.asm.ClassVisitor classVisitor12 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter(classVisitor12);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter(classVisitor12);
        org.mockito.cglib.core.ClassInfo classInfo15 = classEmitter14.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.asm.ClassVisitor classVisitor18 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter(classVisitor18);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter(classVisitor18);
        org.mockito.cglib.core.ClassInfo classInfo21 = classEmitter20.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter22);
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter22);
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter17);
        classEmitter8.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.asm.ClassVisitor classVisitor27 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter(classVisitor27);
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter(classVisitor27);
        org.mockito.cglib.core.ClassInfo classInfo30 = classEmitter29.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter31);
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter32);
        org.mockito.cglib.core.ClassInfo classInfo34 = classEmitter32.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo35 = classEmitter32.getClassInfo();
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter32);
        org.mockito.asm.ClassVisitor classVisitor37 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter(classVisitor37);
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter(classVisitor37);
        org.mockito.cglib.core.ClassEmitter classEmitter40 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter39);
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter39);
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter43 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter42);
        classEmitter39.setTarget((org.mockito.asm.ClassVisitor) classEmitter43);
        org.mockito.asm.ClassVisitor classVisitor45 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter46 = new org.mockito.cglib.core.ClassEmitter(classVisitor45);
        org.mockito.cglib.core.ClassEmitter classEmitter47 = new org.mockito.cglib.core.ClassEmitter(classVisitor45);
        org.mockito.cglib.core.ClassInfo classInfo48 = classEmitter47.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter49 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter47);
        org.mockito.cglib.core.ClassEmitter classEmitter50 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter49);
        org.mockito.asm.ClassVisitor classVisitor51 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter52 = new org.mockito.cglib.core.ClassEmitter(classVisitor51);
        org.mockito.cglib.core.ClassEmitter classEmitter53 = new org.mockito.cglib.core.ClassEmitter(classVisitor51);
        org.mockito.cglib.core.ClassInfo classInfo54 = classEmitter53.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo55 = classEmitter53.getClassInfo();
        classEmitter50.setTarget((org.mockito.asm.ClassVisitor) classEmitter53);
        classEmitter43.setTarget((org.mockito.asm.ClassVisitor) classEmitter53);
        org.mockito.cglib.core.ClassEmitter classEmitter58 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter53);
        org.mockito.cglib.core.ClassEmitter classEmitter59 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter58);
        org.mockito.cglib.core.ClassEmitter classEmitter60 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter59);
        classEmitter32.setTarget((org.mockito.asm.ClassVisitor) classEmitter59);
        org.mockito.cglib.core.ClassInfo classInfo62 = classEmitter59.getClassInfo();
        // The following exception was thrown during execution in test generation
        try {
            classEmitter59.visitOuterClass("L1958877584", "LL1288412108;", "L1049216393");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo9);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo15);
        org.junit.Assert.assertNull(classInfo21);
        org.junit.Assert.assertNull(classInfo30);
        org.junit.Assert.assertNull(classInfo34);
        org.junit.Assert.assertNull(classInfo35);
        org.junit.Assert.assertNull(classInfo48);
        org.junit.Assert.assertNull(classInfo54);
        org.junit.Assert.assertNull(classInfo55);
        org.junit.Assert.assertNull(classInfo62);
    }

    @Test
    public void test21627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21627");
        org.mockito.cglib.core.Signature signature2 = new org.mockito.cglib.core.Signature("L609610250", "(CBBBD)I");
        java.lang.String str3 = signature2.getDescriptor();
        java.lang.String str4 = signature2.toString();
        org.mockito.asm.Type type5 = signature2.getReturnType();
        int int7 = type5.getOpcode(117);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "(CBBBD)I" + "'", str3, "(CBBBD)I");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L609610250(CBBBD)I" + "'", str4, "L609610250(CBBBD)I");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 117 + "'", int7 == 117);
    }

    @Test
    public void test21628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21628");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        boolean boolean5 = enhancer0.getAttemptLoad();
        boolean boolean6 = enhancer0.getUseCache();
        boolean boolean7 = enhancer0.getAttemptLoad();
        enhancer0.setAttemptLoad(true);
        java.lang.ClassLoader classLoader10 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy12 = null;
        enhancer11.setNamingPolicy(namingPolicy12);
        java.lang.ClassLoader classLoader14 = null;
        enhancer11.setClassLoader(classLoader14);
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy17 = null;
        enhancer16.setNamingPolicy(namingPolicy17);
        java.lang.ClassLoader classLoader19 = null;
        enhancer16.setClassLoader(classLoader19);
        java.lang.Class<?> wildcardClass21 = enhancer16.getClass();
        java.lang.String str22 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass21);
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy24 = null;
        enhancer23.setNamingPolicy(namingPolicy24);
        java.lang.ClassLoader classLoader26 = null;
        enhancer23.setClassLoader(classLoader26);
        java.lang.Class<?> wildcardClass28 = enhancer23.getClass();
        java.lang.Class[] classArray29 = new java.lang.Class[] { wildcardClass21, wildcardClass28 };
        enhancer11.setInterfaces(classArray29);
        enhancer11.setUseCache(false);
        enhancer11.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = null;
        enhancer35.setNamingPolicy(namingPolicy36);
        java.lang.ClassLoader classLoader38 = null;
        enhancer35.setClassLoader(classLoader38);
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy41 = null;
        enhancer40.setNamingPolicy(namingPolicy41);
        java.lang.ClassLoader classLoader43 = null;
        enhancer40.setClassLoader(classLoader43);
        java.lang.Class<?> wildcardClass45 = enhancer40.getClass();
        java.lang.String str46 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass45);
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy48 = null;
        enhancer47.setNamingPolicy(namingPolicy48);
        java.lang.ClassLoader classLoader50 = null;
        enhancer47.setClassLoader(classLoader50);
        java.lang.Class<?> wildcardClass52 = enhancer47.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[] { wildcardClass45, wildcardClass52 };
        enhancer35.setInterfaces(classArray53);
        enhancer11.setInterfaces(classArray53);
        enhancer0.setInterfaces(classArray53);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy57 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter58 = null;
        enhancer0.setCallbackFilter(callbackFilter58);
        org.mockito.cglib.proxy.Enhancer enhancer60 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy61 = null;
        enhancer60.setNamingPolicy(namingPolicy61);
        java.lang.ClassLoader classLoader63 = null;
        enhancer60.setClassLoader(classLoader63);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter65 = null;
        enhancer60.setCallbackFilter(callbackFilter65);
        org.mockito.cglib.proxy.Callback callback67 = null;
        enhancer60.setCallback(callback67);
        java.lang.ClassLoader classLoader69 = null;
        enhancer60.setClassLoader(classLoader69);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy71 = null;
        enhancer60.setStrategy(generatorStrategy71);
        org.mockito.cglib.proxy.Enhancer enhancer73 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy74 = null;
        enhancer73.setNamingPolicy(namingPolicy74);
        java.lang.ClassLoader classLoader76 = null;
        enhancer73.setClassLoader(classLoader76);
        boolean boolean78 = enhancer73.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy79 = enhancer73.getStrategy();
        enhancer60.setStrategy(generatorStrategy79);
        enhancer60.setInterceptDuringConstruction(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy83 = enhancer60.getStrategy();
        enhancer0.setStrategy(generatorStrategy83);
        enhancer0.setAttemptLoad(false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str22, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(classArray29);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str46, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(generatorStrategy57);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(generatorStrategy79);
        org.junit.Assert.assertNotNull(generatorStrategy83);
    }

    @Test
    public void test21629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21629");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("L179910547");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21630");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.asm.ClassVisitor classVisitor6 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassInfo classInfo9 = classEmitter8.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter8.getClassInfo();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.asm.ClassVisitor classVisitor12 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter(classVisitor12);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter(classVisitor12);
        org.mockito.cglib.core.ClassInfo classInfo15 = classEmitter14.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter17);
        classEmitter8.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.asm.ClassVisitor classVisitor21 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter26);
        classEmitter23.setTarget((org.mockito.asm.ClassVisitor) classEmitter27);
        org.mockito.asm.ClassVisitor classVisitor29 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter(classVisitor29);
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter(classVisitor29);
        org.mockito.cglib.core.ClassInfo classInfo32 = classEmitter31.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter31);
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter33);
        org.mockito.asm.ClassVisitor classVisitor35 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter(classVisitor35);
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter(classVisitor35);
        org.mockito.cglib.core.ClassInfo classInfo38 = classEmitter37.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo39 = classEmitter37.getClassInfo();
        classEmitter34.setTarget((org.mockito.asm.ClassVisitor) classEmitter37);
        classEmitter27.setTarget((org.mockito.asm.ClassVisitor) classEmitter37);
        org.mockito.asm.ClassVisitor classVisitor42 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter43 = new org.mockito.cglib.core.ClassEmitter(classVisitor42);
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter(classVisitor42);
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter(classVisitor42);
        org.mockito.cglib.core.ClassEmitter classEmitter46 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter45);
        classEmitter27.setTarget((org.mockito.asm.ClassVisitor) classEmitter46);
        classEmitter8.setTarget((org.mockito.asm.ClassVisitor) classEmitter46);
        org.mockito.cglib.core.ClassEmitter classEmitter49 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.asm.ClassVisitor classVisitor50 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter51 = new org.mockito.cglib.core.ClassEmitter(classVisitor50);
        org.mockito.cglib.core.ClassEmitter classEmitter52 = new org.mockito.cglib.core.ClassEmitter(classVisitor50);
        org.mockito.cglib.core.ClassInfo classInfo53 = classEmitter52.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter54 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter52);
        org.mockito.cglib.core.ClassEmitter classEmitter55 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter54);
        org.mockito.cglib.core.ClassEmitter classEmitter56 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter55);
        org.mockito.cglib.core.ClassInfo classInfo57 = classEmitter55.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter58 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter55);
        classEmitter49.setTarget((org.mockito.asm.ClassVisitor) classEmitter55);
        java.lang.String[] strArray67 = new java.lang.String[] { "L855842405", "L263701502" };
        // The following exception was thrown during execution in test generation
        try {
            classEmitter55.visit(40, 133, "L1677321430", "L1388843798", "Lorg/mockito/cglib/core/DefaultNamingPolicy;L1522584370", strArray67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo9);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo15);
        org.junit.Assert.assertNull(classInfo32);
        org.junit.Assert.assertNull(classInfo38);
        org.junit.Assert.assertNull(classInfo39);
        org.junit.Assert.assertNull(classInfo53);
        org.junit.Assert.assertNull(classInfo57);
        org.junit.Assert.assertNotNull(strArray67);
    }

    @Test
    public void test21631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21631");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = null;
        enhancer5.setNamingPolicy(namingPolicy6);
        java.lang.ClassLoader classLoader8 = null;
        enhancer5.setClassLoader(classLoader8);
        java.lang.Class<?> wildcardClass10 = enhancer5.getClass();
        java.lang.String str11 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass10);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = null;
        enhancer12.setNamingPolicy(namingPolicy13);
        java.lang.ClassLoader classLoader15 = null;
        enhancer12.setClassLoader(classLoader15);
        java.lang.Class<?> wildcardClass17 = enhancer12.getClass();
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass10, wildcardClass17 };
        enhancer0.setInterfaces(classArray18);
        boolean boolean20 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = null;
        enhancer21.setNamingPolicy(namingPolicy22);
        java.lang.ClassLoader classLoader24 = null;
        enhancer21.setClassLoader(classLoader24);
        java.lang.Class<?> wildcardClass26 = enhancer21.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass26);
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = enhancer0.getNamingPolicy();
        boolean boolean29 = enhancer0.getUseCache();
        org.mockito.cglib.core.NamingPolicy namingPolicy30 = enhancer0.getNamingPolicy();
        enhancer0.setUseCache(true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str11, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(namingPolicy28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(namingPolicy30);
    }

    @Test
    public void test21632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21632");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        boolean boolean5 = enhancer0.getAttemptLoad();
        enhancer0.setUseCache(true);
        java.lang.ClassLoader classLoader8 = enhancer0.getClassLoader();
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter13 = null;
        enhancer0.setCallbackFilter(callbackFilter13);
        boolean boolean15 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy17 = null;
        enhancer16.setNamingPolicy(namingPolicy17);
        java.lang.ClassLoader classLoader19 = null;
        enhancer16.setClassLoader(classLoader19);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter21 = null;
        enhancer16.setCallbackFilter(callbackFilter21);
        org.mockito.cglib.proxy.Callback callback23 = null;
        enhancer16.setCallback(callback23);
        java.lang.ClassLoader classLoader25 = null;
        enhancer16.setClassLoader(classLoader25);
        enhancer16.setUseCache(false);
        org.mockito.cglib.proxy.Callback callback29 = null;
        enhancer16.setCallback(callback29);
        enhancer16.setSerialVersionUID((java.lang.Long) 0L);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy34 = null;
        enhancer33.setNamingPolicy(namingPolicy34);
        java.lang.ClassLoader classLoader36 = null;
        enhancer33.setClassLoader(classLoader36);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter38 = null;
        enhancer33.setCallbackFilter(callbackFilter38);
        org.mockito.cglib.proxy.Callback callback40 = null;
        enhancer33.setCallback(callback40);
        org.mockito.cglib.core.NamingPolicy namingPolicy42 = enhancer33.getNamingPolicy();
        enhancer16.setNamingPolicy(namingPolicy42);
        enhancer0.setNamingPolicy(namingPolicy42);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(namingPolicy42);
    }

    @Test
    public void test21633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21633");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        boolean boolean5 = enhancer0.getAttemptLoad();
        java.lang.Class class6 = null;
        enhancer0.setSuperclass(class6);
        org.mockito.cglib.proxy.Callback callback8 = null;
        enhancer0.setCallback(callback8);
        boolean boolean10 = enhancer0.getUseCache();
        java.lang.ClassLoader classLoader11 = enhancer0.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy12 = enhancer0.getNamingPolicy();
        enhancer0.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = null;
        enhancer15.setNamingPolicy(namingPolicy16);
        java.lang.ClassLoader classLoader18 = null;
        enhancer15.setClassLoader(classLoader18);
        boolean boolean20 = enhancer15.getAttemptLoad();
        enhancer15.setUseCache(true);
        java.lang.ClassLoader classLoader23 = enhancer15.getClassLoader();
        boolean boolean24 = enhancer15.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy26 = null;
        enhancer25.setNamingPolicy(namingPolicy26);
        java.lang.ClassLoader classLoader28 = null;
        enhancer25.setClassLoader(classLoader28);
        boolean boolean30 = enhancer25.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer25.getNamingPolicy();
        org.mockito.cglib.proxy.Callback callback32 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray33 = new org.mockito.cglib.proxy.Callback[] { callback32 };
        enhancer25.setCallbacks(callbackArray33);
        enhancer15.setCallbacks(callbackArray33);
        org.mockito.cglib.proxy.Callback callback36 = null;
        enhancer15.setCallback(callback36);
        enhancer15.setAttemptLoad(false);
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy41 = null;
        enhancer40.setNamingPolicy(namingPolicy41);
        java.lang.ClassLoader classLoader43 = null;
        enhancer40.setClassLoader(classLoader43);
        boolean boolean45 = enhancer40.getAttemptLoad();
        enhancer40.setUseCache(true);
        java.lang.ClassLoader classLoader48 = enhancer40.getClassLoader();
        boolean boolean49 = enhancer40.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer50 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy51 = null;
        enhancer50.setNamingPolicy(namingPolicy51);
        java.lang.ClassLoader classLoader53 = null;
        enhancer50.setClassLoader(classLoader53);
        boolean boolean55 = enhancer50.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy56 = enhancer50.getNamingPolicy();
        org.mockito.cglib.proxy.Callback callback57 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray58 = new org.mockito.cglib.proxy.Callback[] { callback57 };
        enhancer50.setCallbacks(callbackArray58);
        enhancer40.setCallbacks(callbackArray58);
        enhancer15.setCallbacks(callbackArray58);
        enhancer0.setCallbacks(callbackArray58);
        enhancer0.setSerialVersionUID((java.lang.Long) 10L);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(classLoader11);
        org.junit.Assert.assertNotNull(namingPolicy12);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(classLoader23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertNotNull(callbackArray33);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(classLoader48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(namingPolicy56);
        org.junit.Assert.assertNotNull(callbackArray58);
    }

    @Test
    public void test21634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21634");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        boolean boolean5 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader6 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter7 = null;
        enhancer0.setCallbackFilter(callbackFilter7);
        boolean boolean9 = enhancer0.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy10 = enhancer0.getStrategy();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj11 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callbacks are required");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(generatorStrategy10);
    }

    @Test
    public void test21635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21635");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        java.lang.Class<?> wildcardClass5 = classEmitter4.getClass();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        java.lang.String str8 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass5);
        java.lang.String str9 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass5);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy12 = null;
        enhancer11.setNamingPolicy(namingPolicy12);
        java.lang.ClassLoader classLoader14 = null;
        enhancer11.setClassLoader(classLoader14);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter16 = null;
        enhancer11.setCallbackFilter(callbackFilter16);
        org.mockito.cglib.proxy.Callback callback18 = null;
        enhancer11.setCallback(callback18);
        java.lang.ClassLoader classLoader20 = null;
        enhancer11.setClassLoader(classLoader20);
        enhancer11.setInterceptDuringConstruction(true);
        java.lang.ClassLoader classLoader24 = enhancer11.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = enhancer11.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = null;
        enhancer26.setNamingPolicy(namingPolicy27);
        java.lang.ClassLoader classLoader29 = null;
        enhancer26.setClassLoader(classLoader29);
        boolean boolean31 = enhancer26.getAttemptLoad();
        enhancer26.setUseCache(true);
        java.lang.ClassLoader classLoader34 = enhancer26.getClassLoader();
        boolean boolean35 = enhancer26.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy37 = null;
        enhancer36.setNamingPolicy(namingPolicy37);
        java.lang.ClassLoader classLoader39 = null;
        enhancer36.setClassLoader(classLoader39);
        boolean boolean41 = enhancer36.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy42 = enhancer36.getNamingPolicy();
        org.mockito.cglib.proxy.Callback callback43 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray44 = new org.mockito.cglib.proxy.Callback[] { callback43 };
        enhancer36.setCallbacks(callbackArray44);
        enhancer26.setCallbacks(callbackArray44);
        enhancer11.setCallbacks(callbackArray44);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.proxy.Enhancer.registerCallbacks((java.lang.Class) wildcardClass5, callbackArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class org.mockito.cglib.core.ClassEmitter is not an enhanced class");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Lorg/mockito/cglib/core/ClassEmitter;" + "'", str8, "Lorg/mockito/cglib/core/ClassEmitter;");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org/mockito/cglib/core/ClassEmitter" + "'", str9, "org/mockito/cglib/core/ClassEmitter");
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(namingPolicy25);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(classLoader34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(namingPolicy42);
        org.junit.Assert.assertNotNull(callbackArray44);
    }

    @Test
    public void test21636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21636");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.cglib.proxy.Enhancer()Lg/mockito/cglib/proxy/Enhancer;");
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSort();
        int int4 = type1.getSize();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Lorg.mockito.cglib.proxy.Enhancer()Lg/mockito/cglib/proxy/Enhancer;;" + "'", str2, "Lorg.mockito.cglib.proxy.Enhancer()Lg/mockito/cglib/proxy/Enhancer;;");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 10 + "'", int3 == 10);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
    }

    @Test
    public void test21637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21637");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassInfo classInfo2 = classEmitter1.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor3 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter(classVisitor3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter(classVisitor3);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassInfo classInfo7 = classEmitter5.getClassInfo();
        classEmitter1.setTarget((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.asm.ClassVisitor classVisitor9 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter(classVisitor9);
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter(classVisitor9);
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.asm.ClassVisitor classVisitor14 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter17);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter18);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter18);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter18);
        org.mockito.asm.ClassVisitor classVisitor22 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter(classVisitor22);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter(classVisitor22);
        org.mockito.cglib.core.ClassInfo classInfo25 = classEmitter24.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo26 = classEmitter24.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo27 = classEmitter24.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter24);
        classEmitter18.setTarget((org.mockito.asm.ClassVisitor) classEmitter24);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter18.visitInnerClass("[Ljava/lang/Class;", "L1099934493", "L186908871", 120);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo2);
        org.junit.Assert.assertNull(classInfo7);
        org.junit.Assert.assertNull(classInfo25);
        org.junit.Assert.assertNull(classInfo26);
        org.junit.Assert.assertNull(classInfo27);
    }

    @Test
    public void test21638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21638");
        org.mockito.cglib.proxy.Enhancer enhancer2 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = null;
        enhancer2.setNamingPolicy(namingPolicy3);
        java.lang.ClassLoader classLoader5 = null;
        enhancer2.setClassLoader(classLoader5);
        java.lang.Class<?> wildcardClass7 = enhancer2.getClass();
        java.lang.String str8 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass7);
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass7);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass7);
        int int11 = type10.getSize();
        org.mockito.cglib.core.Local local12 = new org.mockito.cglib.core.Local(108, type10);
        org.mockito.cglib.core.Local local13 = new org.mockito.cglib.core.Local(108, type10);
        org.mockito.asm.Type type14 = local13.getType();
        java.lang.String str15 = type14.getClassName();
        org.mockito.asm.Type type16 = type14.getElementType();
        org.mockito.asm.ClassVisitor classVisitor17 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter(classVisitor17);
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter(classVisitor17);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter19);
        boolean boolean21 = type14.equals((java.lang.Object) classEmitter20);
        org.mockito.cglib.core.ClassInfo classInfo22 = classEmitter20.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter23.visitOuterClass("L83750325", "L319155538", "L1393077681");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str8, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.mockito.cglib.proxy.Enhancer" + "'", str15, "org.mockito.cglib.proxy.Enhancer");
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(classInfo22);
    }

    @Test
    public void test21639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21639");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = null;
        enhancer5.setNamingPolicy(namingPolicy6);
        java.lang.ClassLoader classLoader8 = null;
        enhancer5.setClassLoader(classLoader8);
        java.lang.Class<?> wildcardClass10 = enhancer5.getClass();
        java.lang.String str11 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass10);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = null;
        enhancer12.setNamingPolicy(namingPolicy13);
        java.lang.ClassLoader classLoader15 = null;
        enhancer12.setClassLoader(classLoader15);
        java.lang.Class<?> wildcardClass17 = enhancer12.getClass();
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass10, wildcardClass17 };
        enhancer0.setInterfaces(classArray18);
        boolean boolean20 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = null;
        enhancer21.setNamingPolicy(namingPolicy22);
        java.lang.ClassLoader classLoader24 = null;
        enhancer21.setClassLoader(classLoader24);
        java.lang.Class<?> wildcardClass26 = enhancer21.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass26);
        java.lang.String str29 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass26);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass26);
        org.mockito.asm.Type type31 = type30.getElementType();
        org.mockito.asm.Type type32 = type31.getElementType();
        int int33 = type32.getDimensions();
        java.lang.String str34 = type32.getInternalName();
        org.mockito.asm.Type type35 = type32.getElementType();
        int int37 = type32.getOpcode(97);
        int int38 = type32.getDimensions();
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str11, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str29, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "mockito/cglib/proxy/Enhancer" + "'", str34, "mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 101 + "'", int37 == 101);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
    }

    @Test
    public void test21640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21640");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback1 = null;
        enhancer0.setCallback(callback1);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = null;
        enhancer5.setNamingPolicy(namingPolicy6);
        java.lang.ClassLoader classLoader8 = null;
        enhancer5.setClassLoader(classLoader8);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter10 = null;
        enhancer5.setCallbackFilter(callbackFilter10);
        enhancer5.setUseCache(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = enhancer5.getNamingPolicy();
        boolean boolean15 = enhancer5.getAttemptLoad();
        enhancer5.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy19 = null;
        enhancer18.setNamingPolicy(namingPolicy19);
        java.lang.ClassLoader classLoader21 = null;
        enhancer18.setClassLoader(classLoader21);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter23 = null;
        enhancer18.setCallbackFilter(callbackFilter23);
        org.mockito.cglib.proxy.Callback callback25 = null;
        enhancer18.setCallback(callback25);
        enhancer18.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy30 = null;
        enhancer29.setNamingPolicy(namingPolicy30);
        java.lang.ClassLoader classLoader32 = null;
        enhancer29.setClassLoader(classLoader32);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter34 = null;
        enhancer29.setCallbackFilter(callbackFilter34);
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy37 = null;
        enhancer36.setNamingPolicy(namingPolicy37);
        java.lang.ClassLoader classLoader39 = null;
        enhancer36.setClassLoader(classLoader39);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter41 = null;
        enhancer36.setCallbackFilter(callbackFilter41);
        org.mockito.cglib.proxy.Callback callback43 = null;
        enhancer36.setCallback(callback43);
        java.lang.ClassLoader classLoader45 = null;
        enhancer36.setClassLoader(classLoader45);
        enhancer36.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy50 = null;
        enhancer49.setNamingPolicy(namingPolicy50);
        java.lang.ClassLoader classLoader52 = null;
        enhancer49.setClassLoader(classLoader52);
        boolean boolean54 = enhancer49.getAttemptLoad();
        enhancer49.setUseCache(true);
        java.lang.ClassLoader classLoader57 = enhancer49.getClassLoader();
        enhancer36.setClassLoader(classLoader57);
        enhancer29.setClassLoader(classLoader57);
        enhancer18.setClassLoader(classLoader57);
        enhancer5.setClassLoader(classLoader57);
        enhancer0.setClassLoader(classLoader57);
        enhancer0.setUseCache(false);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.junit.Assert.assertNotNull(namingPolicy14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(classLoader57);
    }

    @Test
    public void test21641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21641");
        org.mockito.cglib.core.Signature signature2 = new org.mockito.cglib.core.Signature("hi!", "B");
        java.lang.String str3 = signature2.toString();
        org.mockito.asm.ClassVisitor classVisitor4 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter(classVisitor4);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter(classVisitor4);
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter6);
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter7);
        boolean boolean9 = signature2.equals((java.lang.Object) classEmitter8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter(classVisitor11);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter(classVisitor11);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        classEmitter13.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.asm.ClassVisitor classVisitor19 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter(classVisitor19);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter(classVisitor19);
        org.mockito.cglib.core.ClassInfo classInfo22 = classEmitter21.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.asm.ClassVisitor classVisitor25 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter(classVisitor25);
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter(classVisitor25);
        org.mockito.cglib.core.ClassInfo classInfo28 = classEmitter27.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo29 = classEmitter27.getClassInfo();
        classEmitter24.setTarget((org.mockito.asm.ClassVisitor) classEmitter27);
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter27);
        org.mockito.asm.ClassVisitor classVisitor32 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter(classVisitor32);
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter(classVisitor32);
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter(classVisitor32);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter35);
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter36);
        classEmitter8.setTarget((org.mockito.asm.ClassVisitor) classEmitter36);
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.asm.ClassVisitor classVisitor40 = null;
        classEmitter39.setTarget(classVisitor40);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.core.CodeEmitter codeEmitter42 = classEmitter39.getStaticHook();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!B" + "'", str3, "hi!B");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(classInfo22);
        org.junit.Assert.assertNull(classInfo28);
        org.junit.Assert.assertNull(classInfo29);
    }

    @Test
    public void test21642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21642");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("L552874825");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21643");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        enhancer0.setUseCache(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy9 = enhancer0.getNamingPolicy();
        enhancer0.setAttemptLoad(false);
        boolean boolean12 = enhancer0.getUseCache();
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy15 = null;
        enhancer14.setNamingPolicy(namingPolicy15);
        java.lang.ClassLoader classLoader17 = null;
        enhancer14.setClassLoader(classLoader17);
        boolean boolean19 = enhancer14.getAttemptLoad();
        boolean boolean20 = enhancer14.getUseCache();
        org.mockito.cglib.proxy.Callback callback21 = null;
        enhancer14.setCallback(callback21);
        boolean boolean23 = enhancer14.getUseCache();
        org.mockito.cglib.proxy.Callback callback24 = null;
        enhancer14.setCallback(callback24);
        enhancer14.setAttemptLoad(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy28 = enhancer14.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy30 = null;
        enhancer29.setNamingPolicy(namingPolicy30);
        java.lang.ClassLoader classLoader32 = null;
        enhancer29.setClassLoader(classLoader32);
        boolean boolean34 = enhancer29.getAttemptLoad();
        java.lang.Class class35 = null;
        enhancer29.setSuperclass(class35);
        org.mockito.cglib.proxy.Callback callback37 = null;
        enhancer29.setCallback(callback37);
        java.lang.ClassLoader classLoader39 = enhancer29.getClassLoader();
        enhancer14.setClassLoader(classLoader39);
        enhancer0.setClassLoader(classLoader39);
        java.lang.ClassLoader classLoader42 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter43 = null;
        enhancer0.setCallbackFilter(callbackFilter43);
        org.junit.Assert.assertNotNull(namingPolicy9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(namingPolicy13);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(generatorStrategy28);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertNotNull(classLoader42);
    }

    @Test
    public void test21644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21644");
        org.mockito.cglib.core.Signature signature2 = new org.mockito.cglib.core.Signature("L2103307875", "LL965545342;");
    }

    @Test
    public void test21645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21645");
        org.mockito.cglib.proxy.Enhancer enhancer2 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = null;
        enhancer2.setNamingPolicy(namingPolicy3);
        java.lang.ClassLoader classLoader5 = null;
        enhancer2.setClassLoader(classLoader5);
        java.lang.Class<?> wildcardClass7 = enhancer2.getClass();
        java.lang.String str8 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass7);
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass7);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass7);
        int int11 = type10.getSize();
        org.mockito.cglib.core.Local local12 = new org.mockito.cglib.core.Local(108, type10);
        org.mockito.cglib.core.Local local13 = new org.mockito.cglib.core.Local(108, type10);
        org.mockito.asm.Type type14 = local13.getType();
        java.lang.String str15 = type14.getClassName();
        org.mockito.asm.Type type16 = type14.getElementType();
        org.mockito.asm.ClassVisitor classVisitor17 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter(classVisitor17);
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter(classVisitor17);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter19);
        boolean boolean21 = type14.equals((java.lang.Object) classEmitter20);
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter20.visitSource("L643962425", "L1541996611");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str8, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.mockito.cglib.proxy.Enhancer" + "'", str15, "org.mockito.cglib.proxy.Enhancer");
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test21646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21646");
        org.mockito.cglib.proxy.Enhancer enhancer1 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy2 = null;
        enhancer1.setNamingPolicy(namingPolicy2);
        java.lang.ClassLoader classLoader4 = null;
        enhancer1.setClassLoader(classLoader4);
        org.mockito.cglib.proxy.Enhancer enhancer6 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = null;
        enhancer6.setNamingPolicy(namingPolicy7);
        java.lang.ClassLoader classLoader9 = null;
        enhancer6.setClassLoader(classLoader9);
        java.lang.Class<?> wildcardClass11 = enhancer6.getClass();
        java.lang.String str12 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass11);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = null;
        enhancer13.setNamingPolicy(namingPolicy14);
        java.lang.ClassLoader classLoader16 = null;
        enhancer13.setClassLoader(classLoader16);
        java.lang.Class<?> wildcardClass18 = enhancer13.getClass();
        java.lang.Class[] classArray19 = new java.lang.Class[] { wildcardClass11, wildcardClass18 };
        enhancer1.setInterfaces(classArray19);
        boolean boolean21 = enhancer1.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = null;
        enhancer22.setNamingPolicy(namingPolicy23);
        java.lang.ClassLoader classLoader25 = null;
        enhancer22.setClassLoader(classLoader25);
        java.lang.Class<?> wildcardClass27 = enhancer22.getClass();
        enhancer1.setSuperclass((java.lang.Class) wildcardClass27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass27);
        java.lang.String str30 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass27);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass27);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.BYTE_TYPE;
        int int34 = type33.getSize();
        java.lang.String str35 = type33.getClassName();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type37 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type38 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type39 = org.mockito.asm.Type.BYTE_TYPE;
        int int40 = type39.getSize();
        java.lang.String str41 = type39.getClassName();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str43 = type42.getClassName();
        org.mockito.asm.Type[] typeArray44 = new org.mockito.asm.Type[] { type36, type37, type38, type39, type42 };
        org.mockito.cglib.core.Signature signature45 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type33, typeArray44);
        java.lang.String str46 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray44);
        org.mockito.cglib.core.Local local47 = new org.mockito.cglib.core.Local(12, type31);
        org.mockito.asm.Type type48 = local47.getType();
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str12, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str30, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "byte" + "'", str35, "byte");
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "byte" + "'", str41, "byte");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "double" + "'", str43, "double");
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;" + "'", str46, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type48);
    }

    @Test
    public void test21647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21647");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        classEmitter2.setTarget((org.mockito.asm.ClassVisitor) classEmitter6);
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassInfo classInfo11 = classEmitter10.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.asm.ClassVisitor classVisitor14 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.cglib.core.ClassInfo classInfo17 = classEmitter16.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo18 = classEmitter16.getClassInfo();
        classEmitter13.setTarget((org.mockito.asm.ClassVisitor) classEmitter16);
        classEmitter6.setTarget((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        org.mockito.asm.ClassVisitor classVisitor23 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter(classVisitor23);
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter(classVisitor23);
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter25);
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter25);
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter28);
        classEmitter25.setTarget((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.asm.ClassVisitor classVisitor31 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter(classVisitor31);
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter(classVisitor31);
        org.mockito.cglib.core.ClassInfo classInfo34 = classEmitter33.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter33);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter35);
        org.mockito.asm.ClassVisitor classVisitor37 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter(classVisitor37);
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter(classVisitor37);
        org.mockito.cglib.core.ClassInfo classInfo40 = classEmitter39.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo41 = classEmitter39.getClassInfo();
        classEmitter36.setTarget((org.mockito.asm.ClassVisitor) classEmitter39);
        classEmitter29.setTarget((org.mockito.asm.ClassVisitor) classEmitter39);
        org.mockito.asm.ClassVisitor classVisitor44 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter(classVisitor44);
        org.mockito.cglib.core.ClassEmitter classEmitter46 = new org.mockito.cglib.core.ClassEmitter(classVisitor44);
        org.mockito.cglib.core.ClassEmitter classEmitter47 = new org.mockito.cglib.core.ClassEmitter(classVisitor44);
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter47);
        classEmitter29.setTarget((org.mockito.asm.ClassVisitor) classEmitter48);
        org.mockito.cglib.core.ClassInfo classInfo50 = classEmitter48.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter51 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter48);
        org.mockito.asm.ClassVisitor classVisitor52 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter53 = new org.mockito.cglib.core.ClassEmitter(classVisitor52);
        org.mockito.cglib.core.ClassEmitter classEmitter54 = new org.mockito.cglib.core.ClassEmitter(classVisitor52);
        org.mockito.cglib.core.ClassInfo classInfo55 = classEmitter54.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter56 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter54);
        org.mockito.cglib.core.ClassEmitter classEmitter57 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter56);
        org.mockito.cglib.core.ClassEmitter classEmitter58 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter57);
        org.mockito.cglib.core.ClassEmitter classEmitter59 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter57);
        classEmitter48.setTarget((org.mockito.asm.ClassVisitor) classEmitter57);
        org.mockito.cglib.core.ClassEmitter classEmitter61 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter48);
        classEmitter21.setTarget((org.mockito.asm.ClassVisitor) classEmitter61);
        org.mockito.asm.ClassVisitor classVisitor63 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter64 = new org.mockito.cglib.core.ClassEmitter(classVisitor63);
        org.mockito.cglib.core.ClassEmitter classEmitter65 = new org.mockito.cglib.core.ClassEmitter(classVisitor63);
        org.mockito.cglib.core.ClassInfo classInfo66 = classEmitter65.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter67 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter65);
        org.mockito.cglib.core.ClassInfo classInfo68 = classEmitter65.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter69 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter65);
        org.mockito.cglib.core.ClassEmitter classEmitter70 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter69);
        org.mockito.cglib.core.ClassEmitter classEmitter71 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter70);
        classEmitter61.setTarget((org.mockito.asm.ClassVisitor) classEmitter71);
        java.lang.String[] strArray78 = new java.lang.String[] {};
        // The following exception was thrown during execution in test generation
        try {
            classEmitter71.visit(117, 156, "L46483501", "L1204557438", "L328109209", strArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo11);
        org.junit.Assert.assertNull(classInfo17);
        org.junit.Assert.assertNull(classInfo18);
        org.junit.Assert.assertNull(classInfo34);
        org.junit.Assert.assertNull(classInfo40);
        org.junit.Assert.assertNull(classInfo41);
        org.junit.Assert.assertNull(classInfo50);
        org.junit.Assert.assertNull(classInfo55);
        org.junit.Assert.assertNull(classInfo66);
        org.junit.Assert.assertNull(classInfo68);
        org.junit.Assert.assertNotNull(strArray78);
    }

    @Test
    public void test21648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21648");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.Object obj1 = label0.info;
        java.lang.String str2 = label0.toString();
        java.lang.Object obj3 = label0.info;
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy5 = null;
        enhancer4.setNamingPolicy(namingPolicy5);
        java.lang.ClassLoader classLoader7 = null;
        enhancer4.setClassLoader(classLoader7);
        enhancer4.setUseFactory(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy11 = enhancer4.getNamingPolicy();
        label0.info = enhancer4;
        java.lang.Object obj13 = label0.info;
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy17 = null;
        enhancer16.setNamingPolicy(namingPolicy17);
        java.lang.ClassLoader classLoader19 = null;
        enhancer16.setClassLoader(classLoader19);
        java.lang.Class<?> wildcardClass21 = enhancer16.getClass();
        java.lang.String str22 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass21);
        boolean boolean23 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass21);
        int int25 = type24.getSize();
        org.mockito.cglib.core.Local local26 = new org.mockito.cglib.core.Local(108, type24);
        java.lang.String str27 = type24.getDescriptor();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.getObjectType("byte");
        org.mockito.asm.Type type30 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray31 = new org.mockito.asm.Type[] {};
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray31);
        java.lang.String str33 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray31);
        org.mockito.cglib.core.Signature signature34 = new org.mockito.cglib.core.Signature("J", type24, typeArray31);
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy37 = null;
        enhancer36.setNamingPolicy(namingPolicy37);
        java.lang.ClassLoader classLoader39 = null;
        enhancer36.setClassLoader(classLoader39);
        java.lang.Class<?> wildcardClass41 = enhancer36.getClass();
        java.lang.String str42 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass41);
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass41);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass41);
        int int46 = type44.getOpcode(128);
        org.mockito.cglib.core.Local local47 = new org.mockito.cglib.core.Local(108, type44);
        org.mockito.asm.Type type48 = local47.getType();
        boolean boolean49 = type24.equals((java.lang.Object) type48);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type51 = org.mockito.asm.Type.BYTE_TYPE;
        boolean boolean53 = type51.equals((java.lang.Object) 9);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type56 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray57 = new org.mockito.asm.Type[] {};
        java.lang.String str58 = org.mockito.asm.Type.getMethodDescriptor(type56, typeArray57);
        org.mockito.cglib.core.Signature signature59 = new org.mockito.cglib.core.Signature("double", type55, typeArray57);
        java.lang.String str60 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray57);
        java.lang.String str61 = org.mockito.asm.Type.getMethodDescriptor(type50, typeArray57);
        java.lang.String str62 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray57);
        java.lang.String str63 = type24.toString();
        label0.info = str63;
        org.mockito.asm.Label label65 = new org.mockito.asm.Label();
        java.lang.Object obj66 = label65.info;
        java.lang.String str67 = label65.toString();
        java.lang.Object obj68 = label65.info;
        org.mockito.cglib.proxy.Enhancer enhancer69 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy70 = null;
        enhancer69.setNamingPolicy(namingPolicy70);
        java.lang.ClassLoader classLoader72 = null;
        enhancer69.setClassLoader(classLoader72);
        enhancer69.setUseFactory(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy76 = enhancer69.getNamingPolicy();
        label65.info = enhancer69;
        java.lang.Object obj78 = label65.info;
        org.mockito.cglib.proxy.Enhancer enhancer79 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback80 = null;
        enhancer79.setCallback(callback80);
        org.mockito.cglib.proxy.Callback callback82 = null;
        enhancer79.setCallback(callback82);
        org.mockito.cglib.proxy.Enhancer enhancer84 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy85 = null;
        enhancer84.setNamingPolicy(namingPolicy85);
        java.lang.ClassLoader classLoader87 = null;
        enhancer84.setClassLoader(classLoader87);
        java.lang.Class<?> wildcardClass89 = enhancer84.getClass();
        java.lang.String str90 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass89);
        org.mockito.asm.Type type91 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass89);
        enhancer79.setSuperclass((java.lang.Class) wildcardClass89);
        label65.info = enhancer79;
        java.lang.Object obj94 = label65.info;
        java.lang.String str95 = label65.toString();
        label0.info = str95;
        org.junit.Assert.assertNull(obj1);
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "L912907007" + "'", str2, "L912907007");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(namingPolicy11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str22, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str27, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "()D" + "'", str32, "()D");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "()Lbyte;" + "'", str33, "()Lbyte;");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str42, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 132 + "'", int46 == 132);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "()D" + "'", str58, "()D");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "()B" + "'", str60, "()B");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "()F" + "'", str61, "()F");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "()Lorg/mockito/cglib/proxy/Enhancer;" + "'", str62, "()Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str63, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNull(obj66);
// flaky:         org.junit.Assert.assertEquals("'" + str67 + "' != '" + "L1688036349" + "'", str67, "L1688036349");
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(namingPolicy76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str90, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertNotNull(obj94);
// flaky:         org.junit.Assert.assertEquals("'" + str95 + "' != '" + "L1688036349" + "'", str95, "L1688036349");
    }

    @Test
    public void test21649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21649");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        enhancer0.setUseFactory(true);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy9 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy10 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy11 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter12 = null;
        enhancer0.setCallbackFilter(callbackFilter12);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy15 = null;
        enhancer14.setNamingPolicy(namingPolicy15);
        java.lang.ClassLoader classLoader17 = null;
        enhancer14.setClassLoader(classLoader17);
        org.mockito.cglib.proxy.Enhancer enhancer19 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy20 = null;
        enhancer19.setNamingPolicy(namingPolicy20);
        java.lang.ClassLoader classLoader22 = null;
        enhancer19.setClassLoader(classLoader22);
        java.lang.Class<?> wildcardClass24 = enhancer19.getClass();
        java.lang.String str25 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass24);
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = null;
        enhancer26.setNamingPolicy(namingPolicy27);
        java.lang.ClassLoader classLoader29 = null;
        enhancer26.setClassLoader(classLoader29);
        java.lang.Class<?> wildcardClass31 = enhancer26.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[] { wildcardClass24, wildcardClass31 };
        enhancer14.setInterfaces(classArray32);
        boolean boolean34 = enhancer14.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = null;
        enhancer35.setNamingPolicy(namingPolicy36);
        java.lang.ClassLoader classLoader38 = null;
        enhancer35.setClassLoader(classLoader38);
        java.lang.Class<?> wildcardClass40 = enhancer35.getClass();
        enhancer14.setSuperclass((java.lang.Class) wildcardClass40);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass40);
        java.lang.String str43 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass40);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass40);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass40);
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass40);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass40);
        enhancer0.setUseCache(false);
        enhancer0.setUseFactory(true);
        enhancer0.setUseFactory(false);
        java.lang.Class class54 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.setCallbackType(class54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy9);
        org.junit.Assert.assertNotNull(namingPolicy10);
        org.junit.Assert.assertNotNull(namingPolicy11);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str25, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str43, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test21650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21650");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter9 = null;
        enhancer0.setCallbackFilter(callbackFilter9);
        boolean boolean11 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Callback callback12 = null;
        enhancer0.setCallback(callback12);
        enhancer0.setUseCache(true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test21651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21651");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter13 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter12);
        org.mockito.asm.Label label14 = new org.mockito.asm.Label();
        java.lang.Object obj15 = label14.info;
        java.lang.String str16 = label14.toString();
        java.lang.Object obj17 = label14.info;
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy19 = null;
        enhancer18.setNamingPolicy(namingPolicy19);
        java.lang.ClassLoader classLoader21 = null;
        enhancer18.setClassLoader(classLoader21);
        enhancer18.setUseFactory(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = enhancer18.getNamingPolicy();
        label14.info = enhancer18;
        java.lang.String str27 = label14.toString();
        java.lang.String str28 = label14.toString();
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy30 = null;
        enhancer29.setNamingPolicy(namingPolicy30);
        java.lang.ClassLoader classLoader32 = null;
        enhancer29.setClassLoader(classLoader32);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter34 = null;
        enhancer29.setCallbackFilter(callbackFilter34);
        enhancer29.setUseCache(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy38 = enhancer29.getNamingPolicy();
        label14.info = namingPolicy38;
        java.lang.Object obj40 = label14.info;
        java.lang.Object obj41 = label14.info;
        java.lang.String str42 = label14.toString();
        java.lang.String str43 = label14.toString();
        java.lang.Object obj44 = label14.info;
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter13.visitLabel(label14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj15);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L1782915945" + "'", str16, "L1782915945");
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(namingPolicy25);
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "L1782915945" + "'", str27, "L1782915945");
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "L1782915945" + "'", str28, "L1782915945");
        org.junit.Assert.assertNotNull(namingPolicy38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
// flaky:         org.junit.Assert.assertEquals("'" + str42 + "' != '" + "L1782915945" + "'", str42, "L1782915945");
// flaky:         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "L1782915945" + "'", str43, "L1782915945");
        org.junit.Assert.assertNotNull(obj44);
    }

    @Test
    public void test21652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21652");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.asm.ClassVisitor classVisitor6 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassInfo classInfo9 = classEmitter8.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter10);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter13);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type17 = classEmitter16.getSuperType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo9);
    }

    @Test
    public void test21653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21653");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter3 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.asm.Label label8 = new org.mockito.asm.Label();
        java.lang.Object obj9 = label8.info;
        java.lang.String str10 = label8.toString();
        java.lang.String str11 = label8.toString();
        java.lang.Object obj12 = label8.info;
        java.lang.Object obj13 = label8.info;
        label8.info = "()B";
        java.lang.Object obj16 = label8.info;
        java.lang.Object obj17 = label8.info;
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy19 = null;
        enhancer18.setNamingPolicy(namingPolicy19);
        java.lang.ClassLoader classLoader21 = null;
        enhancer18.setClassLoader(classLoader21);
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy24 = null;
        enhancer23.setNamingPolicy(namingPolicy24);
        java.lang.ClassLoader classLoader26 = null;
        enhancer23.setClassLoader(classLoader26);
        java.lang.Class<?> wildcardClass28 = enhancer23.getClass();
        java.lang.String str29 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass28);
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = null;
        enhancer30.setNamingPolicy(namingPolicy31);
        java.lang.ClassLoader classLoader33 = null;
        enhancer30.setClassLoader(classLoader33);
        java.lang.Class<?> wildcardClass35 = enhancer30.getClass();
        java.lang.Class[] classArray36 = new java.lang.Class[] { wildcardClass28, wildcardClass35 };
        enhancer18.setInterfaces(classArray36);
        boolean boolean38 = enhancer18.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer39 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy40 = null;
        enhancer39.setNamingPolicy(namingPolicy40);
        java.lang.ClassLoader classLoader42 = null;
        enhancer39.setClassLoader(classLoader42);
        java.lang.Class<?> wildcardClass44 = enhancer39.getClass();
        enhancer18.setSuperclass((java.lang.Class) wildcardClass44);
        org.mockito.cglib.core.NamingPolicy namingPolicy46 = enhancer18.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy47 = enhancer18.getNamingPolicy();
        boolean boolean48 = enhancer18.getAttemptLoad();
        boolean boolean49 = enhancer18.getUseCache();
        label8.info = enhancer18;
        org.mockito.asm.ClassVisitor classVisitor51 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter52 = new org.mockito.cglib.core.ClassEmitter(classVisitor51);
        org.mockito.cglib.core.ClassEmitter classEmitter53 = new org.mockito.cglib.core.ClassEmitter(classVisitor51);
        org.mockito.cglib.core.ClassInfo classInfo54 = classEmitter53.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter55 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter53);
        java.lang.Class<?> wildcardClass56 = classEmitter55.getClass();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass56);
        java.lang.String str58 = type57.getDescriptor();
        java.lang.String str59 = type57.getClassName();
        java.lang.String str60 = type57.getDescriptor();
        org.mockito.asm.Type type61 = type57.getElementType();
        java.lang.String str62 = type61.getDescriptor();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.BYTE_TYPE;
        int int65 = type64.getSize();
        java.lang.String str66 = type64.getClassName();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type68 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type69 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type70 = org.mockito.asm.Type.BYTE_TYPE;
        int int71 = type70.getSize();
        java.lang.String str72 = type70.getClassName();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str74 = type73.getClassName();
        org.mockito.asm.Type[] typeArray75 = new org.mockito.asm.Type[] { type67, type68, type69, type70, type73 };
        org.mockito.cglib.core.Signature signature76 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type64, typeArray75);
        org.mockito.asm.Type[] typeArray77 = signature76.getArgumentTypes();
        java.lang.String str78 = signature76.toString();
        org.mockito.asm.Type[] typeArray79 = signature76.getArgumentTypes();
        java.lang.String str80 = org.mockito.asm.Type.getMethodDescriptor(type61, typeArray79);
        label8.info = str80;
        org.mockito.asm.Label[] labelArray82 = new org.mockito.asm.Label[] {};
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter5.visitTableSwitchInsn(101, (int) 'a', label8, labelArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L844647593" + "'", str10, "L844647593");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "L844647593" + "'", str11, "L844647593");
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "()B" + "'", obj16, "()B");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + "()B" + "'", obj17, "()B");
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str29, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(classArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(namingPolicy46);
        org.junit.Assert.assertNotNull(namingPolicy47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(classInfo54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Lorg/mockito/cglib/core/ClassEmitter;" + "'", str58, "Lorg/mockito/cglib/core/ClassEmitter;");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "org.mockito.cglib.core.ClassEmitter" + "'", str59, "org.mockito.cglib.core.ClassEmitter");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Lorg/mockito/cglib/core/ClassEmitter;" + "'", str60, "Lorg/mockito/cglib/core/ClassEmitter;");
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Lg/mockito/cglib/core/ClassEmitter;" + "'", str62, "Lg/mockito/cglib/core/ClassEmitter;");
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "byte" + "'", str66, "byte");
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "byte" + "'", str72, "byte");
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "double" + "'", str74, "double");
        org.junit.Assert.assertNotNull(typeArray75);
        org.junit.Assert.assertNotNull(typeArray77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B" + "'", str78, "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B");
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "(CBBBD)Lg/mockito/cglib/core/ClassEmitter;" + "'", str80, "(CBBBD)Lg/mockito/cglib/core/ClassEmitter;");
        org.junit.Assert.assertNotNull(labelArray82);
    }

    @Test
    public void test21654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21654");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.asm.ClassVisitor classVisitor6 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassInfo classInfo9 = classEmitter8.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter10);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.Signature signature16 = new org.mockito.cglib.core.Signature("hi!", "B");
        java.lang.String str17 = signature16.toString();
        org.mockito.asm.ClassVisitor classVisitor18 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter(classVisitor18);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter(classVisitor18);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        boolean boolean23 = signature16.equals((java.lang.Object) classEmitter22);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter22);
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.asm.ClassVisitor classVisitor26 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter(classVisitor26);
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter(classVisitor26);
        org.mockito.cglib.core.ClassInfo classInfo29 = classEmitter28.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter28);
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter30);
        org.mockito.asm.ClassVisitor classVisitor32 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter(classVisitor32);
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter(classVisitor32);
        org.mockito.cglib.core.ClassInfo classInfo35 = classEmitter34.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter34);
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter36);
        classEmitter31.setTarget((org.mockito.asm.ClassVisitor) classEmitter36);
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter31);
        org.mockito.cglib.core.Signature signature42 = new org.mockito.cglib.core.Signature("hi!", "B");
        java.lang.String str43 = signature42.toString();
        org.mockito.asm.ClassVisitor classVisitor44 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter(classVisitor44);
        org.mockito.cglib.core.ClassEmitter classEmitter46 = new org.mockito.cglib.core.ClassEmitter(classVisitor44);
        org.mockito.cglib.core.ClassEmitter classEmitter47 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter46);
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter47);
        boolean boolean49 = signature42.equals((java.lang.Object) classEmitter48);
        classEmitter31.setTarget((org.mockito.asm.ClassVisitor) classEmitter48);
        org.mockito.cglib.core.ClassInfo classInfo51 = classEmitter31.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo52 = classEmitter31.getClassInfo();
        classEmitter25.setTarget((org.mockito.asm.ClassVisitor) classEmitter31);
        org.mockito.cglib.core.ClassInfo classInfo54 = classEmitter25.getClassInfo();
        java.lang.Object obj59 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.FieldVisitor fieldVisitor60 = classEmitter25.visitField(64, "L1467683200", "L220469390", "L379426826", obj59);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo9);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!B" + "'", str17, "hi!B");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(classInfo29);
        org.junit.Assert.assertNull(classInfo35);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!B" + "'", str43, "hi!B");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(classInfo51);
        org.junit.Assert.assertNull(classInfo52);
        org.junit.Assert.assertNull(classInfo54);
    }

    @Test
    public void test21655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21655");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter13 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter14 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter14.visitInsn(0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21656");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getObjectType("byte");
        label0.info = "byte";
        java.lang.String str4 = label0.toString();
        org.mockito.asm.MethodVisitor methodVisitor9 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter10);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        label0.info = localVariablesSorter11;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter14 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        org.mockito.asm.Label label16 = new org.mockito.asm.Label();
        java.lang.Object obj17 = label16.info;
        java.lang.String str18 = label16.toString();
        java.lang.String str19 = label16.toString();
        java.lang.String str20 = label16.toString();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getReturnType("Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B");
        label16.info = type22;
        java.lang.Object obj24 = label16.info;
        java.lang.Object obj25 = label16.info;
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = null;
        enhancer28.setNamingPolicy(namingPolicy29);
        java.lang.ClassLoader classLoader31 = null;
        enhancer28.setClassLoader(classLoader31);
        java.lang.Class<?> wildcardClass33 = enhancer28.getClass();
        java.lang.String str34 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass33);
        boolean boolean35 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass33);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass33);
        int int37 = type36.getSize();
        org.mockito.cglib.core.Local local38 = new org.mockito.cglib.core.Local(108, type36);
        java.lang.String str39 = type36.getDescriptor();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.getObjectType("byte");
        org.mockito.asm.Type type42 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] {};
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray43);
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type41, typeArray43);
        org.mockito.cglib.core.Signature signature46 = new org.mockito.cglib.core.Signature("J", type36, typeArray43);
        java.lang.String str47 = signature46.toString();
        org.mockito.asm.Type[] typeArray48 = signature46.getArgumentTypes();
        label16.info = typeArray48;
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter11.visitLineNumber(100, label16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type2);
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L2063282235" + "'", str4, "L2063282235");
        org.junit.Assert.assertNull(obj17);
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "L1755139456" + "'", str18, "L1755139456");
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1755139456" + "'", str19, "L1755139456");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1755139456" + "'", str20, "L1755139456");
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "B");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "B");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "B");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "B");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "B");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "B");
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str34, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str39, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "()D" + "'", str44, "()D");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "()Lbyte;" + "'", str45, "()Lbyte;");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "J()Lorg/mockito/cglib/proxy/Enhancer;" + "'", str47, "J()Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(typeArray48);
    }

    @Test
    public void test21657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21657");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy12 = null;
        enhancer11.setNamingPolicy(namingPolicy12);
        java.lang.ClassLoader classLoader14 = null;
        enhancer11.setClassLoader(classLoader14);
        boolean boolean16 = enhancer11.getAttemptLoad();
        java.lang.Class class17 = null;
        enhancer11.setSuperclass(class17);
        java.lang.ClassLoader classLoader19 = enhancer11.getClassLoader();
        boolean boolean20 = enhancer11.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = null;
        enhancer21.setNamingPolicy(namingPolicy22);
        java.lang.ClassLoader classLoader24 = null;
        enhancer21.setClassLoader(classLoader24);
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = null;
        enhancer26.setNamingPolicy(namingPolicy27);
        java.lang.ClassLoader classLoader29 = null;
        enhancer26.setClassLoader(classLoader29);
        java.lang.Class<?> wildcardClass31 = enhancer26.getClass();
        java.lang.String str32 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass31);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy34 = null;
        enhancer33.setNamingPolicy(namingPolicy34);
        java.lang.ClassLoader classLoader36 = null;
        enhancer33.setClassLoader(classLoader36);
        java.lang.Class<?> wildcardClass38 = enhancer33.getClass();
        java.lang.Class[] classArray39 = new java.lang.Class[] { wildcardClass31, wildcardClass38 };
        enhancer21.setInterfaces(classArray39);
        boolean boolean41 = enhancer21.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy43 = null;
        enhancer42.setNamingPolicy(namingPolicy43);
        java.lang.ClassLoader classLoader45 = null;
        enhancer42.setClassLoader(classLoader45);
        java.lang.Class<?> wildcardClass47 = enhancer42.getClass();
        enhancer21.setSuperclass((java.lang.Class) wildcardClass47);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass47);
        java.lang.String str50 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass47);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass47);
        enhancer11.setSuperclass((java.lang.Class) wildcardClass47);
        org.mockito.cglib.core.NamingPolicy namingPolicy53 = enhancer11.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy53);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy55 = enhancer0.getStrategy();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy58 = enhancer0.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy59 = enhancer0.getNamingPolicy();
        enhancer0.setAttemptLoad(true);
        boolean boolean62 = enhancer0.getUseCache();
        enhancer0.setUseCache(true);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter65 = null;
        enhancer0.setCallbackFilter(callbackFilter65);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy67 = enhancer0.getStrategy();
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(classLoader19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str32, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(classArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str50, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(namingPolicy53);
        org.junit.Assert.assertNotNull(generatorStrategy55);
        org.junit.Assert.assertNotNull(generatorStrategy58);
        org.junit.Assert.assertNotNull(namingPolicy59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(generatorStrategy67);
    }

    @Test
    public void test21658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21658");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter3);
        org.mockito.asm.ClassVisitor classVisitor5 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter(classVisitor5);
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter(classVisitor5);
        org.mockito.cglib.core.ClassInfo classInfo8 = classEmitter7.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter9);
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter(classVisitor11);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter(classVisitor11);
        org.mockito.cglib.core.ClassInfo classInfo14 = classEmitter13.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter15);
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classEmitter15);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        classEmitter3.setTarget((org.mockito.asm.ClassVisitor) classEmitter18);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter3);
        org.mockito.asm.ClassVisitor classVisitor21 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassInfo classInfo24 = classEmitter23.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter25);
        org.mockito.cglib.core.ClassInfo classInfo27 = classEmitter26.getClassInfo();
        classEmitter20.setTarget((org.mockito.asm.ClassVisitor) classEmitter26);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter26.visitInnerClass("L479053486", "L1833137381", "L1402297421()Lorg/mockito/cglib/core/ClassEmitter;", 125);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo8);
        org.junit.Assert.assertNull(classInfo14);
        org.junit.Assert.assertNull(classInfo24);
        org.junit.Assert.assertNull(classInfo27);
    }

    @Test
    public void test21659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21659");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter10);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter10.visitTypeInsn(0, "L216607661L1453986669");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21660");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;");
        org.mockito.cglib.proxy.Enhancer enhancer6 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = null;
        enhancer6.setNamingPolicy(namingPolicy7);
        java.lang.ClassLoader classLoader9 = null;
        enhancer6.setClassLoader(classLoader9);
        java.lang.Class<?> wildcardClass11 = enhancer6.getClass();
        java.lang.String str12 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass11);
        boolean boolean13 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass11);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass11);
        int int15 = type14.getSize();
        org.mockito.cglib.core.Local local16 = new org.mockito.cglib.core.Local(108, type14);
        java.lang.String str17 = type14.getDescriptor();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getObjectType("byte");
        org.mockito.asm.Type type20 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray21 = new org.mockito.asm.Type[] {};
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray21);
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type19, typeArray21);
        org.mockito.cglib.core.Signature signature24 = new org.mockito.cglib.core.Signature("J", type14, typeArray21);
        org.mockito.asm.Type type25 = signature24.getReturnType();
        org.mockito.asm.MethodVisitor methodVisitor30 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter31 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor30);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter32 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter31);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter33 = new org.mockito.cglib.core.LocalVariablesSorter(56, "()Lorg/mockito/cglib/core/ClassEmitter;", (org.mockito.asm.MethodVisitor) localVariablesSorter31);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter34 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter33);
        boolean boolean35 = signature24.equals((java.lang.Object) localVariablesSorter34);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter36 = new org.mockito.cglib.core.LocalVariablesSorter(96, "(CBBBD)Lbyte;", (org.mockito.asm.MethodVisitor) localVariablesSorter34);
        boolean boolean37 = type1.equals((java.lang.Object) localVariablesSorter36);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray41 = new org.mockito.asm.Type[] {};
        java.lang.String str42 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray41);
        org.mockito.cglib.core.Local local43 = new org.mockito.cglib.core.Local((int) 'a', type40);
        org.mockito.asm.Type type44 = local43.getType();
        org.mockito.asm.Type type45 = local43.getType();
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy50 = null;
        enhancer49.setNamingPolicy(namingPolicy50);
        java.lang.ClassLoader classLoader52 = null;
        enhancer49.setClassLoader(classLoader52);
        java.lang.Class<?> wildcardClass54 = enhancer49.getClass();
        java.lang.String str55 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass54);
        boolean boolean56 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass54);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass54);
        int int58 = type57.getSize();
        org.mockito.cglib.core.Local local59 = new org.mockito.cglib.core.Local(108, type57);
        org.mockito.cglib.core.Local local60 = new org.mockito.cglib.core.Local(108, type57);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.FLOAT_TYPE;
        int int62 = type61.getSize();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.BYTE_TYPE;
        boolean boolean65 = type63.equals((java.lang.Object) 9);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type68 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray69 = new org.mockito.asm.Type[] {};
        java.lang.String str70 = org.mockito.asm.Type.getMethodDescriptor(type68, typeArray69);
        org.mockito.cglib.core.Signature signature71 = new org.mockito.cglib.core.Signature("double", type67, typeArray69);
        java.lang.String str72 = org.mockito.asm.Type.getMethodDescriptor(type63, typeArray69);
        java.lang.String str73 = org.mockito.asm.Type.getMethodDescriptor(type61, typeArray69);
        org.mockito.cglib.core.Signature signature74 = new org.mockito.cglib.core.Signature("", type57, typeArray69);
        org.mockito.cglib.core.Signature signature75 = new org.mockito.cglib.core.Signature("L1950652749", type45, typeArray69);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter36.visitLdcInsn((java.lang.Object) typeArray69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str12, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str17, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "()D" + "'", str22, "()D");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "()Lbyte;" + "'", str23, "()Lbyte;");
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "()D" + "'", str42, "()D");
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str55, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(typeArray69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "()D" + "'", str70, "()D");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "()B" + "'", str72, "()B");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "()F" + "'", str73, "()F");
    }

    @Test
    public void test21661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21661");
        org.mockito.cglib.proxy.Enhancer enhancer1 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy2 = null;
        enhancer1.setNamingPolicy(namingPolicy2);
        java.lang.ClassLoader classLoader4 = null;
        enhancer1.setClassLoader(classLoader4);
        java.lang.Class<?> wildcardClass6 = enhancer1.getClass();
        java.lang.String str7 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass6);
        boolean boolean8 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass6);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy11 = null;
        enhancer10.setNamingPolicy(namingPolicy11);
        java.lang.ClassLoader classLoader13 = null;
        enhancer10.setClassLoader(classLoader13);
        java.lang.Class<?> wildcardClass15 = enhancer10.getClass();
        java.lang.String str16 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass15);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass15);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type20 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray21 = new org.mockito.asm.Type[] {};
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray21);
        org.mockito.cglib.core.Signature signature23 = new org.mockito.cglib.core.Signature("double", type19, typeArray21);
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray21);
        org.mockito.cglib.core.Signature signature25 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type9, typeArray21);
        java.lang.String str26 = type9.getInternalName();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.getReturnType("Lorg/mockito/cglib/proxy/Enhancer;");
        org.mockito.asm.Type type30 = org.mockito.asm.Type.BYTE_TYPE;
        int int31 = type30.getSize();
        java.lang.String str32 = type30.getClassName();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type34 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type36 = org.mockito.asm.Type.BYTE_TYPE;
        int int37 = type36.getSize();
        java.lang.String str38 = type36.getClassName();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str40 = type39.getClassName();
        org.mockito.asm.Type[] typeArray41 = new org.mockito.asm.Type[] { type33, type34, type35, type36, type39 };
        org.mockito.cglib.core.Signature signature42 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type30, typeArray41);
        org.mockito.asm.Type[] typeArray43 = signature42.getArgumentTypes();
        java.lang.String str44 = signature42.toString();
        org.mockito.cglib.core.Signature signature47 = new org.mockito.cglib.core.Signature("byte", "()D");
        boolean boolean48 = signature42.equals((java.lang.Object) signature47);
        java.lang.String str49 = signature42.getDescriptor();
        boolean boolean50 = type28.equals((java.lang.Object) signature42);
        org.mockito.asm.Label label51 = new org.mockito.asm.Label();
        java.lang.Object obj52 = label51.info;
        java.lang.String str53 = label51.toString();
        java.lang.Object obj54 = label51.info;
        java.lang.Object obj55 = label51.info;
        boolean boolean56 = signature42.equals(obj55);
        org.mockito.asm.Type[] typeArray57 = signature42.getArgumentTypes();
        java.lang.String str58 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray57);
        int int59 = type9.getDimensions();
        java.lang.String str60 = type9.toString();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str7, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str16, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "()D" + "'", str22, "()D");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "()Lorg/mockito/cglib/proxy/Enhancer;" + "'", str24, "()Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str26, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "byte" + "'", str32, "byte");
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "byte" + "'", str38, "byte");
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "double" + "'", str40, "double");
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B" + "'", str44, "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(CBBBD)B" + "'", str49, "(CBBBD)B");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(obj52);
// flaky:         org.junit.Assert.assertEquals("'" + str53 + "' != '" + "L376902349" + "'", str53, "L376902349");
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;" + "'", str58, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str60, "Lorg/mockito/cglib/proxy/Enhancer;");
    }

    @Test
    public void test21662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21662");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str1 = type0.getClassName();
        int int2 = type0.getSort();
        java.lang.String str3 = type0.toString();
        int int5 = type0.getOpcode(6);
        int int6 = type0.getSize();
        int int7 = type0.getSize();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "double" + "'", str1, "double");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 8 + "'", int2 == 8);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "D" + "'", str3, "D");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 9 + "'", int5 == 9);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
    }

    @Test
    public void test21663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21663");
        org.mockito.cglib.core.Signature signature2 = new org.mockito.cglib.core.Signature("hi!", "B");
        java.lang.String str3 = signature2.toString();
        org.mockito.asm.ClassVisitor classVisitor4 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter(classVisitor4);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter(classVisitor4);
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter6);
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter7);
        boolean boolean9 = signature2.equals((java.lang.Object) classEmitter8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter(classVisitor11);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter(classVisitor11);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        classEmitter13.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.asm.ClassVisitor classVisitor19 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter(classVisitor19);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter(classVisitor19);
        org.mockito.cglib.core.ClassInfo classInfo22 = classEmitter21.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.asm.ClassVisitor classVisitor25 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter(classVisitor25);
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter(classVisitor25);
        org.mockito.cglib.core.ClassInfo classInfo28 = classEmitter27.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo29 = classEmitter27.getClassInfo();
        classEmitter24.setTarget((org.mockito.asm.ClassVisitor) classEmitter27);
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter27);
        org.mockito.asm.ClassVisitor classVisitor32 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter(classVisitor32);
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter(classVisitor32);
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter(classVisitor32);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter35);
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter36);
        classEmitter8.setTarget((org.mockito.asm.ClassVisitor) classEmitter36);
        org.mockito.cglib.core.ClassInfo classInfo39 = classEmitter36.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor40 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter(classVisitor40);
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter(classVisitor40);
        org.mockito.cglib.core.ClassInfo classInfo43 = classEmitter42.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter42);
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter44);
        org.mockito.asm.ClassVisitor classVisitor46 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter47 = new org.mockito.cglib.core.ClassEmitter(classVisitor46);
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter(classVisitor46);
        org.mockito.cglib.core.ClassInfo classInfo49 = classEmitter48.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo50 = classEmitter48.getClassInfo();
        classEmitter45.setTarget((org.mockito.asm.ClassVisitor) classEmitter48);
        org.mockito.asm.ClassVisitor classVisitor52 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter53 = new org.mockito.cglib.core.ClassEmitter(classVisitor52);
        org.mockito.cglib.core.ClassEmitter classEmitter54 = new org.mockito.cglib.core.ClassEmitter(classVisitor52);
        org.mockito.cglib.core.ClassInfo classInfo55 = classEmitter54.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter56 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter54);
        org.mockito.cglib.core.ClassEmitter classEmitter57 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter56);
        org.mockito.cglib.core.ClassEmitter classEmitter58 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter57);
        org.mockito.cglib.core.ClassEmitter classEmitter59 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter57);
        classEmitter48.setTarget((org.mockito.asm.ClassVisitor) classEmitter57);
        org.mockito.cglib.core.ClassEmitter classEmitter61 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter62 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter61);
        org.mockito.cglib.core.ClassInfo classInfo63 = classEmitter62.getClassInfo();
        classEmitter57.setTarget((org.mockito.asm.ClassVisitor) classEmitter62);
        classEmitter36.setTarget((org.mockito.asm.ClassVisitor) classEmitter57);
        org.mockito.cglib.core.ClassInfo classInfo66 = classEmitter57.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter67 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter57);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type68 = classEmitter67.getSuperType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!B" + "'", str3, "hi!B");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(classInfo22);
        org.junit.Assert.assertNull(classInfo28);
        org.junit.Assert.assertNull(classInfo29);
        org.junit.Assert.assertNull(classInfo39);
        org.junit.Assert.assertNull(classInfo43);
        org.junit.Assert.assertNull(classInfo49);
        org.junit.Assert.assertNull(classInfo50);
        org.junit.Assert.assertNull(classInfo55);
        org.junit.Assert.assertNull(classInfo63);
        org.junit.Assert.assertNull(classInfo66);
    }

    @Test
    public void test21664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21664");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = null;
        enhancer5.setNamingPolicy(namingPolicy6);
        java.lang.ClassLoader classLoader8 = null;
        enhancer5.setClassLoader(classLoader8);
        java.lang.Class<?> wildcardClass10 = enhancer5.getClass();
        java.lang.String str11 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass10);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = null;
        enhancer12.setNamingPolicy(namingPolicy13);
        java.lang.ClassLoader classLoader15 = null;
        enhancer12.setClassLoader(classLoader15);
        java.lang.Class<?> wildcardClass17 = enhancer12.getClass();
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass10, wildcardClass17 };
        enhancer0.setInterfaces(classArray18);
        boolean boolean20 = enhancer0.getAttemptLoad();
        boolean boolean21 = enhancer0.getAttemptLoad();
        enhancer0.setUseFactory(false);
        enhancer0.setAttemptLoad(false);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = null;
        enhancer28.setNamingPolicy(namingPolicy29);
        java.lang.ClassLoader classLoader31 = null;
        enhancer28.setClassLoader(classLoader31);
        enhancer28.setUseFactory(true);
        boolean boolean35 = enhancer28.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy36 = null;
        enhancer28.setStrategy(generatorStrategy36);
        enhancer28.setUseFactory(false);
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy41 = null;
        enhancer40.setNamingPolicy(namingPolicy41);
        java.lang.ClassLoader classLoader43 = null;
        enhancer40.setClassLoader(classLoader43);
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy46 = null;
        enhancer45.setNamingPolicy(namingPolicy46);
        java.lang.ClassLoader classLoader48 = null;
        enhancer45.setClassLoader(classLoader48);
        java.lang.Class<?> wildcardClass50 = enhancer45.getClass();
        java.lang.String str51 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass50);
        org.mockito.cglib.proxy.Enhancer enhancer52 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy53 = null;
        enhancer52.setNamingPolicy(namingPolicy53);
        java.lang.ClassLoader classLoader55 = null;
        enhancer52.setClassLoader(classLoader55);
        java.lang.Class<?> wildcardClass57 = enhancer52.getClass();
        java.lang.Class[] classArray58 = new java.lang.Class[] { wildcardClass50, wildcardClass57 };
        enhancer40.setInterfaces(classArray58);
        boolean boolean60 = enhancer40.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer61 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy62 = null;
        enhancer61.setNamingPolicy(namingPolicy62);
        java.lang.ClassLoader classLoader64 = null;
        enhancer61.setClassLoader(classLoader64);
        java.lang.Class<?> wildcardClass66 = enhancer61.getClass();
        enhancer40.setSuperclass((java.lang.Class) wildcardClass66);
        java.lang.String str68 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass66);
        enhancer28.setSuperclass((java.lang.Class) wildcardClass66);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass66);
        java.lang.String str71 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass66);
        java.lang.String str72 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str11, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str51, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str68, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str71, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str72, "Lorg/mockito/cglib/proxy/Enhancer;");
    }

    @Test
    public void test21665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21665");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        enhancer0.setAttemptLoad(false);
        enhancer0.setUseCache(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy7 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy9 = null;
        enhancer8.setNamingPolicy(namingPolicy9);
        java.lang.ClassLoader classLoader11 = null;
        enhancer8.setClassLoader(classLoader11);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = null;
        enhancer13.setNamingPolicy(namingPolicy14);
        java.lang.ClassLoader classLoader16 = null;
        enhancer13.setClassLoader(classLoader16);
        java.lang.Class<?> wildcardClass18 = enhancer13.getClass();
        java.lang.String str19 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = null;
        enhancer20.setNamingPolicy(namingPolicy21);
        java.lang.ClassLoader classLoader23 = null;
        enhancer20.setClassLoader(classLoader23);
        java.lang.Class<?> wildcardClass25 = enhancer20.getClass();
        java.lang.Class[] classArray26 = new java.lang.Class[] { wildcardClass18, wildcardClass25 };
        enhancer8.setInterfaces(classArray26);
        enhancer8.setUseCache(false);
        enhancer8.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy33 = null;
        enhancer32.setNamingPolicy(namingPolicy33);
        java.lang.ClassLoader classLoader35 = null;
        enhancer32.setClassLoader(classLoader35);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy38 = null;
        enhancer37.setNamingPolicy(namingPolicy38);
        java.lang.ClassLoader classLoader40 = null;
        enhancer37.setClassLoader(classLoader40);
        java.lang.Class<?> wildcardClass42 = enhancer37.getClass();
        java.lang.String str43 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass42);
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy45 = null;
        enhancer44.setNamingPolicy(namingPolicy45);
        java.lang.ClassLoader classLoader47 = null;
        enhancer44.setClassLoader(classLoader47);
        java.lang.Class<?> wildcardClass49 = enhancer44.getClass();
        java.lang.Class[] classArray50 = new java.lang.Class[] { wildcardClass42, wildcardClass49 };
        enhancer32.setInterfaces(classArray50);
        enhancer8.setInterfaces(classArray50);
        enhancer0.setInterfaces(classArray50);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj54 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callbacks are required");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy7);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str19, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str43, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(classArray50);
    }

    @Test
    public void test21666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21666");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = null;
        enhancer5.setNamingPolicy(namingPolicy6);
        java.lang.ClassLoader classLoader8 = null;
        enhancer5.setClassLoader(classLoader8);
        java.lang.Class<?> wildcardClass10 = enhancer5.getClass();
        java.lang.String str11 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass10);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = null;
        enhancer12.setNamingPolicy(namingPolicy13);
        java.lang.ClassLoader classLoader15 = null;
        enhancer12.setClassLoader(classLoader15);
        java.lang.Class<?> wildcardClass17 = enhancer12.getClass();
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass10, wildcardClass17 };
        enhancer0.setInterfaces(classArray18);
        java.lang.ClassLoader classLoader20 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = null;
        enhancer21.setNamingPolicy(namingPolicy22);
        java.lang.ClassLoader classLoader24 = null;
        enhancer21.setClassLoader(classLoader24);
        boolean boolean26 = enhancer21.getAttemptLoad();
        enhancer21.setUseCache(true);
        java.lang.ClassLoader classLoader29 = enhancer21.getClassLoader();
        enhancer0.setClassLoader(classLoader29);
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy34 = null;
        enhancer33.setNamingPolicy(namingPolicy34);
        java.lang.ClassLoader classLoader36 = null;
        enhancer33.setClassLoader(classLoader36);
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy39 = null;
        enhancer38.setNamingPolicy(namingPolicy39);
        java.lang.ClassLoader classLoader41 = null;
        enhancer38.setClassLoader(classLoader41);
        java.lang.Class<?> wildcardClass43 = enhancer38.getClass();
        java.lang.String str44 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass43);
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy46 = null;
        enhancer45.setNamingPolicy(namingPolicy46);
        java.lang.ClassLoader classLoader48 = null;
        enhancer45.setClassLoader(classLoader48);
        java.lang.Class<?> wildcardClass50 = enhancer45.getClass();
        java.lang.Class[] classArray51 = new java.lang.Class[] { wildcardClass43, wildcardClass50 };
        enhancer33.setInterfaces(classArray51);
        boolean boolean53 = enhancer33.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = null;
        enhancer54.setNamingPolicy(namingPolicy55);
        java.lang.ClassLoader classLoader57 = null;
        enhancer54.setClassLoader(classLoader57);
        java.lang.Class<?> wildcardClass59 = enhancer54.getClass();
        enhancer33.setSuperclass((java.lang.Class) wildcardClass59);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass59);
        java.lang.String str62 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass59);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass59);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass59);
        java.lang.String str65 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass59);
        boolean boolean66 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass59);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass59);
        org.mockito.cglib.proxy.Enhancer enhancer68 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy69 = null;
        enhancer68.setNamingPolicy(namingPolicy69);
        java.lang.ClassLoader classLoader71 = null;
        enhancer68.setClassLoader(classLoader71);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter73 = null;
        enhancer68.setCallbackFilter(callbackFilter73);
        enhancer68.setUseCache(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy77 = enhancer68.getNamingPolicy();
        enhancer68.setAttemptLoad(false);
        enhancer68.setUseCache(false);
        java.lang.ClassLoader classLoader82 = enhancer68.getClassLoader();
        enhancer0.setClassLoader(classLoader82);
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.Callback callback86 = null;
        enhancer0.setCallback(callback86);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str11, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(classLoader20);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str44, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(classArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str62, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str65, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(namingPolicy77);
        org.junit.Assert.assertNotNull(classLoader82);
    }

    @Test
    public void test21667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21667");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter10);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy15 = null;
        enhancer14.setNamingPolicy(namingPolicy15);
        java.lang.ClassLoader classLoader17 = null;
        enhancer14.setClassLoader(classLoader17);
        java.lang.Class<?> wildcardClass19 = enhancer14.getClass();
        java.lang.String str20 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass19);
        boolean boolean21 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass19);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass19);
        boolean boolean23 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass19);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass19);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy26 = null;
        enhancer25.setNamingPolicy(namingPolicy26);
        java.lang.ClassLoader classLoader28 = null;
        enhancer25.setClassLoader(classLoader28);
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = null;
        enhancer30.setNamingPolicy(namingPolicy31);
        java.lang.ClassLoader classLoader33 = null;
        enhancer30.setClassLoader(classLoader33);
        java.lang.Class<?> wildcardClass35 = enhancer30.getClass();
        java.lang.String str36 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass35);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy38 = null;
        enhancer37.setNamingPolicy(namingPolicy38);
        java.lang.ClassLoader classLoader40 = null;
        enhancer37.setClassLoader(classLoader40);
        java.lang.Class<?> wildcardClass42 = enhancer37.getClass();
        java.lang.Class[] classArray43 = new java.lang.Class[] { wildcardClass35, wildcardClass42 };
        enhancer25.setInterfaces(classArray43);
        enhancer25.setUseCache(false);
        enhancer25.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy50 = null;
        enhancer49.setNamingPolicy(namingPolicy50);
        java.lang.ClassLoader classLoader52 = null;
        enhancer49.setClassLoader(classLoader52);
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = null;
        enhancer54.setNamingPolicy(namingPolicy55);
        java.lang.ClassLoader classLoader57 = null;
        enhancer54.setClassLoader(classLoader57);
        java.lang.Class<?> wildcardClass59 = enhancer54.getClass();
        java.lang.String str60 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass59);
        org.mockito.cglib.proxy.Enhancer enhancer61 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy62 = null;
        enhancer61.setNamingPolicy(namingPolicy62);
        java.lang.ClassLoader classLoader64 = null;
        enhancer61.setClassLoader(classLoader64);
        java.lang.Class<?> wildcardClass66 = enhancer61.getClass();
        java.lang.Class[] classArray67 = new java.lang.Class[] { wildcardClass59, wildcardClass66 };
        enhancer49.setInterfaces(classArray67);
        enhancer25.setInterfaces(classArray67);
        boolean boolean70 = type24.equals((java.lang.Object) classArray67);
        org.mockito.cglib.core.Local local71 = new org.mockito.cglib.core.Local(11, type24);
        org.mockito.cglib.core.Local local72 = new org.mockito.cglib.core.Local(52, type24);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter10.visitLdcInsn((java.lang.Object) type24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str20, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str36, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(classArray43);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str60, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(classArray67);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test21668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21668");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter13 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter12);
        org.mockito.asm.Label label15 = new org.mockito.asm.Label();
        java.lang.Object obj16 = label15.info;
        java.lang.String str17 = label15.toString();
        java.lang.String str18 = label15.toString();
        java.lang.Object obj19 = label15.info;
        java.lang.Object obj20 = label15.info;
        label15.info = "()B";
        java.lang.Object obj23 = label15.info;
        java.lang.String str24 = label15.toString();
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = null;
        enhancer26.setNamingPolicy(namingPolicy27);
        java.lang.ClassLoader classLoader29 = null;
        enhancer26.setClassLoader(classLoader29);
        java.lang.Class<?> wildcardClass31 = enhancer26.getClass();
        java.lang.String str32 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass31);
        boolean boolean33 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass31);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass31);
        int int35 = type34.getSize();
        org.mockito.cglib.core.Local local36 = new org.mockito.cglib.core.Local(108, type34);
        int int37 = local36.getIndex();
        org.mockito.asm.Type type38 = local36.getType();
        org.mockito.asm.Type type39 = local36.getType();
        label15.info = local36;
        java.lang.String str41 = label15.toString();
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy45 = null;
        enhancer44.setNamingPolicy(namingPolicy45);
        java.lang.ClassLoader classLoader47 = null;
        enhancer44.setClassLoader(classLoader47);
        java.lang.Class<?> wildcardClass49 = enhancer44.getClass();
        java.lang.String str50 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass49);
        boolean boolean51 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass49);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass49);
        int int53 = type52.getSize();
        org.mockito.cglib.core.Local local54 = new org.mockito.cglib.core.Local(108, type52);
        java.lang.String str55 = type52.getDescriptor();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.getObjectType("byte");
        org.mockito.asm.Type type58 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray59 = new org.mockito.asm.Type[] {};
        java.lang.String str60 = org.mockito.asm.Type.getMethodDescriptor(type58, typeArray59);
        java.lang.String str61 = org.mockito.asm.Type.getMethodDescriptor(type57, typeArray59);
        org.mockito.cglib.core.Signature signature62 = new org.mockito.cglib.core.Signature("J", type52, typeArray59);
        org.mockito.asm.Type type63 = signature62.getReturnType();
        org.mockito.asm.MethodVisitor methodVisitor68 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter69 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor68);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter70 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter69);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter71 = new org.mockito.cglib.core.LocalVariablesSorter(56, "()Lorg/mockito/cglib/core/ClassEmitter;", (org.mockito.asm.MethodVisitor) localVariablesSorter69);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter72 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter71);
        boolean boolean73 = signature62.equals((java.lang.Object) localVariablesSorter72);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter74 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter72);
        label15.info = localVariablesSorter72;
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter12.visitLineNumber(145, label15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj16);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "L884738580" + "'", str17, "L884738580");
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "L884738580" + "'", str18, "L884738580");
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "()B" + "'", obj23, "()B");
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "L884738580" + "'", str24, "L884738580");
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str32, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 108 + "'", int37 == 108);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type39);
// flaky:         org.junit.Assert.assertEquals("'" + str41 + "' != '" + "L884738580" + "'", str41, "L884738580");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str50, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str55, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "()D" + "'", str60, "()D");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "()Lbyte;" + "'", str61, "()Lbyte;");
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test21669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21669");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassInfo classInfo7 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo8 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo9 = classEmitter5.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor10 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter(classVisitor10);
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter(classVisitor10);
        org.mockito.cglib.core.ClassInfo classInfo13 = classEmitter12.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter15);
        org.mockito.cglib.core.ClassInfo classInfo17 = classEmitter15.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter15);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter15);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter15);
        org.mockito.cglib.core.ClassInfo classInfo21 = classEmitter15.getClassInfo();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.AnnotationVisitor annotationVisitor24 = classEmitter15.visitAnnotation("L1221751413", true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo7);
        org.junit.Assert.assertNull(classInfo8);
        org.junit.Assert.assertNull(classInfo9);
        org.junit.Assert.assertNull(classInfo13);
        org.junit.Assert.assertNull(classInfo17);
        org.junit.Assert.assertNull(classInfo21);
    }

    @Test
    public void test21670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21670");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassInfo classInfo7 = classEmitter5.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.asm.ClassVisitor classVisitor15 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter(classVisitor15);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter(classVisitor15);
        org.mockito.cglib.core.ClassInfo classInfo18 = classEmitter17.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter19);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassInfo classInfo23 = classEmitter20.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        classEmitter14.setTarget((org.mockito.asm.ClassVisitor) classEmitter24);
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassInfo classInfo29 = classEmitter14.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo30 = classEmitter14.getClassInfo();
        // The following exception was thrown during execution in test generation
        try {
            classEmitter14.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo7);
        org.junit.Assert.assertNull(classInfo18);
        org.junit.Assert.assertNull(classInfo23);
        org.junit.Assert.assertNull(classInfo29);
        org.junit.Assert.assertNull(classInfo30);
    }

    @Test
    public void test21671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21671");
        org.mockito.cglib.core.Signature signature3 = new org.mockito.cglib.core.Signature("byte", "()B");
        org.mockito.asm.Type type4 = signature3.getReturnType();
        org.mockito.cglib.core.Local local5 = new org.mockito.cglib.core.Local(116, type4);
        int int6 = local5.getIndex();
        int int7 = local5.getIndex();
        int int8 = local5.getIndex();
        org.mockito.asm.Type type9 = local5.getType();
        org.mockito.asm.Type type10 = local5.getType();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.getType("Lmockito/cglib/proxy/Enhancer;");
        java.lang.String str13 = type12.getInternalName();
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = null;
        enhancer15.setNamingPolicy(namingPolicy16);
        java.lang.ClassLoader classLoader18 = null;
        enhancer15.setClassLoader(classLoader18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = null;
        enhancer20.setNamingPolicy(namingPolicy21);
        java.lang.ClassLoader classLoader23 = null;
        enhancer20.setClassLoader(classLoader23);
        java.lang.Class<?> wildcardClass25 = enhancer20.getClass();
        java.lang.String str26 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass25);
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = null;
        enhancer27.setNamingPolicy(namingPolicy28);
        java.lang.ClassLoader classLoader30 = null;
        enhancer27.setClassLoader(classLoader30);
        java.lang.Class<?> wildcardClass32 = enhancer27.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[] { wildcardClass25, wildcardClass32 };
        enhancer15.setInterfaces(classArray33);
        boolean boolean35 = enhancer15.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy37 = null;
        enhancer36.setNamingPolicy(namingPolicy37);
        java.lang.ClassLoader classLoader39 = null;
        enhancer36.setClassLoader(classLoader39);
        java.lang.Class<?> wildcardClass41 = enhancer36.getClass();
        enhancer15.setSuperclass((java.lang.Class) wildcardClass41);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass41);
        java.lang.String str44 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass41);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass41);
        org.mockito.cglib.core.Local local46 = new org.mockito.cglib.core.Local((int) (byte) 100, type45);
        int int47 = local46.getIndex();
        org.mockito.asm.Type type48 = local46.getType();
        java.lang.String str49 = type48.getDescriptor();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.getObjectType("org.mockito.cglib.proxy.Enhancer()Lg/mockito/cglib/proxy/Enhancer;");
        java.lang.String str52 = type51.toString();
        org.mockito.asm.Type type53 = type51.getElementType();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.getObjectType("()Lorg/mockito/cglib/core/ClassEmitter;");
        org.mockito.cglib.proxy.Enhancer enhancer59 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy60 = null;
        enhancer59.setNamingPolicy(namingPolicy60);
        java.lang.ClassLoader classLoader62 = null;
        enhancer59.setClassLoader(classLoader62);
        java.lang.Class<?> wildcardClass64 = enhancer59.getClass();
        java.lang.String str65 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass64);
        boolean boolean66 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass64);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass64);
        int int68 = type67.getSize();
        org.mockito.cglib.core.Local local69 = new org.mockito.cglib.core.Local(108, type67);
        org.mockito.cglib.core.Local local70 = new org.mockito.cglib.core.Local(108, type67);
        org.mockito.asm.Type type71 = local70.getType();
        java.lang.String str72 = type71.getClassName();
        org.mockito.asm.Type type73 = type71.getElementType();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type76 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray77 = new org.mockito.asm.Type[] {};
        java.lang.String str78 = org.mockito.asm.Type.getMethodDescriptor(type76, typeArray77);
        org.mockito.cglib.core.Signature signature79 = new org.mockito.cglib.core.Signature("double", type75, typeArray77);
        java.lang.String str80 = signature79.toString();
        org.mockito.asm.Type[] typeArray81 = signature79.getArgumentTypes();
        org.mockito.cglib.core.Signature signature82 = new org.mockito.cglib.core.Signature("org.mockito.cglib.proxy.Enhancer", type73, typeArray81);
        java.lang.String str83 = org.mockito.asm.Type.getMethodDescriptor(type55, typeArray81);
        java.lang.String str84 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray81);
        java.lang.String str85 = org.mockito.asm.Type.getMethodDescriptor(type48, typeArray81);
        java.lang.String str86 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray81);
        java.lang.String str87 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray81);
        java.lang.String str88 = type10.getDescriptor();
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 116 + "'", int6 == 116);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 116 + "'", int7 == 116);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 116 + "'", int8 == 116);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "mockito/cglib/proxy/Enhancer" + "'", str13, "mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str26, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str44, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str49, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Lorg.mockito.cglib.proxy.Enhancer()Lg/mockito/cglib/proxy/Enhancer;;" + "'", str52, "Lorg.mockito.cglib.proxy.Enhancer()Lg/mockito/cglib/proxy/Enhancer;;");
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str65, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "org.mockito.cglib.proxy.Enhancer" + "'", str72, "org.mockito.cglib.proxy.Enhancer");
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(typeArray77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "()D" + "'", str78, "()D");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "double()B" + "'", str80, "double()B");
        org.junit.Assert.assertNotNull(typeArray81);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "()L()Lorg/mockito/cglib/core/ClassEmitter;;" + "'", str83, "()L()Lorg/mockito/cglib/core/ClassEmitter;;");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "()Lorg.mockito.cglib.proxy.Enhancer()Lg/mockito/cglib/proxy/Enhancer;;" + "'", str84, "()Lorg.mockito.cglib.proxy.Enhancer()Lg/mockito/cglib/proxy/Enhancer;;");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "()Lorg/mockito/cglib/proxy/Enhancer;" + "'", str85, "()Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "()Lmockito/cglib/proxy/Enhancer;" + "'", str86, "()Lmockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "()B" + "'", str87, "()B");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "B" + "'", str88, "B");
    }

    @Test
    public void test21672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21672");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor1);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter3);
        org.mockito.asm.ClassVisitor classVisitor6 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassInfo classInfo9 = classEmitter8.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.cglib.core.ClassInfo classInfo11 = classEmitter8.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.asm.ClassVisitor classVisitor14 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter18);
        classEmitter12.setTarget((org.mockito.asm.ClassVisitor) classEmitter18);
        org.mockito.asm.ClassVisitor classVisitor21 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassInfo classInfo24 = classEmitter23.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter25);
        org.mockito.asm.ClassVisitor classVisitor27 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter(classVisitor27);
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter(classVisitor27);
        org.mockito.cglib.core.ClassInfo classInfo30 = classEmitter29.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter31);
        classEmitter26.setTarget((org.mockito.asm.ClassVisitor) classEmitter31);
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter26);
        org.mockito.cglib.core.Signature signature37 = new org.mockito.cglib.core.Signature("hi!", "B");
        java.lang.String str38 = signature37.toString();
        org.mockito.asm.ClassVisitor classVisitor39 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter40 = new org.mockito.cglib.core.ClassEmitter(classVisitor39);
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter(classVisitor39);
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter41);
        org.mockito.cglib.core.ClassEmitter classEmitter43 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter42);
        boolean boolean44 = signature37.equals((java.lang.Object) classEmitter43);
        classEmitter26.setTarget((org.mockito.asm.ClassVisitor) classEmitter43);
        org.mockito.cglib.core.ClassInfo classInfo46 = classEmitter26.getClassInfo();
        classEmitter12.setTarget((org.mockito.asm.ClassVisitor) classEmitter26);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter26);
        org.mockito.asm.ClassVisitor classVisitor54 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter55 = new org.mockito.cglib.core.ClassEmitter(classVisitor54);
        org.mockito.cglib.core.ClassEmitter classEmitter56 = new org.mockito.cglib.core.ClassEmitter(classVisitor54);
        org.mockito.cglib.core.ClassInfo classInfo57 = classEmitter56.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter58 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter56);
        java.lang.Class<?> wildcardClass59 = classEmitter58.getClass();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass59);
        int int61 = type60.getSize();
        java.lang.String str62 = type60.getDescriptor();
        org.mockito.asm.Type[] typeArray64 = org.mockito.asm.Type.getArgumentTypes("()B");
        org.mockito.cglib.core.Signature signature65 = new org.mockito.cglib.core.Signature("L1402297421", type60, typeArray64);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.FieldVisitor fieldVisitor66 = classEmitter26.visitField(176, "L758088132", "L647241134", "L709432835", (java.lang.Object) type60);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo9);
        org.junit.Assert.assertNull(classInfo11);
        org.junit.Assert.assertNull(classInfo24);
        org.junit.Assert.assertNull(classInfo30);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!B" + "'", str38, "hi!B");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(classInfo46);
        org.junit.Assert.assertNull(classInfo57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Lorg/mockito/cglib/core/ClassEmitter;" + "'", str62, "Lorg/mockito/cglib/core/ClassEmitter;");
        org.junit.Assert.assertNotNull(typeArray64);
    }

    @Test
    public void test21673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21673");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        boolean boolean5 = enhancer0.getAttemptLoad();
        boolean boolean6 = enhancer0.getUseCache();
        boolean boolean7 = enhancer0.getAttemptLoad();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy11 = null;
        enhancer10.setNamingPolicy(namingPolicy11);
        java.lang.ClassLoader classLoader13 = null;
        enhancer10.setClassLoader(classLoader13);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter15 = null;
        enhancer10.setCallbackFilter(callbackFilter15);
        org.mockito.cglib.proxy.Callback callback17 = null;
        enhancer10.setCallback(callback17);
        java.lang.ClassLoader classLoader19 = null;
        enhancer10.setClassLoader(classLoader19);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy21 = null;
        enhancer10.setStrategy(generatorStrategy21);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer10.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = null;
        enhancer24.setNamingPolicy(namingPolicy25);
        java.lang.ClassLoader classLoader27 = null;
        enhancer24.setClassLoader(classLoader27);
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy30 = null;
        enhancer29.setNamingPolicy(namingPolicy30);
        java.lang.ClassLoader classLoader32 = null;
        enhancer29.setClassLoader(classLoader32);
        java.lang.Class<?> wildcardClass34 = enhancer29.getClass();
        java.lang.String str35 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass34);
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy37 = null;
        enhancer36.setNamingPolicy(namingPolicy37);
        java.lang.ClassLoader classLoader39 = null;
        enhancer36.setClassLoader(classLoader39);
        java.lang.Class<?> wildcardClass41 = enhancer36.getClass();
        java.lang.Class[] classArray42 = new java.lang.Class[] { wildcardClass34, wildcardClass41 };
        enhancer24.setInterfaces(classArray42);
        boolean boolean44 = enhancer24.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy46 = null;
        enhancer45.setNamingPolicy(namingPolicy46);
        java.lang.ClassLoader classLoader48 = null;
        enhancer45.setClassLoader(classLoader48);
        java.lang.Class<?> wildcardClass50 = enhancer45.getClass();
        enhancer24.setSuperclass((java.lang.Class) wildcardClass50);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass50);
        java.lang.String str53 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass50);
        enhancer10.setSuperclass((java.lang.Class) wildcardClass50);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass50);
        enhancer0.setUseFactory(true);
        enhancer0.setUseCache(false);
        java.lang.Class<?> wildcardClass60 = enhancer0.getClass();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str35, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(classArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str53, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(type61);
    }

    @Test
    public void test21674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21674");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("()Lbyte;");
        int int2 = type1.getDimensions();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str4 = type3.getClassName();
        int int5 = type3.getSize();
        java.lang.String str6 = type3.getClassName();
        java.lang.String str7 = type3.getDescriptor();
        int int9 = type3.getOpcode((int) (byte) 100);
        org.mockito.asm.Label label11 = new org.mockito.asm.Label();
        java.lang.Object obj12 = label11.info;
        java.lang.String str13 = label11.toString();
        java.lang.String str14 = label11.toString();
        java.lang.Object obj15 = label11.info;
        java.lang.Object obj16 = label11.info;
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy19 = null;
        enhancer18.setNamingPolicy(namingPolicy19);
        java.lang.ClassLoader classLoader21 = null;
        enhancer18.setClassLoader(classLoader21);
        java.lang.Class<?> wildcardClass23 = enhancer18.getClass();
        java.lang.String str24 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass23);
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass23);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass23);
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = null;
        enhancer27.setNamingPolicy(namingPolicy28);
        java.lang.ClassLoader classLoader30 = null;
        enhancer27.setClassLoader(classLoader30);
        java.lang.Class<?> wildcardClass32 = enhancer27.getClass();
        java.lang.String str33 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass32);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass32);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type37 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray38 = new org.mockito.asm.Type[] {};
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type37, typeArray38);
        org.mockito.cglib.core.Signature signature40 = new org.mockito.cglib.core.Signature("double", type36, typeArray38);
        java.lang.String str41 = org.mockito.asm.Type.getMethodDescriptor(type34, typeArray38);
        org.mockito.cglib.core.Signature signature42 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type26, typeArray38);
        label11.info = type26;
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy48 = null;
        enhancer47.setNamingPolicy(namingPolicy48);
        java.lang.ClassLoader classLoader50 = null;
        enhancer47.setClassLoader(classLoader50);
        java.lang.Class<?> wildcardClass52 = enhancer47.getClass();
        java.lang.String str53 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass52);
        boolean boolean54 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass52);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass52);
        int int56 = type55.getSize();
        org.mockito.cglib.core.Local local57 = new org.mockito.cglib.core.Local(108, type55);
        org.mockito.cglib.core.Local local58 = new org.mockito.cglib.core.Local(108, type55);
        org.mockito.asm.Type type59 = local58.getType();
        java.lang.String str60 = type59.getClassName();
        org.mockito.asm.Type type61 = type59.getElementType();
        int int62 = type59.getSize();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.BYTE_TYPE;
        int int65 = type64.getSize();
        java.lang.String str66 = type64.getClassName();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type68 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type69 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type70 = org.mockito.asm.Type.BYTE_TYPE;
        int int71 = type70.getSize();
        java.lang.String str72 = type70.getClassName();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str74 = type73.getClassName();
        org.mockito.asm.Type[] typeArray75 = new org.mockito.asm.Type[] { type67, type68, type69, type70, type73 };
        org.mockito.cglib.core.Signature signature76 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type64, typeArray75);
        org.mockito.asm.Type[] typeArray77 = signature76.getArgumentTypes();
        java.lang.String str78 = signature76.toString();
        org.mockito.cglib.core.Signature signature81 = new org.mockito.cglib.core.Signature("byte", "()D");
        boolean boolean82 = signature76.equals((java.lang.Object) signature81);
        java.lang.String str83 = signature81.getDescriptor();
        org.mockito.asm.Type[] typeArray84 = signature81.getArgumentTypes();
        org.mockito.cglib.core.Signature signature85 = new org.mockito.cglib.core.Signature("L609610250", type59, typeArray84);
        org.mockito.cglib.core.Signature signature86 = new org.mockito.cglib.core.Signature("L1282539201", type26, typeArray84);
        java.lang.String str87 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray84);
        java.lang.String str88 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray84);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "double" + "'", str4, "double");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "double" + "'", str6, "double");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "D" + "'", str7, "D");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 103 + "'", int9 == 103);
        org.junit.Assert.assertNull(obj12);
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "L395775908" + "'", str13, "L395775908");
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L395775908" + "'", str14, "L395775908");
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str24, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str33, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "()D" + "'", str39, "()D");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "()Lorg/mockito/cglib/proxy/Enhancer;" + "'", str41, "()Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str53, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "org.mockito.cglib.proxy.Enhancer" + "'", str60, "org.mockito.cglib.proxy.Enhancer");
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "byte" + "'", str66, "byte");
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "byte" + "'", str72, "byte");
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "double" + "'", str74, "double");
        org.junit.Assert.assertNotNull(typeArray75);
        org.junit.Assert.assertNotNull(typeArray77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B" + "'", str78, "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "()D" + "'", str83, "()D");
        org.junit.Assert.assertNotNull(typeArray84);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "()D" + "'", str87, "()D");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "()L()Lbyte;;" + "'", str88, "()L()Lbyte;;");
    }

    @Test
    public void test21675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21675");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        classEmitter2.setTarget((org.mockito.asm.ClassVisitor) classEmitter6);
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassInfo classInfo11 = classEmitter10.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.asm.ClassVisitor classVisitor14 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.cglib.core.ClassInfo classInfo17 = classEmitter16.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo18 = classEmitter16.getClassInfo();
        classEmitter13.setTarget((org.mockito.asm.ClassVisitor) classEmitter16);
        classEmitter6.setTarget((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.asm.ClassVisitor classVisitor21 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter24);
        classEmitter6.setTarget((org.mockito.asm.ClassVisitor) classEmitter25);
        org.mockito.cglib.core.ClassInfo classInfo27 = classEmitter25.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter25);
        org.mockito.asm.ClassVisitor classVisitor29 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter(classVisitor29);
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter(classVisitor29);
        org.mockito.cglib.core.ClassInfo classInfo32 = classEmitter31.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter31);
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter33);
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter34);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter34);
        classEmitter25.setTarget((org.mockito.asm.ClassVisitor) classEmitter34);
        org.mockito.cglib.core.ClassInfo classInfo38 = classEmitter25.getClassInfo();
        java.lang.String[] strArray49 = new java.lang.String[] { "L481542715", "Lmockito/cglib/proxy/Enhancer;(CBBBD)LLorg/mockito/cglib/proxy/Enhancer;(CBBBD)B;", "L901245027", "L901245027", "L1986743228" };
        // The following exception was thrown during execution in test generation
        try {
            classEmitter25.visit(37, 2, "L1219436756", "L1545770093", "", strArray49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo11);
        org.junit.Assert.assertNull(classInfo17);
        org.junit.Assert.assertNull(classInfo18);
        org.junit.Assert.assertNull(classInfo27);
        org.junit.Assert.assertNull(classInfo32);
        org.junit.Assert.assertNull(classInfo38);
        org.junit.Assert.assertNotNull(strArray49);
    }

    @Test
    public void test21676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21676");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        java.lang.Class<?> wildcardClass5 = enhancer0.getClass();
        java.lang.String str6 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass5);
        boolean boolean7 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        java.lang.String str12 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass5);
        boolean boolean13 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        java.lang.String str14 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass5);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str6, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str12, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str14, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type15);
    }

    @Test
    public void test21677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21677");
        org.mockito.asm.MethodVisitor methodVisitor8 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter13 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter14 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter15 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter14);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter16 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter14);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter17 = new org.mockito.cglib.core.LocalVariablesSorter(22, "()LLorg/mockito/cglib/proxy/Enhancer;", (org.mockito.asm.MethodVisitor) localVariablesSorter16);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter18 = new org.mockito.cglib.core.LocalVariablesSorter((int) (short) 0, "L948243695", (org.mockito.asm.MethodVisitor) localVariablesSorter17);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21678");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("L1797909087");
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy5 = null;
        enhancer4.setNamingPolicy(namingPolicy5);
        java.lang.ClassLoader classLoader7 = null;
        enhancer4.setClassLoader(classLoader7);
        java.lang.Class<?> wildcardClass9 = enhancer4.getClass();
        java.lang.String str10 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass9);
        boolean boolean11 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass9);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass9);
        int int14 = type12.getOpcode(128);
        org.mockito.cglib.core.Local local15 = new org.mockito.cglib.core.Local(108, type12);
        org.mockito.asm.Type type16 = local15.getType();
        org.mockito.cglib.proxy.Enhancer enhancer19 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy20 = null;
        enhancer19.setNamingPolicy(namingPolicy20);
        java.lang.ClassLoader classLoader22 = null;
        enhancer19.setClassLoader(classLoader22);
        java.lang.Class<?> wildcardClass24 = enhancer19.getClass();
        java.lang.String str25 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass24);
        boolean boolean26 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass24);
        int int28 = type27.getSize();
        org.mockito.cglib.core.Local local29 = new org.mockito.cglib.core.Local(108, type27);
        java.lang.String str30 = type27.getDescriptor();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.getObjectType("byte");
        org.mockito.asm.Type type33 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] {};
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type33, typeArray34);
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type32, typeArray34);
        org.mockito.cglib.core.Signature signature37 = new org.mockito.cglib.core.Signature("J", type27, typeArray34);
        org.mockito.cglib.proxy.Enhancer enhancer39 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy40 = null;
        enhancer39.setNamingPolicy(namingPolicy40);
        java.lang.ClassLoader classLoader42 = null;
        enhancer39.setClassLoader(classLoader42);
        java.lang.Class<?> wildcardClass44 = enhancer39.getClass();
        java.lang.String str45 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass44);
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass44);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass44);
        int int49 = type47.getOpcode(128);
        org.mockito.cglib.core.Local local50 = new org.mockito.cglib.core.Local(108, type47);
        org.mockito.asm.Type type51 = local50.getType();
        boolean boolean52 = type27.equals((java.lang.Object) type51);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type54 = org.mockito.asm.Type.BYTE_TYPE;
        boolean boolean56 = type54.equals((java.lang.Object) 9);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type59 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray60 = new org.mockito.asm.Type[] {};
        java.lang.String str61 = org.mockito.asm.Type.getMethodDescriptor(type59, typeArray60);
        org.mockito.cglib.core.Signature signature62 = new org.mockito.cglib.core.Signature("double", type58, typeArray60);
        java.lang.String str63 = org.mockito.asm.Type.getMethodDescriptor(type54, typeArray60);
        java.lang.String str64 = org.mockito.asm.Type.getMethodDescriptor(type53, typeArray60);
        java.lang.String str65 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray60);
        org.mockito.cglib.core.Signature signature66 = new org.mockito.cglib.core.Signature("L1144664822", type16, typeArray60);
        java.lang.String str67 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray60);
        int int68 = type1.getSort();
        java.lang.Object obj69 = null;
        boolean boolean70 = type1.equals(obj69);
        int int71 = type1.getDimensions();
        int int72 = type1.getSize();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str10, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 132 + "'", int14 == 132);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str25, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str30, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "()D" + "'", str35, "()D");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "()Lbyte;" + "'", str36, "()Lbyte;");
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str45, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 132 + "'", int49 == 132);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "()D" + "'", str61, "()D");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "()B" + "'", str63, "()B");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "()F" + "'", str64, "()F");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "()Lorg/mockito/cglib/proxy/Enhancer;" + "'", str65, "()Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "()LL1797909087;" + "'", str67, "()LL1797909087;");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 10 + "'", int68 == 10);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
    }

    @Test
    public void test21679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21679");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("Lorg/mockito/cglib/proxy/Enhancer;");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.BYTE_TYPE;
        int int4 = type3.getSize();
        java.lang.String str5 = type3.getClassName();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type7 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type8 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type9 = org.mockito.asm.Type.BYTE_TYPE;
        int int10 = type9.getSize();
        java.lang.String str11 = type9.getClassName();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str13 = type12.getClassName();
        org.mockito.asm.Type[] typeArray14 = new org.mockito.asm.Type[] { type6, type7, type8, type9, type12 };
        org.mockito.cglib.core.Signature signature15 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type3, typeArray14);
        org.mockito.asm.Type[] typeArray16 = signature15.getArgumentTypes();
        java.lang.String str17 = signature15.toString();
        org.mockito.cglib.core.Signature signature20 = new org.mockito.cglib.core.Signature("byte", "()D");
        boolean boolean21 = signature15.equals((java.lang.Object) signature20);
        java.lang.String str22 = signature15.getDescriptor();
        boolean boolean23 = type1.equals((java.lang.Object) signature15);
        org.mockito.asm.Type[] typeArray24 = signature15.getArgumentTypes();
        org.mockito.asm.Type[] typeArray25 = signature15.getArgumentTypes();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "byte" + "'", str5, "byte");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "byte" + "'", str11, "byte");
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "double" + "'", str13, "double");
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B" + "'", str17, "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(CBBBD)B" + "'", str22, "(CBBBD)B");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertNotNull(typeArray25);
    }

    @Test
    public void test21680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21680");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        java.lang.Class<?> wildcardClass5 = classEmitter4.getClass();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy9 = null;
        enhancer8.setNamingPolicy(namingPolicy9);
        java.lang.ClassLoader classLoader11 = null;
        enhancer8.setClassLoader(classLoader11);
        java.lang.Class<?> wildcardClass13 = enhancer8.getClass();
        java.lang.String str14 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass13);
        boolean boolean15 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass13);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass13);
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass13);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass13);
        int int19 = type18.getSize();
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = null;
        enhancer20.setNamingPolicy(namingPolicy21);
        java.lang.ClassLoader classLoader23 = null;
        enhancer20.setClassLoader(classLoader23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy26 = null;
        enhancer25.setNamingPolicy(namingPolicy26);
        java.lang.ClassLoader classLoader28 = null;
        enhancer25.setClassLoader(classLoader28);
        java.lang.Class<?> wildcardClass30 = enhancer25.getClass();
        java.lang.String str31 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass30);
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy33 = null;
        enhancer32.setNamingPolicy(namingPolicy33);
        java.lang.ClassLoader classLoader35 = null;
        enhancer32.setClassLoader(classLoader35);
        java.lang.Class<?> wildcardClass37 = enhancer32.getClass();
        java.lang.Class[] classArray38 = new java.lang.Class[] { wildcardClass30, wildcardClass37 };
        enhancer20.setInterfaces(classArray38);
        boolean boolean40 = enhancer20.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy42 = null;
        enhancer41.setNamingPolicy(namingPolicy42);
        java.lang.ClassLoader classLoader44 = null;
        enhancer41.setClassLoader(classLoader44);
        java.lang.Class<?> wildcardClass46 = enhancer41.getClass();
        enhancer20.setSuperclass((java.lang.Class) wildcardClass46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass46);
        java.lang.String str49 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass46);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass46);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.BYTE_TYPE;
        int int53 = type52.getSize();
        java.lang.String str54 = type52.getClassName();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type56 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type57 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type58 = org.mockito.asm.Type.BYTE_TYPE;
        int int59 = type58.getSize();
        java.lang.String str60 = type58.getClassName();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str62 = type61.getClassName();
        org.mockito.asm.Type[] typeArray63 = new org.mockito.asm.Type[] { type55, type56, type57, type58, type61 };
        org.mockito.cglib.core.Signature signature64 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type52, typeArray63);
        java.lang.String str65 = org.mockito.asm.Type.getMethodDescriptor(type50, typeArray63);
        java.lang.String str66 = org.mockito.asm.Type.getMethodDescriptor(type18, typeArray63);
        org.mockito.asm.Type type67 = type18.getElementType();
        org.mockito.asm.Type type68 = type18.getElementType();
        org.mockito.asm.Type type69 = type68.getElementType();
        org.mockito.cglib.core.Signature signature72 = new org.mockito.cglib.core.Signature("byte", "()D");
        java.lang.String str73 = signature72.getName();
        org.mockito.asm.Type[] typeArray74 = signature72.getArgumentTypes();
        java.lang.String str75 = org.mockito.asm.Type.getMethodDescriptor(type69, typeArray74);
        java.lang.String str76 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray74);
        java.lang.String str77 = type7.getDescriptor();
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str14, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str31, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(classArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str49, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "byte" + "'", str54, "byte");
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "byte" + "'", str60, "byte");
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "double" + "'", str62, "double");
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;" + "'", str65, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;" + "'", str66, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "byte" + "'", str73, "byte");
        org.junit.Assert.assertNotNull(typeArray74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "()Lmockito/cglib/proxy/Enhancer;" + "'", str75, "()Lmockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "()Lorg/mockito/cglib/core/ClassEmitter;" + "'", str76, "()Lorg/mockito/cglib/core/ClassEmitter;");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Lorg/mockito/cglib/core/ClassEmitter;" + "'", str77, "Lorg/mockito/cglib/core/ClassEmitter;");
    }

    @Test
    public void test21681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21681");
        org.mockito.cglib.core.Signature signature2 = new org.mockito.cglib.core.Signature("LL1570394950;", "L1453986669");
    }

    @Test
    public void test21682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21682");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getObjectType("byte");
        int int9 = type8.getSize();
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy11 = null;
        enhancer10.setNamingPolicy(namingPolicy11);
        java.lang.ClassLoader classLoader13 = null;
        enhancer10.setClassLoader(classLoader13);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter15 = null;
        enhancer10.setCallbackFilter(callbackFilter15);
        org.mockito.cglib.proxy.Callback callback17 = null;
        enhancer10.setCallback(callback17);
        enhancer10.setUseCache(false);
        boolean boolean21 = type8.equals((java.lang.Object) enhancer10);
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = enhancer10.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy22);
        org.mockito.cglib.core.NamingPolicy namingPolicy24 = enhancer0.getNamingPolicy();
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = null;
        enhancer27.setNamingPolicy(namingPolicy28);
        java.lang.ClassLoader classLoader30 = null;
        enhancer27.setClassLoader(classLoader30);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter32 = null;
        enhancer27.setCallbackFilter(callbackFilter32);
        org.mockito.cglib.proxy.Callback callback34 = null;
        enhancer27.setCallback(callback34);
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = enhancer27.getNamingPolicy();
        enhancer27.setAttemptLoad(true);
        org.mockito.cglib.proxy.Callback callback39 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray40 = new org.mockito.cglib.proxy.Callback[] { callback39 };
        enhancer27.setCallbacks(callbackArray40);
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy43 = null;
        enhancer42.setNamingPolicy(namingPolicy43);
        java.lang.ClassLoader classLoader45 = null;
        enhancer42.setClassLoader(classLoader45);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter47 = null;
        enhancer42.setCallbackFilter(callbackFilter47);
        org.mockito.cglib.proxy.Callback callback49 = null;
        enhancer42.setCallback(callback49);
        java.lang.ClassLoader classLoader51 = null;
        enhancer42.setClassLoader(classLoader51);
        enhancer42.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer55 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy56 = null;
        enhancer55.setNamingPolicy(namingPolicy56);
        java.lang.ClassLoader classLoader58 = null;
        enhancer55.setClassLoader(classLoader58);
        boolean boolean60 = enhancer55.getAttemptLoad();
        enhancer55.setUseCache(true);
        java.lang.ClassLoader classLoader63 = enhancer55.getClassLoader();
        enhancer42.setClassLoader(classLoader63);
        enhancer42.setInterceptDuringConstruction(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy67 = enhancer42.getStrategy();
        enhancer27.setStrategy(generatorStrategy67);
        enhancer0.setStrategy(generatorStrategy67);
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        java.lang.ClassLoader classLoader72 = enhancer0.getClassLoader();
        boolean boolean73 = enhancer0.getAttemptLoad();
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(namingPolicy22);
        org.junit.Assert.assertNotNull(namingPolicy24);
        org.junit.Assert.assertNotNull(namingPolicy36);
        org.junit.Assert.assertNotNull(callbackArray40);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(classLoader63);
        org.junit.Assert.assertNotNull(generatorStrategy67);
        org.junit.Assert.assertNotNull(classLoader72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test21683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21683");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        boolean boolean5 = enhancer0.getAttemptLoad();
        java.lang.Class class6 = null;
        enhancer0.setSuperclass(class6);
        org.mockito.cglib.core.NamingPolicy namingPolicy8 = enhancer0.getNamingPolicy();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy12 = null;
        enhancer11.setNamingPolicy(namingPolicy12);
        boolean boolean14 = enhancer11.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = null;
        enhancer15.setNamingPolicy(namingPolicy16);
        java.lang.ClassLoader classLoader18 = null;
        enhancer15.setClassLoader(classLoader18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = null;
        enhancer20.setNamingPolicy(namingPolicy21);
        java.lang.ClassLoader classLoader23 = null;
        enhancer20.setClassLoader(classLoader23);
        java.lang.Class<?> wildcardClass25 = enhancer20.getClass();
        java.lang.String str26 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass25);
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = null;
        enhancer27.setNamingPolicy(namingPolicy28);
        java.lang.ClassLoader classLoader30 = null;
        enhancer27.setClassLoader(classLoader30);
        java.lang.Class<?> wildcardClass32 = enhancer27.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[] { wildcardClass25, wildcardClass32 };
        enhancer15.setInterfaces(classArray33);
        enhancer11.setInterfaces(classArray33);
        enhancer0.setInterfaces(classArray33);
        enhancer0.setSerialVersionUID((java.lang.Long) 10L);
        org.mockito.cglib.proxy.Enhancer enhancer39 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy40 = null;
        enhancer39.setNamingPolicy(namingPolicy40);
        java.lang.ClassLoader classLoader42 = null;
        enhancer39.setClassLoader(classLoader42);
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy45 = null;
        enhancer44.setNamingPolicy(namingPolicy45);
        java.lang.ClassLoader classLoader47 = null;
        enhancer44.setClassLoader(classLoader47);
        java.lang.Class<?> wildcardClass49 = enhancer44.getClass();
        java.lang.String str50 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass49);
        org.mockito.cglib.proxy.Enhancer enhancer51 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy52 = null;
        enhancer51.setNamingPolicy(namingPolicy52);
        java.lang.ClassLoader classLoader54 = null;
        enhancer51.setClassLoader(classLoader54);
        java.lang.Class<?> wildcardClass56 = enhancer51.getClass();
        java.lang.Class[] classArray57 = new java.lang.Class[] { wildcardClass49, wildcardClass56 };
        enhancer39.setInterfaces(classArray57);
        boolean boolean59 = enhancer39.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer60 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy61 = null;
        enhancer60.setNamingPolicy(namingPolicy61);
        java.lang.ClassLoader classLoader63 = null;
        enhancer60.setClassLoader(classLoader63);
        java.lang.Class<?> wildcardClass65 = enhancer60.getClass();
        enhancer39.setSuperclass((java.lang.Class) wildcardClass65);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass65);
        java.lang.String str68 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass65);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass65);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass65);
        boolean boolean71 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass65);
        java.lang.String str72 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass65);
        org.mockito.asm.Type type73 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass65);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.setCallbackType((java.lang.Class) wildcardClass65);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown callback type class org.mockito.cglib.proxy.Enhancer");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(namingPolicy8);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str26, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str50, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str68, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str72, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type73);
    }

    @Test
    public void test21684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21684");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        java.lang.Class<?> wildcardClass5 = enhancer0.getClass();
        java.lang.String str6 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass5);
        boolean boolean7 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        int int11 = type10.getSize();
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = null;
        enhancer12.setNamingPolicy(namingPolicy13);
        java.lang.ClassLoader classLoader15 = null;
        enhancer12.setClassLoader(classLoader15);
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy18 = null;
        enhancer17.setNamingPolicy(namingPolicy18);
        java.lang.ClassLoader classLoader20 = null;
        enhancer17.setClassLoader(classLoader20);
        java.lang.Class<?> wildcardClass22 = enhancer17.getClass();
        java.lang.String str23 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = null;
        enhancer24.setNamingPolicy(namingPolicy25);
        java.lang.ClassLoader classLoader27 = null;
        enhancer24.setClassLoader(classLoader27);
        java.lang.Class<?> wildcardClass29 = enhancer24.getClass();
        java.lang.Class[] classArray30 = new java.lang.Class[] { wildcardClass22, wildcardClass29 };
        enhancer12.setInterfaces(classArray30);
        boolean boolean32 = enhancer12.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy34 = null;
        enhancer33.setNamingPolicy(namingPolicy34);
        java.lang.ClassLoader classLoader36 = null;
        enhancer33.setClassLoader(classLoader36);
        java.lang.Class<?> wildcardClass38 = enhancer33.getClass();
        enhancer12.setSuperclass((java.lang.Class) wildcardClass38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass38);
        java.lang.String str41 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass38);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass38);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.BYTE_TYPE;
        int int45 = type44.getSize();
        java.lang.String str46 = type44.getClassName();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type48 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type49 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type50 = org.mockito.asm.Type.BYTE_TYPE;
        int int51 = type50.getSize();
        java.lang.String str52 = type50.getClassName();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str54 = type53.getClassName();
        org.mockito.asm.Type[] typeArray55 = new org.mockito.asm.Type[] { type47, type48, type49, type50, type53 };
        org.mockito.cglib.core.Signature signature56 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type44, typeArray55);
        java.lang.String str57 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray55);
        java.lang.String str58 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray55);
        org.mockito.asm.Type type59 = type10.getElementType();
        org.mockito.asm.Type type60 = type10.getElementType();
        org.mockito.asm.Type type61 = type10.getElementType();
        java.lang.String str62 = type61.toString();
        int int63 = type61.getSort();
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str6, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str23, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str41, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "byte" + "'", str46, "byte");
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "byte" + "'", str52, "byte");
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "double" + "'", str54, "double");
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;" + "'", str57, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;" + "'", str58, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Lg/mockito/cglib/proxy/Enhancer;" + "'", str62, "Lg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 10 + "'", int63 == 10);
    }

    @Test
    public void test21685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21685");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        boolean boolean5 = enhancer0.getAttemptLoad();
        enhancer0.setUseCache(true);
        java.lang.ClassLoader classLoader8 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Callback callback9 = null;
        enhancer0.setCallback(callback9);
        boolean boolean11 = enhancer0.getUseCache();
        enhancer0.setUseFactory(true);
        boolean boolean14 = enhancer0.getUseCache();
        boolean boolean15 = enhancer0.getAttemptLoad();
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass((org.mockito.asm.ClassVisitor) classEmitter19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test21686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21686");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.asm.ClassVisitor classVisitor5 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter(classVisitor5);
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter(classVisitor5);
        org.mockito.cglib.core.ClassInfo classInfo8 = classEmitter7.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter9);
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter10.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor13 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter(classVisitor13);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter(classVisitor13);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter15);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        classEmitter2.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.asm.ClassVisitor classVisitor21 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassInfo classInfo24 = classEmitter23.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter25);
        org.mockito.cglib.core.ClassInfo classInfo27 = classEmitter26.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter26);
        classEmitter20.setTarget((org.mockito.asm.ClassVisitor) classEmitter28);
        org.mockito.cglib.core.ClassInfo classInfo30 = classEmitter28.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter28);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter28.visitInnerClass("LL101737;", "L2137743602", "L307594124", 160);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo8);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNull(classInfo24);
        org.junit.Assert.assertNull(classInfo27);
        org.junit.Assert.assertNull(classInfo30);
    }

    @Test
    public void test21687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21687");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        java.lang.Class<?> wildcardClass5 = classEmitter4.getClass();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        int int7 = type6.getSize();
        java.lang.String str8 = type6.getInternalName();
        org.mockito.asm.Type type9 = type6.getElementType();
        int int11 = type9.getOpcode(161);
        java.lang.String str12 = type9.getDescriptor();
        java.lang.String str13 = type9.toString();
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org/mockito/cglib/core/ClassEmitter" + "'", str8, "org/mockito/cglib/core/ClassEmitter");
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 165 + "'", int11 == 165);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Lg/mockito/cglib/core/ClassEmitter;" + "'", str12, "Lg/mockito/cglib/core/ClassEmitter;");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Lg/mockito/cglib/core/ClassEmitter;" + "'", str13, "Lg/mockito/cglib/core/ClassEmitter;");
    }

    @Test
    public void test21688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21688");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter13 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter13.visitTypeInsn(103, "L1343877722");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21689");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(12, "(CBBBD)Lg/mockito/cglib/core/ClassEmitter;", methodVisitor4);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(44, "LD;", methodVisitor4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21690");
        org.mockito.cglib.core.Signature signature2 = new org.mockito.cglib.core.Signature("hi!", "hi!");
        java.lang.String str3 = signature2.getName();
        org.mockito.asm.ClassVisitor classVisitor4 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter(classVisitor4);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter(classVisitor4);
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter(classVisitor4);
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.asm.ClassVisitor classVisitor9 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter(classVisitor9);
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter(classVisitor9);
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.asm.ClassVisitor classVisitor15 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter(classVisitor15);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter(classVisitor15);
        org.mockito.cglib.core.ClassInfo classInfo18 = classEmitter17.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter19);
        classEmitter14.setTarget((org.mockito.asm.ClassVisitor) classEmitter19);
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter14);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter22);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter22);
        org.mockito.cglib.core.ClassInfo classInfo25 = classEmitter22.getClassInfo();
        boolean boolean26 = signature2.equals((java.lang.Object) classEmitter22);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter22.visitSource("L562647461", "L2033883361");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNull(classInfo18);
        org.junit.Assert.assertNull(classInfo25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test21691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21691");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = null;
        enhancer5.setNamingPolicy(namingPolicy6);
        java.lang.ClassLoader classLoader8 = null;
        enhancer5.setClassLoader(classLoader8);
        java.lang.Class<?> wildcardClass10 = enhancer5.getClass();
        java.lang.String str11 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass10);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = null;
        enhancer12.setNamingPolicy(namingPolicy13);
        java.lang.ClassLoader classLoader15 = null;
        enhancer12.setClassLoader(classLoader15);
        java.lang.Class<?> wildcardClass17 = enhancer12.getClass();
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass10, wildcardClass17 };
        enhancer0.setInterfaces(classArray18);
        boolean boolean20 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = null;
        enhancer21.setNamingPolicy(namingPolicy22);
        java.lang.ClassLoader classLoader24 = null;
        enhancer21.setClassLoader(classLoader24);
        java.lang.Class<?> wildcardClass26 = enhancer21.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass26);
        java.lang.String str29 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass26);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass26);
        java.lang.String str31 = type30.getInternalName();
        java.lang.String str32 = type30.toString();
        java.lang.String str33 = type30.toString();
        org.mockito.asm.Type type34 = type30.getElementType();
        int int35 = type34.getDimensions();
        java.lang.String str36 = type34.getClassName();
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str11, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str29, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str31, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str32, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str33, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "g.mockito.cglib.proxy.Enhancer" + "'", str36, "g.mockito.cglib.proxy.Enhancer");
    }

    @Test
    public void test21692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21692");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter11.visitTypeInsn(8, "L2023766810");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21693");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.asm.ClassVisitor classVisitor6 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassInfo classInfo9 = classEmitter8.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter8.getClassInfo();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.asm.ClassVisitor classVisitor12 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter(classVisitor12);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter(classVisitor12);
        org.mockito.cglib.core.ClassInfo classInfo15 = classEmitter14.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter17);
        classEmitter8.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        org.mockito.cglib.core.ClassInfo classInfo23 = classEmitter22.getClassInfo();
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter22);
        org.mockito.asm.ClassVisitor classVisitor25 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter(classVisitor25);
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter(classVisitor25);
        org.mockito.cglib.core.ClassInfo classInfo28 = classEmitter27.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter27);
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.asm.ClassVisitor classVisitor31 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter(classVisitor31);
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter(classVisitor31);
        org.mockito.cglib.core.ClassInfo classInfo34 = classEmitter33.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter33);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter35);
        classEmitter30.setTarget((org.mockito.asm.ClassVisitor) classEmitter35);
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter30);
        org.mockito.cglib.core.Signature signature41 = new org.mockito.cglib.core.Signature("hi!", "B");
        java.lang.String str42 = signature41.toString();
        org.mockito.asm.ClassVisitor classVisitor43 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter(classVisitor43);
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter(classVisitor43);
        org.mockito.cglib.core.ClassEmitter classEmitter46 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter45);
        org.mockito.cglib.core.ClassEmitter classEmitter47 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter46);
        boolean boolean48 = signature41.equals((java.lang.Object) classEmitter47);
        classEmitter30.setTarget((org.mockito.asm.ClassVisitor) classEmitter47);
        org.mockito.cglib.core.ClassEmitter classEmitter50 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter51 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter50);
        org.mockito.cglib.core.ClassInfo classInfo52 = classEmitter51.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor53 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter54 = new org.mockito.cglib.core.ClassEmitter(classVisitor53);
        org.mockito.cglib.core.ClassEmitter classEmitter55 = new org.mockito.cglib.core.ClassEmitter(classVisitor53);
        org.mockito.cglib.core.ClassEmitter classEmitter56 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter55);
        org.mockito.cglib.core.ClassInfo classInfo57 = classEmitter55.getClassInfo();
        classEmitter51.setTarget((org.mockito.asm.ClassVisitor) classEmitter55);
        org.mockito.cglib.core.ClassInfo classInfo59 = classEmitter51.getClassInfo();
        classEmitter47.setTarget((org.mockito.asm.ClassVisitor) classEmitter51);
        classEmitter22.setTarget((org.mockito.asm.ClassVisitor) classEmitter47);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter47.end_class();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo9);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo15);
        org.junit.Assert.assertNull(classInfo23);
        org.junit.Assert.assertNull(classInfo28);
        org.junit.Assert.assertNull(classInfo34);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!B" + "'", str42, "hi!B");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(classInfo52);
        org.junit.Assert.assertNull(classInfo57);
        org.junit.Assert.assertNull(classInfo59);
    }

    @Test
    public void test21694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21694");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("L694739012");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21695");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = null;
        enhancer5.setNamingPolicy(namingPolicy6);
        java.lang.ClassLoader classLoader8 = null;
        enhancer5.setClassLoader(classLoader8);
        java.lang.Class<?> wildcardClass10 = enhancer5.getClass();
        java.lang.String str11 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass10);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = null;
        enhancer12.setNamingPolicy(namingPolicy13);
        java.lang.ClassLoader classLoader15 = null;
        enhancer12.setClassLoader(classLoader15);
        java.lang.Class<?> wildcardClass17 = enhancer12.getClass();
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass10, wildcardClass17 };
        enhancer0.setInterfaces(classArray18);
        enhancer0.setUseCache(false);
        boolean boolean22 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.Callback callback23 = null;
        enhancer0.setCallback(callback23);
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader28 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter29 = null;
        enhancer0.setCallbackFilter(callbackFilter29);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str11, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(namingPolicy27);
        org.junit.Assert.assertNotNull(classLoader28);
    }

    @Test
    public void test21696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21696");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.asm.ClassVisitor classVisitor6 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassInfo classInfo9 = classEmitter8.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter8.getClassInfo();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.asm.ClassVisitor classVisitor12 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter(classVisitor12);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter(classVisitor12);
        org.mockito.cglib.core.ClassInfo classInfo15 = classEmitter14.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.asm.ClassVisitor classVisitor18 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter(classVisitor18);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter(classVisitor18);
        org.mockito.cglib.core.ClassInfo classInfo21 = classEmitter20.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter22);
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter22);
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter17);
        classEmitter8.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter8);
        // The following exception was thrown during execution in test generation
        try {
            int int28 = classEmitter8.getAccess();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo9);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo15);
        org.junit.Assert.assertNull(classInfo21);
    }

    @Test
    public void test21697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21697");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("L243310665");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21698");
        org.mockito.asm.MethodVisitor methodVisitor12 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter13 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor12);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter14 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter13);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter15 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter13);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter16 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter13);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter17 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter13);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter18 = new org.mockito.cglib.core.LocalVariablesSorter(102, "()Lorg/mockito/cglib/proxy/Enhancer;", (org.mockito.asm.MethodVisitor) localVariablesSorter13);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter19 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter18);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter20 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter19);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter21 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter19);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter22 = new org.mockito.cglib.core.LocalVariablesSorter(161, "()L()Lorg/mockito/cglib/core/ClassEmitter;;", (org.mockito.asm.MethodVisitor) localVariablesSorter19);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter23 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter19);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter24 = new org.mockito.cglib.core.LocalVariablesSorter(0, "(CBBBD)J", (org.mockito.asm.MethodVisitor) localVariablesSorter19);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter25 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter24);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter26 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) -1, "(CBBBD)LL965545342;", (org.mockito.asm.MethodVisitor) localVariablesSorter24);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter27 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter26);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter27.visitInsn(155);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21699");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter3 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.asm.Label label12 = new org.mockito.asm.Label();
        java.lang.Object obj13 = label12.info;
        java.lang.String str14 = label12.toString();
        java.lang.Object obj15 = label12.info;
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy17 = null;
        enhancer16.setNamingPolicy(namingPolicy17);
        java.lang.ClassLoader classLoader19 = null;
        enhancer16.setClassLoader(classLoader19);
        enhancer16.setUseFactory(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer16.getNamingPolicy();
        label12.info = enhancer16;
        java.lang.String str25 = label12.toString();
        java.lang.String str26 = label12.toString();
        java.lang.String str27 = label12.toString();
        java.lang.String str28 = label12.toString();
        java.lang.String str29 = label12.toString();
        java.lang.String str30 = label12.toString();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.getObjectType("Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B");
        int int35 = type34.getDimensions();
        int int36 = type34.getSort();
        java.lang.String str37 = type34.getClassName();
        org.mockito.cglib.core.Local local38 = new org.mockito.cglib.core.Local(0, type34);
        org.mockito.cglib.core.Local local39 = new org.mockito.cglib.core.Local(134, type34);
        org.mockito.asm.Type type40 = local39.getType();
        label12.info = local39;
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter8.visitJumpInsn(3, label12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj13);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L778268471" + "'", str14, "L778268471");
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(namingPolicy23);
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "L778268471" + "'", str25, "L778268471");
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L778268471" + "'", str26, "L778268471");
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "L778268471" + "'", str27, "L778268471");
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "L778268471" + "'", str28, "L778268471");
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "L778268471" + "'", str29, "L778268471");
// flaky:         org.junit.Assert.assertEquals("'" + str30 + "' != '" + "L778268471" + "'", str30, "L778268471");
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 10 + "'", int36 == 10);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Lorg.mockito.cglib.proxy.Enhancer;(CBBBD)B" + "'", str37, "Lorg.mockito.cglib.proxy.Enhancer;(CBBBD)B");
        org.junit.Assert.assertNotNull(type40);
    }

    @Test
    public void test21700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21700");
        org.mockito.asm.MethodVisitor methodVisitor6 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(0, "L1402297421()Lorg.mockito.cglib.core.ClassEmitter;", (org.mockito.asm.MethodVisitor) localVariablesSorter10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21701");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = "L97833253";
        org.mockito.cglib.core.Signature signature5 = new org.mockito.cglib.core.Signature("L842693193", "L1804543443");
        org.mockito.asm.MethodVisitor methodVisitor10 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor10);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter11);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter13 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter14 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter15 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter14);
        boolean boolean16 = signature5.equals((java.lang.Object) localVariablesSorter15);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter17 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter15);
        label0.info = localVariablesSorter15;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter19 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter15);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter20 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter15);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter21 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter15);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter22 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter15);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter15.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test21702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21702");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        enhancer0.setAttemptLoad(false);
        enhancer0.setUseCache(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer0.getNamingPolicy();
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy11 = null;
        enhancer10.setNamingPolicy(namingPolicy11);
        java.lang.ClassLoader classLoader13 = null;
        enhancer10.setClassLoader(classLoader13);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter15 = null;
        enhancer10.setCallbackFilter(callbackFilter15);
        org.mockito.cglib.proxy.Callback callback17 = null;
        enhancer10.setCallback(callback17);
        java.lang.ClassLoader classLoader19 = null;
        enhancer10.setClassLoader(classLoader19);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy21 = null;
        enhancer10.setStrategy(generatorStrategy21);
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy24 = null;
        enhancer23.setNamingPolicy(namingPolicy24);
        java.lang.ClassLoader classLoader26 = null;
        enhancer23.setClassLoader(classLoader26);
        boolean boolean28 = enhancer23.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy29 = enhancer23.getStrategy();
        enhancer10.setStrategy(generatorStrategy29);
        enhancer10.setInterceptDuringConstruction(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy33 = enhancer10.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer34 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy35 = null;
        enhancer34.setNamingPolicy(namingPolicy35);
        java.lang.ClassLoader classLoader37 = null;
        enhancer34.setClassLoader(classLoader37);
        boolean boolean39 = enhancer34.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy40 = enhancer34.getNamingPolicy();
        enhancer10.setNamingPolicy(namingPolicy40);
        java.lang.ClassLoader classLoader42 = enhancer10.getClassLoader();
        enhancer10.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.core.NamingPolicy namingPolicy45 = enhancer10.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy45);
        java.lang.ClassLoader classLoader47 = enhancer0.getClassLoader();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj48 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callbacks are required");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(generatorStrategy29);
        org.junit.Assert.assertNotNull(generatorStrategy33);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(namingPolicy40);
        org.junit.Assert.assertNotNull(classLoader42);
        org.junit.Assert.assertNotNull(namingPolicy45);
        org.junit.Assert.assertNotNull(classLoader47);
    }

    @Test
    public void test21703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21703");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(128, "(CBBBD)Lg/mockito/cglib/proxy/Enhancer;", (org.mockito.asm.MethodVisitor) localVariablesSorter8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter13 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        org.mockito.asm.Label label14 = new org.mockito.asm.Label();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type17 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray18 = new org.mockito.asm.Type[] {};
        java.lang.String str19 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray18);
        org.mockito.cglib.core.Signature signature20 = new org.mockito.cglib.core.Signature("double", type16, typeArray18);
        label14.info = typeArray18;
        java.lang.String str22 = label14.toString();
        java.lang.Object obj23 = label14.info;
        java.lang.String str24 = label14.toString();
        org.mockito.cglib.core.Signature signature27 = new org.mockito.cglib.core.Signature("hi!", "hi!");
        java.lang.String str28 = signature27.getDescriptor();
        java.lang.String str29 = signature27.getName();
        label14.info = str29;
        org.mockito.asm.Type type32 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray33 = new org.mockito.asm.Type[] {};
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type32, typeArray33);
        org.mockito.cglib.core.Local local35 = new org.mockito.cglib.core.Local(124, type32);
        int int36 = local35.getIndex();
        int int37 = local35.getIndex();
        org.mockito.asm.Type type38 = local35.getType();
        label14.info = type38;
        java.lang.String str40 = label14.toString();
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy42 = null;
        enhancer41.setNamingPolicy(namingPolicy42);
        java.lang.ClassLoader classLoader44 = null;
        enhancer41.setClassLoader(classLoader44);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter46 = null;
        enhancer41.setCallbackFilter(callbackFilter46);
        org.mockito.cglib.proxy.Callback callback48 = null;
        enhancer41.setCallback(callback48);
        java.lang.ClassLoader classLoader50 = null;
        enhancer41.setClassLoader(classLoader50);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy52 = null;
        enhancer41.setStrategy(generatorStrategy52);
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = null;
        enhancer54.setNamingPolicy(namingPolicy55);
        java.lang.ClassLoader classLoader57 = null;
        enhancer54.setClassLoader(classLoader57);
        boolean boolean59 = enhancer54.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy60 = enhancer54.getStrategy();
        enhancer41.setStrategy(generatorStrategy60);
        org.mockito.cglib.proxy.Enhancer enhancer62 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy63 = null;
        enhancer62.setNamingPolicy(namingPolicy63);
        java.lang.ClassLoader classLoader65 = null;
        enhancer62.setClassLoader(classLoader65);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter67 = null;
        enhancer62.setCallbackFilter(callbackFilter67);
        org.mockito.cglib.proxy.Callback callback69 = null;
        enhancer62.setCallback(callback69);
        java.lang.ClassLoader classLoader71 = null;
        enhancer62.setClassLoader(classLoader71);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy73 = null;
        enhancer62.setStrategy(generatorStrategy73);
        org.mockito.cglib.proxy.Enhancer enhancer75 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy76 = null;
        enhancer75.setNamingPolicy(namingPolicy76);
        java.lang.ClassLoader classLoader78 = null;
        enhancer75.setClassLoader(classLoader78);
        boolean boolean80 = enhancer75.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy81 = enhancer75.getStrategy();
        enhancer62.setStrategy(generatorStrategy81);
        enhancer41.setStrategy(generatorStrategy81);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter84 = null;
        enhancer41.setCallbackFilter(callbackFilter84);
        enhancer41.setInterceptDuringConstruction(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy88 = enhancer41.getStrategy();
        java.lang.ClassLoader classLoader89 = enhancer41.getClassLoader();
        enhancer41.setSerialVersionUID((java.lang.Long) 0L);
        label14.info = 0L;
        java.lang.String str93 = label14.toString();
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter13.visitLabel(label14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "()D" + "'", str19, "()D");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L1480863751" + "'", str22, "L1480863751");
        org.junit.Assert.assertNotNull(obj23);
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "L1480863751" + "'", str24, "L1480863751");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "()D" + "'", str34, "()D");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 124 + "'", int36 == 124);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 124 + "'", int37 == 124);
        org.junit.Assert.assertNotNull(type38);
// flaky:         org.junit.Assert.assertEquals("'" + str40 + "' != '" + "L1480863751" + "'", str40, "L1480863751");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(generatorStrategy60);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(generatorStrategy81);
        org.junit.Assert.assertNotNull(generatorStrategy88);
        org.junit.Assert.assertNotNull(classLoader89);
// flaky:         org.junit.Assert.assertEquals("'" + str93 + "' != '" + "L1480863751" + "'", str93, "L1480863751");
    }

    @Test
    public void test21704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21704");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.getObjectType("byte");
        org.mockito.asm.Type type16 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray17 = new org.mockito.asm.Type[] {};
        java.lang.String str18 = org.mockito.asm.Type.getMethodDescriptor(type16, typeArray17);
        java.lang.String str19 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray17);
        int int20 = type15.getDimensions();
        int int21 = type15.getSort();
        org.mockito.asm.Type[] typeArray23 = org.mockito.asm.Type.getArgumentTypes("()LL1419108160;");
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray23);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.getType("LL1958877584;");
        org.mockito.asm.Type type30 = org.mockito.asm.Type.BYTE_TYPE;
        int int31 = type30.getSize();
        java.lang.String str32 = type30.getClassName();
        int int33 = type30.getSize();
        org.mockito.cglib.core.Signature signature36 = new org.mockito.cglib.core.Signature("byte", "()B");
        org.mockito.asm.Type type37 = signature36.getReturnType();
        java.lang.String str38 = signature36.getName();
        org.mockito.asm.Type[] typeArray39 = signature36.getArgumentTypes();
        org.mockito.cglib.core.Signature signature40 = new org.mockito.cglib.core.Signature("L769857137", type30, typeArray39);
        org.mockito.cglib.core.Signature signature41 = new org.mockito.cglib.core.Signature("L562908277", type28, typeArray39);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter11.visitFrame(3, 39, (java.lang.Object[]) typeArray23, 11, (java.lang.Object[]) typeArray39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "()D" + "'", str18, "()D");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "()Lbyte;" + "'", str19, "()Lbyte;");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "()Lbyte;" + "'", str24, "()Lbyte;");
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "byte" + "'", str32, "byte");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "byte" + "'", str38, "byte");
        org.junit.Assert.assertNotNull(typeArray39);
    }

    @Test
    public void test21705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21705");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getObjectType("Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B");
        int int3 = type2.getDimensions();
        int int4 = type2.getSort();
        java.lang.String str5 = type2.getClassName();
        org.mockito.cglib.core.Local local6 = new org.mockito.cglib.core.Local(158, type2);
        int int8 = type2.getOpcode(2);
        org.mockito.asm.Type type9 = type2.getElementType();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.getReturnType("Lmockito/cglib/proxy/Enhancer;");
        org.mockito.asm.ClassVisitor classVisitor14 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.cglib.core.ClassInfo classInfo17 = classEmitter16.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        java.lang.Class<?> wildcardClass19 = classEmitter18.getClass();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass19);
        int int21 = type20.getSize();
        java.lang.String str22 = type20.getDescriptor();
        org.mockito.asm.Type[] typeArray24 = org.mockito.asm.Type.getArgumentTypes("()B");
        org.mockito.cglib.core.Signature signature25 = new org.mockito.cglib.core.Signature("L1402297421", type20, typeArray24);
        java.lang.String str26 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray24);
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = null;
        enhancer28.setNamingPolicy(namingPolicy29);
        java.lang.ClassLoader classLoader31 = null;
        enhancer28.setClassLoader(classLoader31);
        java.lang.Class<?> wildcardClass33 = enhancer28.getClass();
        java.lang.String str34 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass33);
        boolean boolean35 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass33);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass33);
        int int38 = type36.getOpcode(128);
        int int39 = type36.getDimensions();
        java.lang.String str40 = type36.getInternalName();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getReturnType("J");
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy45 = null;
        enhancer44.setNamingPolicy(namingPolicy45);
        java.lang.ClassLoader classLoader47 = null;
        enhancer44.setClassLoader(classLoader47);
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy50 = null;
        enhancer49.setNamingPolicy(namingPolicy50);
        java.lang.ClassLoader classLoader52 = null;
        enhancer49.setClassLoader(classLoader52);
        java.lang.Class<?> wildcardClass54 = enhancer49.getClass();
        java.lang.String str55 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass54);
        org.mockito.cglib.proxy.Enhancer enhancer56 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy57 = null;
        enhancer56.setNamingPolicy(namingPolicy57);
        java.lang.ClassLoader classLoader59 = null;
        enhancer56.setClassLoader(classLoader59);
        java.lang.Class<?> wildcardClass61 = enhancer56.getClass();
        java.lang.Class[] classArray62 = new java.lang.Class[] { wildcardClass54, wildcardClass61 };
        enhancer44.setInterfaces(classArray62);
        boolean boolean64 = enhancer44.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer65 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy66 = null;
        enhancer65.setNamingPolicy(namingPolicy66);
        java.lang.ClassLoader classLoader68 = null;
        enhancer65.setClassLoader(classLoader68);
        java.lang.Class<?> wildcardClass70 = enhancer65.getClass();
        enhancer44.setSuperclass((java.lang.Class) wildcardClass70);
        org.mockito.asm.Type type72 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass70);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type75 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray76 = new org.mockito.asm.Type[] {};
        java.lang.String str77 = org.mockito.asm.Type.getMethodDescriptor(type75, typeArray76);
        org.mockito.cglib.core.Signature signature78 = new org.mockito.cglib.core.Signature("double", type74, typeArray76);
        org.mockito.cglib.core.Signature signature79 = new org.mockito.cglib.core.Signature("L811491585", type72, typeArray76);
        java.lang.String str80 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray76);
        org.mockito.cglib.core.Signature signature81 = new org.mockito.cglib.core.Signature("L509225657", type36, typeArray76);
        org.mockito.cglib.core.Signature signature82 = new org.mockito.cglib.core.Signature("L1288412108", type12, typeArray76);
        java.lang.String str83 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray76);
        org.mockito.asm.Type type84 = type2.getElementType();
        int int85 = type84.getDimensions();
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 10 + "'", int4 == 10);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Lorg.mockito.cglib.proxy.Enhancer;(CBBBD)B" + "'", str5, "Lorg.mockito.cglib.proxy.Enhancer;(CBBBD)B");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 6 + "'", int8 == 6);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNull(classInfo17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Lorg/mockito/cglib/core/ClassEmitter;" + "'", str22, "Lorg/mockito/cglib/core/ClassEmitter;");
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "()Lmockito/cglib/proxy/Enhancer;" + "'", str26, "()Lmockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str34, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 132 + "'", int38 == 132);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str40, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str55, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(classArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(typeArray76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "()D" + "'", str77, "()D");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "()J" + "'", str80, "()J");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "()LLorg/mockito/cglib/proxy/Enhancer;(CBBBD)B;" + "'", str83, "()LLorg/mockito/cglib/proxy/Enhancer;(CBBBD)B;");
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
    }

    @Test
    public void test21706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21706");
        org.mockito.asm.MethodVisitor methodVisitor12 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter13 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor12);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter14 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter13);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter15 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter13);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter16 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter13);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter17 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter13);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter18 = new org.mockito.cglib.core.LocalVariablesSorter(102, "()Lorg/mockito/cglib/proxy/Enhancer;", (org.mockito.asm.MethodVisitor) localVariablesSorter13);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter19 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter18);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter20 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter19);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter21 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter19);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter22 = new org.mockito.cglib.core.LocalVariablesSorter(161, "()L()Lorg/mockito/cglib/core/ClassEmitter;;", (org.mockito.asm.MethodVisitor) localVariablesSorter19);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter23 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter19);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter24 = new org.mockito.cglib.core.LocalVariablesSorter(0, "(CBBBD)J", (org.mockito.asm.MethodVisitor) localVariablesSorter19);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter25 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter24);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter26 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) -1, "(CBBBD)LL965545342;", (org.mockito.asm.MethodVisitor) localVariablesSorter24);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter27 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter26);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter28 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter26);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter26.visitVarInsn(4, 52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21707");
        org.mockito.cglib.core.Signature signature2 = new org.mockito.cglib.core.Signature("hi!", "B");
        java.lang.String str3 = signature2.toString();
        org.mockito.asm.ClassVisitor classVisitor4 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter(classVisitor4);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter(classVisitor4);
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter6);
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter7);
        boolean boolean9 = signature2.equals((java.lang.Object) classEmitter8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter(classVisitor11);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter(classVisitor11);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        classEmitter13.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.asm.ClassVisitor classVisitor19 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter(classVisitor19);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter(classVisitor19);
        org.mockito.cglib.core.ClassInfo classInfo22 = classEmitter21.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.asm.ClassVisitor classVisitor25 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter(classVisitor25);
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter(classVisitor25);
        org.mockito.cglib.core.ClassInfo classInfo28 = classEmitter27.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo29 = classEmitter27.getClassInfo();
        classEmitter24.setTarget((org.mockito.asm.ClassVisitor) classEmitter27);
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter27);
        org.mockito.cglib.core.ClassInfo classInfo32 = classEmitter27.getClassInfo();
        classEmitter8.setTarget((org.mockito.asm.ClassVisitor) classEmitter27);
        org.mockito.asm.ClassVisitor classVisitor34 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter(classVisitor34);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter(classVisitor34);
        org.mockito.cglib.core.ClassInfo classInfo37 = classEmitter36.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter36);
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter38);
        org.mockito.asm.ClassVisitor classVisitor40 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter(classVisitor40);
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter(classVisitor40);
        org.mockito.cglib.core.ClassInfo classInfo43 = classEmitter42.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter42);
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter44);
        classEmitter39.setTarget((org.mockito.asm.ClassVisitor) classEmitter44);
        org.mockito.cglib.core.ClassEmitter classEmitter47 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter44.setTarget((org.mockito.asm.ClassVisitor) classEmitter47);
        classEmitter27.setTarget((org.mockito.asm.ClassVisitor) classEmitter47);
        org.mockito.cglib.core.Signature signature52 = new org.mockito.cglib.core.Signature("hi!", "B");
        java.lang.String str53 = signature52.toString();
        org.mockito.asm.ClassVisitor classVisitor54 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter55 = new org.mockito.cglib.core.ClassEmitter(classVisitor54);
        org.mockito.cglib.core.ClassEmitter classEmitter56 = new org.mockito.cglib.core.ClassEmitter(classVisitor54);
        org.mockito.cglib.core.ClassEmitter classEmitter57 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter56);
        org.mockito.cglib.core.ClassEmitter classEmitter58 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter57);
        boolean boolean59 = signature52.equals((java.lang.Object) classEmitter58);
        org.mockito.cglib.core.ClassEmitter classEmitter60 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter58);
        org.mockito.asm.ClassVisitor classVisitor61 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter62 = new org.mockito.cglib.core.ClassEmitter(classVisitor61);
        org.mockito.cglib.core.ClassEmitter classEmitter63 = new org.mockito.cglib.core.ClassEmitter(classVisitor61);
        org.mockito.cglib.core.ClassInfo classInfo64 = classEmitter63.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo65 = classEmitter63.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo66 = classEmitter63.getClassInfo();
        classEmitter58.setTarget((org.mockito.asm.ClassVisitor) classEmitter63);
        classEmitter27.setTarget((org.mockito.asm.ClassVisitor) classEmitter63);
        org.mockito.cglib.core.ClassInfo classInfo69 = classEmitter63.getClassInfo();
        // The following exception was thrown during execution in test generation
        try {
            classEmitter63.visitOuterClass("L490808293", "g.mockito.cglib.proxy.Enhancer", "L849841465");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!B" + "'", str3, "hi!B");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(classInfo22);
        org.junit.Assert.assertNull(classInfo28);
        org.junit.Assert.assertNull(classInfo29);
        org.junit.Assert.assertNull(classInfo32);
        org.junit.Assert.assertNull(classInfo37);
        org.junit.Assert.assertNull(classInfo43);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!B" + "'", str53, "hi!B");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(classInfo64);
        org.junit.Assert.assertNull(classInfo65);
        org.junit.Assert.assertNull(classInfo66);
        org.junit.Assert.assertNull(classInfo69);
    }

    @Test
    public void test21708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21708");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        classEmitter2.setTarget((org.mockito.asm.ClassVisitor) classEmitter6);
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassInfo classInfo11 = classEmitter10.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.asm.ClassVisitor classVisitor14 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.cglib.core.ClassInfo classInfo17 = classEmitter16.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo18 = classEmitter16.getClassInfo();
        classEmitter13.setTarget((org.mockito.asm.ClassVisitor) classEmitter16);
        classEmitter6.setTarget((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter6);
        org.mockito.cglib.core.ClassInfo classInfo22 = classEmitter6.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter6);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter6);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type25 = classEmitter24.getClassType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo11);
        org.junit.Assert.assertNull(classInfo17);
        org.junit.Assert.assertNull(classInfo18);
        org.junit.Assert.assertNull(classInfo22);
    }

    @Test
    public void test21709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21709");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getObjectType("Lorg.mockito.cglib.proxy.Enhancer;(CBBBD)B");
        org.mockito.asm.Type type3 = type2.getElementType();
        org.mockito.cglib.core.Local local4 = new org.mockito.cglib.core.Local(108, type3);
        int int5 = local4.getIndex();
        org.mockito.asm.Type type6 = local4.getType();
        org.mockito.asm.Type type7 = local4.getType();
        org.mockito.asm.Type type8 = local4.getType();
        int int9 = local4.getIndex();
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 108 + "'", int5 == 108);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 108 + "'", int9 == 108);
    }

    @Test
    public void test21710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21710");
        org.mockito.cglib.core.Signature signature2 = new org.mockito.cglib.core.Signature("L1622326596", "V");
        org.mockito.asm.ClassVisitor classVisitor3 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter(classVisitor3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter(classVisitor3);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassInfo classInfo7 = classEmitter5.getClassInfo();
        boolean boolean8 = signature2.equals((java.lang.Object) classEmitter5);
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor10 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter(classVisitor10);
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter(classVisitor10);
        classEmitter9.setTarget((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter12);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.AnnotationVisitor annotationVisitor20 = classEmitter17.visitAnnotation("L1218826837", true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test21711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21711");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = "L97833253";
        org.mockito.cglib.core.Signature signature5 = new org.mockito.cglib.core.Signature("L842693193", "L1804543443");
        org.mockito.asm.MethodVisitor methodVisitor10 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor10);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter11);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter13 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter14 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter15 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter14);
        boolean boolean16 = signature5.equals((java.lang.Object) localVariablesSorter15);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter17 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter15);
        label0.info = localVariablesSorter15;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter19 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter15);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter19.visitVarInsn(113, 172);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test21712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21712");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str2 = type1.getClassName();
        int int3 = type1.getSize();
        org.mockito.cglib.core.Local local4 = new org.mockito.cglib.core.Local(126, type1);
        int int5 = local4.getIndex();
        int int6 = local4.getIndex();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "double" + "'", str2, "double");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 126 + "'", int5 == 126);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 126 + "'", int6 == 126);
    }

    @Test
    public void test21713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21713");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        boolean boolean5 = enhancer0.getAttemptLoad();
        java.lang.Class class6 = null;
        enhancer0.setSuperclass(class6);
        org.mockito.cglib.core.NamingPolicy namingPolicy8 = enhancer0.getNamingPolicy();
        enhancer0.setAttemptLoad(true);
        enhancer0.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = null;
        enhancer13.setNamingPolicy(namingPolicy14);
        boolean boolean16 = enhancer13.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy18 = null;
        enhancer17.setNamingPolicy(namingPolicy18);
        java.lang.ClassLoader classLoader20 = null;
        enhancer17.setClassLoader(classLoader20);
        enhancer17.setUseFactory(true);
        boolean boolean24 = enhancer17.getUseCache();
        java.lang.Class<?> wildcardClass25 = enhancer17.getClass();
        enhancer13.setSuperclass((java.lang.Class) wildcardClass25);
        java.lang.String str27 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass25);
        boolean boolean28 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass25);
        boolean boolean29 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass25);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass25);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj31 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callbacks are required");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(namingPolicy8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str27, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test21714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21714");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter3 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        org.mockito.asm.Label label14 = new org.mockito.asm.Label();
        java.lang.Object obj15 = label14.info;
        java.lang.String str16 = label14.toString();
        java.lang.Object obj17 = label14.info;
        java.lang.Object obj18 = label14.info;
        java.lang.String str19 = label14.toString();
        java.lang.String str20 = label14.toString();
        java.lang.String str21 = label14.toString();
        java.lang.String str22 = label14.toString();
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter11.visitJumpInsn((int) (byte) 1, label14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj15);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L827367163" + "'", str16, "L827367163");
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj18);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L827367163" + "'", str19, "L827367163");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L827367163" + "'", str20, "L827367163");
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L827367163" + "'", str21, "L827367163");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L827367163" + "'", str22, "L827367163");
    }

    @Test
    public void test21715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21715");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.cglib.core.ClassInfo classInfo6 = classEmitter5.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor7 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter(classVisitor7);
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter(classVisitor7);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter9);
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter9);
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter12);
        classEmitter9.setTarget((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.asm.ClassVisitor classVisitor15 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter(classVisitor15);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter(classVisitor15);
        org.mockito.cglib.core.ClassInfo classInfo18 = classEmitter17.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter19);
        org.mockito.asm.ClassVisitor classVisitor21 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassInfo classInfo24 = classEmitter23.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo25 = classEmitter23.getClassInfo();
        classEmitter20.setTarget((org.mockito.asm.ClassVisitor) classEmitter23);
        classEmitter13.setTarget((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.cglib.core.ClassInfo classInfo29 = classEmitter23.getClassInfo();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.cglib.core.Signature signature33 = new org.mockito.cglib.core.Signature("hi!", "B");
        java.lang.String str34 = signature33.toString();
        org.mockito.asm.ClassVisitor classVisitor35 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter(classVisitor35);
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter(classVisitor35);
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter37);
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter38);
        boolean boolean40 = signature33.equals((java.lang.Object) classEmitter39);
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter39);
        org.mockito.asm.ClassVisitor classVisitor42 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter43 = new org.mockito.cglib.core.ClassEmitter(classVisitor42);
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter(classVisitor42);
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter44);
        org.mockito.cglib.core.ClassEmitter classEmitter46 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter44);
        org.mockito.cglib.core.ClassEmitter classEmitter47 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter47);
        classEmitter44.setTarget((org.mockito.asm.ClassVisitor) classEmitter48);
        org.mockito.asm.ClassVisitor classVisitor50 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter51 = new org.mockito.cglib.core.ClassEmitter(classVisitor50);
        org.mockito.cglib.core.ClassEmitter classEmitter52 = new org.mockito.cglib.core.ClassEmitter(classVisitor50);
        org.mockito.cglib.core.ClassInfo classInfo53 = classEmitter52.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter54 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter52);
        org.mockito.cglib.core.ClassEmitter classEmitter55 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter54);
        org.mockito.asm.ClassVisitor classVisitor56 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter57 = new org.mockito.cglib.core.ClassEmitter(classVisitor56);
        org.mockito.cglib.core.ClassEmitter classEmitter58 = new org.mockito.cglib.core.ClassEmitter(classVisitor56);
        org.mockito.cglib.core.ClassInfo classInfo59 = classEmitter58.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo60 = classEmitter58.getClassInfo();
        classEmitter55.setTarget((org.mockito.asm.ClassVisitor) classEmitter58);
        classEmitter48.setTarget((org.mockito.asm.ClassVisitor) classEmitter58);
        org.mockito.asm.ClassVisitor classVisitor63 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter64 = new org.mockito.cglib.core.ClassEmitter(classVisitor63);
        org.mockito.cglib.core.ClassEmitter classEmitter65 = new org.mockito.cglib.core.ClassEmitter(classVisitor63);
        org.mockito.cglib.core.ClassEmitter classEmitter66 = new org.mockito.cglib.core.ClassEmitter(classVisitor63);
        org.mockito.cglib.core.ClassEmitter classEmitter67 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter66);
        classEmitter48.setTarget((org.mockito.asm.ClassVisitor) classEmitter67);
        classEmitter39.setTarget((org.mockito.asm.ClassVisitor) classEmitter67);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter67);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter5.visitInnerClass("L652937309", "long", "L424350036L1144264148", 138);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo6);
        org.junit.Assert.assertNull(classInfo18);
        org.junit.Assert.assertNull(classInfo24);
        org.junit.Assert.assertNull(classInfo25);
        org.junit.Assert.assertNull(classInfo29);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!B" + "'", str34, "hi!B");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(classInfo53);
        org.junit.Assert.assertNull(classInfo59);
        org.junit.Assert.assertNull(classInfo60);
    }

    @Test
    public void test21716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21716");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter3 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.asm.Attribute attribute8 = null;
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter6.visitAttribute(attribute8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21717");
        org.mockito.cglib.proxy.Enhancer enhancer1 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy2 = null;
        enhancer1.setNamingPolicy(namingPolicy2);
        java.lang.ClassLoader classLoader4 = null;
        enhancer1.setClassLoader(classLoader4);
        java.lang.Class<?> wildcardClass6 = enhancer1.getClass();
        java.lang.String str7 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass6);
        boolean boolean8 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass6);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        boolean boolean10 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass6);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        int int12 = type11.getSize();
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = null;
        enhancer13.setNamingPolicy(namingPolicy14);
        java.lang.ClassLoader classLoader16 = null;
        enhancer13.setClassLoader(classLoader16);
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy19 = null;
        enhancer18.setNamingPolicy(namingPolicy19);
        java.lang.ClassLoader classLoader21 = null;
        enhancer18.setClassLoader(classLoader21);
        java.lang.Class<?> wildcardClass23 = enhancer18.getClass();
        java.lang.String str24 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy26 = null;
        enhancer25.setNamingPolicy(namingPolicy26);
        java.lang.ClassLoader classLoader28 = null;
        enhancer25.setClassLoader(classLoader28);
        java.lang.Class<?> wildcardClass30 = enhancer25.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[] { wildcardClass23, wildcardClass30 };
        enhancer13.setInterfaces(classArray31);
        boolean boolean33 = enhancer13.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer34 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy35 = null;
        enhancer34.setNamingPolicy(namingPolicy35);
        java.lang.ClassLoader classLoader37 = null;
        enhancer34.setClassLoader(classLoader37);
        java.lang.Class<?> wildcardClass39 = enhancer34.getClass();
        enhancer13.setSuperclass((java.lang.Class) wildcardClass39);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass39);
        java.lang.String str42 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass39);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass39);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.BYTE_TYPE;
        int int46 = type45.getSize();
        java.lang.String str47 = type45.getClassName();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type49 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type50 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type51 = org.mockito.asm.Type.BYTE_TYPE;
        int int52 = type51.getSize();
        java.lang.String str53 = type51.getClassName();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str55 = type54.getClassName();
        org.mockito.asm.Type[] typeArray56 = new org.mockito.asm.Type[] { type48, type49, type50, type51, type54 };
        org.mockito.cglib.core.Signature signature57 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type45, typeArray56);
        java.lang.String str58 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray56);
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type11, typeArray56);
        org.mockito.asm.Type type60 = type11.getElementType();
        org.mockito.asm.Type type61 = type11.getElementType();
        org.mockito.cglib.core.Local local62 = new org.mockito.cglib.core.Local(108, type11);
        org.mockito.asm.Type type63 = local62.getType();
        int int64 = local62.getIndex();
        org.mockito.asm.Type type65 = local62.getType();
        java.lang.Class<?> wildcardClass66 = local62.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str7, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str24, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str42, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "byte" + "'", str47, "byte");
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "byte" + "'", str53, "byte");
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "double" + "'", str55, "double");
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;" + "'", str58, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;" + "'", str59, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 108 + "'", int64 == 108);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test21718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21718");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor1);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter3);
        org.mockito.asm.ClassVisitor classVisitor6 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        classEmitter8.setTarget((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.asm.ClassVisitor classVisitor14 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.cglib.core.ClassInfo classInfo17 = classEmitter16.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter18);
        org.mockito.asm.ClassVisitor classVisitor20 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter(classVisitor20);
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter(classVisitor20);
        org.mockito.cglib.core.ClassInfo classInfo23 = classEmitter22.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo24 = classEmitter22.getClassInfo();
        classEmitter19.setTarget((org.mockito.asm.ClassVisitor) classEmitter22);
        classEmitter12.setTarget((org.mockito.asm.ClassVisitor) classEmitter22);
        org.mockito.cglib.core.ClassInfo classInfo27 = classEmitter22.getClassInfo();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter22);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter22.visitInnerClass("L1410107159", "L102616282", "L479053486", 36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo17);
        org.junit.Assert.assertNull(classInfo23);
        org.junit.Assert.assertNull(classInfo24);
        org.junit.Assert.assertNull(classInfo27);
    }

    @Test
    public void test21719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21719");
        org.mockito.asm.MethodVisitor methodVisitor6 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter13 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter14 = new org.mockito.cglib.core.LocalVariablesSorter(114, "Lmockito/cglib/proxy/Enhancer;", (org.mockito.asm.MethodVisitor) localVariablesSorter9);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21720");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type[] typeArray1 = org.mockito.asm.Type.getArgumentTypes("L2103307875");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21721");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("byte");
        int int2 = type1.getSize();
        org.mockito.cglib.proxy.Enhancer enhancer3 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy4 = null;
        enhancer3.setNamingPolicy(namingPolicy4);
        java.lang.ClassLoader classLoader6 = null;
        enhancer3.setClassLoader(classLoader6);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter8 = null;
        enhancer3.setCallbackFilter(callbackFilter8);
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer3.setCallback(callback10);
        enhancer3.setUseCache(false);
        boolean boolean14 = type1.equals((java.lang.Object) enhancer3);
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = null;
        enhancer15.setNamingPolicy(namingPolicy16);
        java.lang.ClassLoader classLoader18 = null;
        enhancer15.setClassLoader(classLoader18);
        boolean boolean20 = enhancer15.getAttemptLoad();
        java.lang.Class class21 = null;
        enhancer15.setSuperclass(class21);
        java.lang.ClassLoader classLoader23 = enhancer15.getClassLoader();
        boolean boolean24 = enhancer15.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy26 = null;
        enhancer25.setNamingPolicy(namingPolicy26);
        java.lang.ClassLoader classLoader28 = null;
        enhancer25.setClassLoader(classLoader28);
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = null;
        enhancer30.setNamingPolicy(namingPolicy31);
        java.lang.ClassLoader classLoader33 = null;
        enhancer30.setClassLoader(classLoader33);
        java.lang.Class<?> wildcardClass35 = enhancer30.getClass();
        java.lang.String str36 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass35);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy38 = null;
        enhancer37.setNamingPolicy(namingPolicy38);
        java.lang.ClassLoader classLoader40 = null;
        enhancer37.setClassLoader(classLoader40);
        java.lang.Class<?> wildcardClass42 = enhancer37.getClass();
        java.lang.Class[] classArray43 = new java.lang.Class[] { wildcardClass35, wildcardClass42 };
        enhancer25.setInterfaces(classArray43);
        boolean boolean45 = enhancer25.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy47 = null;
        enhancer46.setNamingPolicy(namingPolicy47);
        java.lang.ClassLoader classLoader49 = null;
        enhancer46.setClassLoader(classLoader49);
        java.lang.Class<?> wildcardClass51 = enhancer46.getClass();
        enhancer25.setSuperclass((java.lang.Class) wildcardClass51);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass51);
        java.lang.String str54 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass51);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass51);
        enhancer15.setSuperclass((java.lang.Class) wildcardClass51);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass51);
        enhancer3.setSuperclass((java.lang.Class) wildcardClass51);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class59 = enhancer3.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: createClass does not accept callbacks");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(classLoader23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str36, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(classArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str54, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type57);
    }

    @Test
    public void test21722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21722");
        org.mockito.asm.MethodVisitor methodVisitor6 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(56, "()Lorg/mockito/cglib/core/ClassEmitter;", (org.mockito.asm.MethodVisitor) localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter10);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter((int) (short) 10, "hi!L57827812", (org.mockito.asm.MethodVisitor) localVariablesSorter11);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21723");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.Object obj1 = label0.info;
        java.lang.String str2 = label0.toString();
        java.lang.String str3 = label0.toString();
        java.lang.String str4 = label0.toString();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getReturnType("Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B");
        label0.info = type6;
        java.lang.Object obj8 = label0.info;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.getObjectType("L491776462");
        label0.info = "L491776462";
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy15 = null;
        enhancer14.setNamingPolicy(namingPolicy15);
        java.lang.ClassLoader classLoader17 = null;
        enhancer14.setClassLoader(classLoader17);
        enhancer14.setUseFactory(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = enhancer14.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = null;
        enhancer22.setNamingPolicy(namingPolicy23);
        java.lang.ClassLoader classLoader25 = null;
        enhancer22.setClassLoader(classLoader25);
        boolean boolean27 = enhancer22.getAttemptLoad();
        java.lang.Class class28 = null;
        enhancer22.setSuperclass(class28);
        java.lang.ClassLoader classLoader30 = enhancer22.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer22.getNamingPolicy();
        enhancer22.setUseCache(true);
        boolean boolean34 = enhancer22.getAttemptLoad();
        enhancer22.setAttemptLoad(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy37 = enhancer22.getStrategy();
        enhancer14.setStrategy(generatorStrategy37);
        label0.info = enhancer14;
        java.lang.String str40 = label0.toString();
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy42 = null;
        enhancer41.setNamingPolicy(namingPolicy42);
        boolean boolean44 = enhancer41.getAttemptLoad();
        enhancer41.setSerialVersionUID((java.lang.Long) 0L);
        org.mockito.cglib.proxy.Callback callback47 = null;
        enhancer41.setCallback(callback47);
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy50 = null;
        enhancer49.setNamingPolicy(namingPolicy50);
        java.lang.ClassLoader classLoader52 = null;
        enhancer49.setClassLoader(classLoader52);
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = null;
        enhancer54.setNamingPolicy(namingPolicy55);
        java.lang.ClassLoader classLoader57 = null;
        enhancer54.setClassLoader(classLoader57);
        java.lang.Class<?> wildcardClass59 = enhancer54.getClass();
        java.lang.String str60 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass59);
        org.mockito.cglib.proxy.Enhancer enhancer61 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy62 = null;
        enhancer61.setNamingPolicy(namingPolicy62);
        java.lang.ClassLoader classLoader64 = null;
        enhancer61.setClassLoader(classLoader64);
        java.lang.Class<?> wildcardClass66 = enhancer61.getClass();
        java.lang.Class[] classArray67 = new java.lang.Class[] { wildcardClass59, wildcardClass66 };
        enhancer49.setInterfaces(classArray67);
        boolean boolean69 = enhancer49.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer70 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy71 = null;
        enhancer70.setNamingPolicy(namingPolicy71);
        java.lang.ClassLoader classLoader73 = null;
        enhancer70.setClassLoader(classLoader73);
        java.lang.Class<?> wildcardClass75 = enhancer70.getClass();
        enhancer49.setSuperclass((java.lang.Class) wildcardClass75);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass75);
        java.lang.String str78 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass75);
        org.mockito.asm.Type type79 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass75);
        org.mockito.asm.Type type80 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass75);
        boolean boolean81 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass75);
        java.lang.String str82 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass75);
        java.lang.String str83 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass75);
        java.lang.String str84 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass75);
        org.mockito.asm.Type type85 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass75);
        java.lang.String str86 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass75);
        java.lang.String str87 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass75);
        org.mockito.asm.Type type88 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass75);
        enhancer41.setSuperclass((java.lang.Class) wildcardClass75);
        org.mockito.asm.Type type90 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass75);
        label0.info = type90;
        org.junit.Assert.assertNull(obj1);
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "L2090677489" + "'", str2, "L2090677489");
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "L2090677489" + "'", str3, "L2090677489");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L2090677489" + "'", str4, "L2090677489");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "B");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "B");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "B");
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "B");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "B");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "B");
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L2090677489" + "'", str10, "L2090677489");
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(namingPolicy21);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(generatorStrategy37);
// flaky:         org.junit.Assert.assertEquals("'" + str40 + "' != '" + "L2090677489" + "'", str40, "L2090677489");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str60, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(classArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str78, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str82, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str83, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str84, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str86, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str87, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertNotNull(type90);
    }

    @Test
    public void test21724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21724");
        org.mockito.asm.Label label2 = new org.mockito.asm.Label();
        java.lang.Object obj3 = label2.info;
        java.lang.String str4 = label2.toString();
        java.lang.Object obj5 = label2.info;
        org.mockito.cglib.proxy.Enhancer enhancer6 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = null;
        enhancer6.setNamingPolicy(namingPolicy7);
        java.lang.ClassLoader classLoader9 = null;
        enhancer6.setClassLoader(classLoader9);
        enhancer6.setUseFactory(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = enhancer6.getNamingPolicy();
        label2.info = enhancer6;
        java.lang.String str15 = label2.toString();
        org.mockito.asm.MethodVisitor methodVisitor20 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter21 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor20);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter22 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter21);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter23 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter21);
        label2.info = localVariablesSorter21;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter25 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter21);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter26 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter25);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter27 = new org.mockito.cglib.core.LocalVariablesSorter(2, "(CBBBD)LLorg.mockito.cglib.proxy.Enhancer;(CBBBD)B;", (org.mockito.asm.MethodVisitor) localVariablesSorter25);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter28 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter25);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter28.visitIincInsn(8, 169);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L1439340001" + "'", str4, "L1439340001");
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(namingPolicy13);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L1439340001" + "'", str15, "L1439340001");
    }

    @Test
    public void test21725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21725");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        enhancer0.setUseCache(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy9 = enhancer0.getNamingPolicy();
        boolean boolean10 = enhancer0.getAttemptLoad();
        enhancer0.setUseCache(false);
        java.lang.ClassLoader classLoader13 = enhancer0.getClassLoader();
        boolean boolean14 = enhancer0.getUseCache();
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.Signature signature19 = new org.mockito.cglib.core.Signature("L5949614", "L183352280");
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = null;
        enhancer20.setNamingPolicy(namingPolicy21);
        java.lang.ClassLoader classLoader23 = null;
        enhancer20.setClassLoader(classLoader23);
        boolean boolean25 = enhancer20.getAttemptLoad();
        boolean boolean26 = enhancer20.getUseCache();
        java.lang.ClassLoader classLoader27 = enhancer20.getClassLoader();
        boolean boolean28 = signature19.equals((java.lang.Object) classLoader27);
        enhancer0.setClassLoader(classLoader27);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy30 = enhancer0.getStrategy();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy31 = enhancer0.getStrategy();
        org.junit.Assert.assertNotNull(namingPolicy9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(classLoader13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(classLoader27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(generatorStrategy30);
        org.junit.Assert.assertNotNull(generatorStrategy31);
    }

    @Test
    public void test21726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21726");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter3 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter3);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter3.visitMaxs(44, 64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21727");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type[] typeArray1 = org.mockito.asm.Type.getArgumentTypes("L290629782");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21728");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter11.visitTypeInsn(12, "L1152393249");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21729");
        org.mockito.cglib.core.Signature signature2 = new org.mockito.cglib.core.Signature("L1932193096", "L216607661");
    }

    @Test
    public void test21730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21730");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("Lorg/mockito/cglib/proxy/Enhancer;");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.BYTE_TYPE;
        int int4 = type3.getSize();
        java.lang.String str5 = type3.getClassName();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type7 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type8 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type9 = org.mockito.asm.Type.BYTE_TYPE;
        int int10 = type9.getSize();
        java.lang.String str11 = type9.getClassName();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str13 = type12.getClassName();
        org.mockito.asm.Type[] typeArray14 = new org.mockito.asm.Type[] { type6, type7, type8, type9, type12 };
        org.mockito.cglib.core.Signature signature15 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type3, typeArray14);
        org.mockito.asm.Type[] typeArray16 = signature15.getArgumentTypes();
        java.lang.String str17 = signature15.toString();
        org.mockito.cglib.core.Signature signature20 = new org.mockito.cglib.core.Signature("byte", "()D");
        boolean boolean21 = signature15.equals((java.lang.Object) signature20);
        java.lang.String str22 = signature15.getDescriptor();
        boolean boolean23 = type1.equals((java.lang.Object) signature15);
        org.mockito.asm.Label label24 = new org.mockito.asm.Label();
        java.lang.Object obj25 = label24.info;
        java.lang.String str26 = label24.toString();
        java.lang.Object obj27 = label24.info;
        java.lang.Object obj28 = label24.info;
        boolean boolean29 = signature15.equals(obj28);
        org.mockito.asm.Type type30 = signature15.getReturnType();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] {};
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type33, typeArray34);
        org.mockito.cglib.core.Local local36 = new org.mockito.cglib.core.Local(124, type33);
        int int37 = local36.getIndex();
        int int38 = local36.getIndex();
        org.mockito.asm.Type type39 = local36.getType();
        java.lang.String str40 = type39.getClassName();
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy43 = null;
        enhancer42.setNamingPolicy(namingPolicy43);
        java.lang.ClassLoader classLoader45 = null;
        enhancer42.setClassLoader(classLoader45);
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy48 = null;
        enhancer47.setNamingPolicy(namingPolicy48);
        java.lang.ClassLoader classLoader50 = null;
        enhancer47.setClassLoader(classLoader50);
        java.lang.Class<?> wildcardClass52 = enhancer47.getClass();
        java.lang.String str53 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass52);
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = null;
        enhancer54.setNamingPolicy(namingPolicy55);
        java.lang.ClassLoader classLoader57 = null;
        enhancer54.setClassLoader(classLoader57);
        java.lang.Class<?> wildcardClass59 = enhancer54.getClass();
        java.lang.Class[] classArray60 = new java.lang.Class[] { wildcardClass52, wildcardClass59 };
        enhancer42.setInterfaces(classArray60);
        boolean boolean62 = enhancer42.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer63 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy64 = null;
        enhancer63.setNamingPolicy(namingPolicy64);
        java.lang.ClassLoader classLoader66 = null;
        enhancer63.setClassLoader(classLoader66);
        java.lang.Class<?> wildcardClass68 = enhancer63.getClass();
        enhancer42.setSuperclass((java.lang.Class) wildcardClass68);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass68);
        java.lang.String str71 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass68);
        org.mockito.asm.Type type72 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass68);
        java.lang.String str73 = type72.getInternalName();
        java.lang.String str74 = type72.toString();
        java.lang.String str75 = type72.toString();
        java.lang.String str76 = type72.toString();
        int int77 = type72.getSize();
        java.lang.String str78 = type72.toString();
        org.mockito.asm.Type type79 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type81 = org.mockito.asm.Type.getObjectType("byte");
        org.mockito.asm.Type type82 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray83 = new org.mockito.asm.Type[] {};
        java.lang.String str84 = org.mockito.asm.Type.getMethodDescriptor(type82, typeArray83);
        java.lang.String str85 = org.mockito.asm.Type.getMethodDescriptor(type81, typeArray83);
        java.lang.String str86 = org.mockito.asm.Type.getMethodDescriptor(type79, typeArray83);
        org.mockito.cglib.core.Signature signature87 = new org.mockito.cglib.core.Signature("L688118684", type72, typeArray83);
        org.mockito.cglib.core.Signature signature88 = new org.mockito.cglib.core.Signature("L1909071159", type39, typeArray83);
        java.lang.String str89 = signature88.getName();
        java.lang.String str90 = signature88.toString();
        boolean boolean91 = signature15.equals((java.lang.Object) str90);
        org.mockito.asm.Type type92 = signature15.getReturnType();
        int int93 = type92.getSort();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "byte" + "'", str5, "byte");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "byte" + "'", str11, "byte");
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "double" + "'", str13, "double");
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B" + "'", str17, "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(CBBBD)B" + "'", str22, "(CBBBD)B");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj25);
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L338405120" + "'", str26, "L338405120");
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "()D" + "'", str35, "()D");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 124 + "'", int37 == 124);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 124 + "'", int38 == 124);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "double" + "'", str40, "double");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str53, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(classArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str71, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str73, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str74, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str75, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str76, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str78, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(typeArray83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "()D" + "'", str84, "()D");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "()Lbyte;" + "'", str85, "()Lbyte;");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "()V" + "'", str86, "()V");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "L1909071159" + "'", str89, "L1909071159");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "L1909071159()D" + "'", str90, "L1909071159()D");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(type92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 3 + "'", int93 == 3);
    }

    @Test
    public void test21731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21731");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.BYTE_TYPE;
        int int2 = type1.getSize();
        java.lang.String str3 = type1.getClassName();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type5 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type6 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type7 = org.mockito.asm.Type.BYTE_TYPE;
        int int8 = type7.getSize();
        java.lang.String str9 = type7.getClassName();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str11 = type10.getClassName();
        org.mockito.asm.Type[] typeArray12 = new org.mockito.asm.Type[] { type4, type5, type6, type7, type10 };
        org.mockito.cglib.core.Signature signature13 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type1, typeArray12);
        java.lang.String str14 = signature13.toString();
        java.lang.String str15 = signature13.getName();
        org.mockito.asm.Label label16 = new org.mockito.asm.Label();
        java.lang.Object obj17 = label16.info;
        java.lang.String str18 = label16.toString();
        java.lang.String str19 = label16.toString();
        boolean boolean20 = signature13.equals((java.lang.Object) label16);
        java.lang.Object obj21 = label16.info;
        org.mockito.asm.Label label22 = new org.mockito.asm.Label();
        java.lang.Object obj23 = label22.info;
        java.lang.String str24 = label22.toString();
        java.lang.Object obj25 = label22.info;
        org.mockito.asm.Type type26 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type27 = org.mockito.asm.Type.BYTE_TYPE;
        boolean boolean29 = type27.equals((java.lang.Object) 9);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type32 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray33 = new org.mockito.asm.Type[] {};
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type32, typeArray33);
        org.mockito.cglib.core.Signature signature35 = new org.mockito.cglib.core.Signature("double", type31, typeArray33);
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray33);
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type26, typeArray33);
        label22.info = type26;
        java.lang.Object obj39 = label22.info;
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy41 = null;
        enhancer40.setNamingPolicy(namingPolicy41);
        java.lang.ClassLoader classLoader43 = null;
        enhancer40.setClassLoader(classLoader43);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter45 = null;
        enhancer40.setCallbackFilter(callbackFilter45);
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy48 = null;
        enhancer47.setNamingPolicy(namingPolicy48);
        java.lang.ClassLoader classLoader50 = null;
        enhancer47.setClassLoader(classLoader50);
        boolean boolean52 = enhancer47.getAttemptLoad();
        java.lang.Class class53 = null;
        enhancer47.setSuperclass(class53);
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = enhancer47.getNamingPolicy();
        enhancer40.setNamingPolicy(namingPolicy55);
        enhancer40.setSerialVersionUID((java.lang.Long) 0L);
        boolean boolean59 = enhancer40.getUseCache();
        enhancer40.setUseFactory(true);
        org.mockito.cglib.proxy.Enhancer enhancer62 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy63 = null;
        enhancer62.setNamingPolicy(namingPolicy63);
        java.lang.ClassLoader classLoader65 = null;
        enhancer62.setClassLoader(classLoader65);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter67 = null;
        enhancer62.setCallbackFilter(callbackFilter67);
        org.mockito.cglib.proxy.Callback callback69 = null;
        enhancer62.setCallback(callback69);
        java.lang.ClassLoader classLoader71 = null;
        enhancer62.setClassLoader(classLoader71);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy73 = null;
        enhancer62.setStrategy(generatorStrategy73);
        org.mockito.cglib.core.NamingPolicy namingPolicy75 = enhancer62.getNamingPolicy();
        enhancer40.setNamingPolicy(namingPolicy75);
        label22.info = enhancer40;
        java.lang.Object obj78 = label22.info;
        label16.info = label22;
        org.mockito.cglib.proxy.Enhancer enhancer80 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy81 = null;
        enhancer80.setNamingPolicy(namingPolicy81);
        java.lang.ClassLoader classLoader83 = null;
        enhancer80.setClassLoader(classLoader83);
        enhancer80.setInterceptDuringConstruction(false);
        label22.info = enhancer80;
        enhancer80.setInterceptDuringConstruction(false);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "byte" + "'", str3, "byte");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "byte" + "'", str9, "byte");
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "double" + "'", str11, "double");
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B" + "'", str14, "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str15, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNull(obj17);
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "L699948354" + "'", str18, "L699948354");
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L699948354" + "'", str19, "L699948354");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj23);
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "L668579038" + "'", str24, "L668579038");
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "()D" + "'", str34, "()D");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "()B" + "'", str36, "()B");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "()F" + "'", str37, "()F");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "F");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "F");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "F");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(namingPolicy55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(namingPolicy75);
        org.junit.Assert.assertNotNull(obj78);
    }

    @Test
    public void test21732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21732");
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy5 = null;
        enhancer4.setNamingPolicy(namingPolicy5);
        java.lang.ClassLoader classLoader7 = null;
        enhancer4.setClassLoader(classLoader7);
        java.lang.Class<?> wildcardClass9 = enhancer4.getClass();
        java.lang.String str10 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass9);
        boolean boolean11 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass9);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass9);
        int int13 = type12.getSize();
        org.mockito.cglib.core.Local local14 = new org.mockito.cglib.core.Local(108, type12);
        java.lang.String str15 = type12.getDescriptor();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getObjectType("byte");
        org.mockito.asm.Type type18 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray19 = new org.mockito.asm.Type[] {};
        java.lang.String str20 = org.mockito.asm.Type.getMethodDescriptor(type18, typeArray19);
        java.lang.String str21 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray19);
        org.mockito.cglib.core.Signature signature22 = new org.mockito.cglib.core.Signature("J", type12, typeArray19);
        org.mockito.asm.Type type23 = signature22.getReturnType();
        org.mockito.asm.MethodVisitor methodVisitor28 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter29 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor28);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter30 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter29);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter31 = new org.mockito.cglib.core.LocalVariablesSorter(56, "()Lorg/mockito/cglib/core/ClassEmitter;", (org.mockito.asm.MethodVisitor) localVariablesSorter29);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter32 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter31);
        boolean boolean33 = signature22.equals((java.lang.Object) localVariablesSorter32);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter34 = new org.mockito.cglib.core.LocalVariablesSorter(96, "(CBBBD)Lbyte;", (org.mockito.asm.MethodVisitor) localVariablesSorter32);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter35 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter32);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter35.visitMethodInsn(37, "L1138057737(CBBBD)B", "L652937309", "V");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str10, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str15, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "()D" + "'", str20, "()D");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "()Lbyte;" + "'", str21, "()Lbyte;");
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test21733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21733");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter3 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter10.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21734");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(128, "(CBBBD)Lg/mockito/cglib/proxy/Enhancer;", (org.mockito.asm.MethodVisitor) localVariablesSorter8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.getObjectType("byte");
        int int15 = type14.getSize();
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy17 = null;
        enhancer16.setNamingPolicy(namingPolicy17);
        java.lang.ClassLoader classLoader19 = null;
        enhancer16.setClassLoader(classLoader19);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter21 = null;
        enhancer16.setCallbackFilter(callbackFilter21);
        org.mockito.cglib.proxy.Callback callback23 = null;
        enhancer16.setCallback(callback23);
        enhancer16.setUseCache(false);
        boolean boolean27 = type14.equals((java.lang.Object) enhancer16);
        boolean boolean28 = enhancer16.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy30 = null;
        enhancer29.setNamingPolicy(namingPolicy30);
        java.lang.ClassLoader classLoader32 = null;
        enhancer29.setClassLoader(classLoader32);
        enhancer29.setUseFactory(true);
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy37 = null;
        enhancer36.setNamingPolicy(namingPolicy37);
        java.lang.ClassLoader classLoader39 = null;
        enhancer36.setClassLoader(classLoader39);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter41 = null;
        enhancer36.setCallbackFilter(callbackFilter41);
        org.mockito.cglib.proxy.Callback callback43 = null;
        enhancer36.setCallback(callback43);
        java.lang.ClassLoader classLoader45 = null;
        enhancer36.setClassLoader(classLoader45);
        enhancer36.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy50 = null;
        enhancer49.setNamingPolicy(namingPolicy50);
        java.lang.ClassLoader classLoader52 = null;
        enhancer49.setClassLoader(classLoader52);
        boolean boolean54 = enhancer49.getAttemptLoad();
        enhancer49.setUseCache(true);
        java.lang.ClassLoader classLoader57 = enhancer49.getClassLoader();
        enhancer36.setClassLoader(classLoader57);
        enhancer29.setClassLoader(classLoader57);
        enhancer16.setClassLoader(classLoader57);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy61 = enhancer16.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer62 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy63 = null;
        enhancer62.setNamingPolicy(namingPolicy63);
        boolean boolean65 = enhancer62.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy66 = enhancer62.getNamingPolicy();
        java.lang.ClassLoader classLoader67 = enhancer62.getClassLoader();
        enhancer16.setClassLoader(classLoader67);
        enhancer16.setUseFactory(true);
        boolean boolean71 = enhancer16.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer72 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy73 = null;
        enhancer72.setNamingPolicy(namingPolicy73);
        java.lang.ClassLoader classLoader75 = null;
        enhancer72.setClassLoader(classLoader75);
        boolean boolean77 = enhancer72.getAttemptLoad();
        boolean boolean78 = enhancer72.getUseCache();
        enhancer72.setAttemptLoad(false);
        boolean boolean81 = enhancer72.getAttemptLoad();
        enhancer72.setAttemptLoad(true);
        org.mockito.cglib.proxy.Callback callback84 = null;
        enhancer72.setCallback(callback84);
        org.mockito.cglib.proxy.Enhancer enhancer86 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy87 = null;
        enhancer86.setNamingPolicy(namingPolicy87);
        java.lang.ClassLoader classLoader89 = null;
        enhancer86.setClassLoader(classLoader89);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter91 = null;
        enhancer86.setCallbackFilter(callbackFilter91);
        enhancer86.setUseCache(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy95 = enhancer86.getStrategy();
        enhancer72.setStrategy(generatorStrategy95);
        enhancer16.setStrategy(generatorStrategy95);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter12.visitLdcInsn((java.lang.Object) enhancer16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(classLoader57);
        org.junit.Assert.assertNotNull(generatorStrategy61);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(namingPolicy66);
        org.junit.Assert.assertNotNull(classLoader67);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(generatorStrategy95);
    }

    @Test
    public void test21735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21735");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        java.lang.ClassLoader classLoader9 = null;
        enhancer0.setClassLoader(classLoader9);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = null;
        enhancer0.setStrategy(generatorStrategy11);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = null;
        enhancer13.setNamingPolicy(namingPolicy14);
        java.lang.ClassLoader classLoader16 = null;
        enhancer13.setClassLoader(classLoader16);
        boolean boolean18 = enhancer13.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer13.getStrategy();
        enhancer0.setStrategy(generatorStrategy19);
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy23 = enhancer0.getStrategy();
        java.lang.ClassLoader classLoader24 = enhancer0.getClassLoader();
        java.lang.ClassLoader classLoader25 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Callback callback26 = null;
        enhancer0.setCallback(callback26);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertNotNull(generatorStrategy23);
        org.junit.Assert.assertNotNull(classLoader24);
        org.junit.Assert.assertNotNull(classLoader25);
    }

    @Test
    public void test21736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21736");
        org.mockito.cglib.proxy.Enhancer enhancer1 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy2 = null;
        enhancer1.setNamingPolicy(namingPolicy2);
        java.lang.ClassLoader classLoader4 = null;
        enhancer1.setClassLoader(classLoader4);
        org.mockito.cglib.proxy.Enhancer enhancer6 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = null;
        enhancer6.setNamingPolicy(namingPolicy7);
        java.lang.ClassLoader classLoader9 = null;
        enhancer6.setClassLoader(classLoader9);
        java.lang.Class<?> wildcardClass11 = enhancer6.getClass();
        java.lang.String str12 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass11);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = null;
        enhancer13.setNamingPolicy(namingPolicy14);
        java.lang.ClassLoader classLoader16 = null;
        enhancer13.setClassLoader(classLoader16);
        java.lang.Class<?> wildcardClass18 = enhancer13.getClass();
        java.lang.Class[] classArray19 = new java.lang.Class[] { wildcardClass11, wildcardClass18 };
        enhancer1.setInterfaces(classArray19);
        boolean boolean21 = enhancer1.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = null;
        enhancer22.setNamingPolicy(namingPolicy23);
        java.lang.ClassLoader classLoader25 = null;
        enhancer22.setClassLoader(classLoader25);
        java.lang.Class<?> wildcardClass27 = enhancer22.getClass();
        enhancer1.setSuperclass((java.lang.Class) wildcardClass27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass27);
        java.lang.String str30 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass27);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass27);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.BYTE_TYPE;
        int int34 = type33.getSize();
        java.lang.String str35 = type33.getClassName();
        int int36 = type33.getSize();
        org.mockito.cglib.core.Signature signature39 = new org.mockito.cglib.core.Signature("byte", "()B");
        org.mockito.asm.Type type40 = signature39.getReturnType();
        java.lang.String str41 = signature39.getName();
        org.mockito.asm.Type[] typeArray42 = signature39.getArgumentTypes();
        org.mockito.cglib.core.Signature signature43 = new org.mockito.cglib.core.Signature("L769857137", type33, typeArray42);
        org.mockito.cglib.core.Signature signature44 = new org.mockito.cglib.core.Signature("LL13801669;", type31, typeArray42);
        java.lang.String str45 = type31.toString();
        int int46 = type31.getSize();
        java.lang.String str47 = type31.getInternalName();
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str12, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str30, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "byte" + "'", str35, "byte");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "byte" + "'", str41, "byte");
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str45, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str47, "org/mockito/cglib/proxy/Enhancer");
    }

    @Test
    public void test21737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21737");
        org.mockito.cglib.proxy.Enhancer enhancer1 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy2 = null;
        enhancer1.setNamingPolicy(namingPolicy2);
        java.lang.ClassLoader classLoader4 = null;
        enhancer1.setClassLoader(classLoader4);
        java.lang.Class<?> wildcardClass6 = enhancer1.getClass();
        java.lang.String str7 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass6);
        boolean boolean8 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass6);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        int int11 = type9.getOpcode(128);
        java.lang.String str12 = type9.toString();
        int int13 = type9.getDimensions();
        java.lang.String str14 = type9.toString();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.cglib.core.Local local18 = new org.mockito.cglib.core.Local(124, type17);
        boolean boolean20 = type17.equals((java.lang.Object) 0);
        org.mockito.asm.Type[] typeArray21 = new org.mockito.asm.Type[] {};
        org.mockito.cglib.core.Signature signature22 = new org.mockito.cglib.core.Signature("L1176429447", type17, typeArray21);
        org.mockito.cglib.core.Signature signature23 = new org.mockito.cglib.core.Signature("L1176429447", type9, typeArray21);
        java.lang.String str24 = type9.getClassName();
        int int25 = type9.getSort();
        java.lang.String str26 = type9.getClassName();
        java.lang.String str27 = type9.toString();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str7, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 132 + "'", int11 == 132);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str12, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str14, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "org.mockito.cglib.proxy.Enhancer" + "'", str24, "org.mockito.cglib.proxy.Enhancer");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org.mockito.cglib.proxy.Enhancer" + "'", str26, "org.mockito.cglib.proxy.Enhancer");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str27, "Lorg/mockito/cglib/proxy/Enhancer;");
    }

    @Test
    public void test21738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21738");
        org.mockito.cglib.proxy.Enhancer enhancer1 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy2 = null;
        enhancer1.setNamingPolicy(namingPolicy2);
        java.lang.ClassLoader classLoader4 = null;
        enhancer1.setClassLoader(classLoader4);
        java.lang.Class<?> wildcardClass6 = enhancer1.getClass();
        java.lang.String str7 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass6);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type11 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray12 = new org.mockito.asm.Type[] {};
        java.lang.String str13 = org.mockito.asm.Type.getMethodDescriptor(type11, typeArray12);
        org.mockito.cglib.core.Signature signature14 = new org.mockito.cglib.core.Signature("double", type10, typeArray12);
        java.lang.String str15 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray12);
        org.mockito.cglib.core.Local local16 = new org.mockito.cglib.core.Local(14, type8);
        int int17 = local16.getIndex();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str7, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "()D" + "'", str13, "()D");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "()Lorg/mockito/cglib/proxy/Enhancer;" + "'", str15, "()Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 14 + "'", int17 == 14);
    }

    @Test
    public void test21739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21739");
        org.mockito.cglib.core.Signature signature2 = new org.mockito.cglib.core.Signature("hi!", "B");
        java.lang.String str3 = signature2.toString();
        org.mockito.asm.ClassVisitor classVisitor4 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter(classVisitor4);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter(classVisitor4);
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter6);
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter7);
        boolean boolean9 = signature2.equals((java.lang.Object) classEmitter8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter8);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter8.visitInnerClass("Lorg.mockito.cglib.proxy.Enhancer;(CBBBD)B", "L118832631", "()LLorg/mockito/cglib/proxy/Enhancer;", 97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!B" + "'", str3, "hi!B");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test21740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21740");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = null;
        enhancer5.setNamingPolicy(namingPolicy6);
        java.lang.ClassLoader classLoader8 = null;
        enhancer5.setClassLoader(classLoader8);
        java.lang.Class<?> wildcardClass10 = enhancer5.getClass();
        java.lang.String str11 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass10);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = null;
        enhancer12.setNamingPolicy(namingPolicy13);
        java.lang.ClassLoader classLoader15 = null;
        enhancer12.setClassLoader(classLoader15);
        java.lang.Class<?> wildcardClass17 = enhancer12.getClass();
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass10, wildcardClass17 };
        enhancer0.setInterfaces(classArray18);
        boolean boolean20 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = null;
        enhancer21.setNamingPolicy(namingPolicy22);
        java.lang.ClassLoader classLoader24 = null;
        enhancer21.setClassLoader(classLoader24);
        java.lang.Class<?> wildcardClass26 = enhancer21.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass26);
        java.lang.ClassLoader classLoader28 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter29 = null;
        enhancer0.setCallbackFilter(callbackFilter29);
        boolean boolean31 = enhancer0.getAttemptLoad();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class32 = enhancer0.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback types are required");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str11, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test21741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21741");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.asm.ClassVisitor classVisitor6 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassInfo classInfo9 = classEmitter8.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter10);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassInfo classInfo19 = classEmitter17.getClassInfo();
        // The following exception was thrown during execution in test generation
        try {
            classEmitter17.visitSource("()B", "L1833137381");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo9);
        org.junit.Assert.assertNull(classInfo19);
    }

    @Test
    public void test21742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21742");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        classEmitter2.setTarget((org.mockito.asm.ClassVisitor) classEmitter6);
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassInfo classInfo11 = classEmitter10.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.asm.ClassVisitor classVisitor14 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.cglib.core.ClassInfo classInfo17 = classEmitter16.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo18 = classEmitter16.getClassInfo();
        classEmitter13.setTarget((org.mockito.asm.ClassVisitor) classEmitter16);
        classEmitter6.setTarget((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter6);
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter6);
        org.mockito.asm.ClassVisitor classVisitor23 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter(classVisitor23);
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter(classVisitor23);
        org.mockito.cglib.core.ClassInfo classInfo26 = classEmitter25.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter25);
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter27);
        org.mockito.asm.ClassVisitor classVisitor29 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter(classVisitor29);
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter(classVisitor29);
        org.mockito.cglib.core.ClassInfo classInfo32 = classEmitter31.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo33 = classEmitter31.getClassInfo();
        classEmitter28.setTarget((org.mockito.asm.ClassVisitor) classEmitter31);
        org.mockito.asm.ClassVisitor classVisitor35 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter(classVisitor35);
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter(classVisitor35);
        org.mockito.cglib.core.ClassInfo classInfo38 = classEmitter37.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter37);
        org.mockito.cglib.core.ClassEmitter classEmitter40 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter39);
        org.mockito.asm.ClassVisitor classVisitor41 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter(classVisitor41);
        org.mockito.cglib.core.ClassEmitter classEmitter43 = new org.mockito.cglib.core.ClassEmitter(classVisitor41);
        org.mockito.cglib.core.ClassInfo classInfo44 = classEmitter43.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter43);
        org.mockito.cglib.core.ClassEmitter classEmitter46 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter45);
        classEmitter40.setTarget((org.mockito.asm.ClassVisitor) classEmitter45);
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter40);
        classEmitter31.setTarget((org.mockito.asm.ClassVisitor) classEmitter40);
        org.mockito.cglib.core.ClassInfo classInfo50 = classEmitter31.getClassInfo();
        classEmitter22.setTarget((org.mockito.asm.ClassVisitor) classEmitter31);
        // The following exception was thrown during execution in test generation
        try {
            int int52 = classEmitter22.getAccess();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo11);
        org.junit.Assert.assertNull(classInfo17);
        org.junit.Assert.assertNull(classInfo18);
        org.junit.Assert.assertNull(classInfo26);
        org.junit.Assert.assertNull(classInfo32);
        org.junit.Assert.assertNull(classInfo33);
        org.junit.Assert.assertNull(classInfo38);
        org.junit.Assert.assertNull(classInfo44);
        org.junit.Assert.assertNull(classInfo50);
    }

    @Test
    public void test21743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21743");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter3 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter3);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter3.visitVarInsn(167, 158);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21744");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        boolean boolean5 = enhancer0.getAttemptLoad();
        java.lang.Class class6 = null;
        enhancer0.setSuperclass(class6);
        org.mockito.cglib.proxy.Callback callback8 = null;
        enhancer0.setCallback(callback8);
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy11 = null;
        enhancer10.setNamingPolicy(namingPolicy11);
        java.lang.ClassLoader classLoader13 = null;
        enhancer10.setClassLoader(classLoader13);
        boolean boolean15 = enhancer10.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer10.getNamingPolicy();
        boolean boolean17 = enhancer10.getAttemptLoad();
        enhancer10.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = null;
        enhancer20.setNamingPolicy(namingPolicy21);
        java.lang.ClassLoader classLoader23 = null;
        enhancer20.setClassLoader(classLoader23);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter25 = null;
        enhancer20.setCallbackFilter(callbackFilter25);
        org.mockito.cglib.proxy.Callback callback27 = null;
        enhancer20.setCallback(callback27);
        java.lang.ClassLoader classLoader29 = null;
        enhancer20.setClassLoader(classLoader29);
        enhancer20.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy34 = null;
        enhancer33.setNamingPolicy(namingPolicy34);
        java.lang.ClassLoader classLoader36 = null;
        enhancer33.setClassLoader(classLoader36);
        boolean boolean38 = enhancer33.getAttemptLoad();
        enhancer33.setUseCache(true);
        java.lang.ClassLoader classLoader41 = enhancer33.getClassLoader();
        enhancer20.setClassLoader(classLoader41);
        enhancer10.setClassLoader(classLoader41);
        enhancer0.setClassLoader(classLoader41);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter45 = null;
        enhancer0.setCallbackFilter(callbackFilter45);
        enhancer0.setUseFactory(false);
        enhancer0.setUseFactory(false);
        enhancer0.setUseCache(false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(classLoader41);
    }

    @Test
    public void test21745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21745");
        org.mockito.cglib.proxy.Enhancer enhancer1 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy2 = null;
        enhancer1.setNamingPolicy(namingPolicy2);
        java.lang.ClassLoader classLoader4 = null;
        enhancer1.setClassLoader(classLoader4);
        java.lang.Class<?> wildcardClass6 = enhancer1.getClass();
        java.lang.String str7 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass6);
        boolean boolean8 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass6);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        int int10 = type9.getSize();
        org.mockito.cglib.core.Signature signature13 = new org.mockito.cglib.core.Signature("", "hi!");
        java.lang.String str14 = signature13.getDescriptor();
        java.lang.String str15 = signature13.getDescriptor();
        boolean boolean16 = type9.equals((java.lang.Object) signature13);
        org.mockito.cglib.core.Local local17 = new org.mockito.cglib.core.Local(4, type9);
        java.lang.String str18 = type9.getInternalName();
        java.lang.String str19 = type9.getInternalName();
        java.lang.String str20 = type9.getDescriptor();
        org.mockito.asm.Type type21 = type9.getElementType();
        int int22 = type9.getSort();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str7, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str18, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str19, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str20, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10 + "'", int22 == 10);
    }

    @Test
    public void test21746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21746");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("L931028051");
        org.mockito.cglib.proxy.Enhancer enhancer2 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = null;
        enhancer2.setNamingPolicy(namingPolicy3);
        java.lang.ClassLoader classLoader5 = null;
        enhancer2.setClassLoader(classLoader5);
        enhancer2.setUseFactory(true);
        enhancer2.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy11 = enhancer2.getNamingPolicy();
        enhancer2.setSerialVersionUID((java.lang.Long) 100L);
        boolean boolean14 = type1.equals((java.lang.Object) enhancer2);
        org.mockito.cglib.core.Signature signature17 = new org.mockito.cglib.core.Signature("L5949614", "L183352280");
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy19 = null;
        enhancer18.setNamingPolicy(namingPolicy19);
        java.lang.ClassLoader classLoader21 = null;
        enhancer18.setClassLoader(classLoader21);
        enhancer18.setUseFactory(true);
        boolean boolean25 = enhancer18.getUseCache();
        org.mockito.cglib.proxy.Callback callback26 = null;
        enhancer18.setCallback(callback26);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy28 = enhancer18.getStrategy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter29 = null;
        enhancer18.setCallbackFilter(callbackFilter29);
        enhancer18.setSerialVersionUID((java.lang.Long) 0L);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy33 = enhancer18.getStrategy();
        boolean boolean34 = signature17.equals((java.lang.Object) generatorStrategy33);
        enhancer2.setStrategy(generatorStrategy33);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(namingPolicy11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(generatorStrategy28);
        org.junit.Assert.assertNotNull(generatorStrategy33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test21747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21747");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter3 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy9 = null;
        enhancer8.setNamingPolicy(namingPolicy9);
        java.lang.ClassLoader classLoader11 = null;
        enhancer8.setClassLoader(classLoader11);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter13 = null;
        enhancer8.setCallbackFilter(callbackFilter13);
        enhancer8.setUseCache(true);
        boolean boolean17 = enhancer8.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy19 = null;
        enhancer18.setNamingPolicy(namingPolicy19);
        java.lang.ClassLoader classLoader21 = null;
        enhancer18.setClassLoader(classLoader21);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter23 = null;
        enhancer18.setCallbackFilter(callbackFilter23);
        org.mockito.cglib.proxy.Callback callback25 = null;
        enhancer18.setCallback(callback25);
        java.lang.ClassLoader classLoader27 = null;
        enhancer18.setClassLoader(classLoader27);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy29 = null;
        enhancer18.setStrategy(generatorStrategy29);
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer18.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy32 = enhancer18.getNamingPolicy();
        org.mockito.cglib.proxy.Callback callback33 = null;
        enhancer18.setCallback(callback33);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy35 = enhancer18.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy37 = null;
        enhancer36.setNamingPolicy(namingPolicy37);
        java.lang.ClassLoader classLoader39 = null;
        enhancer36.setClassLoader(classLoader39);
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy42 = null;
        enhancer41.setNamingPolicy(namingPolicy42);
        java.lang.ClassLoader classLoader44 = null;
        enhancer41.setClassLoader(classLoader44);
        java.lang.Class<?> wildcardClass46 = enhancer41.getClass();
        java.lang.String str47 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass46);
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy49 = null;
        enhancer48.setNamingPolicy(namingPolicy49);
        java.lang.ClassLoader classLoader51 = null;
        enhancer48.setClassLoader(classLoader51);
        java.lang.Class<?> wildcardClass53 = enhancer48.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[] { wildcardClass46, wildcardClass53 };
        enhancer36.setInterfaces(classArray54);
        boolean boolean56 = enhancer36.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy58 = null;
        enhancer57.setNamingPolicy(namingPolicy58);
        java.lang.ClassLoader classLoader60 = null;
        enhancer57.setClassLoader(classLoader60);
        java.lang.Class<?> wildcardClass62 = enhancer57.getClass();
        enhancer36.setSuperclass((java.lang.Class) wildcardClass62);
        boolean boolean64 = enhancer36.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer65 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy66 = null;
        enhancer65.setNamingPolicy(namingPolicy66);
        java.lang.ClassLoader classLoader68 = null;
        enhancer65.setClassLoader(classLoader68);
        boolean boolean70 = enhancer65.getAttemptLoad();
        enhancer65.setUseCache(true);
        java.lang.ClassLoader classLoader73 = enhancer65.getClassLoader();
        org.mockito.cglib.proxy.Callback callback74 = null;
        enhancer65.setCallback(callback74);
        org.mockito.cglib.proxy.Enhancer enhancer76 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy77 = null;
        enhancer76.setNamingPolicy(namingPolicy77);
        java.lang.ClassLoader classLoader79 = null;
        enhancer76.setClassLoader(classLoader79);
        boolean boolean81 = enhancer76.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy82 = enhancer76.getStrategy();
        enhancer65.setStrategy(generatorStrategy82);
        enhancer36.setStrategy(generatorStrategy82);
        org.mockito.cglib.proxy.Enhancer enhancer85 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy86 = null;
        enhancer85.setNamingPolicy(namingPolicy86);
        java.lang.ClassLoader classLoader88 = null;
        enhancer85.setClassLoader(classLoader88);
        enhancer85.setUseFactory(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy92 = enhancer85.getNamingPolicy();
        enhancer36.setNamingPolicy(namingPolicy92);
        enhancer18.setNamingPolicy(namingPolicy92);
        enhancer8.setNamingPolicy(namingPolicy92);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter96 = null;
        enhancer8.setCallbackFilter(callbackFilter96);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter6.visitLdcInsn((java.lang.Object) callbackFilter96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertNotNull(namingPolicy32);
        org.junit.Assert.assertNotNull(generatorStrategy35);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str47, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(classLoader73);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(generatorStrategy82);
        org.junit.Assert.assertNotNull(namingPolicy92);
    }

    @Test
    public void test21748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21748");
        org.mockito.cglib.core.Signature signature2 = new org.mockito.cglib.core.Signature("L280063750", "L2010204857");
        java.lang.String str3 = signature2.getName();
        java.lang.Class<?> wildcardClass4 = signature2.getClass();
        boolean boolean5 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass4);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "L280063750" + "'", str3, "L280063750");
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test21749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21749");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(108, "(CBBBD)B", (org.mockito.asm.MethodVisitor) localVariablesSorter8);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.AnnotationVisitor annotationVisitor11 = localVariablesSorter10.visitAnnotationDefault();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21750");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassInfo classInfo7 = classEmitter5.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter12);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter14.visitOuterClass("L609610250()Lorg/mockito/cglib/proxy/Enhancer;", "L1381113408", "()B");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo7);
    }

    @Test
    public void test21751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21751");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.Object obj1 = label0.info;
        java.lang.String str2 = label0.toString();
        java.lang.Object obj3 = label0.info;
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy5 = null;
        enhancer4.setNamingPolicy(namingPolicy5);
        java.lang.ClassLoader classLoader7 = null;
        enhancer4.setClassLoader(classLoader7);
        enhancer4.setUseFactory(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy11 = enhancer4.getNamingPolicy();
        label0.info = enhancer4;
        java.lang.String str13 = label0.toString();
        org.mockito.asm.MethodVisitor methodVisitor18 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter19 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor18);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter20 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter19);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter21 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter19);
        label0.info = localVariablesSorter19;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter23 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter19);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter24 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter23);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter25 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter24);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter26 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter25);
        org.mockito.asm.Label label28 = new org.mockito.asm.Label();
        java.lang.Object obj29 = label28.info;
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = null;
        enhancer30.setNamingPolicy(namingPolicy31);
        java.lang.ClassLoader classLoader33 = null;
        enhancer30.setClassLoader(classLoader33);
        boolean boolean35 = enhancer30.getAttemptLoad();
        boolean boolean36 = enhancer30.getUseCache();
        org.mockito.cglib.proxy.Callback callback37 = null;
        enhancer30.setCallback(callback37);
        boolean boolean39 = enhancer30.getUseCache();
        org.mockito.cglib.proxy.Callback callback40 = null;
        enhancer30.setCallback(callback40);
        enhancer30.setAttemptLoad(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy44 = enhancer30.getStrategy();
        label28.info = enhancer30;
        java.lang.String str46 = label28.toString();
        java.lang.String str47 = label28.toString();
        java.lang.String str48 = label28.toString();
        java.lang.Object obj49 = label28.info;
        java.lang.String str50 = label28.toString();
        java.lang.String str51 = label28.toString();
        java.lang.Object obj52 = label28.info;
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter25.visitJumpInsn(7, label28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj1);
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "L1355662733" + "'", str2, "L1355662733");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(namingPolicy11);
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "L1355662733" + "'", str13, "L1355662733");
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(generatorStrategy44);
// flaky:         org.junit.Assert.assertEquals("'" + str46 + "' != '" + "L1622646063" + "'", str46, "L1622646063");
// flaky:         org.junit.Assert.assertEquals("'" + str47 + "' != '" + "L1622646063" + "'", str47, "L1622646063");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "L1622646063" + "'", str48, "L1622646063");
        org.junit.Assert.assertNotNull(obj49);
// flaky:         org.junit.Assert.assertEquals("'" + str50 + "' != '" + "L1622646063" + "'", str50, "L1622646063");
// flaky:         org.junit.Assert.assertEquals("'" + str51 + "' != '" + "L1622646063" + "'", str51, "L1622646063");
        org.junit.Assert.assertNotNull(obj52);
    }

    @Test
    public void test21752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21752");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.Object obj1 = label0.info;
        java.lang.String str2 = label0.toString();
        java.lang.Object obj3 = label0.info;
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy5 = null;
        enhancer4.setNamingPolicy(namingPolicy5);
        java.lang.ClassLoader classLoader7 = null;
        enhancer4.setClassLoader(classLoader7);
        enhancer4.setUseFactory(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy11 = enhancer4.getNamingPolicy();
        label0.info = enhancer4;
        java.lang.String str13 = label0.toString();
        org.mockito.asm.MethodVisitor methodVisitor18 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter19 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor18);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter20 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter19);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter21 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter19);
        label0.info = localVariablesSorter19;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter23 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter19);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter24 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter23);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter25 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter23);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter26 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter23);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter23.visitFieldInsn(166, "L150815318", "L1694387126", "LLorg/mockito/cglib/proxy/Enhancer;");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj1);
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "L1569861324" + "'", str2, "L1569861324");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(namingPolicy11);
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "L1569861324" + "'", str13, "L1569861324");
    }

    @Test
    public void test21753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21753");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("L700687083");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21754");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        boolean boolean5 = enhancer0.getAttemptLoad();
        java.lang.Class class6 = null;
        enhancer0.setSuperclass(class6);
        java.lang.ClassLoader classLoader8 = enhancer0.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy9 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = null;
        enhancer13.setNamingPolicy(namingPolicy14);
        java.lang.ClassLoader classLoader16 = null;
        enhancer13.setClassLoader(classLoader16);
        java.lang.Class<?> wildcardClass18 = enhancer13.getClass();
        java.lang.String str19 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass18);
        boolean boolean20 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass18);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass18);
        int int22 = type21.getSize();
        org.mockito.cglib.core.Local local23 = new org.mockito.cglib.core.Local(108, type21);
        org.mockito.cglib.core.Local local24 = new org.mockito.cglib.core.Local(108, type21);
        org.mockito.asm.Type type25 = local24.getType();
        java.lang.String str26 = type25.getClassName();
        org.mockito.asm.Type type27 = type25.getElementType();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type30 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray31 = new org.mockito.asm.Type[] {};
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray31);
        org.mockito.cglib.core.Signature signature33 = new org.mockito.cglib.core.Signature("double", type29, typeArray31);
        java.lang.String str34 = signature33.toString();
        org.mockito.asm.Type[] typeArray35 = signature33.getArgumentTypes();
        org.mockito.cglib.core.Signature signature36 = new org.mockito.cglib.core.Signature("org.mockito.cglib.proxy.Enhancer", type27, typeArray35);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy38 = null;
        enhancer37.setNamingPolicy(namingPolicy38);
        java.lang.ClassLoader classLoader40 = null;
        enhancer37.setClassLoader(classLoader40);
        enhancer37.setUseFactory(true);
        enhancer37.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy46 = enhancer37.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy47 = enhancer37.getNamingPolicy();
        boolean boolean48 = signature36.equals((java.lang.Object) namingPolicy47);
        enhancer0.setNamingPolicy(namingPolicy47);
        enhancer0.setUseFactory(true);
        enhancer0.setUseFactory(false);
        enhancer0.setUseCache(false);
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.proxy.Enhancer enhancer58 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy59 = null;
        enhancer58.setNamingPolicy(namingPolicy59);
        java.lang.ClassLoader classLoader61 = null;
        enhancer58.setClassLoader(classLoader61);
        enhancer58.setUseFactory(true);
        enhancer58.setInterceptDuringConstruction(true);
        enhancer58.setAttemptLoad(true);
        org.mockito.cglib.proxy.Enhancer enhancer69 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy70 = null;
        enhancer69.setNamingPolicy(namingPolicy70);
        java.lang.ClassLoader classLoader72 = null;
        enhancer69.setClassLoader(classLoader72);
        java.lang.Class<?> wildcardClass74 = enhancer69.getClass();
        java.lang.String str75 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass74);
        boolean boolean76 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass74);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass74);
        boolean boolean78 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass74);
        org.mockito.asm.Type type79 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass74);
        boolean boolean80 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass74);
        boolean boolean81 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass74);
        java.lang.Class[] classArray82 = new java.lang.Class[] { wildcardClass74 };
        enhancer58.setInterfaces(classArray82);
        enhancer58.setAttemptLoad(true);
        org.mockito.asm.ClassVisitor classVisitor86 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter87 = new org.mockito.cglib.core.ClassEmitter(classVisitor86);
        org.mockito.cglib.core.ClassEmitter classEmitter88 = new org.mockito.cglib.core.ClassEmitter(classVisitor86);
        org.mockito.cglib.core.ClassInfo classInfo89 = classEmitter88.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter90 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter88);
        java.lang.Class<?> wildcardClass91 = classEmitter90.getClass();
        org.mockito.asm.Type type92 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass91);
        boolean boolean93 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass91);
        enhancer58.setSuperclass((java.lang.Class) wildcardClass91);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass91);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(namingPolicy9);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str19, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org.mockito.cglib.proxy.Enhancer" + "'", str26, "org.mockito.cglib.proxy.Enhancer");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "()D" + "'", str32, "()D");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "double()B" + "'", str34, "double()B");
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertNotNull(namingPolicy46);
        org.junit.Assert.assertNotNull(namingPolicy47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str75, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(classArray82);
        org.junit.Assert.assertNull(classInfo89);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(type92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test21755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21755");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassInfo classInfo7 = classEmitter5.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.asm.ClassVisitor classVisitor15 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter(classVisitor15);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter(classVisitor15);
        org.mockito.cglib.core.ClassInfo classInfo18 = classEmitter17.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter19);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassInfo classInfo23 = classEmitter20.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        classEmitter14.setTarget((org.mockito.asm.ClassVisitor) classEmitter24);
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = null;
        enhancer30.setNamingPolicy(namingPolicy31);
        java.lang.ClassLoader classLoader33 = null;
        enhancer30.setClassLoader(classLoader33);
        java.lang.Class<?> wildcardClass35 = enhancer30.getClass();
        java.lang.String str36 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass35);
        boolean boolean37 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass35);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass35);
        boolean boolean39 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass35);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass35);
        boolean boolean41 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass35);
        boolean boolean42 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass35);
        java.lang.String str43 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass35);
        java.lang.String str44 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass35);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass35);
        java.lang.String str46 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass35);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass35);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass35);
        org.mockito.cglib.core.Local local49 = new org.mockito.cglib.core.Local(120, type48);
        org.mockito.cglib.core.Signature signature52 = new org.mockito.cglib.core.Signature("hi!", "B");
        org.mockito.cglib.proxy.Enhancer enhancer53 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy54 = null;
        enhancer53.setNamingPolicy(namingPolicy54);
        org.mockito.cglib.proxy.Enhancer enhancer56 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy57 = null;
        enhancer56.setNamingPolicy(namingPolicy57);
        java.lang.ClassLoader classLoader59 = null;
        enhancer56.setClassLoader(classLoader59);
        java.lang.Class<?> wildcardClass61 = enhancer56.getClass();
        org.mockito.cglib.proxy.Enhancer enhancer62 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy63 = null;
        enhancer62.setNamingPolicy(namingPolicy63);
        java.lang.ClassLoader classLoader65 = null;
        enhancer62.setClassLoader(classLoader65);
        java.lang.Class<?> wildcardClass67 = enhancer62.getClass();
        java.lang.String str68 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass67);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass67);
        org.mockito.cglib.proxy.Enhancer enhancer70 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy71 = null;
        enhancer70.setNamingPolicy(namingPolicy71);
        java.lang.ClassLoader classLoader73 = null;
        enhancer70.setClassLoader(classLoader73);
        java.lang.Class<?> wildcardClass75 = enhancer70.getClass();
        java.lang.String str76 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass75);
        org.mockito.cglib.proxy.Enhancer enhancer77 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy78 = null;
        enhancer77.setNamingPolicy(namingPolicy78);
        java.lang.ClassLoader classLoader80 = null;
        enhancer77.setClassLoader(classLoader80);
        java.lang.Class<?> wildcardClass82 = enhancer77.getClass();
        org.mockito.cglib.proxy.Enhancer enhancer83 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy84 = null;
        enhancer83.setNamingPolicy(namingPolicy84);
        java.lang.ClassLoader classLoader86 = null;
        enhancer83.setClassLoader(classLoader86);
        java.lang.Class<?> wildcardClass88 = enhancer83.getClass();
        java.lang.String str89 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass88);
        org.mockito.asm.Type type90 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass88);
        java.lang.Class[] classArray91 = new java.lang.Class[] { wildcardClass61, wildcardClass67, wildcardClass75, wildcardClass82, wildcardClass88 };
        enhancer53.setInterfaces(classArray91);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy93 = enhancer53.getStrategy();
        boolean boolean94 = signature52.equals((java.lang.Object) enhancer53);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter14.declare_field(172, "L2077184194", type48, (java.lang.Object) signature52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo7);
        org.junit.Assert.assertNull(classInfo18);
        org.junit.Assert.assertNull(classInfo23);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str36, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str43, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str44, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str46, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str68, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str76, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str89, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertNotNull(classArray91);
        org.junit.Assert.assertNotNull(generatorStrategy93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test21756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21756");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter3 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.asm.Label label8 = null;
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter4.visitJumpInsn(130, label8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21757");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        java.lang.ClassLoader classLoader9 = null;
        enhancer0.setClassLoader(classLoader9);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = null;
        enhancer0.setStrategy(generatorStrategy11);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = null;
        enhancer13.setNamingPolicy(namingPolicy14);
        java.lang.ClassLoader classLoader16 = null;
        enhancer13.setClassLoader(classLoader16);
        boolean boolean18 = enhancer13.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer13.getStrategy();
        enhancer0.setStrategy(generatorStrategy19);
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy23 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = null;
        enhancer24.setNamingPolicy(namingPolicy25);
        java.lang.ClassLoader classLoader27 = null;
        enhancer24.setClassLoader(classLoader27);
        boolean boolean29 = enhancer24.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy30 = enhancer24.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy30);
        java.lang.ClassLoader classLoader32 = enhancer0.getClassLoader();
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter37 = null;
        enhancer0.setCallbackFilter(callbackFilter37);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.getType("Lsun/misc/Launcher$AppClassLoader;");
        java.lang.Class<?> wildcardClass41 = type40.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass41);
        enhancer0.setUseCache(false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertNotNull(generatorStrategy23);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(namingPolicy30);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test21758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21758");
        org.mockito.cglib.proxy.Enhancer enhancer1 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy2 = null;
        enhancer1.setNamingPolicy(namingPolicy2);
        java.lang.ClassLoader classLoader4 = null;
        enhancer1.setClassLoader(classLoader4);
        java.lang.Class<?> wildcardClass6 = enhancer1.getClass();
        java.lang.String str7 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass6);
        boolean boolean8 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass6);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        boolean boolean10 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass6);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass6);
        boolean boolean13 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass6);
        java.lang.String str14 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass6);
        java.lang.String str15 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass6);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        java.lang.String str18 = type17.getInternalName();
        org.mockito.cglib.core.Local local19 = new org.mockito.cglib.core.Local(0, type17);
        org.mockito.asm.Type type20 = local19.getType();
        org.mockito.asm.Type type21 = local19.getType();
        org.mockito.asm.Type type22 = type21.getElementType();
        int int24 = type21.getOpcode(39);
        org.mockito.asm.Type type25 = type21.getElementType();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str7, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str14, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str15, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str18, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 43 + "'", int24 == 43);
        org.junit.Assert.assertNotNull(type25);
    }

    @Test
    public void test21759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21759");
        org.mockito.cglib.core.Signature signature2 = new org.mockito.cglib.core.Signature("hi!", "B");
        java.lang.String str3 = signature2.toString();
        org.mockito.asm.ClassVisitor classVisitor4 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter(classVisitor4);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter(classVisitor4);
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter6);
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter7);
        boolean boolean9 = signature2.equals((java.lang.Object) classEmitter8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter(classVisitor11);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter(classVisitor11);
        org.mockito.cglib.core.ClassInfo classInfo14 = classEmitter13.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo15 = classEmitter13.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo16 = classEmitter13.getClassInfo();
        classEmitter8.setTarget((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.asm.ClassVisitor classVisitor19 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter(classVisitor19);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter(classVisitor19);
        org.mockito.cglib.core.ClassInfo classInfo22 = classEmitter21.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.asm.ClassVisitor classVisitor25 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter(classVisitor25);
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter(classVisitor25);
        org.mockito.cglib.core.ClassInfo classInfo28 = classEmitter27.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter27);
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter29);
        classEmitter24.setTarget((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter24);
        org.mockito.cglib.core.Signature signature35 = new org.mockito.cglib.core.Signature("hi!", "B");
        java.lang.String str36 = signature35.toString();
        org.mockito.asm.ClassVisitor classVisitor37 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter(classVisitor37);
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter(classVisitor37);
        org.mockito.cglib.core.ClassEmitter classEmitter40 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter39);
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter40);
        boolean boolean42 = signature35.equals((java.lang.Object) classEmitter41);
        classEmitter24.setTarget((org.mockito.asm.ClassVisitor) classEmitter41);
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter44);
        org.mockito.cglib.core.ClassInfo classInfo46 = classEmitter45.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor47 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter(classVisitor47);
        org.mockito.cglib.core.ClassEmitter classEmitter49 = new org.mockito.cglib.core.ClassEmitter(classVisitor47);
        org.mockito.cglib.core.ClassEmitter classEmitter50 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter49);
        org.mockito.cglib.core.ClassInfo classInfo51 = classEmitter49.getClassInfo();
        classEmitter45.setTarget((org.mockito.asm.ClassVisitor) classEmitter49);
        org.mockito.cglib.core.ClassInfo classInfo53 = classEmitter45.getClassInfo();
        classEmitter41.setTarget((org.mockito.asm.ClassVisitor) classEmitter45);
        classEmitter18.setTarget((org.mockito.asm.ClassVisitor) classEmitter45);
        java.lang.String[] strArray64 = new java.lang.String[] { "(CBBBD)LL31762529;", "L398578232", "L407287195" };
        // The following exception was thrown during execution in test generation
        try {
            classEmitter45.visit(103, 101, "L1025645018", "B", "L66945845", strArray64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!B" + "'", str3, "hi!B");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(classInfo14);
        org.junit.Assert.assertNull(classInfo15);
        org.junit.Assert.assertNull(classInfo16);
        org.junit.Assert.assertNull(classInfo22);
        org.junit.Assert.assertNull(classInfo28);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!B" + "'", str36, "hi!B");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(classInfo46);
        org.junit.Assert.assertNull(classInfo51);
        org.junit.Assert.assertNull(classInfo53);
        org.junit.Assert.assertNotNull(strArray64);
    }

    @Test
    public void test21760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21760");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("L694739012");
        org.junit.Assert.assertNotNull(type1);
    }

    @Test
    public void test21761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21761");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = null;
        enhancer5.setNamingPolicy(namingPolicy6);
        java.lang.ClassLoader classLoader8 = null;
        enhancer5.setClassLoader(classLoader8);
        java.lang.Class<?> wildcardClass10 = enhancer5.getClass();
        java.lang.String str11 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass10);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = null;
        enhancer12.setNamingPolicy(namingPolicy13);
        java.lang.ClassLoader classLoader15 = null;
        enhancer12.setClassLoader(classLoader15);
        java.lang.Class<?> wildcardClass17 = enhancer12.getClass();
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass10, wildcardClass17 };
        enhancer0.setInterfaces(classArray18);
        boolean boolean20 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = null;
        enhancer21.setNamingPolicy(namingPolicy22);
        java.lang.ClassLoader classLoader24 = null;
        enhancer21.setClassLoader(classLoader24);
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = null;
        enhancer26.setNamingPolicy(namingPolicy27);
        java.lang.ClassLoader classLoader29 = null;
        enhancer26.setClassLoader(classLoader29);
        java.lang.Class<?> wildcardClass31 = enhancer26.getClass();
        java.lang.String str32 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass31);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy34 = null;
        enhancer33.setNamingPolicy(namingPolicy34);
        java.lang.ClassLoader classLoader36 = null;
        enhancer33.setClassLoader(classLoader36);
        java.lang.Class<?> wildcardClass38 = enhancer33.getClass();
        java.lang.Class[] classArray39 = new java.lang.Class[] { wildcardClass31, wildcardClass38 };
        enhancer21.setInterfaces(classArray39);
        enhancer0.setInterfaces(classArray39);
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy43 = null;
        enhancer42.setNamingPolicy(namingPolicy43);
        java.lang.ClassLoader classLoader45 = null;
        enhancer42.setClassLoader(classLoader45);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter47 = null;
        enhancer42.setCallbackFilter(callbackFilter47);
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy50 = null;
        enhancer49.setNamingPolicy(namingPolicy50);
        java.lang.ClassLoader classLoader52 = null;
        enhancer49.setClassLoader(classLoader52);
        boolean boolean54 = enhancer49.getAttemptLoad();
        java.lang.Class class55 = null;
        enhancer49.setSuperclass(class55);
        org.mockito.cglib.core.NamingPolicy namingPolicy57 = enhancer49.getNamingPolicy();
        enhancer42.setNamingPolicy(namingPolicy57);
        org.mockito.cglib.proxy.Enhancer enhancer59 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy60 = null;
        enhancer59.setNamingPolicy(namingPolicy60);
        java.lang.ClassLoader classLoader62 = null;
        enhancer59.setClassLoader(classLoader62);
        org.mockito.cglib.proxy.Enhancer enhancer64 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy65 = null;
        enhancer64.setNamingPolicy(namingPolicy65);
        java.lang.ClassLoader classLoader67 = null;
        enhancer64.setClassLoader(classLoader67);
        java.lang.Class<?> wildcardClass69 = enhancer64.getClass();
        java.lang.String str70 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass69);
        org.mockito.cglib.proxy.Enhancer enhancer71 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy72 = null;
        enhancer71.setNamingPolicy(namingPolicy72);
        java.lang.ClassLoader classLoader74 = null;
        enhancer71.setClassLoader(classLoader74);
        java.lang.Class<?> wildcardClass76 = enhancer71.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[] { wildcardClass69, wildcardClass76 };
        enhancer59.setInterfaces(classArray77);
        boolean boolean79 = enhancer59.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer80 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy81 = null;
        enhancer80.setNamingPolicy(namingPolicy81);
        java.lang.ClassLoader classLoader83 = null;
        enhancer80.setClassLoader(classLoader83);
        java.lang.Class<?> wildcardClass85 = enhancer80.getClass();
        enhancer59.setSuperclass((java.lang.Class) wildcardClass85);
        java.lang.Class[] classArray87 = new java.lang.Class[] { wildcardClass85 };
        enhancer42.setInterfaces(classArray87);
        enhancer0.setInterfaces(classArray87);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy90 = enhancer0.getStrategy();
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str11, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str32, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(classArray39);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(namingPolicy57);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str70, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(classArray87);
        org.junit.Assert.assertNotNull(generatorStrategy90);
    }

    @Test
    public void test21762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21762");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.asm.ClassVisitor classVisitor6 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassInfo classInfo9 = classEmitter8.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter10);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.asm.ClassVisitor classVisitor14 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.asm.ClassVisitor classVisitor16 = null;
        classEmitter15.setTarget(classVisitor16);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter15);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter18);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter18);
        org.mockito.asm.ClassVisitor classVisitor21 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassInfo classInfo24 = classEmitter23.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.cglib.core.ClassInfo classInfo26 = classEmitter23.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter23);
        classEmitter18.setTarget((org.mockito.asm.ClassVisitor) classEmitter28);
        org.mockito.cglib.core.ClassInfo classInfo30 = classEmitter18.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo31 = classEmitter18.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo32 = classEmitter18.getClassInfo();
        // The following exception was thrown during execution in test generation
        try {
            classEmitter18.visitInnerClass("L1932193096", "L359263832", "L1609460736", 150);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo9);
        org.junit.Assert.assertNull(classInfo24);
        org.junit.Assert.assertNull(classInfo26);
        org.junit.Assert.assertNull(classInfo30);
        org.junit.Assert.assertNull(classInfo31);
        org.junit.Assert.assertNull(classInfo32);
    }

    @Test
    public void test21763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21763");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter3 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter4.visitIincInsn(156, 116);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21764");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter3);
        org.mockito.asm.ClassVisitor classVisitor5 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter(classVisitor5);
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter(classVisitor5);
        org.mockito.cglib.core.ClassInfo classInfo8 = classEmitter7.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter9);
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter(classVisitor11);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter(classVisitor11);
        org.mockito.cglib.core.ClassInfo classInfo14 = classEmitter13.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter15);
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classEmitter15);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        classEmitter3.setTarget((org.mockito.asm.ClassVisitor) classEmitter18);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = null;
        enhancer24.setNamingPolicy(namingPolicy25);
        java.lang.ClassLoader classLoader27 = null;
        enhancer24.setClassLoader(classLoader27);
        boolean boolean29 = enhancer24.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy30 = enhancer24.getNamingPolicy();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy31 = enhancer24.getStrategy();
        java.lang.ClassLoader classLoader32 = enhancer24.getClassLoader();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter33 = null;
        enhancer24.setCallbackFilter(callbackFilter33);
        enhancer24.setSerialVersionUID((java.lang.Long) 0L);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy38 = null;
        enhancer37.setNamingPolicy(namingPolicy38);
        java.lang.ClassLoader classLoader40 = null;
        enhancer37.setClassLoader(classLoader40);
        enhancer37.setUseFactory(true);
        boolean boolean44 = enhancer37.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy45 = null;
        enhancer37.setStrategy(generatorStrategy45);
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy48 = null;
        enhancer47.setNamingPolicy(namingPolicy48);
        java.lang.ClassLoader classLoader50 = null;
        enhancer47.setClassLoader(classLoader50);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter52 = null;
        enhancer47.setCallbackFilter(callbackFilter52);
        org.mockito.cglib.proxy.Callback callback54 = null;
        enhancer47.setCallback(callback54);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter56 = null;
        enhancer47.setCallbackFilter(callbackFilter56);
        org.mockito.cglib.proxy.Enhancer enhancer58 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy59 = null;
        enhancer58.setNamingPolicy(namingPolicy59);
        java.lang.ClassLoader classLoader61 = null;
        enhancer58.setClassLoader(classLoader61);
        java.lang.Class<?> wildcardClass63 = enhancer58.getClass();
        java.lang.String str64 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass63);
        boolean boolean65 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass63);
        enhancer47.setSuperclass((java.lang.Class) wildcardClass63);
        boolean boolean67 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass63);
        org.mockito.cglib.proxy.Enhancer enhancer68 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy69 = null;
        enhancer68.setNamingPolicy(namingPolicy69);
        java.lang.ClassLoader classLoader71 = null;
        enhancer68.setClassLoader(classLoader71);
        java.lang.Class<?> wildcardClass73 = enhancer68.getClass();
        java.lang.String str74 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass73);
        java.lang.String str75 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass73);
        java.lang.String str76 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass73);
        java.lang.Class[] classArray77 = new java.lang.Class[] { wildcardClass63, wildcardClass73 };
        enhancer37.setInterfaces(classArray77);
        java.lang.Class<?> wildcardClass79 = enhancer37.getClass();
        enhancer24.setSuperclass((java.lang.Class) wildcardClass79);
        java.lang.String str81 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass79);
        org.mockito.asm.Type type82 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass79);
        java.lang.String str83 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass79);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.FieldVisitor fieldVisitor84 = classEmitter18.visitField(106, "L1622326596()B", "L609610250", "L1415763448", (java.lang.Object) wildcardClass79);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo8);
        org.junit.Assert.assertNull(classInfo14);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(namingPolicy30);
        org.junit.Assert.assertNotNull(generatorStrategy31);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str64, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str74, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str75, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str76, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str81, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str83, "org/mockito/cglib/proxy/Enhancer");
    }

    @Test
    public void test21765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21765");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str2 = type1.getClassName();
        int int3 = type1.getSort();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy5 = null;
        enhancer4.setNamingPolicy(namingPolicy5);
        java.lang.ClassLoader classLoader7 = null;
        enhancer4.setClassLoader(classLoader7);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter9 = null;
        enhancer4.setCallbackFilter(callbackFilter9);
        boolean boolean11 = type1.equals((java.lang.Object) callbackFilter9);
        java.lang.String str12 = type1.toString();
        int int14 = type1.getOpcode(129);
        int int16 = type1.getOpcode(112);
        org.mockito.asm.Label label17 = new org.mockito.asm.Label();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type type20 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.cglib.core.Local local21 = new org.mockito.cglib.core.Local(124, type20);
        boolean boolean23 = type20.equals((java.lang.Object) 0);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.BYTE_TYPE;
        int int26 = type25.getSize();
        java.lang.String str27 = type25.getClassName();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type29 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type30 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type31 = org.mockito.asm.Type.BYTE_TYPE;
        int int32 = type31.getSize();
        java.lang.String str33 = type31.getClassName();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str35 = type34.getClassName();
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type28, type29, type30, type31, type34 };
        org.mockito.cglib.core.Signature signature37 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type25, typeArray36);
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray36);
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type18, typeArray36);
        label17.info = type18;
        java.lang.String str41 = type18.toString();
        org.mockito.cglib.proxy.Enhancer enhancer43 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy44 = null;
        enhancer43.setNamingPolicy(namingPolicy44);
        java.lang.ClassLoader classLoader46 = null;
        enhancer43.setClassLoader(classLoader46);
        java.lang.Class<?> wildcardClass48 = enhancer43.getClass();
        java.lang.String str49 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass48);
        boolean boolean50 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass48);
        org.mockito.cglib.proxy.Enhancer enhancer52 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy53 = null;
        enhancer52.setNamingPolicy(namingPolicy53);
        java.lang.ClassLoader classLoader55 = null;
        enhancer52.setClassLoader(classLoader55);
        java.lang.Class<?> wildcardClass57 = enhancer52.getClass();
        java.lang.String str58 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass57);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass57);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type62 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray63 = new org.mockito.asm.Type[] {};
        java.lang.String str64 = org.mockito.asm.Type.getMethodDescriptor(type62, typeArray63);
        org.mockito.cglib.core.Signature signature65 = new org.mockito.cglib.core.Signature("double", type61, typeArray63);
        java.lang.String str66 = org.mockito.asm.Type.getMethodDescriptor(type59, typeArray63);
        org.mockito.cglib.core.Signature signature67 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type51, typeArray63);
        java.lang.String str68 = org.mockito.asm.Type.getMethodDescriptor(type18, typeArray63);
        org.mockito.cglib.core.Signature signature69 = new org.mockito.cglib.core.Signature("L729854282", type1, typeArray63);
        org.mockito.asm.Type[] typeArray70 = signature69.getArgumentTypes();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "double" + "'", str2, "double");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "D" + "'", str12, "D");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 132 + "'", int14 == 132);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 115 + "'", int16 == 115);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "byte" + "'", str27, "byte");
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "byte" + "'", str33, "byte");
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "double" + "'", str35, "double");
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(CBBBD)B" + "'", str38, "(CBBBD)B");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(CBBBD)I" + "'", str39, "(CBBBD)I");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "I" + "'", str41, "I");
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str49, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str58, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "()D" + "'", str64, "()D");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "()Lorg/mockito/cglib/proxy/Enhancer;" + "'", str66, "()Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "()I" + "'", str68, "()I");
        org.junit.Assert.assertNotNull(typeArray70);
    }

    @Test
    public void test21766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21766");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type[] typeArray1 = org.mockito.asm.Type.getArgumentTypes("L486599358");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21767");
        org.mockito.asm.MethodVisitor methodVisitor8 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(56, "()Lorg/mockito/cglib/core/ClassEmitter;", (org.mockito.asm.MethodVisitor) localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter13 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter14 = new org.mockito.cglib.core.LocalVariablesSorter(104, "()Lorg/mockito/asm/Type;", (org.mockito.asm.MethodVisitor) localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter15 = new org.mockito.cglib.core.LocalVariablesSorter(112, "()LLL1591299506;;", (org.mockito.asm.MethodVisitor) localVariablesSorter9);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.BYTE_TYPE;
        int int18 = type17.getSize();
        java.lang.String str19 = type17.getClassName();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type21 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type22 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type23 = org.mockito.asm.Type.BYTE_TYPE;
        int int24 = type23.getSize();
        java.lang.String str25 = type23.getClassName();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str27 = type26.getClassName();
        org.mockito.asm.Type[] typeArray28 = new org.mockito.asm.Type[] { type20, type21, type22, type23, type26 };
        org.mockito.cglib.core.Signature signature29 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type17, typeArray28);
        java.lang.String str30 = signature29.getDescriptor();
        java.lang.Object obj31 = null;
        boolean boolean32 = signature29.equals(obj31);
        org.mockito.asm.Type[] typeArray33 = signature29.getArgumentTypes();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.BYTE_TYPE;
        boolean boolean37 = type35.equals((java.lang.Object) 9);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type40 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray41 = new org.mockito.asm.Type[] {};
        java.lang.String str42 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray41);
        org.mockito.cglib.core.Signature signature43 = new org.mockito.cglib.core.Signature("double", type39, typeArray41);
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type35, typeArray41);
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type34, typeArray41);
        boolean boolean46 = signature29.equals((java.lang.Object) type34);
        java.lang.String str47 = signature29.getName();
        org.mockito.asm.Type type48 = signature29.getReturnType();
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter9.visitLdcInsn((java.lang.Object) signature29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "byte" + "'", str19, "byte");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "byte" + "'", str25, "byte");
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "double" + "'", str27, "double");
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(CBBBD)B" + "'", str30, "(CBBBD)B");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "()D" + "'", str42, "()D");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "()B" + "'", str44, "()B");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "()F" + "'", str45, "()F");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str47, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type48);
    }

    @Test
    public void test21768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21768");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassInfo classInfo7 = classEmitter6.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter10.getClassInfo();
        classEmitter6.setTarget((org.mockito.asm.ClassVisitor) classEmitter10);
        org.mockito.asm.ClassVisitor classVisitor14 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.asm.ClassVisitor classVisitor19 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter(classVisitor19);
        org.mockito.asm.ClassVisitor classVisitor21 = null;
        classEmitter20.setTarget(classVisitor21);
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classEmitter20);
        classEmitter2.setTarget((org.mockito.asm.ClassVisitor) classEmitter10);
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter25);
        org.mockito.cglib.core.ClassInfo classInfo27 = classEmitter26.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor28 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter(classVisitor28);
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter(classVisitor28);
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter30);
        org.mockito.cglib.core.ClassInfo classInfo32 = classEmitter30.getClassInfo();
        classEmitter26.setTarget((org.mockito.asm.ClassVisitor) classEmitter30);
        org.mockito.asm.ClassVisitor classVisitor34 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter(classVisitor34);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter(classVisitor34);
        org.mockito.cglib.core.ClassInfo classInfo37 = classEmitter36.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter36);
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter38);
        org.mockito.cglib.core.ClassEmitter classEmitter40 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter39);
        org.mockito.cglib.core.ClassInfo classInfo41 = classEmitter39.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor42 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter43 = new org.mockito.cglib.core.ClassEmitter(classVisitor42);
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter(classVisitor42);
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter44);
        org.mockito.cglib.core.ClassEmitter classEmitter46 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter45);
        classEmitter39.setTarget((org.mockito.asm.ClassVisitor) classEmitter46);
        classEmitter26.setTarget((org.mockito.asm.ClassVisitor) classEmitter46);
        classEmitter2.setTarget((org.mockito.asm.ClassVisitor) classEmitter26);
        org.mockito.cglib.core.ClassEmitter classEmitter50 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter26);
        org.mockito.cglib.proxy.Enhancer enhancer55 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy56 = null;
        enhancer55.setNamingPolicy(namingPolicy56);
        boolean boolean58 = enhancer55.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer59 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy60 = null;
        enhancer59.setNamingPolicy(namingPolicy60);
        java.lang.ClassLoader classLoader62 = null;
        enhancer59.setClassLoader(classLoader62);
        enhancer59.setUseFactory(true);
        boolean boolean66 = enhancer59.getUseCache();
        java.lang.Class<?> wildcardClass67 = enhancer59.getClass();
        enhancer55.setSuperclass((java.lang.Class) wildcardClass67);
        enhancer55.setAttemptLoad(false);
        java.lang.Class<?> wildcardClass71 = enhancer55.getClass();
        java.lang.String str72 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass71);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.FieldVisitor fieldVisitor73 = classEmitter26.visitField(37, "L1053137653", "", "L1436197090", (java.lang.Object) str72);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo7);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNull(classInfo27);
        org.junit.Assert.assertNull(classInfo32);
        org.junit.Assert.assertNull(classInfo37);
        org.junit.Assert.assertNull(classInfo41);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str72, "org/mockito/cglib/proxy/Enhancer");
    }

    @Test
    public void test21769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21769");
        org.mockito.asm.MethodVisitor methodVisitor8 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter13 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter14 = new org.mockito.cglib.core.LocalVariablesSorter(102, "()Lorg/mockito/cglib/proxy/Enhancer;", (org.mockito.asm.MethodVisitor) localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter15 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter14);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter16 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter15);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter17 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter15);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter18 = new org.mockito.cglib.core.LocalVariablesSorter(161, "()L()Lorg/mockito/cglib/core/ClassEmitter;;", (org.mockito.asm.MethodVisitor) localVariablesSorter15);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter19 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter15);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter20 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter19);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter21 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter19);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.AnnotationVisitor annotationVisitor24 = localVariablesSorter19.visitAnnotation("L504983572", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21770");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy8 = null;
        enhancer7.setNamingPolicy(namingPolicy8);
        java.lang.ClassLoader classLoader10 = null;
        enhancer7.setClassLoader(classLoader10);
        boolean boolean12 = enhancer7.getAttemptLoad();
        java.lang.Class class13 = null;
        enhancer7.setSuperclass(class13);
        org.mockito.cglib.core.NamingPolicy namingPolicy15 = enhancer7.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy15);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        boolean boolean19 = enhancer0.getUseCache();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy22 = enhancer0.getStrategy();
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(namingPolicy15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(generatorStrategy22);
    }

    @Test
    public void test21771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21771");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.Object obj1 = label0.info;
        java.lang.String str2 = label0.toString();
        java.lang.Object obj3 = label0.info;
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy5 = null;
        enhancer4.setNamingPolicy(namingPolicy5);
        java.lang.ClassLoader classLoader7 = null;
        enhancer4.setClassLoader(classLoader7);
        enhancer4.setUseFactory(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy11 = enhancer4.getNamingPolicy();
        label0.info = enhancer4;
        java.lang.String str13 = label0.toString();
        org.mockito.asm.MethodVisitor methodVisitor18 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter19 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor18);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter20 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter19);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter21 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter19);
        label0.info = localVariablesSorter19;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter23 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter19);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter24 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter23);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter25 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter23);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter23.visitMaxs(116, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj1);
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "L1359724882" + "'", str2, "L1359724882");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(namingPolicy11);
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "L1359724882" + "'", str13, "L1359724882");
    }

    @Test
    public void test21772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21772");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.Object obj1 = label0.info;
        org.mockito.asm.ClassVisitor classVisitor2 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter(classVisitor2);
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter(classVisitor2);
        org.mockito.cglib.core.ClassInfo classInfo5 = classEmitter4.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter6);
        org.mockito.cglib.core.ClassInfo classInfo8 = classEmitter7.getClassInfo();
        label0.info = classInfo8;
        java.lang.String str10 = label0.toString();
        java.lang.Object obj11 = label0.info;
        java.lang.String str12 = label0.toString();
        java.lang.Object obj13 = label0.info;
        java.lang.Object obj14 = label0.info;
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(classInfo5);
        org.junit.Assert.assertNull(classInfo8);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L280559097" + "'", str10, "L280559097");
        org.junit.Assert.assertNull(obj11);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L280559097" + "'", str12, "L280559097");
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj14);
    }

    @Test
    public void test21773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21773");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassInfo classInfo4 = classEmitter3.getClassInfo();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.getObjectType("L1570394950");
        java.lang.String str12 = type11.toString();
        java.lang.String str13 = type11.getDescriptor();
        org.mockito.asm.Type[] typeArray15 = org.mockito.asm.Type.getArgumentTypes("(CBBBD)Lbyte;");
        org.mockito.cglib.core.Signature signature16 = new org.mockito.cglib.core.Signature("L1674961359", type11, typeArray15);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.FieldVisitor fieldVisitor17 = classEmitter3.visitField(65, "L380509309", "L559292419", "L1954473854", (java.lang.Object) signature16);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo4);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LL1570394950;" + "'", str12, "LL1570394950;");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LL1570394950;" + "'", str13, "LL1570394950;");
        org.junit.Assert.assertNotNull(typeArray15);
    }

    @Test
    public void test21774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21774");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type[] typeArray1 = org.mockito.asm.Type.getArgumentTypes("L932129412");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21775");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter13 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter12);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter14 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter13);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter13.visitIincInsn(145, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21776");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.asm.Attribute attribute2 = null;
        // The following exception was thrown during execution in test generation
        try {
            classEmitter1.visitAttribute(attribute2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21777");
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor1);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter(classVisitor1);
        org.mockito.cglib.core.ClassInfo classInfo4 = classEmitter3.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter3);
        java.lang.Class<?> wildcardClass6 = classEmitter5.getClass();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        int int8 = type7.getSize();
        java.lang.String str9 = type7.getDescriptor();
        org.mockito.asm.Type[] typeArray11 = org.mockito.asm.Type.getArgumentTypes("()B");
        org.mockito.cglib.core.Signature signature12 = new org.mockito.cglib.core.Signature("L1402297421", type7, typeArray11);
        java.lang.String str13 = signature12.getDescriptor();
        java.lang.Class<?> wildcardClass14 = signature12.getClass();
        java.lang.String str15 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass14);
        java.lang.String str16 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass14);
        org.junit.Assert.assertNull(classInfo4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Lorg/mockito/cglib/core/ClassEmitter;" + "'", str9, "Lorg/mockito/cglib/core/ClassEmitter;");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "()Lorg/mockito/cglib/core/ClassEmitter;" + "'", str13, "()Lorg/mockito/cglib/core/ClassEmitter;");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Lorg/mockito/cglib/core/Signature;" + "'", str15, "Lorg/mockito/cglib/core/Signature;");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Lorg/mockito/cglib/core/Signature;" + "'", str16, "Lorg/mockito/cglib/core/Signature;");
    }

    @Test
    public void test21778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21778");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        classEmitter2.setTarget((org.mockito.asm.ClassVisitor) classEmitter6);
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassInfo classInfo11 = classEmitter10.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.asm.ClassVisitor classVisitor14 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.cglib.core.ClassInfo classInfo17 = classEmitter16.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo18 = classEmitter16.getClassInfo();
        classEmitter13.setTarget((org.mockito.asm.ClassVisitor) classEmitter16);
        classEmitter6.setTarget((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor23 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter(classVisitor23);
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter(classVisitor23);
        classEmitter22.setTarget((org.mockito.asm.ClassVisitor) classEmitter25);
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter25);
        classEmitter16.setTarget((org.mockito.asm.ClassVisitor) classEmitter27);
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter27);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.core.CodeEmitter codeEmitter30 = classEmitter27.begin_static();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: classInfo is null! org.mockito.cglib.core.ClassEmitter@63b6b369");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo11);
        org.junit.Assert.assertNull(classInfo17);
        org.junit.Assert.assertNull(classInfo18);
    }

    @Test
    public void test21779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21779");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter10);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.AnnotationVisitor annotationVisitor15 = localVariablesSorter11.visitAnnotation("()Lmockito/cglib/proxy/Enhancer;", true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21780");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter3 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.asm.Label label9 = new org.mockito.asm.Label();
        java.lang.Object obj10 = label9.info;
        java.lang.String str11 = label9.toString();
        java.lang.Object obj12 = label9.info;
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = null;
        enhancer13.setNamingPolicy(namingPolicy14);
        java.lang.ClassLoader classLoader16 = null;
        enhancer13.setClassLoader(classLoader16);
        enhancer13.setUseFactory(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy20 = enhancer13.getNamingPolicy();
        label9.info = enhancer13;
        java.lang.String str22 = label9.toString();
        java.lang.String str23 = label9.toString();
        java.lang.String str24 = label9.toString();
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter7.visitJumpInsn(111, label9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj10);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "L972618859" + "'", str11, "L972618859");
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(namingPolicy20);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L972618859" + "'", str22, "L972618859");
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L972618859" + "'", str23, "L972618859");
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "L972618859" + "'", str24, "L972618859");
    }

    @Test
    public void test21781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21781");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.Object obj1 = label0.info;
        java.lang.String str2 = label0.toString();
        java.lang.Object obj3 = label0.info;
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy5 = null;
        enhancer4.setNamingPolicy(namingPolicy5);
        java.lang.ClassLoader classLoader7 = null;
        enhancer4.setClassLoader(classLoader7);
        enhancer4.setUseFactory(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy11 = enhancer4.getNamingPolicy();
        label0.info = enhancer4;
        java.lang.String str13 = label0.toString();
        java.lang.String str14 = label0.toString();
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = null;
        enhancer15.setNamingPolicy(namingPolicy16);
        java.lang.ClassLoader classLoader18 = null;
        enhancer15.setClassLoader(classLoader18);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter20 = null;
        enhancer15.setCallbackFilter(callbackFilter20);
        enhancer15.setUseCache(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy24 = enhancer15.getNamingPolicy();
        label0.info = namingPolicy24;
        java.lang.Object obj26 = label0.info;
        java.lang.String str27 = label0.toString();
        java.lang.String str28 = label0.toString();
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy30 = null;
        enhancer29.setNamingPolicy(namingPolicy30);
        boolean boolean32 = enhancer29.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy34 = null;
        enhancer33.setNamingPolicy(namingPolicy34);
        java.lang.ClassLoader classLoader36 = null;
        enhancer33.setClassLoader(classLoader36);
        enhancer33.setUseFactory(true);
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy41 = null;
        enhancer40.setNamingPolicy(namingPolicy41);
        java.lang.ClassLoader classLoader43 = null;
        enhancer40.setClassLoader(classLoader43);
        boolean boolean45 = enhancer40.getAttemptLoad();
        java.lang.ClassLoader classLoader46 = enhancer40.getClassLoader();
        enhancer33.setClassLoader(classLoader46);
        enhancer29.setClassLoader(classLoader46);
        label0.info = classLoader46;
        java.lang.Object obj50 = null;
        label0.info = obj50;
        org.junit.Assert.assertNull(obj1);
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "L1239642640" + "'", str2, "L1239642640");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(namingPolicy11);
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "L1239642640" + "'", str13, "L1239642640");
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L1239642640" + "'", str14, "L1239642640");
        org.junit.Assert.assertNotNull(namingPolicy24);
        org.junit.Assert.assertNotNull(obj26);
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "L1239642640" + "'", str27, "L1239642640");
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "L1239642640" + "'", str28, "L1239642640");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(classLoader46);
    }

    @Test
    public void test21782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21782");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("B()Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type1);
    }

    @Test
    public void test21783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21783");
        org.mockito.cglib.core.Signature signature2 = new org.mockito.cglib.core.Signature("L456480214", "L849341624");
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = null;
        enhancer5.setNamingPolicy(namingPolicy6);
        java.lang.ClassLoader classLoader8 = null;
        enhancer5.setClassLoader(classLoader8);
        java.lang.Class<?> wildcardClass10 = enhancer5.getClass();
        java.lang.String str11 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass10);
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass10);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass10);
        int int14 = type13.getSize();
        org.mockito.cglib.core.Local local15 = new org.mockito.cglib.core.Local(108, type13);
        org.mockito.cglib.core.Local local16 = new org.mockito.cglib.core.Local(108, type13);
        int int17 = local16.getIndex();
        org.mockito.asm.Type type18 = local16.getType();
        boolean boolean19 = signature2.equals((java.lang.Object) local16);
        int int20 = local16.getIndex();
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str11, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 108 + "'", int17 == 108);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 108 + "'", int20 == 108);
    }

    @Test
    public void test21784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21784");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter3 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.AnnotationVisitor annotationVisitor11 = localVariablesSorter7.visitParameterAnnotation(153, "", true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21785");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.Object obj1 = label0.info;
        org.mockito.cglib.proxy.Enhancer enhancer2 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = null;
        enhancer2.setNamingPolicy(namingPolicy3);
        java.lang.ClassLoader classLoader5 = null;
        enhancer2.setClassLoader(classLoader5);
        boolean boolean7 = enhancer2.getAttemptLoad();
        boolean boolean8 = enhancer2.getUseCache();
        org.mockito.cglib.proxy.Callback callback9 = null;
        enhancer2.setCallback(callback9);
        boolean boolean11 = enhancer2.getUseCache();
        org.mockito.cglib.proxy.Callback callback12 = null;
        enhancer2.setCallback(callback12);
        enhancer2.setAttemptLoad(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy16 = enhancer2.getStrategy();
        label0.info = enhancer2;
        java.lang.String str18 = label0.toString();
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter19);
        org.mockito.cglib.core.ClassInfo classInfo21 = classEmitter20.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor22 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter(classVisitor22);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter(classVisitor22);
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter24);
        org.mockito.cglib.core.ClassInfo classInfo26 = classEmitter24.getClassInfo();
        classEmitter20.setTarget((org.mockito.asm.ClassVisitor) classEmitter24);
        org.mockito.asm.ClassVisitor classVisitor28 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter(classVisitor28);
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter(classVisitor28);
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter30);
        classEmitter24.setTarget((org.mockito.asm.ClassVisitor) classEmitter31);
        org.mockito.asm.ClassVisitor classVisitor33 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter(classVisitor33);
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter(classVisitor33);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter35);
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter36);
        classEmitter24.setTarget((org.mockito.asm.ClassVisitor) classEmitter37);
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter37);
        label0.info = classEmitter37;
        org.mockito.cglib.core.ClassInfo classInfo41 = classEmitter37.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter37);
        org.mockito.cglib.core.ClassInfo classInfo43 = classEmitter37.getClassInfo();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.AnnotationVisitor annotationVisitor46 = classEmitter37.visitAnnotation("L1644931942", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(generatorStrategy16);
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "L492019831" + "'", str18, "L492019831");
        org.junit.Assert.assertNull(classInfo21);
        org.junit.Assert.assertNull(classInfo26);
        org.junit.Assert.assertNull(classInfo41);
        org.junit.Assert.assertNull(classInfo43);
    }

    @Test
    public void test21786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21786");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassInfo classInfo7 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo8 = classEmitter5.getClassInfo();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy10 = null;
        enhancer9.setNamingPolicy(namingPolicy10);
        java.lang.ClassLoader classLoader12 = null;
        enhancer9.setClassLoader(classLoader12);
        java.lang.Class<?> wildcardClass14 = enhancer9.getClass();
        java.lang.String str15 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass14);
        boolean boolean16 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass14);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass14);
        boolean boolean18 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass14);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass14);
        int int20 = type19.getSize();
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = null;
        enhancer21.setNamingPolicy(namingPolicy22);
        java.lang.ClassLoader classLoader24 = null;
        enhancer21.setClassLoader(classLoader24);
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = null;
        enhancer26.setNamingPolicy(namingPolicy27);
        java.lang.ClassLoader classLoader29 = null;
        enhancer26.setClassLoader(classLoader29);
        java.lang.Class<?> wildcardClass31 = enhancer26.getClass();
        java.lang.String str32 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass31);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy34 = null;
        enhancer33.setNamingPolicy(namingPolicy34);
        java.lang.ClassLoader classLoader36 = null;
        enhancer33.setClassLoader(classLoader36);
        java.lang.Class<?> wildcardClass38 = enhancer33.getClass();
        java.lang.Class[] classArray39 = new java.lang.Class[] { wildcardClass31, wildcardClass38 };
        enhancer21.setInterfaces(classArray39);
        boolean boolean41 = enhancer21.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy43 = null;
        enhancer42.setNamingPolicy(namingPolicy43);
        java.lang.ClassLoader classLoader45 = null;
        enhancer42.setClassLoader(classLoader45);
        java.lang.Class<?> wildcardClass47 = enhancer42.getClass();
        enhancer21.setSuperclass((java.lang.Class) wildcardClass47);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass47);
        java.lang.String str50 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass47);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass47);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.BYTE_TYPE;
        int int54 = type53.getSize();
        java.lang.String str55 = type53.getClassName();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type57 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type58 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type59 = org.mockito.asm.Type.BYTE_TYPE;
        int int60 = type59.getSize();
        java.lang.String str61 = type59.getClassName();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str63 = type62.getClassName();
        org.mockito.asm.Type[] typeArray64 = new org.mockito.asm.Type[] { type56, type57, type58, type59, type62 };
        org.mockito.cglib.core.Signature signature65 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type53, typeArray64);
        java.lang.String str66 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray64);
        java.lang.String str67 = org.mockito.asm.Type.getMethodDescriptor(type19, typeArray64);
        org.mockito.asm.Type type68 = type19.getElementType();
        org.mockito.cglib.core.ClassEmitter classEmitter69 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter70 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter69);
        boolean boolean71 = type68.equals((java.lang.Object) classEmitter69);
        org.mockito.asm.ClassVisitor classVisitor72 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter73 = new org.mockito.cglib.core.ClassEmitter(classVisitor72);
        org.mockito.cglib.core.ClassEmitter classEmitter74 = new org.mockito.cglib.core.ClassEmitter(classVisitor72);
        org.mockito.cglib.core.ClassInfo classInfo75 = classEmitter74.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter76 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter74);
        org.mockito.cglib.core.ClassEmitter classEmitter77 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter76);
        org.mockito.cglib.core.ClassEmitter classEmitter78 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter77);
        org.mockito.cglib.core.ClassInfo classInfo79 = classEmitter77.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor80 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter81 = new org.mockito.cglib.core.ClassEmitter(classVisitor80);
        org.mockito.cglib.core.ClassEmitter classEmitter82 = new org.mockito.cglib.core.ClassEmitter(classVisitor80);
        org.mockito.cglib.core.ClassEmitter classEmitter83 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter82);
        org.mockito.cglib.core.ClassEmitter classEmitter84 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter83);
        classEmitter77.setTarget((org.mockito.asm.ClassVisitor) classEmitter84);
        classEmitter69.setTarget((org.mockito.asm.ClassVisitor) classEmitter84);
        org.mockito.cglib.core.ClassEmitter classEmitter87 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter69);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter69);
        org.mockito.cglib.core.ClassEmitter classEmitter89 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter69);
        org.mockito.cglib.core.ClassInfo classInfo90 = classEmitter89.getClassInfo();
        // The following exception was thrown during execution in test generation
        try {
            classEmitter89.visitInnerClass("L558932716", "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B", "L1144664822()Lorg/mockito/cglib/proxy/Enhancer;", 116);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo7);
        org.junit.Assert.assertNull(classInfo8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str15, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str32, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(classArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str50, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "byte" + "'", str55, "byte");
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "byte" + "'", str61, "byte");
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "double" + "'", str63, "double");
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;" + "'", str66, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;" + "'", str67, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(classInfo75);
        org.junit.Assert.assertNull(classInfo79);
        org.junit.Assert.assertNull(classInfo90);
    }

    @Test
    public void test21787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21787");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(160, "(CBBBD)LLorg/mockito/cglib/proxy/Enhancer;(CBBBD)B;", (org.mockito.asm.MethodVisitor) localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter10);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter12.visitMaxs(56, 110);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21788");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        enhancer0.setUseCache(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy9 = enhancer0.getNamingPolicy();
        boolean boolean10 = enhancer0.getAttemptLoad();
        enhancer0.setUseCache(false);
        java.lang.ClassLoader classLoader13 = enhancer0.getClassLoader();
        boolean boolean14 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer15.getNamingPolicy();
        enhancer15.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy19 = enhancer15.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = null;
        enhancer20.setNamingPolicy(namingPolicy21);
        java.lang.ClassLoader classLoader23 = null;
        enhancer20.setClassLoader(classLoader23);
        enhancer20.setUseFactory(true);
        enhancer20.setInterceptDuringConstruction(true);
        enhancer20.setAttemptLoad(true);
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy32 = null;
        enhancer31.setNamingPolicy(namingPolicy32);
        java.lang.ClassLoader classLoader34 = null;
        enhancer31.setClassLoader(classLoader34);
        java.lang.Class<?> wildcardClass36 = enhancer31.getClass();
        java.lang.String str37 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass36);
        boolean boolean38 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass36);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass36);
        boolean boolean40 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass36);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass36);
        boolean boolean42 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass36);
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass36);
        java.lang.Class[] classArray44 = new java.lang.Class[] { wildcardClass36 };
        enhancer20.setInterfaces(classArray44);
        enhancer15.setInterfaces(classArray44);
        enhancer0.setInterfaces(classArray44);
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj50 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callbacks are required");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(classLoader13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertNotNull(namingPolicy19);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str37, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(classArray44);
    }

    @Test
    public void test21789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21789");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B");
        int int2 = type1.getSize();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.BYTE_TYPE;
        int int5 = type4.getSize();
        java.lang.String str6 = type4.getClassName();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type8 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type9 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type10 = org.mockito.asm.Type.BYTE_TYPE;
        int int11 = type10.getSize();
        java.lang.String str12 = type10.getClassName();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str14 = type13.getClassName();
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type7, type8, type9, type10, type13 };
        org.mockito.cglib.core.Signature signature16 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type4, typeArray15);
        org.mockito.asm.Type[] typeArray17 = signature16.getArgumentTypes();
        org.mockito.cglib.core.Signature signature20 = new org.mockito.cglib.core.Signature("L1958877584", "");
        boolean boolean21 = signature16.equals((java.lang.Object) "L1958877584");
        org.mockito.cglib.core.Signature signature24 = new org.mockito.cglib.core.Signature("L365314256", "L1128635892");
        boolean boolean25 = signature16.equals((java.lang.Object) "L1128635892");
        org.mockito.asm.Type[] typeArray26 = signature16.getArgumentTypes();
        org.mockito.asm.Type type27 = signature16.getReturnType();
        java.lang.Class<?> wildcardClass28 = type27.getClass();
        boolean boolean29 = type1.equals((java.lang.Object) type27);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "byte" + "'", str6, "byte");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "byte" + "'", str12, "byte");
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "double" + "'", str14, "double");
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test21790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21790");
        org.mockito.asm.MethodVisitor methodVisitor6 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter((int) (short) 1, "()I", (org.mockito.asm.MethodVisitor) localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.AnnotationVisitor annotationVisitor16 = localVariablesSorter11.visitParameterAnnotation((int) (short) 1, "L1955593467", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21791");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter3);
        org.mockito.asm.ClassVisitor classVisitor5 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter(classVisitor5);
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter(classVisitor5);
        org.mockito.cglib.core.ClassInfo classInfo8 = classEmitter7.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter9);
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter(classVisitor11);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter(classVisitor11);
        org.mockito.cglib.core.ClassInfo classInfo14 = classEmitter13.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter15);
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classEmitter15);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        classEmitter3.setTarget((org.mockito.asm.ClassVisitor) classEmitter18);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter3);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter20.visitInnerClass("L2006934327", "L574929459", "L1804543443", 172);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo8);
        org.junit.Assert.assertNull(classInfo14);
    }

    @Test
    public void test21792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21792");
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy5 = null;
        enhancer4.setNamingPolicy(namingPolicy5);
        java.lang.ClassLoader classLoader7 = null;
        enhancer4.setClassLoader(classLoader7);
        java.lang.Class<?> wildcardClass9 = enhancer4.getClass();
        java.lang.String str10 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass9);
        boolean boolean11 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass9);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass9);
        int int13 = type12.getSize();
        org.mockito.cglib.core.Local local14 = new org.mockito.cglib.core.Local(108, type12);
        java.lang.String str15 = type12.getDescriptor();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getObjectType("byte");
        org.mockito.asm.Type type18 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray19 = new org.mockito.asm.Type[] {};
        java.lang.String str20 = org.mockito.asm.Type.getMethodDescriptor(type18, typeArray19);
        java.lang.String str21 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray19);
        org.mockito.cglib.core.Signature signature22 = new org.mockito.cglib.core.Signature("J", type12, typeArray19);
        org.mockito.asm.Type type23 = signature22.getReturnType();
        org.mockito.asm.MethodVisitor methodVisitor28 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter29 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor28);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter30 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter29);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter31 = new org.mockito.cglib.core.LocalVariablesSorter(56, "()Lorg/mockito/cglib/core/ClassEmitter;", (org.mockito.asm.MethodVisitor) localVariablesSorter29);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter32 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter31);
        boolean boolean33 = signature22.equals((java.lang.Object) localVariablesSorter32);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter34 = new org.mockito.cglib.core.LocalVariablesSorter(96, "(CBBBD)Lbyte;", (org.mockito.asm.MethodVisitor) localVariablesSorter32);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter35 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter34);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter36 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter34);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.AnnotationVisitor annotationVisitor39 = localVariablesSorter36.visitAnnotation("LL131442752;", true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str10, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str15, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "()D" + "'", str20, "()D");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "()Lbyte;" + "'", str21, "()Lbyte;");
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test21793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21793");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter9.visitIincInsn(156, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21794");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(160, "(CBBBD)LLorg/mockito/cglib/proxy/Enhancer;(CBBBD)B;", (org.mockito.asm.MethodVisitor) localVariablesSorter7);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.AnnotationVisitor annotationVisitor13 = localVariablesSorter10.visitAnnotation("L994406307", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21795");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.Object obj1 = label0.info;
        java.lang.String str2 = label0.toString();
        java.lang.String str3 = label0.toString();
        java.lang.Object obj4 = label0.info;
        java.lang.Object obj5 = label0.info;
        label0.info = "()B";
        java.lang.Object obj8 = label0.info;
        java.lang.Object obj9 = label0.info;
        java.lang.String str10 = label0.toString();
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy12 = null;
        enhancer11.setNamingPolicy(namingPolicy12);
        java.lang.ClassLoader classLoader14 = null;
        enhancer11.setClassLoader(classLoader14);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter16 = null;
        enhancer11.setCallbackFilter(callbackFilter16);
        enhancer11.setUseCache(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy20 = enhancer11.getNamingPolicy();
        enhancer11.setAttemptLoad(false);
        java.lang.ClassLoader classLoader23 = enhancer11.getClassLoader();
        enhancer11.setUseCache(false);
        label0.info = false;
        java.lang.Object obj27 = label0.info;
        // The following exception was thrown during execution in test generation
        try {
            int int28 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj1);
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "L468527482" + "'", str2, "L468527482");
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "L468527482" + "'", str3, "L468527482");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + "()B" + "'", obj8, "()B");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + "()B" + "'", obj9, "()B");
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L468527482" + "'", str10, "L468527482");
        org.junit.Assert.assertNotNull(namingPolicy20);
        org.junit.Assert.assertNotNull(classLoader23);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
    }

    @Test
    public void test21796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21796");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.Object obj1 = label0.info;
        java.lang.String str2 = label0.toString();
        java.lang.String str3 = label0.toString();
        java.lang.Object obj4 = label0.info;
        java.lang.Object obj5 = label0.info;
        label0.info = "()B";
        java.lang.Object obj8 = label0.info;
        java.lang.Object obj9 = label0.info;
        java.lang.Object obj10 = label0.info;
        label0.info = "L1219436756";
        java.lang.String str13 = label0.toString();
        java.lang.String str14 = label0.toString();
        org.junit.Assert.assertNull(obj1);
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "L442976446" + "'", str2, "L442976446");
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "L442976446" + "'", str3, "L442976446");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + "()B" + "'", obj8, "()B");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + "()B" + "'", obj9, "()B");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "()B" + "'", obj10, "()B");
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "L442976446" + "'", str13, "L442976446");
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L442976446" + "'", str14, "L442976446");
    }

    @Test
    public void test21797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21797");
        org.mockito.cglib.proxy.Enhancer enhancer1 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy2 = null;
        enhancer1.setNamingPolicy(namingPolicy2);
        java.lang.ClassLoader classLoader4 = null;
        enhancer1.setClassLoader(classLoader4);
        java.lang.Class<?> wildcardClass6 = enhancer1.getClass();
        java.lang.String str7 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass6);
        boolean boolean8 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass6);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy11 = null;
        enhancer10.setNamingPolicy(namingPolicy11);
        java.lang.ClassLoader classLoader13 = null;
        enhancer10.setClassLoader(classLoader13);
        java.lang.Class<?> wildcardClass15 = enhancer10.getClass();
        java.lang.String str16 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass15);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass15);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type20 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray21 = new org.mockito.asm.Type[] {};
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray21);
        org.mockito.cglib.core.Signature signature23 = new org.mockito.cglib.core.Signature("double", type19, typeArray21);
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray21);
        org.mockito.cglib.core.Signature signature25 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type9, typeArray21);
        java.lang.String str26 = signature25.getName();
        java.lang.String str27 = signature25.getName();
        org.mockito.asm.Type[] typeArray28 = signature25.getArgumentTypes();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str7, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str16, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "()D" + "'", str22, "()D");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "()Lorg/mockito/cglib/proxy/Enhancer;" + "'", str24, "()Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str26, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str27, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(typeArray28);
    }

    @Test
    public void test21798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21798");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.Object obj1 = label0.info;
        java.lang.String str2 = label0.toString();
        java.lang.Object obj3 = label0.info;
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy5 = null;
        enhancer4.setNamingPolicy(namingPolicy5);
        java.lang.ClassLoader classLoader7 = null;
        enhancer4.setClassLoader(classLoader7);
        enhancer4.setUseFactory(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy11 = enhancer4.getNamingPolicy();
        label0.info = enhancer4;
        java.lang.Object obj13 = label0.info;
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback15 = null;
        enhancer14.setCallback(callback15);
        org.mockito.cglib.proxy.Callback callback17 = null;
        enhancer14.setCallback(callback17);
        org.mockito.cglib.proxy.Enhancer enhancer19 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy20 = null;
        enhancer19.setNamingPolicy(namingPolicy20);
        java.lang.ClassLoader classLoader22 = null;
        enhancer19.setClassLoader(classLoader22);
        java.lang.Class<?> wildcardClass24 = enhancer19.getClass();
        java.lang.String str25 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass24);
        enhancer14.setSuperclass((java.lang.Class) wildcardClass24);
        label0.info = enhancer14;
        java.lang.String str29 = label0.toString();
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = null;
        enhancer30.setNamingPolicy(namingPolicy31);
        java.lang.ClassLoader classLoader33 = null;
        enhancer30.setClassLoader(classLoader33);
        java.lang.Class<?> wildcardClass35 = enhancer30.getClass();
        java.lang.String str36 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass35);
        boolean boolean37 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass35);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass35);
        boolean boolean39 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass35);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass35);
        int int41 = type40.getSize();
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy43 = null;
        enhancer42.setNamingPolicy(namingPolicy43);
        java.lang.ClassLoader classLoader45 = null;
        enhancer42.setClassLoader(classLoader45);
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy48 = null;
        enhancer47.setNamingPolicy(namingPolicy48);
        java.lang.ClassLoader classLoader50 = null;
        enhancer47.setClassLoader(classLoader50);
        java.lang.Class<?> wildcardClass52 = enhancer47.getClass();
        java.lang.String str53 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass52);
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = null;
        enhancer54.setNamingPolicy(namingPolicy55);
        java.lang.ClassLoader classLoader57 = null;
        enhancer54.setClassLoader(classLoader57);
        java.lang.Class<?> wildcardClass59 = enhancer54.getClass();
        java.lang.Class[] classArray60 = new java.lang.Class[] { wildcardClass52, wildcardClass59 };
        enhancer42.setInterfaces(classArray60);
        boolean boolean62 = enhancer42.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer63 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy64 = null;
        enhancer63.setNamingPolicy(namingPolicy64);
        java.lang.ClassLoader classLoader66 = null;
        enhancer63.setClassLoader(classLoader66);
        java.lang.Class<?> wildcardClass68 = enhancer63.getClass();
        enhancer42.setSuperclass((java.lang.Class) wildcardClass68);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass68);
        java.lang.String str71 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass68);
        org.mockito.asm.Type type72 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass68);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.BYTE_TYPE;
        int int75 = type74.getSize();
        java.lang.String str76 = type74.getClassName();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type78 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type79 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type80 = org.mockito.asm.Type.BYTE_TYPE;
        int int81 = type80.getSize();
        java.lang.String str82 = type80.getClassName();
        org.mockito.asm.Type type83 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str84 = type83.getClassName();
        org.mockito.asm.Type[] typeArray85 = new org.mockito.asm.Type[] { type77, type78, type79, type80, type83 };
        org.mockito.cglib.core.Signature signature86 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type74, typeArray85);
        java.lang.String str87 = org.mockito.asm.Type.getMethodDescriptor(type72, typeArray85);
        java.lang.String str88 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray85);
        org.mockito.asm.Type type89 = type40.getElementType();
        org.mockito.asm.Type type90 = type40.getElementType();
        int int91 = type40.getDimensions();
        label0.info = int91;
        org.junit.Assert.assertNull(obj1);
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "L686686697" + "'", str2, "L686686697");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(namingPolicy11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str25, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type26);
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "L686686697" + "'", str29, "L686686697");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str36, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str53, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(classArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str71, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "byte" + "'", str76, "byte");
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "byte" + "'", str82, "byte");
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "double" + "'", str84, "double");
        org.junit.Assert.assertNotNull(typeArray85);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;" + "'", str87, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;" + "'", str88, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1 + "'", int91 == 1);
    }

    @Test
    public void test21799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21799");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter3);
        org.mockito.asm.ClassVisitor classVisitor5 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter(classVisitor5);
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter(classVisitor5);
        org.mockito.cglib.core.ClassInfo classInfo8 = classEmitter7.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter9);
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter(classVisitor11);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter(classVisitor11);
        org.mockito.cglib.core.ClassInfo classInfo14 = classEmitter13.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter15);
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classEmitter15);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        classEmitter3.setTarget((org.mockito.asm.ClassVisitor) classEmitter18);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter3);
        org.mockito.asm.ClassVisitor classVisitor21 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassInfo classInfo24 = classEmitter23.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter25);
        org.mockito.cglib.core.ClassInfo classInfo27 = classEmitter26.getClassInfo();
        classEmitter20.setTarget((org.mockito.asm.ClassVisitor) classEmitter26);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy34 = null;
        enhancer33.setNamingPolicy(namingPolicy34);
        java.lang.ClassLoader classLoader36 = null;
        enhancer33.setClassLoader(classLoader36);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter38 = null;
        enhancer33.setCallbackFilter(callbackFilter38);
        org.mockito.cglib.proxy.Callback callback40 = null;
        enhancer33.setCallback(callback40);
        java.lang.ClassLoader classLoader42 = null;
        enhancer33.setClassLoader(classLoader42);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy44 = null;
        enhancer33.setStrategy(generatorStrategy44);
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy47 = null;
        enhancer46.setNamingPolicy(namingPolicy47);
        java.lang.ClassLoader classLoader49 = null;
        enhancer46.setClassLoader(classLoader49);
        boolean boolean51 = enhancer46.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy52 = enhancer46.getStrategy();
        enhancer33.setStrategy(generatorStrategy52);
        enhancer33.setAttemptLoad(false);
        boolean boolean56 = enhancer33.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy58 = null;
        enhancer57.setNamingPolicy(namingPolicy58);
        java.lang.ClassLoader classLoader60 = null;
        enhancer57.setClassLoader(classLoader60);
        java.lang.Class<?> wildcardClass62 = enhancer57.getClass();
        java.lang.String str63 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass62);
        boolean boolean64 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass62);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass62);
        boolean boolean66 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass62);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass62);
        boolean boolean68 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass62);
        boolean boolean69 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass62);
        java.lang.String str70 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass62);
        java.lang.String str71 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass62);
        enhancer33.setSuperclass((java.lang.Class) wildcardClass62);
        org.mockito.cglib.proxy.Enhancer enhancer73 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy74 = null;
        enhancer73.setNamingPolicy(namingPolicy74);
        java.lang.ClassLoader classLoader76 = null;
        enhancer73.setClassLoader(classLoader76);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter78 = null;
        enhancer73.setCallbackFilter(callbackFilter78);
        enhancer73.setUseCache(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy82 = enhancer73.getStrategy();
        enhancer33.setStrategy(generatorStrategy82);
        enhancer33.setUseFactory(true);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.FieldVisitor fieldVisitor86 = classEmitter20.visitField(16, "L783113294", "L1900863944", "L1182346557", (java.lang.Object) enhancer33);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo8);
        org.junit.Assert.assertNull(classInfo14);
        org.junit.Assert.assertNull(classInfo24);
        org.junit.Assert.assertNull(classInfo27);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(generatorStrategy52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str63, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str70, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str71, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(generatorStrategy82);
    }

    @Test
    public void test21800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21800");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(128, "(CBBBD)Lg/mockito/cglib/proxy/Enhancer;", (org.mockito.asm.MethodVisitor) localVariablesSorter8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter13 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        org.mockito.asm.Label label14 = new org.mockito.asm.Label();
        java.lang.Object obj15 = label14.info;
        java.lang.String str16 = label14.toString();
        java.lang.String str17 = label14.toString();
        java.lang.Object obj18 = label14.info;
        java.lang.Object obj19 = label14.info;
        label14.info = "()B";
        java.lang.String str22 = label14.toString();
        java.lang.String str23 = label14.toString();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getType("Lorg.mockito.cglib.proxy.Enhancer;(CBBBD)B");
        int int28 = type26.getOpcode((int) (short) 0);
        org.mockito.cglib.core.Local local29 = new org.mockito.cglib.core.Local((int) (byte) -1, type26);
        label14.info = (byte) -1;
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter11.visitLabel(label14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj15);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L536714261" + "'", str16, "L536714261");
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "L536714261" + "'", str17, "L536714261");
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L536714261" + "'", str22, "L536714261");
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L536714261" + "'", str23, "L536714261");
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 4 + "'", int28 == 4);
    }

    @Test
    public void test21801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21801");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer3 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy4 = null;
        enhancer3.setNamingPolicy(namingPolicy4);
        java.lang.ClassLoader classLoader6 = null;
        enhancer3.setClassLoader(classLoader6);
        java.lang.Class<?> wildcardClass8 = enhancer3.getClass();
        java.lang.String str9 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass8);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass8);
        enhancer0.setAttemptLoad(true);
        enhancer0.setUseCache(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy15 = enhancer0.getNamingPolicy();
        boolean boolean16 = enhancer0.getAttemptLoad();
        boolean boolean17 = enhancer0.getAttemptLoad();
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter18);
        org.mockito.cglib.core.ClassInfo classInfo20 = classEmitter19.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor21 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.cglib.core.ClassInfo classInfo25 = classEmitter23.getClassInfo();
        classEmitter19.setTarget((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.asm.ClassVisitor classVisitor27 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter(classVisitor27);
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter(classVisitor27);
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter29);
        classEmitter23.setTarget((org.mockito.asm.ClassVisitor) classEmitter30);
        org.mockito.asm.ClassVisitor classVisitor32 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter(classVisitor32);
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter(classVisitor32);
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter34);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter35);
        classEmitter23.setTarget((org.mockito.asm.ClassVisitor) classEmitter36);
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter36);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass((org.mockito.asm.ClassVisitor) classEmitter36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str9, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(namingPolicy15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(classInfo20);
        org.junit.Assert.assertNull(classInfo25);
    }

    @Test
    public void test21802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21802");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter3);
        org.mockito.cglib.core.ClassInfo classInfo5 = classEmitter4.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo6 = classEmitter4.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo7 = classEmitter4.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy12 = null;
        enhancer11.setNamingPolicy(namingPolicy12);
        java.lang.ClassLoader classLoader14 = null;
        enhancer11.setClassLoader(classLoader14);
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy17 = null;
        enhancer16.setNamingPolicy(namingPolicy17);
        java.lang.ClassLoader classLoader19 = null;
        enhancer16.setClassLoader(classLoader19);
        java.lang.Class<?> wildcardClass21 = enhancer16.getClass();
        java.lang.String str22 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass21);
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy24 = null;
        enhancer23.setNamingPolicy(namingPolicy24);
        java.lang.ClassLoader classLoader26 = null;
        enhancer23.setClassLoader(classLoader26);
        java.lang.Class<?> wildcardClass28 = enhancer23.getClass();
        java.lang.Class[] classArray29 = new java.lang.Class[] { wildcardClass21, wildcardClass28 };
        enhancer11.setInterfaces(classArray29);
        boolean boolean31 = enhancer11.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy33 = null;
        enhancer32.setNamingPolicy(namingPolicy33);
        java.lang.ClassLoader classLoader35 = null;
        enhancer32.setClassLoader(classLoader35);
        java.lang.Class<?> wildcardClass37 = enhancer32.getClass();
        enhancer11.setSuperclass((java.lang.Class) wildcardClass37);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass37);
        java.lang.String str40 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass37);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass37);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.BYTE_TYPE;
        int int44 = type43.getSize();
        java.lang.String str45 = type43.getClassName();
        int int46 = type43.getSize();
        org.mockito.cglib.core.Signature signature49 = new org.mockito.cglib.core.Signature("byte", "()B");
        org.mockito.asm.Type type50 = signature49.getReturnType();
        java.lang.String str51 = signature49.getName();
        org.mockito.asm.Type[] typeArray52 = signature49.getArgumentTypes();
        org.mockito.cglib.core.Signature signature53 = new org.mockito.cglib.core.Signature("L769857137", type43, typeArray52);
        org.mockito.cglib.core.Signature signature54 = new org.mockito.cglib.core.Signature("LL13801669;", type41, typeArray52);
        java.lang.String str55 = signature54.getDescriptor();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.getReturnType("Lorg/mockito/cglib/proxy/Enhancer;");
        org.mockito.asm.Type type59 = org.mockito.asm.Type.BYTE_TYPE;
        int int60 = type59.getSize();
        java.lang.String str61 = type59.getClassName();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type63 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type64 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type65 = org.mockito.asm.Type.BYTE_TYPE;
        int int66 = type65.getSize();
        java.lang.String str67 = type65.getClassName();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str69 = type68.getClassName();
        org.mockito.asm.Type[] typeArray70 = new org.mockito.asm.Type[] { type62, type63, type64, type65, type68 };
        org.mockito.cglib.core.Signature signature71 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type59, typeArray70);
        org.mockito.asm.Type[] typeArray72 = signature71.getArgumentTypes();
        java.lang.String str73 = signature71.toString();
        org.mockito.cglib.core.Signature signature76 = new org.mockito.cglib.core.Signature("byte", "()D");
        boolean boolean77 = signature71.equals((java.lang.Object) signature76);
        java.lang.String str78 = signature71.getDescriptor();
        boolean boolean79 = type57.equals((java.lang.Object) signature71);
        java.lang.String str80 = signature71.toString();
        org.mockito.asm.Type[] typeArray81 = signature71.getArgumentTypes();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.core.CodeEmitter codeEmitter82 = classEmitter8.begin_method(39, signature54, typeArray81);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: classInfo is null! org.mockito.cglib.core.ClassEmitter@7b214405");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo5);
        org.junit.Assert.assertNull(classInfo6);
        org.junit.Assert.assertNull(classInfo7);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str22, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(classArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str40, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "byte" + "'", str45, "byte");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "byte" + "'", str51, "byte");
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "()Lorg/mockito/cglib/proxy/Enhancer;" + "'", str55, "()Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "byte" + "'", str61, "byte");
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "byte" + "'", str67, "byte");
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "double" + "'", str69, "double");
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B" + "'", str73, "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "(CBBBD)B" + "'", str78, "(CBBBD)B");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B" + "'", str80, "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B");
        org.junit.Assert.assertNotNull(typeArray81);
    }

    @Test
    public void test21803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21803");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.asm.ClassVisitor classVisitor6 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassInfo classInfo9 = classEmitter8.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter10);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.asm.ClassVisitor classVisitor15 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter(classVisitor15);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter(classVisitor15);
        org.mockito.cglib.core.ClassInfo classInfo18 = classEmitter17.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter19);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassInfo classInfo22 = classEmitter20.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor23 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter(classVisitor23);
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter(classVisitor23);
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter25);
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter26);
        classEmitter20.setTarget((org.mockito.asm.ClassVisitor) classEmitter27);
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter29);
        classEmitter13.setTarget((org.mockito.asm.ClassVisitor) classEmitter30);
        org.mockito.asm.ClassVisitor classVisitor32 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter(classVisitor32);
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter(classVisitor32);
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter(classVisitor32);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter35);
        org.mockito.asm.ClassVisitor classVisitor37 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter(classVisitor37);
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter(classVisitor37);
        org.mockito.cglib.core.ClassInfo classInfo40 = classEmitter39.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter39);
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter41);
        org.mockito.asm.ClassVisitor classVisitor43 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter(classVisitor43);
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter(classVisitor43);
        org.mockito.cglib.core.ClassInfo classInfo46 = classEmitter45.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter47 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter45);
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter47);
        classEmitter42.setTarget((org.mockito.asm.ClassVisitor) classEmitter47);
        org.mockito.cglib.core.ClassEmitter classEmitter50 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter42);
        classEmitter35.setTarget((org.mockito.asm.ClassVisitor) classEmitter50);
        classEmitter13.setTarget((org.mockito.asm.ClassVisitor) classEmitter50);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.AnnotationVisitor annotationVisitor55 = classEmitter50.visitAnnotation("F", true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo9);
        org.junit.Assert.assertNull(classInfo18);
        org.junit.Assert.assertNull(classInfo22);
        org.junit.Assert.assertNull(classInfo40);
        org.junit.Assert.assertNull(classInfo46);
    }

    @Test
    public void test21804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21804");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        enhancer0.setUseCache(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy9 = enhancer0.getNamingPolicy();
        enhancer0.setAttemptLoad(false);
        enhancer0.setUseCache(false);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter14 = null;
        enhancer0.setCallbackFilter(callbackFilter14);
        enhancer0.setUseCache(false);
        org.junit.Assert.assertNotNull(namingPolicy9);
    }

    @Test
    public void test21805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21805");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassInfo classInfo5 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.asm.ClassVisitor classVisitor7 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter(classVisitor7);
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter(classVisitor7);
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter9.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter9);
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter9.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter9);
        org.mockito.cglib.core.ClassInfo classInfo14 = classEmitter9.getClassInfo();
        org.mockito.cglib.core.Signature signature17 = new org.mockito.cglib.core.Signature("hi!", "B");
        java.lang.String str18 = signature17.toString();
        org.mockito.asm.ClassVisitor classVisitor19 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter(classVisitor19);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter(classVisitor19);
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter22);
        boolean boolean24 = signature17.equals((java.lang.Object) classEmitter23);
        classEmitter9.setTarget((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.cglib.core.ClassInfo classInfo26 = classEmitter23.getClassInfo();
        classEmitter2.setTarget((org.mockito.asm.ClassVisitor) classEmitter23);
        // The following exception was thrown during execution in test generation
        try {
            int int28 = classEmitter23.getAccess();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo5);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNull(classInfo14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!B" + "'", str18, "hi!B");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(classInfo26);
    }

    @Test
    public void test21806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21806");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = null;
        enhancer5.setNamingPolicy(namingPolicy6);
        java.lang.ClassLoader classLoader8 = null;
        enhancer5.setClassLoader(classLoader8);
        java.lang.Class<?> wildcardClass10 = enhancer5.getClass();
        java.lang.String str11 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass10);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = null;
        enhancer12.setNamingPolicy(namingPolicy13);
        java.lang.ClassLoader classLoader15 = null;
        enhancer12.setClassLoader(classLoader15);
        java.lang.Class<?> wildcardClass17 = enhancer12.getClass();
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass10, wildcardClass17 };
        enhancer0.setInterfaces(classArray18);
        boolean boolean20 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = null;
        enhancer21.setNamingPolicy(namingPolicy22);
        java.lang.ClassLoader classLoader24 = null;
        enhancer21.setClassLoader(classLoader24);
        java.lang.Class<?> wildcardClass26 = enhancer21.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass26);
        java.lang.String str29 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass26);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass26);
        java.lang.String str31 = type30.getInternalName();
        java.lang.String str32 = type30.toString();
        java.lang.String str33 = type30.getDescriptor();
        java.lang.String str34 = type30.getDescriptor();
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str11, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str29, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str31, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str32, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str33, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str34, "Lorg/mockito/cglib/proxy/Enhancer;");
    }

    @Test
    public void test21807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21807");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.BYTE_TYPE;
        int int2 = type1.getSize();
        java.lang.String str3 = type1.getClassName();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type5 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type6 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type7 = org.mockito.asm.Type.BYTE_TYPE;
        int int8 = type7.getSize();
        java.lang.String str9 = type7.getClassName();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str11 = type10.getClassName();
        org.mockito.asm.Type[] typeArray12 = new org.mockito.asm.Type[] { type4, type5, type6, type7, type10 };
        org.mockito.cglib.core.Signature signature13 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type1, typeArray12);
        org.mockito.asm.Type[] typeArray14 = signature13.getArgumentTypes();
        java.lang.String str15 = signature13.toString();
        org.mockito.cglib.core.Signature signature18 = new org.mockito.cglib.core.Signature("byte", "()D");
        boolean boolean19 = signature13.equals((java.lang.Object) signature18);
        java.lang.String str20 = signature13.toString();
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = null;
        enhancer21.setNamingPolicy(namingPolicy22);
        java.lang.ClassLoader classLoader24 = null;
        enhancer21.setClassLoader(classLoader24);
        boolean boolean26 = enhancer21.getAttemptLoad();
        java.lang.Class class27 = null;
        enhancer21.setSuperclass(class27);
        java.lang.ClassLoader classLoader29 = enhancer21.getClassLoader();
        enhancer21.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy32 = enhancer21.getStrategy();
        boolean boolean33 = signature13.equals((java.lang.Object) generatorStrategy32);
        org.mockito.asm.Type[] typeArray34 = signature13.getArgumentTypes();
        org.mockito.asm.Type type35 = signature13.getReturnType();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "byte" + "'", str3, "byte");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "byte" + "'", str9, "byte");
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "double" + "'", str11, "double");
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B" + "'", str15, "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B" + "'", str20, "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(generatorStrategy32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertNotNull(type35);
    }

    @Test
    public void test21808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21808");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.asm.ClassVisitor classVisitor6 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassInfo classInfo9 = classEmitter8.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter8.getClassInfo();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.asm.ClassVisitor classVisitor12 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter(classVisitor12);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter(classVisitor12);
        org.mockito.cglib.core.ClassInfo classInfo15 = classEmitter14.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.asm.ClassVisitor classVisitor18 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter(classVisitor18);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter(classVisitor18);
        org.mockito.cglib.core.ClassInfo classInfo21 = classEmitter20.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter22);
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter22);
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter17);
        classEmitter8.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.asm.ClassVisitor classVisitor27 = null;
        classEmitter8.setTarget(classVisitor27);
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter8);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter29.visitInnerClass("L535665506", "L832025776L536912034()F", "L1049216393", 129);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo9);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo15);
        org.junit.Assert.assertNull(classInfo21);
    }

    @Test
    public void test21809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21809");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassInfo classInfo5 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter6);
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.asm.Attribute attribute9 = null;
        // The following exception was thrown during execution in test generation
        try {
            classEmitter8.visitAttribute(attribute9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo5);
    }

    @Test
    public void test21810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21810");
        org.mockito.cglib.proxy.Enhancer enhancer1 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy2 = null;
        enhancer1.setNamingPolicy(namingPolicy2);
        java.lang.ClassLoader classLoader4 = null;
        enhancer1.setClassLoader(classLoader4);
        org.mockito.cglib.proxy.Enhancer enhancer6 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = null;
        enhancer6.setNamingPolicy(namingPolicy7);
        java.lang.ClassLoader classLoader9 = null;
        enhancer6.setClassLoader(classLoader9);
        java.lang.Class<?> wildcardClass11 = enhancer6.getClass();
        java.lang.String str12 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass11);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = null;
        enhancer13.setNamingPolicy(namingPolicy14);
        java.lang.ClassLoader classLoader16 = null;
        enhancer13.setClassLoader(classLoader16);
        java.lang.Class<?> wildcardClass18 = enhancer13.getClass();
        java.lang.Class[] classArray19 = new java.lang.Class[] { wildcardClass11, wildcardClass18 };
        enhancer1.setInterfaces(classArray19);
        boolean boolean21 = enhancer1.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = null;
        enhancer22.setNamingPolicy(namingPolicy23);
        java.lang.ClassLoader classLoader25 = null;
        enhancer22.setClassLoader(classLoader25);
        java.lang.Class<?> wildcardClass27 = enhancer22.getClass();
        enhancer1.setSuperclass((java.lang.Class) wildcardClass27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass27);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass27);
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy33 = null;
        enhancer32.setNamingPolicy(namingPolicy33);
        java.lang.ClassLoader classLoader35 = null;
        enhancer32.setClassLoader(classLoader35);
        java.lang.Class<?> wildcardClass37 = enhancer32.getClass();
        java.lang.String str38 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass37);
        boolean boolean39 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass37);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass37);
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy42 = null;
        enhancer41.setNamingPolicy(namingPolicy42);
        java.lang.ClassLoader classLoader44 = null;
        enhancer41.setClassLoader(classLoader44);
        java.lang.Class<?> wildcardClass46 = enhancer41.getClass();
        java.lang.String str47 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass46);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type51 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray52 = new org.mockito.asm.Type[] {};
        java.lang.String str53 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray52);
        org.mockito.cglib.core.Signature signature54 = new org.mockito.cglib.core.Signature("double", type50, typeArray52);
        java.lang.String str55 = org.mockito.asm.Type.getMethodDescriptor(type48, typeArray52);
        org.mockito.cglib.core.Signature signature56 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type40, typeArray52);
        org.mockito.asm.Type[] typeArray57 = signature56.getArgumentTypes();
        org.mockito.cglib.core.Signature signature58 = new org.mockito.cglib.core.Signature("B", type30, typeArray57);
        java.lang.String str59 = signature58.getName();
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str12, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str38, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str47, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "()D" + "'", str53, "()D");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "()Lorg/mockito/cglib/proxy/Enhancer;" + "'", str55, "()Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "B" + "'", str59, "B");
    }

    @Test
    public void test21811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21811");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(128, "(CBBBD)Lg/mockito/cglib/proxy/Enhancer;", (org.mockito.asm.MethodVisitor) localVariablesSorter8);
        org.mockito.asm.Label label15 = new org.mockito.asm.Label();
        java.lang.Object obj16 = label15.info;
        java.lang.String str17 = label15.toString();
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy19 = null;
        enhancer18.setNamingPolicy(namingPolicy19);
        java.lang.ClassLoader classLoader21 = null;
        enhancer18.setClassLoader(classLoader21);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter23 = null;
        enhancer18.setCallbackFilter(callbackFilter23);
        enhancer18.setUseCache(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = enhancer18.getNamingPolicy();
        boolean boolean28 = enhancer18.getAttemptLoad();
        enhancer18.setUseCache(false);
        java.lang.ClassLoader classLoader31 = enhancer18.getClassLoader();
        boolean boolean32 = enhancer18.getUseCache();
        label15.info = enhancer18;
        java.lang.Object obj34 = label15.info;
        org.mockito.asm.Label label35 = new org.mockito.asm.Label();
        java.lang.Object obj36 = label35.info;
        java.lang.String str37 = label35.toString();
        java.lang.Object obj38 = label35.info;
        java.lang.Object obj39 = label35.info;
        java.lang.String str40 = label35.toString();
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy42 = null;
        enhancer41.setNamingPolicy(namingPolicy42);
        java.lang.ClassLoader classLoader44 = null;
        enhancer41.setClassLoader(classLoader44);
        enhancer41.setUseFactory(true);
        enhancer41.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy50 = enhancer41.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy51 = enhancer41.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer52 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy53 = null;
        enhancer52.setNamingPolicy(namingPolicy53);
        boolean boolean55 = enhancer52.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer56 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy57 = null;
        enhancer56.setNamingPolicy(namingPolicy57);
        java.lang.ClassLoader classLoader59 = null;
        enhancer56.setClassLoader(classLoader59);
        org.mockito.cglib.proxy.Enhancer enhancer61 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy62 = null;
        enhancer61.setNamingPolicy(namingPolicy62);
        java.lang.ClassLoader classLoader64 = null;
        enhancer61.setClassLoader(classLoader64);
        java.lang.Class<?> wildcardClass66 = enhancer61.getClass();
        java.lang.String str67 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass66);
        org.mockito.cglib.proxy.Enhancer enhancer68 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy69 = null;
        enhancer68.setNamingPolicy(namingPolicy69);
        java.lang.ClassLoader classLoader71 = null;
        enhancer68.setClassLoader(classLoader71);
        java.lang.Class<?> wildcardClass73 = enhancer68.getClass();
        java.lang.Class[] classArray74 = new java.lang.Class[] { wildcardClass66, wildcardClass73 };
        enhancer56.setInterfaces(classArray74);
        enhancer52.setInterfaces(classArray74);
        enhancer41.setInterfaces(classArray74);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy78 = enhancer41.getStrategy();
        boolean boolean79 = enhancer41.getAttemptLoad();
        enhancer41.setSerialVersionUID((java.lang.Long) 100L);
        label35.info = 100L;
        org.mockito.asm.Type type84 = org.mockito.asm.Type.INT_TYPE;
        int int85 = type84.getSize();
        java.lang.String str86 = type84.toString();
        int int87 = type84.getSort();
        java.lang.String str88 = type84.getClassName();
        int int89 = type84.getSort();
        org.mockito.cglib.core.Local local90 = new org.mockito.cglib.core.Local(22, type84);
        label35.info = local90;
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter8.visitLocalVariable("V", "L1683595923", "L1840685726", label15, label35, 108);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown local variable 108");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj16);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "L176344008" + "'", str17, "L176344008");
        org.junit.Assert.assertNotNull(namingPolicy27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNull(obj36);
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "L34318384" + "'", str37, "L34318384");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj39);
// flaky:         org.junit.Assert.assertEquals("'" + str40 + "' != '" + "L34318384" + "'", str40, "L34318384");
        org.junit.Assert.assertNotNull(namingPolicy50);
        org.junit.Assert.assertNotNull(namingPolicy51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str67, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(classArray74);
        org.junit.Assert.assertNotNull(generatorStrategy78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "I" + "'", str86, "I");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 5 + "'", int87 == 5);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "int" + "'", str88, "int");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 5 + "'", int89 == 5);
    }

    @Test
    public void test21812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21812");
        org.mockito.cglib.core.Signature signature2 = new org.mockito.cglib.core.Signature("L1854834029", "L459435263");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type[] typeArray3 = signature2.getArgumentTypes();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21813");
        org.mockito.asm.MethodVisitor methodVisitor6 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter10);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) -1, "(CBBBD)Lg/mockito/cglib/proxy/Enhancer;", (org.mockito.asm.MethodVisitor) localVariablesSorter10);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter13 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter10);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter14 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter13);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter13.visitIntInsn(165, 39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21814");
        org.mockito.cglib.core.Signature signature2 = new org.mockito.cglib.core.Signature("L8213071", "L1314283893");
        java.lang.String str3 = signature2.getName();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "L8213071" + "'", str3, "L8213071");
    }

    @Test
    public void test21815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21815");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter3 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter7.visitMethodInsn(101, "L574929459", "", "L1738884731");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21816");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        java.lang.ClassLoader classLoader9 = null;
        enhancer0.setClassLoader(classLoader9);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = null;
        enhancer13.setNamingPolicy(namingPolicy14);
        java.lang.ClassLoader classLoader16 = null;
        enhancer13.setClassLoader(classLoader16);
        boolean boolean18 = enhancer13.getAttemptLoad();
        enhancer13.setUseCache(true);
        java.lang.ClassLoader classLoader21 = enhancer13.getClassLoader();
        enhancer0.setClassLoader(classLoader21);
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy24 = null;
        enhancer23.setNamingPolicy(namingPolicy24);
        java.lang.ClassLoader classLoader26 = null;
        enhancer23.setClassLoader(classLoader26);
        boolean boolean28 = enhancer23.getAttemptLoad();
        java.lang.ClassLoader classLoader29 = enhancer23.getClassLoader();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter30 = null;
        enhancer23.setCallbackFilter(callbackFilter30);
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy33 = null;
        enhancer32.setNamingPolicy(namingPolicy33);
        boolean boolean35 = enhancer32.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy37 = null;
        enhancer36.setNamingPolicy(namingPolicy37);
        java.lang.ClassLoader classLoader39 = null;
        enhancer36.setClassLoader(classLoader39);
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy42 = null;
        enhancer41.setNamingPolicy(namingPolicy42);
        java.lang.ClassLoader classLoader44 = null;
        enhancer41.setClassLoader(classLoader44);
        java.lang.Class<?> wildcardClass46 = enhancer41.getClass();
        java.lang.String str47 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass46);
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy49 = null;
        enhancer48.setNamingPolicy(namingPolicy49);
        java.lang.ClassLoader classLoader51 = null;
        enhancer48.setClassLoader(classLoader51);
        java.lang.Class<?> wildcardClass53 = enhancer48.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[] { wildcardClass46, wildcardClass53 };
        enhancer36.setInterfaces(classArray54);
        enhancer32.setInterfaces(classArray54);
        enhancer23.setInterfaces(classArray54);
        enhancer0.setInterfaces(classArray54);
        org.mockito.cglib.proxy.Callback callback59 = null;
        enhancer0.setCallback(callback59);
        org.mockito.cglib.proxy.Callback callback61 = null;
        enhancer0.setCallback(callback61);
        org.mockito.cglib.proxy.Enhancer enhancer66 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy67 = null;
        enhancer66.setNamingPolicy(namingPolicy67);
        java.lang.ClassLoader classLoader69 = null;
        enhancer66.setClassLoader(classLoader69);
        java.lang.Class<?> wildcardClass71 = enhancer66.getClass();
        java.lang.String str72 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass71);
        boolean boolean73 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass71);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass71);
        int int75 = type74.getSize();
        org.mockito.cglib.core.Local local76 = new org.mockito.cglib.core.Local(108, type74);
        org.mockito.cglib.core.Local local77 = new org.mockito.cglib.core.Local(108, type74);
        org.mockito.asm.Type type78 = local77.getType();
        org.mockito.asm.Type type80 = org.mockito.asm.Type.BYTE_TYPE;
        int int81 = type80.getSize();
        java.lang.String str82 = type80.getClassName();
        org.mockito.asm.Type type83 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type84 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type85 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type86 = org.mockito.asm.Type.BYTE_TYPE;
        int int87 = type86.getSize();
        java.lang.String str88 = type86.getClassName();
        org.mockito.asm.Type type89 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str90 = type89.getClassName();
        org.mockito.asm.Type[] typeArray91 = new org.mockito.asm.Type[] { type83, type84, type85, type86, type89 };
        org.mockito.cglib.core.Signature signature92 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type80, typeArray91);
        boolean boolean94 = signature92.equals((java.lang.Object) 124);
        org.mockito.asm.Type[] typeArray95 = signature92.getArgumentTypes();
        org.mockito.cglib.core.Signature signature96 = new org.mockito.cglib.core.Signature("hi!B", type78, typeArray95);
        org.mockito.asm.Type type97 = signature96.getReturnType();
        java.lang.Class<?> wildcardClass98 = type97.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass98);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str47, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str72, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "byte" + "'", str82, "byte");
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "byte" + "'", str88, "byte");
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "double" + "'", str90, "double");
        org.junit.Assert.assertNotNull(typeArray91);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(typeArray95);
        org.junit.Assert.assertNotNull(type97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test21817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21817");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        boolean boolean5 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader6 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter7 = null;
        enhancer0.setCallbackFilter(callbackFilter7);
        boolean boolean9 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy11 = null;
        enhancer10.setNamingPolicy(namingPolicy11);
        java.lang.ClassLoader classLoader13 = null;
        enhancer10.setClassLoader(classLoader13);
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = null;
        enhancer15.setNamingPolicy(namingPolicy16);
        java.lang.ClassLoader classLoader18 = null;
        enhancer15.setClassLoader(classLoader18);
        java.lang.Class<?> wildcardClass20 = enhancer15.getClass();
        java.lang.String str21 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass20);
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = null;
        enhancer22.setNamingPolicy(namingPolicy23);
        java.lang.ClassLoader classLoader25 = null;
        enhancer22.setClassLoader(classLoader25);
        java.lang.Class<?> wildcardClass27 = enhancer22.getClass();
        java.lang.Class[] classArray28 = new java.lang.Class[] { wildcardClass20, wildcardClass27 };
        enhancer10.setInterfaces(classArray28);
        boolean boolean30 = enhancer10.getAttemptLoad();
        enhancer10.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy33 = enhancer10.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy33);
        enhancer0.setUseCache(false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(classLoader6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str21, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(classArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(namingPolicy33);
    }

    @Test
    public void test21818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21818");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getObjectType("byte");
        label0.info = "byte";
        java.lang.String str4 = label0.toString();
        org.mockito.asm.MethodVisitor methodVisitor9 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter10);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        label0.info = localVariablesSorter11;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter14 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        org.mockito.asm.Label label15 = new org.mockito.asm.Label();
        label15.info = "L97833253";
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getObjectType("L1591299506");
        java.lang.String str20 = type19.toString();
        label15.info = type19;
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = null;
        enhancer22.setNamingPolicy(namingPolicy23);
        java.lang.ClassLoader classLoader25 = null;
        enhancer22.setClassLoader(classLoader25);
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = null;
        enhancer27.setNamingPolicy(namingPolicy28);
        java.lang.ClassLoader classLoader30 = null;
        enhancer27.setClassLoader(classLoader30);
        java.lang.Class<?> wildcardClass32 = enhancer27.getClass();
        java.lang.String str33 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass32);
        org.mockito.cglib.proxy.Enhancer enhancer34 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy35 = null;
        enhancer34.setNamingPolicy(namingPolicy35);
        java.lang.ClassLoader classLoader37 = null;
        enhancer34.setClassLoader(classLoader37);
        java.lang.Class<?> wildcardClass39 = enhancer34.getClass();
        java.lang.Class[] classArray40 = new java.lang.Class[] { wildcardClass32, wildcardClass39 };
        enhancer22.setInterfaces(classArray40);
        java.lang.ClassLoader classLoader42 = enhancer22.getClassLoader();
        java.lang.ClassLoader classLoader43 = enhancer22.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy44 = enhancer22.getStrategy();
        java.lang.ClassLoader classLoader45 = enhancer22.getClassLoader();
        org.mockito.cglib.proxy.Callback callback46 = null;
        enhancer22.setCallback(callback46);
        label15.info = callback46;
        label15.info = "L1635174650";
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter14.visitLabel(label15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type2);
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L1923538668" + "'", str4, "L1923538668");
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "LL1591299506;" + "'", str20, "LL1591299506;");
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str33, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(classArray40);
        org.junit.Assert.assertNotNull(classLoader42);
        org.junit.Assert.assertNotNull(classLoader43);
        org.junit.Assert.assertNotNull(generatorStrategy44);
        org.junit.Assert.assertNotNull(classLoader45);
    }

    @Test
    public void test21819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21819");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter13 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter12);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.AnnotationVisitor annotationVisitor16 = localVariablesSorter13.visitAnnotation("L27462285", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21820");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("L981969946");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21821");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter13 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter12);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter12.visitMultiANewArrayInsn("L1871435028", 7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21822");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray3 = new org.mockito.asm.Type[] {};
        java.lang.String str4 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray3);
        org.mockito.cglib.core.Signature signature5 = new org.mockito.cglib.core.Signature("double", type1, typeArray3);
        org.mockito.cglib.proxy.Enhancer enhancer6 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = null;
        enhancer6.setNamingPolicy(namingPolicy7);
        java.lang.ClassLoader classLoader9 = null;
        enhancer6.setClassLoader(classLoader9);
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy12 = null;
        enhancer11.setNamingPolicy(namingPolicy12);
        java.lang.ClassLoader classLoader14 = null;
        enhancer11.setClassLoader(classLoader14);
        java.lang.Class<?> wildcardClass16 = enhancer11.getClass();
        java.lang.String str17 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass16);
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy19 = null;
        enhancer18.setNamingPolicy(namingPolicy19);
        java.lang.ClassLoader classLoader21 = null;
        enhancer18.setClassLoader(classLoader21);
        java.lang.Class<?> wildcardClass23 = enhancer18.getClass();
        java.lang.Class[] classArray24 = new java.lang.Class[] { wildcardClass16, wildcardClass23 };
        enhancer6.setInterfaces(classArray24);
        boolean boolean26 = enhancer6.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = null;
        enhancer27.setNamingPolicy(namingPolicy28);
        java.lang.ClassLoader classLoader30 = null;
        enhancer27.setClassLoader(classLoader30);
        java.lang.Class<?> wildcardClass32 = enhancer27.getClass();
        enhancer6.setSuperclass((java.lang.Class) wildcardClass32);
        java.lang.String str34 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass32);
        boolean boolean35 = signature5.equals((java.lang.Object) str34);
        org.mockito.asm.Type[] typeArray36 = signature5.getArgumentTypes();
        java.lang.String str37 = signature5.getName();
        java.lang.String str38 = signature5.toString();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "()D" + "'", str4, "()D");
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str17, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(classArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str34, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "double" + "'", str37, "double");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "double()B" + "'", str38, "double()B");
    }

    @Test
    public void test21823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21823");
        org.mockito.cglib.proxy.Enhancer enhancer1 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy2 = null;
        enhancer1.setNamingPolicy(namingPolicy2);
        java.lang.ClassLoader classLoader4 = null;
        enhancer1.setClassLoader(classLoader4);
        org.mockito.cglib.proxy.Enhancer enhancer6 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = null;
        enhancer6.setNamingPolicy(namingPolicy7);
        java.lang.ClassLoader classLoader9 = null;
        enhancer6.setClassLoader(classLoader9);
        java.lang.Class<?> wildcardClass11 = enhancer6.getClass();
        java.lang.String str12 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass11);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = null;
        enhancer13.setNamingPolicy(namingPolicy14);
        java.lang.ClassLoader classLoader16 = null;
        enhancer13.setClassLoader(classLoader16);
        java.lang.Class<?> wildcardClass18 = enhancer13.getClass();
        java.lang.Class[] classArray19 = new java.lang.Class[] { wildcardClass11, wildcardClass18 };
        enhancer1.setInterfaces(classArray19);
        boolean boolean21 = enhancer1.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = null;
        enhancer22.setNamingPolicy(namingPolicy23);
        java.lang.ClassLoader classLoader25 = null;
        enhancer22.setClassLoader(classLoader25);
        java.lang.Class<?> wildcardClass27 = enhancer22.getClass();
        enhancer1.setSuperclass((java.lang.Class) wildcardClass27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass27);
        java.lang.String str30 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass27);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass27);
        org.mockito.asm.Type type32 = type31.getElementType();
        org.mockito.asm.Type type33 = type32.getElementType();
        int int34 = type32.getSize();
        org.mockito.cglib.core.Local local35 = new org.mockito.cglib.core.Local(1, type32);
        org.mockito.asm.Type type36 = local35.getType();
        org.mockito.asm.Type type37 = local35.getType();
        org.mockito.asm.Type type38 = local35.getType();
        org.mockito.asm.Type type39 = local35.getType();
        org.mockito.asm.Type type40 = local35.getType();
        java.lang.String str41 = type40.toString();
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str12, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str30, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Lg/mockito/cglib/proxy/Enhancer;" + "'", str41, "Lg/mockito/cglib/proxy/Enhancer;");
    }

    @Test
    public void test21824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21824");
        org.mockito.cglib.proxy.Enhancer enhancer1 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy2 = null;
        enhancer1.setNamingPolicy(namingPolicy2);
        java.lang.ClassLoader classLoader4 = null;
        enhancer1.setClassLoader(classLoader4);
        org.mockito.cglib.proxy.Enhancer enhancer6 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = null;
        enhancer6.setNamingPolicy(namingPolicy7);
        java.lang.ClassLoader classLoader9 = null;
        enhancer6.setClassLoader(classLoader9);
        java.lang.Class<?> wildcardClass11 = enhancer6.getClass();
        java.lang.String str12 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass11);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = null;
        enhancer13.setNamingPolicy(namingPolicy14);
        java.lang.ClassLoader classLoader16 = null;
        enhancer13.setClassLoader(classLoader16);
        java.lang.Class<?> wildcardClass18 = enhancer13.getClass();
        java.lang.Class[] classArray19 = new java.lang.Class[] { wildcardClass11, wildcardClass18 };
        enhancer1.setInterfaces(classArray19);
        boolean boolean21 = enhancer1.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = null;
        enhancer22.setNamingPolicy(namingPolicy23);
        java.lang.ClassLoader classLoader25 = null;
        enhancer22.setClassLoader(classLoader25);
        java.lang.Class<?> wildcardClass27 = enhancer22.getClass();
        enhancer1.setSuperclass((java.lang.Class) wildcardClass27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass27);
        java.lang.String str30 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass27);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass27);
        org.mockito.cglib.core.Local local32 = new org.mockito.cglib.core.Local((int) (byte) 100, type31);
        java.lang.Class<?> wildcardClass33 = type31.getClass();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass33);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass33);
        java.lang.String str36 = type35.toString();
        int int38 = type35.getOpcode((int) '4');
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str12, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str30, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str36, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 56 + "'", int38 == 56);
    }

    @Test
    public void test21825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21825");
        org.mockito.asm.MethodVisitor methodVisitor6 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter10);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter13 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter14 = new org.mockito.cglib.core.LocalVariablesSorter(96, "(CBBBD)LLorg/mockito/cglib/proxy/Enhancer;(CBBBD)B;", (org.mockito.asm.MethodVisitor) localVariablesSorter13);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter15 = new org.mockito.cglib.core.LocalVariablesSorter(105, "()F", (org.mockito.asm.MethodVisitor) localVariablesSorter14);
        org.mockito.asm.Label label18 = new org.mockito.asm.Label();
        java.lang.Object obj19 = label18.info;
        java.lang.String str20 = label18.toString();
        java.lang.String str21 = label18.toString();
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = null;
        enhancer22.setNamingPolicy(namingPolicy23);
        java.lang.ClassLoader classLoader25 = null;
        enhancer22.setClassLoader(classLoader25);
        boolean boolean27 = enhancer22.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy28 = enhancer22.getStrategy();
        label18.info = generatorStrategy28;
        java.lang.Object obj30 = label18.info;
        java.lang.String str31 = label18.toString();
        org.mockito.asm.Label label32 = new org.mockito.asm.Label();
        java.lang.Object obj33 = label32.info;
        org.mockito.cglib.proxy.Enhancer enhancer34 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy35 = null;
        enhancer34.setNamingPolicy(namingPolicy35);
        java.lang.ClassLoader classLoader37 = null;
        enhancer34.setClassLoader(classLoader37);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter39 = null;
        enhancer34.setCallbackFilter(callbackFilter39);
        enhancer34.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer43 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy44 = null;
        enhancer43.setNamingPolicy(namingPolicy44);
        java.lang.ClassLoader classLoader46 = null;
        enhancer43.setClassLoader(classLoader46);
        boolean boolean48 = enhancer43.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy49 = enhancer43.getNamingPolicy();
        org.mockito.cglib.proxy.Callback callback50 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray51 = new org.mockito.cglib.proxy.Callback[] { callback50 };
        enhancer43.setCallbacks(callbackArray51);
        enhancer34.setCallbacks(callbackArray51);
        enhancer34.setAttemptLoad(true);
        label32.info = enhancer34;
        label32.info = "org/mockito/cglib/proxy/Enhancer";
        java.lang.Object obj59 = label32.info;
        label32.info = "L266122337";
        java.lang.String str62 = label32.toString();
        org.mockito.asm.Label label63 = new org.mockito.asm.Label();
        java.lang.Object obj64 = label63.info;
        java.lang.String str65 = label63.toString();
        java.lang.String str66 = label63.toString();
        java.lang.String str67 = label63.toString();
        java.lang.Object obj68 = label63.info;
        java.lang.Object obj69 = label63.info;
        org.mockito.asm.Label label70 = new org.mockito.asm.Label();
        java.lang.Object obj71 = label70.info;
        java.lang.String str72 = label70.toString();
        java.lang.String str73 = label70.toString();
        java.lang.Object obj74 = label70.info;
        java.lang.Object obj75 = label70.info;
        label70.info = "()B";
        java.lang.String str78 = label70.toString();
        java.lang.String str79 = label70.toString();
        org.mockito.asm.Type type82 = org.mockito.asm.Type.getType("Lorg.mockito.cglib.proxy.Enhancer;(CBBBD)B");
        int int84 = type82.getOpcode((int) (short) 0);
        org.mockito.cglib.core.Local local85 = new org.mockito.cglib.core.Local((int) (byte) -1, type82);
        label70.info = (byte) -1;
        org.mockito.asm.Label[] labelArray87 = new org.mockito.asm.Label[] { label32, label63, label70 };
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter14.visitTableSwitchInsn(56, 164, label18, labelArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L669735081" + "'", str20, "L669735081");
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L669735081" + "'", str21, "L669735081");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(generatorStrategy28);
        org.junit.Assert.assertNotNull(obj30);
// flaky:         org.junit.Assert.assertEquals("'" + str31 + "' != '" + "L669735081" + "'", str31, "L669735081");
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(namingPolicy49);
        org.junit.Assert.assertNotNull(callbackArray51);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", obj59, "org/mockito/cglib/proxy/Enhancer");
// flaky:         org.junit.Assert.assertEquals("'" + str62 + "' != '" + "L634845290" + "'", str62, "L634845290");
        org.junit.Assert.assertNull(obj64);
// flaky:         org.junit.Assert.assertEquals("'" + str65 + "' != '" + "L1335389102" + "'", str65, "L1335389102");
// flaky:         org.junit.Assert.assertEquals("'" + str66 + "' != '" + "L1335389102" + "'", str66, "L1335389102");
// flaky:         org.junit.Assert.assertEquals("'" + str67 + "' != '" + "L1335389102" + "'", str67, "L1335389102");
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNull(obj71);
// flaky:         org.junit.Assert.assertEquals("'" + str72 + "' != '" + "L2013233028" + "'", str72, "L2013233028");
// flaky:         org.junit.Assert.assertEquals("'" + str73 + "' != '" + "L2013233028" + "'", str73, "L2013233028");
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNull(obj75);
// flaky:         org.junit.Assert.assertEquals("'" + str78 + "' != '" + "L2013233028" + "'", str78, "L2013233028");
// flaky:         org.junit.Assert.assertEquals("'" + str79 + "' != '" + "L2013233028" + "'", str79, "L2013233028");
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 4 + "'", int84 == 4);
        org.junit.Assert.assertNotNull(labelArray87);
    }

    @Test
    public void test21826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21826");
        org.mockito.cglib.core.Signature signature2 = new org.mockito.cglib.core.Signature("org.mockito.cglib.proxy.Enhancer", "L995628057");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type3 = signature2.getReturnType();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21827");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        boolean boolean3 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy5 = null;
        enhancer4.setNamingPolicy(namingPolicy5);
        java.lang.ClassLoader classLoader7 = null;
        enhancer4.setClassLoader(classLoader7);
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy10 = null;
        enhancer9.setNamingPolicy(namingPolicy10);
        java.lang.ClassLoader classLoader12 = null;
        enhancer9.setClassLoader(classLoader12);
        java.lang.Class<?> wildcardClass14 = enhancer9.getClass();
        java.lang.String str15 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass14);
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy17 = null;
        enhancer16.setNamingPolicy(namingPolicy17);
        java.lang.ClassLoader classLoader19 = null;
        enhancer16.setClassLoader(classLoader19);
        java.lang.Class<?> wildcardClass21 = enhancer16.getClass();
        java.lang.Class[] classArray22 = new java.lang.Class[] { wildcardClass14, wildcardClass21 };
        enhancer4.setInterfaces(classArray22);
        enhancer0.setInterfaces(classArray22);
        org.mockito.cglib.proxy.Callback callback25 = null;
        enhancer0.setCallback(callback25);
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = enhancer0.getNamingPolicy();
        java.lang.Class[] classArray28 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.setCallbackTypes(classArray28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str15, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(classArray22);
        org.junit.Assert.assertNotNull(namingPolicy27);
    }

    @Test
    public void test21828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21828");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        boolean boolean5 = enhancer0.getAttemptLoad();
        java.lang.Class class6 = null;
        enhancer0.setSuperclass(class6);
        java.lang.ClassLoader classLoader8 = enhancer0.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy9 = enhancer0.getNamingPolicy();
        enhancer0.setUseCache(true);
        boolean boolean12 = enhancer0.getAttemptLoad();
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = null;
        enhancer15.setNamingPolicy(namingPolicy16);
        java.lang.ClassLoader classLoader18 = null;
        enhancer15.setClassLoader(classLoader18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = null;
        enhancer20.setNamingPolicy(namingPolicy21);
        java.lang.ClassLoader classLoader23 = null;
        enhancer20.setClassLoader(classLoader23);
        java.lang.Class<?> wildcardClass25 = enhancer20.getClass();
        java.lang.String str26 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass25);
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = null;
        enhancer27.setNamingPolicy(namingPolicy28);
        java.lang.ClassLoader classLoader30 = null;
        enhancer27.setClassLoader(classLoader30);
        java.lang.Class<?> wildcardClass32 = enhancer27.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[] { wildcardClass25, wildcardClass32 };
        enhancer15.setInterfaces(classArray33);
        boolean boolean35 = enhancer15.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy37 = null;
        enhancer36.setNamingPolicy(namingPolicy37);
        java.lang.ClassLoader classLoader39 = null;
        enhancer36.setClassLoader(classLoader39);
        java.lang.Class<?> wildcardClass41 = enhancer36.getClass();
        enhancer15.setSuperclass((java.lang.Class) wildcardClass41);
        org.mockito.cglib.core.NamingPolicy namingPolicy43 = enhancer15.getNamingPolicy();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getType("Lorg/mockito/cglib/proxy/Enhancer;");
        java.lang.Class<?> wildcardClass46 = type45.getClass();
        enhancer15.setSuperclass((java.lang.Class) wildcardClass46);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass46);
        enhancer0.setUseFactory(true);
        boolean boolean51 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer52 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy53 = null;
        enhancer52.setNamingPolicy(namingPolicy53);
        java.lang.ClassLoader classLoader55 = null;
        enhancer52.setClassLoader(classLoader55);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter57 = null;
        enhancer52.setCallbackFilter(callbackFilter57);
        org.mockito.cglib.proxy.Callback callback59 = null;
        enhancer52.setCallback(callback59);
        java.lang.ClassLoader classLoader61 = null;
        enhancer52.setClassLoader(classLoader61);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy63 = null;
        enhancer52.setStrategy(generatorStrategy63);
        org.mockito.cglib.core.NamingPolicy namingPolicy65 = enhancer52.getNamingPolicy();
        boolean boolean66 = enhancer52.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy67 = enhancer52.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy67);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter69 = null;
        enhancer0.setCallbackFilter(callbackFilter69);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(namingPolicy9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str26, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(namingPolicy43);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(namingPolicy65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(namingPolicy67);
    }

    @Test
    public void test21829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21829");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        enhancer0.setUseFactory(true);
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy12 = null;
        enhancer11.setNamingPolicy(namingPolicy12);
        java.lang.ClassLoader classLoader14 = null;
        enhancer11.setClassLoader(classLoader14);
        java.lang.Class<?> wildcardClass16 = enhancer11.getClass();
        java.lang.String str17 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass16);
        boolean boolean18 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass16);
        boolean boolean20 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass16);
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        boolean boolean23 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.Class[] classArray24 = new java.lang.Class[] { wildcardClass16 };
        enhancer0.setInterfaces(classArray24);
        java.lang.Class<?> wildcardClass26 = enhancer0.getClass();
        java.lang.String str27 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass26);
        java.lang.String str28 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass26);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass26);
        java.lang.Class[] classArray30 = null;
        java.util.List list31 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.proxy.Enhancer.getMethods((java.lang.Class) wildcardClass26, classArray30, list31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str17, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(classArray24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str27, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str28, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type29);
    }

    @Test
    public void test21830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21830");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassInfo classInfo2 = classEmitter1.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor3 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter(classVisitor3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter(classVisitor3);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassInfo classInfo7 = classEmitter5.getClassInfo();
        classEmitter1.setTarget((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter9);
        org.mockito.cglib.core.ClassInfo classInfo11 = classEmitter10.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor12 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter(classVisitor12);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter(classVisitor12);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassInfo classInfo16 = classEmitter14.getClassInfo();
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classEmitter14);
        classEmitter1.setTarget((org.mockito.asm.ClassVisitor) classEmitter10);
        org.mockito.cglib.core.ClassInfo classInfo19 = classEmitter10.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        org.junit.Assert.assertNull(classInfo2);
        org.junit.Assert.assertNull(classInfo7);
        org.junit.Assert.assertNull(classInfo11);
        org.junit.Assert.assertNull(classInfo16);
        org.junit.Assert.assertNull(classInfo19);
    }

    @Test
    public void test21831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21831");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter13 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter12);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy15 = null;
        enhancer14.setNamingPolicy(namingPolicy15);
        java.lang.ClassLoader classLoader17 = null;
        enhancer14.setClassLoader(classLoader17);
        org.mockito.cglib.proxy.Enhancer enhancer19 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy20 = null;
        enhancer19.setNamingPolicy(namingPolicy20);
        java.lang.ClassLoader classLoader22 = null;
        enhancer19.setClassLoader(classLoader22);
        java.lang.Class<?> wildcardClass24 = enhancer19.getClass();
        java.lang.String str25 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass24);
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = null;
        enhancer26.setNamingPolicy(namingPolicy27);
        java.lang.ClassLoader classLoader29 = null;
        enhancer26.setClassLoader(classLoader29);
        java.lang.Class<?> wildcardClass31 = enhancer26.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[] { wildcardClass24, wildcardClass31 };
        enhancer14.setInterfaces(classArray32);
        boolean boolean34 = enhancer14.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = null;
        enhancer35.setNamingPolicy(namingPolicy36);
        java.lang.ClassLoader classLoader38 = null;
        enhancer35.setClassLoader(classLoader38);
        java.lang.Class<?> wildcardClass40 = enhancer35.getClass();
        enhancer14.setSuperclass((java.lang.Class) wildcardClass40);
        boolean boolean42 = enhancer14.getUseCache();
        enhancer14.setUseFactory(true);
        enhancer14.setSerialVersionUID((java.lang.Long) 10L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter47 = null;
        enhancer14.setCallbackFilter(callbackFilter47);
        boolean boolean49 = enhancer14.getAttemptLoad();
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter12.visitLdcInsn((java.lang.Object) enhancer14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str25, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test21832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21832");
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor1);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter(classVisitor1);
        org.mockito.cglib.core.ClassInfo classInfo4 = classEmitter3.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter3);
        java.lang.Class<?> wildcardClass6 = classEmitter5.getClass();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        int int8 = type7.getSize();
        java.lang.String str9 = type7.getDescriptor();
        org.mockito.asm.Type[] typeArray11 = org.mockito.asm.Type.getArgumentTypes("()B");
        org.mockito.cglib.core.Signature signature12 = new org.mockito.cglib.core.Signature("L1402297421", type7, typeArray11);
        java.lang.String str13 = type7.toString();
        java.lang.String str14 = type7.getClassName();
        java.lang.String str15 = type7.getDescriptor();
        org.junit.Assert.assertNull(classInfo4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Lorg/mockito/cglib/core/ClassEmitter;" + "'", str9, "Lorg/mockito/cglib/core/ClassEmitter;");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Lorg/mockito/cglib/core/ClassEmitter;" + "'", str13, "Lorg/mockito/cglib/core/ClassEmitter;");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.mockito.cglib.core.ClassEmitter" + "'", str14, "org.mockito.cglib.core.ClassEmitter");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Lorg/mockito/cglib/core/ClassEmitter;" + "'", str15, "Lorg/mockito/cglib/core/ClassEmitter;");
    }

    @Test
    public void test21833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21833");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getObjectType("byte");
        label0.info = "byte";
        java.lang.String str4 = label0.toString();
        org.mockito.asm.MethodVisitor methodVisitor9 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter10);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        label0.info = localVariablesSorter11;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter14 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.AnnotationVisitor annotationVisitor18 = localVariablesSorter14.visitParameterAnnotation(157, "L600846714", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type2);
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L130114819" + "'", str4, "L130114819");
    }

    @Test
    public void test21834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21834");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassInfo classInfo8 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter9.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter9);
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter12);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type14 = classEmitter13.getClassType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo8);
        org.junit.Assert.assertNull(classInfo10);
    }

    @Test
    public void test21835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21835");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter6.visitInnerClass("L1110503322", "", "L1843911192", 111);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21836");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        enhancer0.setUseFactory(true);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy9 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy10 = enhancer0.getNamingPolicy();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.getObjectType("byte");
        int int13 = type12.getSize();
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy15 = null;
        enhancer14.setNamingPolicy(namingPolicy15);
        java.lang.ClassLoader classLoader17 = null;
        enhancer14.setClassLoader(classLoader17);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter19 = null;
        enhancer14.setCallbackFilter(callbackFilter19);
        org.mockito.cglib.proxy.Callback callback21 = null;
        enhancer14.setCallback(callback21);
        enhancer14.setUseCache(false);
        boolean boolean25 = type12.equals((java.lang.Object) enhancer14);
        int int26 = type12.getDimensions();
        java.lang.Class<?> wildcardClass27 = type12.getClass();
        java.lang.String str28 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass27);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass27);
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = null;
        enhancer30.setNamingPolicy(namingPolicy31);
        java.lang.ClassLoader classLoader33 = null;
        enhancer30.setClassLoader(classLoader33);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter35 = null;
        enhancer30.setCallbackFilter(callbackFilter35);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy38 = null;
        enhancer37.setNamingPolicy(namingPolicy38);
        java.lang.ClassLoader classLoader40 = null;
        enhancer37.setClassLoader(classLoader40);
        boolean boolean42 = enhancer37.getAttemptLoad();
        java.lang.Class class43 = null;
        enhancer37.setSuperclass(class43);
        org.mockito.cglib.core.NamingPolicy namingPolicy45 = enhancer37.getNamingPolicy();
        enhancer30.setNamingPolicy(namingPolicy45);
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy48 = null;
        enhancer47.setNamingPolicy(namingPolicy48);
        java.lang.ClassLoader classLoader50 = null;
        enhancer47.setClassLoader(classLoader50);
        org.mockito.cglib.proxy.Enhancer enhancer52 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy53 = null;
        enhancer52.setNamingPolicy(namingPolicy53);
        java.lang.ClassLoader classLoader55 = null;
        enhancer52.setClassLoader(classLoader55);
        java.lang.Class<?> wildcardClass57 = enhancer52.getClass();
        java.lang.String str58 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass57);
        org.mockito.cglib.proxy.Enhancer enhancer59 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy60 = null;
        enhancer59.setNamingPolicy(namingPolicy60);
        java.lang.ClassLoader classLoader62 = null;
        enhancer59.setClassLoader(classLoader62);
        java.lang.Class<?> wildcardClass64 = enhancer59.getClass();
        java.lang.Class[] classArray65 = new java.lang.Class[] { wildcardClass57, wildcardClass64 };
        enhancer47.setInterfaces(classArray65);
        boolean boolean67 = enhancer47.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer68 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy69 = null;
        enhancer68.setNamingPolicy(namingPolicy69);
        java.lang.ClassLoader classLoader71 = null;
        enhancer68.setClassLoader(classLoader71);
        java.lang.Class<?> wildcardClass73 = enhancer68.getClass();
        enhancer47.setSuperclass((java.lang.Class) wildcardClass73);
        java.lang.Class[] classArray75 = new java.lang.Class[] { wildcardClass73 };
        enhancer30.setInterfaces(classArray75);
        java.util.List list77 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.proxy.Enhancer.getMethods((java.lang.Class) wildcardClass27, classArray75, list77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy9);
        org.junit.Assert.assertNotNull(namingPolicy10);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org/mockito/asm/Type" + "'", str28, "org/mockito/asm/Type");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(namingPolicy45);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str58, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(classArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(classArray75);
    }

    @Test
    public void test21837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21837");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        boolean boolean5 = enhancer0.getAttemptLoad();
        enhancer0.setUseCache(true);
        java.lang.ClassLoader classLoader8 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Callback callback9 = null;
        enhancer0.setCallback(callback9);
        boolean boolean11 = enhancer0.getUseCache();
        enhancer0.setUseFactory(true);
        boolean boolean14 = enhancer0.getUseCache();
        boolean boolean15 = enhancer0.getAttemptLoad();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class16 = enhancer0.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: createClass does not accept callbacks");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test21838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21838");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter5.visitIincInsn(106, 148);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21839");
        org.mockito.asm.MethodVisitor methodVisitor10 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor10);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter11);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter13 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter14 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter15 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter16 = new org.mockito.cglib.core.LocalVariablesSorter(102, "()Lorg/mockito/cglib/proxy/Enhancer;", (org.mockito.asm.MethodVisitor) localVariablesSorter11);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter17 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter16);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter18 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter17);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter19 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter17);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter20 = new org.mockito.cglib.core.LocalVariablesSorter(161, "()L()Lorg/mockito/cglib/core/ClassEmitter;;", (org.mockito.asm.MethodVisitor) localVariablesSorter17);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter21 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter17);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter22 = new org.mockito.cglib.core.LocalVariablesSorter(0, "(CBBBD)J", (org.mockito.asm.MethodVisitor) localVariablesSorter17);
        org.mockito.asm.Label label23 = new org.mockito.asm.Label();
        java.lang.Object obj24 = label23.info;
        java.lang.String str25 = label23.toString();
        java.lang.String str26 = label23.toString();
        java.lang.Object obj27 = label23.info;
        java.lang.Object obj28 = label23.info;
        label23.info = "()B";
        java.lang.Object obj31 = label23.info;
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy33 = null;
        enhancer32.setNamingPolicy(namingPolicy33);
        java.lang.ClassLoader classLoader35 = null;
        enhancer32.setClassLoader(classLoader35);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy38 = null;
        enhancer37.setNamingPolicy(namingPolicy38);
        java.lang.ClassLoader classLoader40 = null;
        enhancer37.setClassLoader(classLoader40);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter42 = null;
        enhancer37.setCallbackFilter(callbackFilter42);
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy45 = null;
        enhancer44.setNamingPolicy(namingPolicy45);
        java.lang.ClassLoader classLoader47 = null;
        enhancer44.setClassLoader(classLoader47);
        boolean boolean49 = enhancer44.getAttemptLoad();
        java.lang.Class class50 = null;
        enhancer44.setSuperclass(class50);
        org.mockito.cglib.core.NamingPolicy namingPolicy52 = enhancer44.getNamingPolicy();
        enhancer37.setNamingPolicy(namingPolicy52);
        enhancer32.setNamingPolicy(namingPolicy52);
        label23.info = enhancer32;
        org.mockito.cglib.proxy.Enhancer enhancer56 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy57 = null;
        enhancer56.setNamingPolicy(namingPolicy57);
        java.lang.ClassLoader classLoader59 = null;
        enhancer56.setClassLoader(classLoader59);
        boolean boolean61 = enhancer56.getAttemptLoad();
        boolean boolean62 = enhancer56.getUseCache();
        boolean boolean63 = enhancer56.getAttemptLoad();
        enhancer56.setAttemptLoad(true);
        label23.info = enhancer56;
        org.mockito.cglib.proxy.Enhancer enhancer68 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy69 = null;
        enhancer68.setNamingPolicy(namingPolicy69);
        java.lang.ClassLoader classLoader71 = null;
        enhancer68.setClassLoader(classLoader71);
        java.lang.Class<?> wildcardClass73 = enhancer68.getClass();
        java.lang.String str74 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass73);
        boolean boolean75 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass73);
        org.mockito.asm.Type type76 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass73);
        int int78 = type76.getOpcode(128);
        org.mockito.cglib.core.Local local79 = new org.mockito.cglib.core.Local(108, type76);
        org.mockito.asm.Type type80 = local79.getType();
        label23.info = type80;
        java.lang.String str82 = label23.toString();
        java.lang.Object obj83 = null;
        label23.info = obj83;
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter22.visitLabel(label23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj24);
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "L418226499" + "'", str25, "L418226499");
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L418226499" + "'", str26, "L418226499");
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "()B" + "'", obj31, "()B");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(namingPolicy52);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str74, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 132 + "'", int78 == 132);
        org.junit.Assert.assertNotNull(type80);
// flaky:         org.junit.Assert.assertEquals("'" + str82 + "' != '" + "L418226499" + "'", str82, "L418226499");
    }

    @Test
    public void test21840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21840");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        java.lang.Class<?> wildcardClass5 = classEmitter4.getClass();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy9 = null;
        enhancer8.setNamingPolicy(namingPolicy9);
        java.lang.ClassLoader classLoader11 = null;
        enhancer8.setClassLoader(classLoader11);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = null;
        enhancer13.setNamingPolicy(namingPolicy14);
        java.lang.ClassLoader classLoader16 = null;
        enhancer13.setClassLoader(classLoader16);
        java.lang.Class<?> wildcardClass18 = enhancer13.getClass();
        java.lang.String str19 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = null;
        enhancer20.setNamingPolicy(namingPolicy21);
        java.lang.ClassLoader classLoader23 = null;
        enhancer20.setClassLoader(classLoader23);
        java.lang.Class<?> wildcardClass25 = enhancer20.getClass();
        java.lang.Class[] classArray26 = new java.lang.Class[] { wildcardClass18, wildcardClass25 };
        enhancer8.setInterfaces(classArray26);
        boolean boolean28 = enhancer8.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy30 = null;
        enhancer29.setNamingPolicy(namingPolicy30);
        java.lang.ClassLoader classLoader32 = null;
        enhancer29.setClassLoader(classLoader32);
        java.lang.Class<?> wildcardClass34 = enhancer29.getClass();
        enhancer8.setSuperclass((java.lang.Class) wildcardClass34);
        java.lang.ClassLoader classLoader36 = enhancer8.getClassLoader();
        java.lang.Class<?> wildcardClass37 = enhancer8.getClass();
        boolean boolean38 = type7.equals((java.lang.Object) wildcardClass37);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass37);
        boolean boolean40 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass37);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass37);
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy43 = null;
        enhancer42.setNamingPolicy(namingPolicy43);
        java.lang.ClassLoader classLoader45 = null;
        enhancer42.setClassLoader(classLoader45);
        boolean boolean47 = enhancer42.getAttemptLoad();
        java.lang.Class class48 = null;
        enhancer42.setSuperclass(class48);
        java.lang.ClassLoader classLoader50 = enhancer42.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy51 = enhancer42.getNamingPolicy();
        org.mockito.cglib.proxy.Callback callback52 = null;
        enhancer42.setCallback(callback52);
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = null;
        enhancer54.setNamingPolicy(namingPolicy55);
        java.lang.ClassLoader classLoader57 = null;
        enhancer54.setClassLoader(classLoader57);
        boolean boolean59 = enhancer54.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy60 = enhancer54.getNamingPolicy();
        org.mockito.cglib.proxy.Callback callback61 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray62 = new org.mockito.cglib.proxy.Callback[] { callback61 };
        enhancer54.setCallbacks(callbackArray62);
        org.mockito.cglib.proxy.Enhancer enhancer64 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy65 = null;
        enhancer64.setNamingPolicy(namingPolicy65);
        java.lang.ClassLoader classLoader67 = null;
        enhancer64.setClassLoader(classLoader67);
        boolean boolean69 = enhancer64.getAttemptLoad();
        java.lang.Class class70 = null;
        enhancer64.setSuperclass(class70);
        java.lang.ClassLoader classLoader72 = enhancer64.getClassLoader();
        enhancer64.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy75 = enhancer64.getStrategy();
        enhancer54.setStrategy(generatorStrategy75);
        enhancer42.setStrategy(generatorStrategy75);
        enhancer42.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Enhancer enhancer80 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy81 = null;
        enhancer80.setNamingPolicy(namingPolicy81);
        java.lang.ClassLoader classLoader83 = null;
        enhancer80.setClassLoader(classLoader83);
        boolean boolean85 = enhancer80.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy86 = enhancer80.getNamingPolicy();
        org.mockito.cglib.proxy.Callback callback87 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray88 = new org.mockito.cglib.proxy.Callback[] { callback87 };
        enhancer80.setCallbacks(callbackArray88);
        enhancer42.setCallbacks(callbackArray88);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.proxy.Enhancer.registerCallbacks((java.lang.Class) wildcardClass37, callbackArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class org.mockito.cglib.proxy.Enhancer is not an enhanced class");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str19, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(classLoader36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(classLoader50);
        org.junit.Assert.assertNotNull(namingPolicy51);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(namingPolicy60);
        org.junit.Assert.assertNotNull(callbackArray62);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(classLoader72);
        org.junit.Assert.assertNotNull(generatorStrategy75);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(namingPolicy86);
        org.junit.Assert.assertNotNull(callbackArray88);
    }

    @Test
    public void test21841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21841");
        org.mockito.cglib.proxy.Enhancer enhancer1 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy2 = null;
        enhancer1.setNamingPolicy(namingPolicy2);
        java.lang.ClassLoader classLoader4 = null;
        enhancer1.setClassLoader(classLoader4);
        enhancer1.setUseFactory(true);
        enhancer1.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy10 = enhancer1.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy11 = enhancer1.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy12 = enhancer1.getNamingPolicy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter13 = null;
        enhancer1.setCallbackFilter(callbackFilter13);
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = null;
        enhancer15.setNamingPolicy(namingPolicy16);
        java.lang.ClassLoader classLoader18 = null;
        enhancer15.setClassLoader(classLoader18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = null;
        enhancer20.setNamingPolicy(namingPolicy21);
        java.lang.ClassLoader classLoader23 = null;
        enhancer20.setClassLoader(classLoader23);
        java.lang.Class<?> wildcardClass25 = enhancer20.getClass();
        java.lang.String str26 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass25);
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = null;
        enhancer27.setNamingPolicy(namingPolicy28);
        java.lang.ClassLoader classLoader30 = null;
        enhancer27.setClassLoader(classLoader30);
        java.lang.Class<?> wildcardClass32 = enhancer27.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[] { wildcardClass25, wildcardClass32 };
        enhancer15.setInterfaces(classArray33);
        boolean boolean35 = enhancer15.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy37 = null;
        enhancer36.setNamingPolicy(namingPolicy37);
        java.lang.ClassLoader classLoader39 = null;
        enhancer36.setClassLoader(classLoader39);
        java.lang.Class<?> wildcardClass41 = enhancer36.getClass();
        enhancer15.setSuperclass((java.lang.Class) wildcardClass41);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass41);
        java.lang.String str44 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass41);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass41);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass41);
        boolean boolean47 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass41);
        enhancer1.setSuperclass((java.lang.Class) wildcardClass41);
        java.lang.String str49 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass41);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass41);
        java.lang.String str51 = type50.toString();
        org.mockito.cglib.core.Local local52 = new org.mockito.cglib.core.Local(105, type50);
        org.junit.Assert.assertNotNull(namingPolicy10);
        org.junit.Assert.assertNotNull(namingPolicy11);
        org.junit.Assert.assertNotNull(namingPolicy12);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str26, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str44, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str49, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str51, "Lorg/mockito/cglib/proxy/Enhancer;");
    }

    @Test
    public void test21842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21842");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(56, "()Lorg/mockito/cglib/core/ClassEmitter;", (org.mockito.asm.MethodVisitor) localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.getObjectType("org.mockito.cglib.proxy.Enhancer()Lg/mockito/cglib/proxy/Enhancer;");
        java.lang.String str12 = type11.toString();
        org.mockito.asm.Type type13 = type11.getElementType();
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter9.visitLdcInsn((java.lang.Object) type13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Lorg.mockito.cglib.proxy.Enhancer()Lg/mockito/cglib/proxy/Enhancer;;" + "'", str12, "Lorg.mockito.cglib.proxy.Enhancer()Lg/mockito/cglib/proxy/Enhancer;;");
        org.junit.Assert.assertNotNull(type13);
    }

    @Test
    public void test21843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21843");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo4 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo5 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter6);
        java.lang.String[] strArray17 = new java.lang.String[] { "V()Lorg/mockito/cglib/core/ClassEmitter;", "L1532800518", "L609610250(CBBBD)I", "L1696440625" };
        // The following exception was thrown during execution in test generation
        try {
            classEmitter7.visit((int) ' ', (int) (byte) 0, "L220469390", "L162426616", "L705590701", strArray17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo4);
        org.junit.Assert.assertNull(classInfo5);
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test21844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21844");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter3);
        org.mockito.asm.ClassVisitor classVisitor5 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter(classVisitor5);
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter(classVisitor5);
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter9);
        classEmitter4.setTarget((org.mockito.asm.ClassVisitor) classEmitter9);
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter4.getClassInfo();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type13 = classEmitter4.getSuperType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo12);
    }

    @Test
    public void test21845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21845");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        java.lang.ClassLoader classLoader9 = null;
        enhancer0.setClassLoader(classLoader9);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = null;
        enhancer0.setStrategy(generatorStrategy11);
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Callback callback15 = null;
        enhancer0.setCallback(callback15);
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy18 = null;
        enhancer17.setNamingPolicy(namingPolicy18);
        java.lang.ClassLoader classLoader20 = null;
        enhancer17.setClassLoader(classLoader20);
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = null;
        enhancer22.setNamingPolicy(namingPolicy23);
        java.lang.ClassLoader classLoader25 = null;
        enhancer22.setClassLoader(classLoader25);
        java.lang.Class<?> wildcardClass27 = enhancer22.getClass();
        java.lang.String str28 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass27);
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy30 = null;
        enhancer29.setNamingPolicy(namingPolicy30);
        java.lang.ClassLoader classLoader32 = null;
        enhancer29.setClassLoader(classLoader32);
        java.lang.Class<?> wildcardClass34 = enhancer29.getClass();
        java.lang.Class[] classArray35 = new java.lang.Class[] { wildcardClass27, wildcardClass34 };
        enhancer17.setInterfaces(classArray35);
        boolean boolean37 = enhancer17.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy39 = null;
        enhancer38.setNamingPolicy(namingPolicy39);
        java.lang.ClassLoader classLoader41 = null;
        enhancer38.setClassLoader(classLoader41);
        java.lang.Class<?> wildcardClass43 = enhancer38.getClass();
        enhancer17.setSuperclass((java.lang.Class) wildcardClass43);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass43);
        java.lang.String str46 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass43);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass43);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass43);
        java.lang.String str49 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass43);
        java.lang.String str50 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass43);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass43);
        org.mockito.cglib.proxy.Enhancer enhancer52 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy53 = null;
        enhancer52.setNamingPolicy(namingPolicy53);
        java.lang.ClassLoader classLoader55 = null;
        enhancer52.setClassLoader(classLoader55);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter57 = null;
        enhancer52.setCallbackFilter(callbackFilter57);
        enhancer52.setUseCache(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy61 = enhancer52.getNamingPolicy();
        enhancer52.setAttemptLoad(false);
        enhancer52.setUseCache(false);
        java.lang.ClassLoader classLoader66 = enhancer52.getClassLoader();
        enhancer0.setClassLoader(classLoader66);
        org.mockito.cglib.proxy.Callback callback68 = null;
        enhancer0.setCallback(callback68);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj70 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy13);
        org.junit.Assert.assertNotNull(namingPolicy14);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str28, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str46, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str49, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str50, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(namingPolicy61);
        org.junit.Assert.assertNotNull(classLoader66);
    }

    @Test
    public void test21846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21846");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.asm.ClassVisitor classVisitor6 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassInfo classInfo9 = classEmitter8.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter8.getClassInfo();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.asm.ClassVisitor classVisitor12 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter(classVisitor12);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter(classVisitor12);
        org.mockito.cglib.core.ClassInfo classInfo15 = classEmitter14.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.asm.ClassVisitor classVisitor18 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter(classVisitor18);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter(classVisitor18);
        org.mockito.cglib.core.ClassInfo classInfo21 = classEmitter20.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter22);
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter22);
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter17);
        classEmitter8.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter8);
        java.lang.String[] strArray38 = new java.lang.String[] { "L455995917", "L951325639", "L1887820774L1176429447", "L1741972438", "L1108529292()Lbyte;", "L972502180" };
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.MethodVisitor methodVisitor39 = classEmitter8.visitMethod(110, "L1944890912", "L1819869937", "L2134129320", strArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: classInfo is null! org.mockito.cglib.core.ClassEmitter@1124cde2");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo9);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo15);
        org.junit.Assert.assertNull(classInfo21);
        org.junit.Assert.assertNotNull(strArray38);
    }

    @Test
    public void test21847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21847");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.asm.ClassVisitor classVisitor6 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassInfo classInfo9 = classEmitter8.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter10);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter17);
        // The following exception was thrown during execution in test generation
        try {
            int int19 = classEmitter17.getAccess();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo9);
    }

    @Test
    public void test21848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21848");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        enhancer0.setUseFactory(true);
        boolean boolean7 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.Callback callback8 = null;
        enhancer0.setCallback(callback8);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy10 = enhancer0.getStrategy();
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.core.Signature signature15 = new org.mockito.cglib.core.Signature("L842693193L1804543443", "L1804543443");
        java.lang.Class<?> wildcardClass16 = signature15.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(generatorStrategy10);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test21849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21849");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.Signature signature10 = new org.mockito.cglib.core.Signature("hi!", "B");
        java.lang.String str11 = signature10.toString();
        org.mockito.asm.ClassVisitor classVisitor12 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter(classVisitor12);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter(classVisitor12);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter15);
        boolean boolean17 = signature10.equals((java.lang.Object) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.asm.ClassVisitor classVisitor19 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter(classVisitor19);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter(classVisitor19);
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter24);
        classEmitter21.setTarget((org.mockito.asm.ClassVisitor) classEmitter25);
        org.mockito.asm.ClassVisitor classVisitor27 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter(classVisitor27);
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter(classVisitor27);
        org.mockito.cglib.core.ClassInfo classInfo30 = classEmitter29.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter31);
        org.mockito.asm.ClassVisitor classVisitor33 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter(classVisitor33);
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter(classVisitor33);
        org.mockito.cglib.core.ClassInfo classInfo36 = classEmitter35.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo37 = classEmitter35.getClassInfo();
        classEmitter32.setTarget((org.mockito.asm.ClassVisitor) classEmitter35);
        classEmitter25.setTarget((org.mockito.asm.ClassVisitor) classEmitter35);
        org.mockito.cglib.core.ClassInfo classInfo40 = classEmitter35.getClassInfo();
        classEmitter16.setTarget((org.mockito.asm.ClassVisitor) classEmitter35);
        org.mockito.asm.ClassVisitor classVisitor42 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter43 = new org.mockito.cglib.core.ClassEmitter(classVisitor42);
        org.mockito.asm.ClassVisitor classVisitor44 = null;
        classEmitter43.setTarget(classVisitor44);
        org.mockito.cglib.core.ClassEmitter classEmitter46 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter43);
        classEmitter35.setTarget((org.mockito.asm.ClassVisitor) classEmitter46);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter35);
        org.mockito.cglib.core.ClassEmitter classEmitter49 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.core.CodeEmitter codeEmitter50 = classEmitter5.begin_static();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: classInfo is null! org.mockito.cglib.core.ClassEmitter@37849697");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!B" + "'", str11, "hi!B");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(classInfo30);
        org.junit.Assert.assertNull(classInfo36);
        org.junit.Assert.assertNull(classInfo37);
        org.junit.Assert.assertNull(classInfo40);
    }

    @Test
    public void test21850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21850");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        boolean boolean5 = enhancer0.getAttemptLoad();
        boolean boolean6 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        boolean boolean9 = enhancer0.getUseCache();
        enhancer0.setUseFactory(true);
        boolean boolean12 = enhancer0.getUseCache();
        enhancer0.setUseFactory(false);
        enhancer0.setUseCache(true);
        java.lang.ClassLoader classLoader17 = null;
        enhancer0.setClassLoader(classLoader17);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter19 = null;
        enhancer0.setCallbackFilter(callbackFilter19);
        enhancer0.setAttemptLoad(true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test21851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21851");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassInfo classInfo2 = classEmitter1.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor3 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter(classVisitor3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter(classVisitor3);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassInfo classInfo7 = classEmitter5.getClassInfo();
        classEmitter1.setTarget((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.asm.ClassVisitor classVisitor9 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter(classVisitor9);
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter(classVisitor9);
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor15 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter(classVisitor15);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter(classVisitor15);
        classEmitter14.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter19);
        org.mockito.cglib.core.ClassInfo classInfo21 = classEmitter20.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor22 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter(classVisitor22);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter(classVisitor22);
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter24);
        org.mockito.cglib.core.ClassInfo classInfo26 = classEmitter24.getClassInfo();
        classEmitter20.setTarget((org.mockito.asm.ClassVisitor) classEmitter24);
        classEmitter14.setTarget((org.mockito.asm.ClassVisitor) classEmitter24);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.asm.Attribute attribute30 = null;
        // The following exception was thrown during execution in test generation
        try {
            classEmitter14.visitAttribute(attribute30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo2);
        org.junit.Assert.assertNull(classInfo7);
        org.junit.Assert.assertNull(classInfo21);
        org.junit.Assert.assertNull(classInfo26);
    }

    @Test
    public void test21852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21852");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        boolean boolean3 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy5 = null;
        enhancer4.setNamingPolicy(namingPolicy5);
        java.lang.ClassLoader classLoader7 = null;
        enhancer4.setClassLoader(classLoader7);
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy10 = null;
        enhancer9.setNamingPolicy(namingPolicy10);
        java.lang.ClassLoader classLoader12 = null;
        enhancer9.setClassLoader(classLoader12);
        java.lang.Class<?> wildcardClass14 = enhancer9.getClass();
        java.lang.String str15 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass14);
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy17 = null;
        enhancer16.setNamingPolicy(namingPolicy17);
        java.lang.ClassLoader classLoader19 = null;
        enhancer16.setClassLoader(classLoader19);
        java.lang.Class<?> wildcardClass21 = enhancer16.getClass();
        java.lang.Class[] classArray22 = new java.lang.Class[] { wildcardClass14, wildcardClass21 };
        enhancer4.setInterfaces(classArray22);
        enhancer0.setInterfaces(classArray22);
        org.mockito.cglib.proxy.Callback callback25 = null;
        enhancer0.setCallback(callback25);
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = null;
        enhancer27.setNamingPolicy(namingPolicy28);
        java.lang.ClassLoader classLoader30 = null;
        enhancer27.setClassLoader(classLoader30);
        boolean boolean32 = enhancer27.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy33 = enhancer27.getNamingPolicy();
        boolean boolean34 = enhancer27.getAttemptLoad();
        enhancer27.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy38 = null;
        enhancer37.setNamingPolicy(namingPolicy38);
        java.lang.ClassLoader classLoader40 = null;
        enhancer37.setClassLoader(classLoader40);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter42 = null;
        enhancer37.setCallbackFilter(callbackFilter42);
        org.mockito.cglib.proxy.Callback callback44 = null;
        enhancer37.setCallback(callback44);
        org.mockito.cglib.core.NamingPolicy namingPolicy46 = enhancer37.getNamingPolicy();
        enhancer27.setNamingPolicy(namingPolicy46);
        enhancer0.setNamingPolicy(namingPolicy46);
        enhancer0.setUseCache(true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class51 = enhancer0.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: createClass does not accept callbacks");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str15, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(classArray22);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(namingPolicy33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(namingPolicy46);
    }

    @Test
    public void test21853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21853");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        boolean boolean5 = enhancer0.getAttemptLoad();
        java.lang.Class class6 = null;
        enhancer0.setSuperclass(class6);
        java.lang.ClassLoader classLoader8 = enhancer0.getClassLoader();
        boolean boolean9 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy11 = null;
        enhancer10.setNamingPolicy(namingPolicy11);
        java.lang.ClassLoader classLoader13 = null;
        enhancer10.setClassLoader(classLoader13);
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = null;
        enhancer15.setNamingPolicy(namingPolicy16);
        java.lang.ClassLoader classLoader18 = null;
        enhancer15.setClassLoader(classLoader18);
        java.lang.Class<?> wildcardClass20 = enhancer15.getClass();
        java.lang.String str21 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass20);
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = null;
        enhancer22.setNamingPolicy(namingPolicy23);
        java.lang.ClassLoader classLoader25 = null;
        enhancer22.setClassLoader(classLoader25);
        java.lang.Class<?> wildcardClass27 = enhancer22.getClass();
        java.lang.Class[] classArray28 = new java.lang.Class[] { wildcardClass20, wildcardClass27 };
        enhancer10.setInterfaces(classArray28);
        boolean boolean30 = enhancer10.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy32 = null;
        enhancer31.setNamingPolicy(namingPolicy32);
        java.lang.ClassLoader classLoader34 = null;
        enhancer31.setClassLoader(classLoader34);
        java.lang.Class<?> wildcardClass36 = enhancer31.getClass();
        enhancer10.setSuperclass((java.lang.Class) wildcardClass36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass36);
        java.lang.String str39 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass36);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass36);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass36);
        org.mockito.cglib.core.NamingPolicy namingPolicy42 = enhancer0.getNamingPolicy();
        enhancer0.setUseFactory(false);
        enhancer0.setUseCache(true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str21, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(classArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str39, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(namingPolicy42);
    }

    @Test
    public void test21854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21854");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str2 = type1.getDescriptor();
        org.mockito.cglib.core.Local local3 = new org.mockito.cglib.core.Local(100, type1);
        org.mockito.asm.Type type4 = local3.getType();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
        org.junit.Assert.assertNotNull(type4);
    }

    @Test
    public void test21855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21855");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter3 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter12.visitTypeInsn(68, "LL1450796465;");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21856");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        enhancer0.setAttemptLoad(false);
        enhancer0.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy8 = null;
        enhancer7.setNamingPolicy(namingPolicy8);
        java.lang.ClassLoader classLoader10 = null;
        enhancer7.setClassLoader(classLoader10);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter12 = null;
        enhancer7.setCallbackFilter(callbackFilter12);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer7.setCallback(callback14);
        java.lang.ClassLoader classLoader16 = null;
        enhancer7.setClassLoader(classLoader16);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy18 = null;
        enhancer7.setStrategy(generatorStrategy18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = null;
        enhancer20.setNamingPolicy(namingPolicy21);
        java.lang.ClassLoader classLoader23 = null;
        enhancer20.setClassLoader(classLoader23);
        boolean boolean25 = enhancer20.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy26 = enhancer20.getStrategy();
        enhancer7.setStrategy(generatorStrategy26);
        enhancer7.setAttemptLoad(false);
        boolean boolean30 = enhancer7.getAttemptLoad();
        boolean boolean31 = enhancer7.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy32 = enhancer7.getStrategy();
        enhancer0.setStrategy(generatorStrategy32);
        java.lang.Class<?> wildcardClass34 = generatorStrategy32.getClass();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass34);
        int int36 = type35.getSort();
        java.lang.String str37 = type35.toString();
        java.lang.String str38 = type35.getDescriptor();
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(generatorStrategy26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(generatorStrategy32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 10 + "'", int36 == 10);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Lorg/mockito/cglib/core/DefaultGeneratorStrategy;" + "'", str37, "Lorg/mockito/cglib/core/DefaultGeneratorStrategy;");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Lorg/mockito/cglib/core/DefaultGeneratorStrategy;" + "'", str38, "Lorg/mockito/cglib/core/DefaultGeneratorStrategy;");
    }

    @Test
    public void test21857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21857");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.Object obj1 = label0.info;
        java.lang.String str2 = label0.toString();
        java.lang.String str3 = label0.toString();
        java.lang.String str4 = label0.toString();
        java.lang.Object obj5 = label0.info;
        java.lang.Object obj6 = label0.info;
        org.mockito.asm.Label label7 = new org.mockito.asm.Label();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type type10 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.cglib.core.Local local11 = new org.mockito.cglib.core.Local(124, type10);
        boolean boolean13 = type10.equals((java.lang.Object) 0);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.BYTE_TYPE;
        int int16 = type15.getSize();
        java.lang.String str17 = type15.getClassName();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type19 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type20 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type21 = org.mockito.asm.Type.BYTE_TYPE;
        int int22 = type21.getSize();
        java.lang.String str23 = type21.getClassName();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str25 = type24.getClassName();
        org.mockito.asm.Type[] typeArray26 = new org.mockito.asm.Type[] { type18, type19, type20, type21, type24 };
        org.mockito.cglib.core.Signature signature27 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type15, typeArray26);
        java.lang.String str28 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray26);
        java.lang.String str29 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray26);
        label7.info = type8;
        java.lang.Object obj31 = label7.info;
        org.mockito.cglib.core.Signature signature34 = new org.mockito.cglib.core.Signature("", "hi!");
        label7.info = signature34;
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy37 = null;
        enhancer36.setNamingPolicy(namingPolicy37);
        java.lang.ClassLoader classLoader39 = null;
        enhancer36.setClassLoader(classLoader39);
        enhancer36.setUseFactory(true);
        enhancer36.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter45 = null;
        enhancer36.setCallbackFilter(callbackFilter45);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter47 = null;
        enhancer36.setCallbackFilter(callbackFilter47);
        boolean boolean49 = signature34.equals((java.lang.Object) enhancer36);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter50 = null;
        enhancer36.setCallbackFilter(callbackFilter50);
        label0.info = enhancer36;
        // The following exception was thrown during execution in test generation
        try {
            int int53 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj1);
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "L1988981284" + "'", str2, "L1988981284");
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "L1988981284" + "'", str3, "L1988981284");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L1988981284" + "'", str4, "L1988981284");
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "byte" + "'", str17, "byte");
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "byte" + "'", str23, "byte");
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "double" + "'", str25, "double");
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(CBBBD)B" + "'", str28, "(CBBBD)B");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(CBBBD)I" + "'", str29, "(CBBBD)I");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "I");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "I");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "I");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test21858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21858");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        java.lang.ClassLoader classLoader9 = null;
        enhancer0.setClassLoader(classLoader9);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = null;
        enhancer0.setStrategy(generatorStrategy11);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = null;
        enhancer13.setNamingPolicy(namingPolicy14);
        java.lang.ClassLoader classLoader16 = null;
        enhancer13.setClassLoader(classLoader16);
        boolean boolean18 = enhancer13.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer13.getStrategy();
        enhancer0.setStrategy(generatorStrategy19);
        org.mockito.cglib.proxy.Callback callback21 = null;
        enhancer0.setCallback(callback21);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer0.getNamingPolicy();
        enhancer0.setInterceptDuringConstruction(false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertNotNull(namingPolicy23);
    }

    @Test
    public void test21859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21859");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.BYTE_TYPE;
        int int2 = type1.getSize();
        java.lang.String str3 = type1.getClassName();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type5 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type6 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type7 = org.mockito.asm.Type.BYTE_TYPE;
        int int8 = type7.getSize();
        java.lang.String str9 = type7.getClassName();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str11 = type10.getClassName();
        org.mockito.asm.Type[] typeArray12 = new org.mockito.asm.Type[] { type4, type5, type6, type7, type10 };
        org.mockito.cglib.core.Signature signature13 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type1, typeArray12);
        org.mockito.asm.Type[] typeArray14 = signature13.getArgumentTypes();
        java.lang.String str15 = signature13.toString();
        org.mockito.cglib.core.Signature signature18 = new org.mockito.cglib.core.Signature("byte", "()D");
        boolean boolean19 = signature13.equals((java.lang.Object) signature18);
        java.lang.String str20 = signature13.toString();
        java.lang.String str21 = signature13.toString();
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = null;
        enhancer22.setNamingPolicy(namingPolicy23);
        java.lang.ClassLoader classLoader25 = null;
        enhancer22.setClassLoader(classLoader25);
        java.lang.Class<?> wildcardClass27 = enhancer22.getClass();
        java.lang.String str28 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass27);
        boolean boolean29 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass27);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass27);
        boolean boolean31 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass27);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass27);
        boolean boolean33 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass27);
        boolean boolean34 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass27);
        boolean boolean35 = signature13.equals((java.lang.Object) wildcardClass27);
        boolean boolean36 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass27);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "byte" + "'", str3, "byte");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "byte" + "'", str9, "byte");
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "double" + "'", str11, "double");
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B" + "'", str15, "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B" + "'", str20, "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B" + "'", str21, "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B");
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str28, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test21860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21860");
        org.mockito.cglib.proxy.Enhancer enhancer2 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = null;
        enhancer2.setNamingPolicy(namingPolicy3);
        java.lang.ClassLoader classLoader5 = null;
        enhancer2.setClassLoader(classLoader5);
        java.lang.Class<?> wildcardClass7 = enhancer2.getClass();
        java.lang.String str8 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass7);
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass7);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass7);
        int int12 = type10.getOpcode(128);
        org.mockito.cglib.core.Local local13 = new org.mockito.cglib.core.Local(108, type10);
        org.mockito.asm.Type type14 = local13.getType();
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy18 = null;
        enhancer17.setNamingPolicy(namingPolicy18);
        java.lang.ClassLoader classLoader20 = null;
        enhancer17.setClassLoader(classLoader20);
        java.lang.Class<?> wildcardClass22 = enhancer17.getClass();
        java.lang.String str23 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass22);
        boolean boolean24 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass22);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass22);
        int int26 = type25.getSize();
        org.mockito.cglib.core.Local local27 = new org.mockito.cglib.core.Local(108, type25);
        java.lang.String str28 = type25.getDescriptor();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.getObjectType("byte");
        org.mockito.asm.Type type31 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray32 = new org.mockito.asm.Type[] {};
        java.lang.String str33 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray32);
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray32);
        org.mockito.cglib.core.Signature signature35 = new org.mockito.cglib.core.Signature("J", type25, typeArray32);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy38 = null;
        enhancer37.setNamingPolicy(namingPolicy38);
        java.lang.ClassLoader classLoader40 = null;
        enhancer37.setClassLoader(classLoader40);
        java.lang.Class<?> wildcardClass42 = enhancer37.getClass();
        java.lang.String str43 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass42);
        boolean boolean44 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass42);
        int int47 = type45.getOpcode(128);
        org.mockito.cglib.core.Local local48 = new org.mockito.cglib.core.Local(108, type45);
        org.mockito.asm.Type type49 = local48.getType();
        boolean boolean50 = type25.equals((java.lang.Object) type49);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type52 = org.mockito.asm.Type.BYTE_TYPE;
        boolean boolean54 = type52.equals((java.lang.Object) 9);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type57 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray58 = new org.mockito.asm.Type[] {};
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type57, typeArray58);
        org.mockito.cglib.core.Signature signature60 = new org.mockito.cglib.core.Signature("double", type56, typeArray58);
        java.lang.String str61 = org.mockito.asm.Type.getMethodDescriptor(type52, typeArray58);
        java.lang.String str62 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray58);
        java.lang.String str63 = org.mockito.asm.Type.getMethodDescriptor(type25, typeArray58);
        org.mockito.cglib.core.Signature signature64 = new org.mockito.cglib.core.Signature("L1144664822", type14, typeArray58);
        org.mockito.asm.Type[] typeArray65 = signature64.getArgumentTypes();
        org.mockito.asm.Type[] typeArray66 = signature64.getArgumentTypes();
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str8, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 132 + "'", int12 == 132);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str23, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str28, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "()D" + "'", str33, "()D");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "()Lbyte;" + "'", str34, "()Lbyte;");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str43, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 132 + "'", int47 == 132);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "()D" + "'", str59, "()D");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "()B" + "'", str61, "()B");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "()F" + "'", str62, "()F");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "()Lorg/mockito/cglib/proxy/Enhancer;" + "'", str63, "()Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertNotNull(typeArray66);
    }

    @Test
    public void test21861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21861");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer3 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy4 = null;
        enhancer3.setNamingPolicy(namingPolicy4);
        java.lang.ClassLoader classLoader6 = null;
        enhancer3.setClassLoader(classLoader6);
        java.lang.Class<?> wildcardClass8 = enhancer3.getClass();
        java.lang.String str9 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass8);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass8);
        enhancer0.setAttemptLoad(true);
        enhancer0.setInterceptDuringConstruction(true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str9, "Lorg/mockito/cglib/proxy/Enhancer;");
    }

    @Test
    public void test21862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21862");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        java.lang.ClassLoader classLoader9 = null;
        enhancer0.setClassLoader(classLoader9);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = null;
        enhancer13.setNamingPolicy(namingPolicy14);
        java.lang.ClassLoader classLoader16 = null;
        enhancer13.setClassLoader(classLoader16);
        boolean boolean18 = enhancer13.getAttemptLoad();
        enhancer13.setUseCache(true);
        java.lang.ClassLoader classLoader21 = enhancer13.getClassLoader();
        enhancer0.setClassLoader(classLoader21);
        boolean boolean23 = enhancer0.getUseCache();
        org.mockito.asm.ClassVisitor classVisitor24 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter(classVisitor24);
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter(classVisitor24);
        org.mockito.cglib.core.ClassInfo classInfo27 = classEmitter26.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter26);
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter28);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass((org.mockito.asm.ClassVisitor) classEmitter29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(classInfo27);
    }

    @Test
    public void test21863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21863");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("L2118404296");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21864");
        org.mockito.asm.MethodVisitor methodVisitor6 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter((int) (short) 1, "()I", (org.mockito.asm.MethodVisitor) localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter13 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter9.visitVarInsn(154, 139);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21865");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getType("Lorg.mockito.cglib.proxy.Enhancer;(CBBBD)B");
        int int4 = type2.getOpcode((int) (short) 0);
        org.mockito.cglib.core.Local local5 = new org.mockito.cglib.core.Local((int) (byte) -1, type2);
        org.mockito.asm.Type type6 = local5.getType();
        int int7 = local5.getIndex();
        org.mockito.asm.Type type8 = local5.getType();
        java.lang.String str9 = type8.getClassName();
        java.lang.String str10 = type8.toString();
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 4 + "'", int4 == 4);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.mockito.cglib.proxy.Enhancer" + "'", str9, "org.mockito.cglib.proxy.Enhancer");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Lorg.mockito.cglib.proxy.Enhancer;" + "'", str10, "Lorg.mockito.cglib.proxy.Enhancer;");
    }

    @Test
    public void test21866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21866");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        boolean boolean5 = enhancer0.getAttemptLoad();
        java.lang.Class class6 = null;
        enhancer0.setSuperclass(class6);
        java.lang.ClassLoader classLoader8 = enhancer0.getClassLoader();
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback11 = null;
        enhancer0.setCallback(callback11);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter13 = null;
        enhancer0.setCallbackFilter(callbackFilter13);
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = null;
        enhancer15.setNamingPolicy(namingPolicy16);
        java.lang.ClassLoader classLoader18 = null;
        enhancer15.setClassLoader(classLoader18);
        enhancer15.setUseFactory(true);
        boolean boolean22 = enhancer15.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy23 = null;
        enhancer15.setStrategy(generatorStrategy23);
        boolean boolean25 = enhancer15.getAttemptLoad();
        java.lang.ClassLoader classLoader26 = enhancer15.getClassLoader();
        enhancer0.setClassLoader(classLoader26);
        enhancer0.setAttemptLoad(false);
        java.lang.ClassLoader classLoader30 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy32 = null;
        enhancer31.setNamingPolicy(namingPolicy32);
        java.lang.ClassLoader classLoader34 = null;
        enhancer31.setClassLoader(classLoader34);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter36 = null;
        enhancer31.setCallbackFilter(callbackFilter36);
        org.mockito.cglib.proxy.Callback callback38 = null;
        enhancer31.setCallback(callback38);
        java.lang.ClassLoader classLoader40 = null;
        enhancer31.setClassLoader(classLoader40);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy42 = null;
        enhancer31.setStrategy(generatorStrategy42);
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy45 = null;
        enhancer44.setNamingPolicy(namingPolicy45);
        java.lang.ClassLoader classLoader47 = null;
        enhancer44.setClassLoader(classLoader47);
        boolean boolean49 = enhancer44.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy50 = enhancer44.getStrategy();
        enhancer31.setStrategy(generatorStrategy50);
        enhancer31.setAttemptLoad(false);
        boolean boolean54 = enhancer31.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer55 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy56 = null;
        enhancer55.setNamingPolicy(namingPolicy56);
        java.lang.ClassLoader classLoader58 = null;
        enhancer55.setClassLoader(classLoader58);
        java.lang.Class<?> wildcardClass60 = enhancer55.getClass();
        java.lang.String str61 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass60);
        boolean boolean62 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass60);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass60);
        boolean boolean64 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass60);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass60);
        boolean boolean66 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass60);
        boolean boolean67 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass60);
        java.lang.String str68 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass60);
        java.lang.String str69 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass60);
        enhancer31.setSuperclass((java.lang.Class) wildcardClass60);
        java.lang.String str71 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass60);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.setCallbackType((java.lang.Class) wildcardClass60);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown callback type class org.mockito.cglib.proxy.Enhancer");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(classLoader26);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(generatorStrategy50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str61, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str68, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str69, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str71, "Lorg/mockito/cglib/proxy/Enhancer;");
    }

    @Test
    public void test21867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21867");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassInfo classInfo8 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter9.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        org.mockito.cglib.core.ClassInfo classInfo13 = classEmitter12.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor14 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassInfo classInfo18 = classEmitter16.getClassInfo();
        classEmitter12.setTarget((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.asm.ClassVisitor classVisitor20 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter(classVisitor20);
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter(classVisitor20);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter22);
        classEmitter16.setTarget((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.asm.ClassVisitor classVisitor25 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter(classVisitor25);
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter(classVisitor25);
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter27);
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter28);
        classEmitter16.setTarget((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter29);
        classEmitter9.setTarget((org.mockito.asm.ClassVisitor) classEmitter32);
        org.mockito.cglib.core.ClassInfo classInfo34 = classEmitter32.getClassInfo();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.AnnotationVisitor annotationVisitor37 = classEmitter32.visitAnnotation("L1204557438", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo8);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo13);
        org.junit.Assert.assertNull(classInfo18);
        org.junit.Assert.assertNull(classInfo34);
    }

    @Test
    public void test21868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21868");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        boolean boolean5 = enhancer0.getAttemptLoad();
        boolean boolean6 = enhancer0.getUseCache();
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy10 = null;
        enhancer9.setNamingPolicy(namingPolicy10);
        java.lang.ClassLoader classLoader12 = null;
        enhancer9.setClassLoader(classLoader12);
        boolean boolean14 = enhancer9.getAttemptLoad();
        enhancer9.setUseCache(true);
        java.lang.ClassLoader classLoader17 = enhancer9.getClassLoader();
        enhancer0.setClassLoader(classLoader17);
        org.mockito.cglib.core.NamingPolicy namingPolicy19 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy20 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = null;
        enhancer21.setNamingPolicy(namingPolicy22);
        java.lang.ClassLoader classLoader24 = null;
        enhancer21.setClassLoader(classLoader24);
        boolean boolean26 = enhancer21.getAttemptLoad();
        java.lang.Class class27 = null;
        enhancer21.setSuperclass(class27);
        java.lang.ClassLoader classLoader29 = enhancer21.getClassLoader();
        boolean boolean30 = enhancer21.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy32 = null;
        enhancer31.setNamingPolicy(namingPolicy32);
        java.lang.ClassLoader classLoader34 = null;
        enhancer31.setClassLoader(classLoader34);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter36 = null;
        enhancer31.setCallbackFilter(callbackFilter36);
        org.mockito.cglib.proxy.Callback callback38 = null;
        enhancer31.setCallback(callback38);
        java.lang.ClassLoader classLoader40 = null;
        enhancer31.setClassLoader(classLoader40);
        enhancer31.setInterceptDuringConstruction(true);
        java.lang.ClassLoader classLoader44 = enhancer31.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy45 = enhancer31.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy47 = null;
        enhancer46.setNamingPolicy(namingPolicy47);
        java.lang.ClassLoader classLoader49 = null;
        enhancer46.setClassLoader(classLoader49);
        boolean boolean51 = enhancer46.getAttemptLoad();
        enhancer46.setUseCache(true);
        java.lang.ClassLoader classLoader54 = enhancer46.getClassLoader();
        boolean boolean55 = enhancer46.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer56 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy57 = null;
        enhancer56.setNamingPolicy(namingPolicy57);
        java.lang.ClassLoader classLoader59 = null;
        enhancer56.setClassLoader(classLoader59);
        boolean boolean61 = enhancer56.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy62 = enhancer56.getNamingPolicy();
        org.mockito.cglib.proxy.Callback callback63 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray64 = new org.mockito.cglib.proxy.Callback[] { callback63 };
        enhancer56.setCallbacks(callbackArray64);
        enhancer46.setCallbacks(callbackArray64);
        enhancer31.setCallbacks(callbackArray64);
        enhancer21.setCallbacks(callbackArray64);
        java.lang.ClassLoader classLoader69 = enhancer21.getClassLoader();
        enhancer0.setClassLoader(classLoader69);
        enhancer0.setUseFactory(true);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.BYTE_TYPE;
        int int75 = type74.getSize();
        java.lang.String str76 = type74.getClassName();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type78 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type79 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type80 = org.mockito.asm.Type.BYTE_TYPE;
        int int81 = type80.getSize();
        java.lang.String str82 = type80.getClassName();
        org.mockito.asm.Type type83 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str84 = type83.getClassName();
        org.mockito.asm.Type[] typeArray85 = new org.mockito.asm.Type[] { type77, type78, type79, type80, type83 };
        org.mockito.cglib.core.Signature signature86 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type74, typeArray85);
        java.lang.Class<?> wildcardClass87 = type74.getClass();
        org.mockito.asm.Type type88 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass87);
        java.lang.String str89 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass87);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.setCallbackType((java.lang.Class) wildcardClass87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown callback type class org.mockito.asm.Type");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(classLoader17);
        org.junit.Assert.assertNotNull(namingPolicy19);
        org.junit.Assert.assertNotNull(generatorStrategy20);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(classLoader44);
        org.junit.Assert.assertNotNull(namingPolicy45);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(classLoader54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(namingPolicy62);
        org.junit.Assert.assertNotNull(callbackArray64);
        org.junit.Assert.assertNotNull(classLoader69);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "byte" + "'", str76, "byte");
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "byte" + "'", str82, "byte");
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "double" + "'", str84, "double");
        org.junit.Assert.assertNotNull(typeArray85);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str89, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test21869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21869");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        java.lang.ClassLoader classLoader9 = null;
        enhancer0.setClassLoader(classLoader9);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = null;
        enhancer0.setStrategy(generatorStrategy11);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = null;
        enhancer13.setNamingPolicy(namingPolicy14);
        java.lang.ClassLoader classLoader16 = null;
        enhancer13.setClassLoader(classLoader16);
        boolean boolean18 = enhancer13.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer13.getStrategy();
        enhancer0.setStrategy(generatorStrategy19);
        enhancer0.setInterceptDuringConstruction(false);
        boolean boolean23 = enhancer0.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy24 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy26 = null;
        enhancer25.setNamingPolicy(namingPolicy26);
        java.lang.ClassLoader classLoader28 = null;
        enhancer25.setClassLoader(classLoader28);
        boolean boolean30 = enhancer25.getAttemptLoad();
        boolean boolean31 = enhancer25.getUseCache();
        org.mockito.cglib.proxy.Callback callback32 = null;
        enhancer25.setCallback(callback32);
        boolean boolean34 = enhancer25.getUseCache();
        java.lang.Class[] classArray35 = null;
        enhancer25.setInterfaces(classArray35);
        enhancer25.setUseCache(false);
        org.mockito.cglib.proxy.Callback callback39 = null;
        enhancer25.setCallback(callback39);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter41 = null;
        enhancer25.setCallbackFilter(callbackFilter41);
        java.lang.ClassLoader classLoader43 = enhancer25.getClassLoader();
        enhancer0.setClassLoader(classLoader43);
        org.mockito.asm.ClassVisitor classVisitor45 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter46 = new org.mockito.cglib.core.ClassEmitter(classVisitor45);
        org.mockito.cglib.core.ClassEmitter classEmitter47 = new org.mockito.cglib.core.ClassEmitter(classVisitor45);
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter47);
        org.mockito.cglib.core.ClassEmitter classEmitter49 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter47);
        org.mockito.cglib.core.ClassEmitter classEmitter50 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter51 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter50);
        org.mockito.cglib.core.ClassInfo classInfo52 = classEmitter51.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor53 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter54 = new org.mockito.cglib.core.ClassEmitter(classVisitor53);
        org.mockito.cglib.core.ClassEmitter classEmitter55 = new org.mockito.cglib.core.ClassEmitter(classVisitor53);
        org.mockito.cglib.core.ClassEmitter classEmitter56 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter55);
        org.mockito.cglib.core.ClassInfo classInfo57 = classEmitter55.getClassInfo();
        classEmitter51.setTarget((org.mockito.asm.ClassVisitor) classEmitter55);
        org.mockito.asm.ClassVisitor classVisitor59 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter60 = new org.mockito.cglib.core.ClassEmitter(classVisitor59);
        org.mockito.cglib.core.ClassEmitter classEmitter61 = new org.mockito.cglib.core.ClassEmitter(classVisitor59);
        org.mockito.cglib.core.ClassEmitter classEmitter62 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter61);
        classEmitter55.setTarget((org.mockito.asm.ClassVisitor) classEmitter62);
        org.mockito.asm.ClassVisitor classVisitor64 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter65 = new org.mockito.cglib.core.ClassEmitter(classVisitor64);
        org.mockito.asm.ClassVisitor classVisitor66 = null;
        classEmitter65.setTarget(classVisitor66);
        classEmitter55.setTarget((org.mockito.asm.ClassVisitor) classEmitter65);
        classEmitter47.setTarget((org.mockito.asm.ClassVisitor) classEmitter55);
        org.mockito.cglib.core.ClassInfo classInfo70 = classEmitter47.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter71 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter47);
        org.mockito.cglib.core.ClassInfo classInfo72 = classEmitter47.getClassInfo();
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass((org.mockito.asm.ClassVisitor) classEmitter47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(namingPolicy24);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(classLoader43);
        org.junit.Assert.assertNull(classInfo52);
        org.junit.Assert.assertNull(classInfo57);
        org.junit.Assert.assertNull(classInfo70);
        org.junit.Assert.assertNull(classInfo72);
    }

    @Test
    public void test21870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21870");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        enhancer0.setUseFactory(true);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy10 = null;
        enhancer9.setNamingPolicy(namingPolicy10);
        java.lang.ClassLoader classLoader12 = null;
        enhancer9.setClassLoader(classLoader12);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy15 = null;
        enhancer14.setNamingPolicy(namingPolicy15);
        java.lang.ClassLoader classLoader17 = null;
        enhancer14.setClassLoader(classLoader17);
        java.lang.Class<?> wildcardClass19 = enhancer14.getClass();
        java.lang.String str20 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass19);
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = null;
        enhancer21.setNamingPolicy(namingPolicy22);
        java.lang.ClassLoader classLoader24 = null;
        enhancer21.setClassLoader(classLoader24);
        java.lang.Class<?> wildcardClass26 = enhancer21.getClass();
        java.lang.Class[] classArray27 = new java.lang.Class[] { wildcardClass19, wildcardClass26 };
        enhancer9.setInterfaces(classArray27);
        java.lang.ClassLoader classLoader29 = enhancer9.getClassLoader();
        java.lang.ClassLoader classLoader30 = enhancer9.getClassLoader();
        enhancer0.setClassLoader(classLoader30);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter32 = null;
        enhancer0.setCallbackFilter(callbackFilter32);
        org.mockito.asm.ClassVisitor classVisitor34 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter(classVisitor34);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter(classVisitor34);
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter36);
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter36);
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter40 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter39);
        classEmitter36.setTarget((org.mockito.asm.ClassVisitor) classEmitter40);
        org.mockito.asm.ClassVisitor classVisitor42 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter43 = new org.mockito.cglib.core.ClassEmitter(classVisitor42);
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter(classVisitor42);
        org.mockito.cglib.core.ClassInfo classInfo45 = classEmitter44.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter46 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter44);
        org.mockito.cglib.core.ClassEmitter classEmitter47 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter46);
        org.mockito.asm.ClassVisitor classVisitor48 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter49 = new org.mockito.cglib.core.ClassEmitter(classVisitor48);
        org.mockito.cglib.core.ClassEmitter classEmitter50 = new org.mockito.cglib.core.ClassEmitter(classVisitor48);
        org.mockito.cglib.core.ClassInfo classInfo51 = classEmitter50.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo52 = classEmitter50.getClassInfo();
        classEmitter47.setTarget((org.mockito.asm.ClassVisitor) classEmitter50);
        classEmitter40.setTarget((org.mockito.asm.ClassVisitor) classEmitter50);
        org.mockito.asm.ClassVisitor classVisitor55 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter56 = new org.mockito.cglib.core.ClassEmitter(classVisitor55);
        org.mockito.cglib.core.ClassEmitter classEmitter57 = new org.mockito.cglib.core.ClassEmitter(classVisitor55);
        org.mockito.cglib.core.ClassEmitter classEmitter58 = new org.mockito.cglib.core.ClassEmitter(classVisitor55);
        org.mockito.cglib.core.ClassEmitter classEmitter59 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter58);
        classEmitter40.setTarget((org.mockito.asm.ClassVisitor) classEmitter59);
        org.mockito.cglib.core.ClassEmitter classEmitter61 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter59);
        org.mockito.cglib.core.ClassEmitter classEmitter62 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter61);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass((org.mockito.asm.ClassVisitor) classEmitter62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str20, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(classArray27);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNull(classInfo45);
        org.junit.Assert.assertNull(classInfo51);
        org.junit.Assert.assertNull(classInfo52);
    }

    @Test
    public void test21871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21871");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.asm.ClassVisitor classVisitor6 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassInfo classInfo9 = classEmitter8.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter8.getClassInfo();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.asm.ClassVisitor classVisitor12 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter(classVisitor12);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter(classVisitor12);
        org.mockito.cglib.core.ClassInfo classInfo15 = classEmitter14.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter17);
        classEmitter8.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.asm.ClassVisitor classVisitor21 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter26);
        classEmitter23.setTarget((org.mockito.asm.ClassVisitor) classEmitter27);
        org.mockito.asm.ClassVisitor classVisitor29 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter(classVisitor29);
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter(classVisitor29);
        org.mockito.cglib.core.ClassInfo classInfo32 = classEmitter31.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter31);
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter33);
        org.mockito.asm.ClassVisitor classVisitor35 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter(classVisitor35);
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter(classVisitor35);
        org.mockito.cglib.core.ClassInfo classInfo38 = classEmitter37.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo39 = classEmitter37.getClassInfo();
        classEmitter34.setTarget((org.mockito.asm.ClassVisitor) classEmitter37);
        classEmitter27.setTarget((org.mockito.asm.ClassVisitor) classEmitter37);
        org.mockito.asm.ClassVisitor classVisitor42 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter43 = new org.mockito.cglib.core.ClassEmitter(classVisitor42);
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter(classVisitor42);
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter(classVisitor42);
        org.mockito.cglib.core.ClassEmitter classEmitter46 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter45);
        classEmitter27.setTarget((org.mockito.asm.ClassVisitor) classEmitter46);
        classEmitter8.setTarget((org.mockito.asm.ClassVisitor) classEmitter46);
        org.mockito.cglib.core.ClassEmitter classEmitter49 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.asm.ClassVisitor classVisitor50 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter51 = new org.mockito.cglib.core.ClassEmitter(classVisitor50);
        org.mockito.cglib.core.ClassEmitter classEmitter52 = new org.mockito.cglib.core.ClassEmitter(classVisitor50);
        org.mockito.cglib.core.ClassInfo classInfo53 = classEmitter52.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter54 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter52);
        org.mockito.cglib.core.ClassEmitter classEmitter55 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter54);
        org.mockito.cglib.core.ClassEmitter classEmitter56 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter55);
        org.mockito.cglib.core.ClassInfo classInfo57 = classEmitter55.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter58 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter55);
        classEmitter49.setTarget((org.mockito.asm.ClassVisitor) classEmitter55);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter55.visitSource("L562647461", "L772968042");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo9);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo15);
        org.junit.Assert.assertNull(classInfo32);
        org.junit.Assert.assertNull(classInfo38);
        org.junit.Assert.assertNull(classInfo39);
        org.junit.Assert.assertNull(classInfo53);
        org.junit.Assert.assertNull(classInfo57);
    }

    @Test
    public void test21872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21872");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.asm.ClassVisitor classVisitor6 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassInfo classInfo9 = classEmitter8.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter10);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassInfo classInfo19 = classEmitter17.getClassInfo();
        // The following exception was thrown during execution in test generation
        try {
            classEmitter17.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo9);
        org.junit.Assert.assertNull(classInfo19);
    }

    @Test
    public void test21873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21873");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        classEmitter2.setTarget((org.mockito.asm.ClassVisitor) classEmitter6);
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassInfo classInfo11 = classEmitter10.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.asm.ClassVisitor classVisitor14 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.cglib.core.ClassInfo classInfo17 = classEmitter16.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo18 = classEmitter16.getClassInfo();
        classEmitter13.setTarget((org.mockito.asm.ClassVisitor) classEmitter16);
        classEmitter6.setTarget((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter6);
        org.mockito.cglib.core.ClassInfo classInfo22 = classEmitter6.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter6);
        org.mockito.cglib.core.ClassInfo classInfo24 = classEmitter6.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor25 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter(classVisitor25);
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter(classVisitor25);
        org.mockito.cglib.core.ClassInfo classInfo28 = classEmitter27.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter27);
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter30);
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter30);
        org.mockito.asm.ClassVisitor classVisitor33 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter(classVisitor33);
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter(classVisitor33);
        org.mockito.cglib.core.ClassInfo classInfo36 = classEmitter35.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter35);
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter37);
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter38);
        org.mockito.cglib.core.ClassInfo classInfo40 = classEmitter38.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor41 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter(classVisitor41);
        org.mockito.cglib.core.ClassEmitter classEmitter43 = new org.mockito.cglib.core.ClassEmitter(classVisitor41);
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter43);
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter44);
        classEmitter38.setTarget((org.mockito.asm.ClassVisitor) classEmitter45);
        org.mockito.cglib.core.ClassInfo classInfo47 = classEmitter38.getClassInfo();
        classEmitter32.setTarget((org.mockito.asm.ClassVisitor) classEmitter38);
        org.mockito.cglib.core.ClassEmitter classEmitter49 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter32);
        classEmitter6.setTarget((org.mockito.asm.ClassVisitor) classEmitter49);
        org.mockito.asm.MethodVisitor methodVisitor59 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter60 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor59);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter61 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter60);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter62 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter60);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter63 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter60);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter64 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter60);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.FieldVisitor fieldVisitor65 = classEmitter6.visitField(52, "L310869811", "L1962117470", "L1607142196", (java.lang.Object) localVariablesSorter60);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo11);
        org.junit.Assert.assertNull(classInfo17);
        org.junit.Assert.assertNull(classInfo18);
        org.junit.Assert.assertNull(classInfo22);
        org.junit.Assert.assertNull(classInfo24);
        org.junit.Assert.assertNull(classInfo28);
        org.junit.Assert.assertNull(classInfo36);
        org.junit.Assert.assertNull(classInfo40);
        org.junit.Assert.assertNull(classInfo47);
    }

    @Test
    public void test21874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21874");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        classEmitter2.setTarget((org.mockito.asm.ClassVisitor) classEmitter6);
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassInfo classInfo11 = classEmitter10.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.asm.ClassVisitor classVisitor14 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.cglib.core.ClassInfo classInfo17 = classEmitter16.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo18 = classEmitter16.getClassInfo();
        classEmitter13.setTarget((org.mockito.asm.ClassVisitor) classEmitter16);
        classEmitter6.setTarget((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.asm.ClassVisitor classVisitor21 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter24);
        classEmitter6.setTarget((org.mockito.asm.ClassVisitor) classEmitter25);
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter25);
        // The following exception was thrown during execution in test generation
        try {
            int int28 = classEmitter25.getAccess();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo11);
        org.junit.Assert.assertNull(classInfo17);
        org.junit.Assert.assertNull(classInfo18);
    }

    @Test
    public void test21875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21875");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("L895227343");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21876");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.BYTE_TYPE;
        int int2 = type1.getSize();
        java.lang.String str3 = type1.getClassName();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type5 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type6 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type7 = org.mockito.asm.Type.BYTE_TYPE;
        int int8 = type7.getSize();
        java.lang.String str9 = type7.getClassName();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str11 = type10.getClassName();
        org.mockito.asm.Type[] typeArray12 = new org.mockito.asm.Type[] { type4, type5, type6, type7, type10 };
        org.mockito.cglib.core.Signature signature13 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type1, typeArray12);
        boolean boolean15 = signature13.equals((java.lang.Object) 124);
        org.mockito.asm.Type[] typeArray16 = signature13.getArgumentTypes();
        java.lang.String str17 = signature13.getName();
        java.lang.String str18 = signature13.getName();
        org.mockito.asm.Type type19 = signature13.getReturnType();
        org.mockito.cglib.core.Signature signature22 = new org.mockito.cglib.core.Signature("L1754199454", "()Lorg/mockito/cglib/core/ClassEmitter;");
        org.mockito.asm.Type[] typeArray23 = signature22.getArgumentTypes();
        java.lang.String str24 = signature22.getName();
        org.mockito.asm.Type[] typeArray25 = signature22.getArgumentTypes();
        java.lang.String str26 = org.mockito.asm.Type.getMethodDescriptor(type19, typeArray25);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "byte" + "'", str3, "byte");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "byte" + "'", str9, "byte");
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "double" + "'", str11, "double");
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str17, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str18, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "L1754199454" + "'", str24, "L1754199454");
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "()B" + "'", str26, "()B");
    }

    @Test
    public void test21877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21877");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        classEmitter2.setTarget((org.mockito.asm.ClassVisitor) classEmitter6);
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassInfo classInfo11 = classEmitter10.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.asm.ClassVisitor classVisitor14 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.cglib.core.ClassInfo classInfo17 = classEmitter16.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo18 = classEmitter16.getClassInfo();
        classEmitter13.setTarget((org.mockito.asm.ClassVisitor) classEmitter16);
        classEmitter6.setTarget((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter22);
        org.mockito.cglib.core.ClassInfo classInfo24 = classEmitter22.getClassInfo();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.AnnotationVisitor annotationVisitor27 = classEmitter22.visitAnnotation("L891574013", true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo11);
        org.junit.Assert.assertNull(classInfo17);
        org.junit.Assert.assertNull(classInfo18);
        org.junit.Assert.assertNull(classInfo24);
    }

    @Test
    public void test21878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21878");
        org.mockito.cglib.core.Signature signature2 = new org.mockito.cglib.core.Signature("L1745913920", "L266122337");
    }

    @Test
    public void test21879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21879");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        java.lang.Class<?> wildcardClass5 = classEmitter4.getClass();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        java.lang.String str7 = type6.getDescriptor();
        java.lang.String str8 = type6.getClassName();
        java.lang.String str9 = type6.getDescriptor();
        org.mockito.asm.Type type10 = type6.getElementType();
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = null;
        enhancer12.setNamingPolicy(namingPolicy13);
        java.lang.ClassLoader classLoader15 = null;
        enhancer12.setClassLoader(classLoader15);
        java.lang.Class<?> wildcardClass17 = enhancer12.getClass();
        java.lang.String str18 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass17);
        boolean boolean19 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass17);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass17);
        int int22 = type20.getOpcode(128);
        java.lang.String str23 = type20.toString();
        int int24 = type20.getDimensions();
        java.lang.String str25 = type20.toString();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.cglib.core.Local local29 = new org.mockito.cglib.core.Local(124, type28);
        boolean boolean31 = type28.equals((java.lang.Object) 0);
        org.mockito.asm.Type[] typeArray32 = new org.mockito.asm.Type[] {};
        org.mockito.cglib.core.Signature signature33 = new org.mockito.cglib.core.Signature("L1176429447", type28, typeArray32);
        org.mockito.cglib.core.Signature signature34 = new org.mockito.cglib.core.Signature("L1176429447", type20, typeArray32);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.FLOAT_TYPE;
        int int36 = type35.getSize();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.BYTE_TYPE;
        boolean boolean39 = type37.equals((java.lang.Object) 9);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type42 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] {};
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray43);
        org.mockito.cglib.core.Signature signature45 = new org.mockito.cglib.core.Signature("double", type41, typeArray43);
        java.lang.String str46 = org.mockito.asm.Type.getMethodDescriptor(type37, typeArray43);
        java.lang.String str47 = org.mockito.asm.Type.getMethodDescriptor(type35, typeArray43);
        java.lang.String str48 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray43);
        boolean boolean49 = type6.equals((java.lang.Object) typeArray43);
        int int50 = type6.getSort();
        int int51 = type6.getSize();
        int int53 = type6.getOpcode(16);
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Lorg/mockito/cglib/core/ClassEmitter;" + "'", str7, "Lorg/mockito/cglib/core/ClassEmitter;");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.mockito.cglib.core.ClassEmitter" + "'", str8, "org.mockito.cglib.core.ClassEmitter");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Lorg/mockito/cglib/core/ClassEmitter;" + "'", str9, "Lorg/mockito/cglib/core/ClassEmitter;");
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str18, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 132 + "'", int22 == 132);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str23, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str25, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "()D" + "'", str44, "()D");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "()B" + "'", str46, "()B");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "()F" + "'", str47, "()F");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "()Lorg/mockito/cglib/proxy/Enhancer;" + "'", str48, "()Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 10 + "'", int50 == 10);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 20 + "'", int53 == 20);
    }

    @Test
    public void test21880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21880");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = null;
        enhancer5.setNamingPolicy(namingPolicy6);
        java.lang.ClassLoader classLoader8 = null;
        enhancer5.setClassLoader(classLoader8);
        java.lang.Class<?> wildcardClass10 = enhancer5.getClass();
        java.lang.String str11 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass10);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = null;
        enhancer12.setNamingPolicy(namingPolicy13);
        java.lang.ClassLoader classLoader15 = null;
        enhancer12.setClassLoader(classLoader15);
        java.lang.Class<?> wildcardClass17 = enhancer12.getClass();
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass10, wildcardClass17 };
        enhancer0.setInterfaces(classArray18);
        boolean boolean20 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = null;
        enhancer21.setNamingPolicy(namingPolicy22);
        java.lang.ClassLoader classLoader24 = null;
        enhancer21.setClassLoader(classLoader24);
        java.lang.Class<?> wildcardClass26 = enhancer21.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass26);
        java.lang.ClassLoader classLoader28 = enhancer0.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = enhancer0.getNamingPolicy();
        java.lang.Class<?> wildcardClass30 = enhancer0.getClass();
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy32 = null;
        enhancer31.setNamingPolicy(namingPolicy32);
        java.lang.ClassLoader classLoader34 = null;
        enhancer31.setClassLoader(classLoader34);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter36 = null;
        enhancer31.setCallbackFilter(callbackFilter36);
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy39 = null;
        enhancer38.setNamingPolicy(namingPolicy39);
        java.lang.ClassLoader classLoader41 = null;
        enhancer38.setClassLoader(classLoader41);
        boolean boolean43 = enhancer38.getAttemptLoad();
        java.lang.Class class44 = null;
        enhancer38.setSuperclass(class44);
        org.mockito.cglib.core.NamingPolicy namingPolicy46 = enhancer38.getNamingPolicy();
        enhancer31.setNamingPolicy(namingPolicy46);
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy49 = null;
        enhancer48.setNamingPolicy(namingPolicy49);
        java.lang.ClassLoader classLoader51 = null;
        enhancer48.setClassLoader(classLoader51);
        org.mockito.cglib.proxy.Enhancer enhancer53 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy54 = null;
        enhancer53.setNamingPolicy(namingPolicy54);
        java.lang.ClassLoader classLoader56 = null;
        enhancer53.setClassLoader(classLoader56);
        java.lang.Class<?> wildcardClass58 = enhancer53.getClass();
        java.lang.String str59 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass58);
        org.mockito.cglib.proxy.Enhancer enhancer60 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy61 = null;
        enhancer60.setNamingPolicy(namingPolicy61);
        java.lang.ClassLoader classLoader63 = null;
        enhancer60.setClassLoader(classLoader63);
        java.lang.Class<?> wildcardClass65 = enhancer60.getClass();
        java.lang.Class[] classArray66 = new java.lang.Class[] { wildcardClass58, wildcardClass65 };
        enhancer48.setInterfaces(classArray66);
        boolean boolean68 = enhancer48.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer69 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy70 = null;
        enhancer69.setNamingPolicy(namingPolicy70);
        java.lang.ClassLoader classLoader72 = null;
        enhancer69.setClassLoader(classLoader72);
        java.lang.Class<?> wildcardClass74 = enhancer69.getClass();
        enhancer48.setSuperclass((java.lang.Class) wildcardClass74);
        java.lang.Class[] classArray76 = new java.lang.Class[] { wildcardClass74 };
        enhancer31.setInterfaces(classArray76);
        org.mockito.cglib.proxy.Callback callback78 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj79 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass30, classArray76, callback78);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str11, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(namingPolicy29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(namingPolicy46);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str59, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(classArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
    }

    @Test
    public void test21881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21881");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.BYTE_TYPE;
        int int3 = type2.getSize();
        java.lang.String str4 = type2.getClassName();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type6 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type7 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type8 = org.mockito.asm.Type.BYTE_TYPE;
        int int9 = type8.getSize();
        java.lang.String str10 = type8.getClassName();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str12 = type11.getClassName();
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type5, type6, type7, type8, type11 };
        org.mockito.cglib.core.Signature signature14 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type2, typeArray13);
        java.lang.String str15 = signature14.getDescriptor();
        java.lang.String str16 = signature14.getDescriptor();
        java.lang.String str17 = signature14.getName();
        java.lang.String str18 = signature14.toString();
        org.mockito.asm.Type type19 = signature14.getReturnType();
        int int21 = type19.getOpcode(153);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.BYTE_TYPE;
        int int25 = type24.getSize();
        java.lang.String str26 = type24.getClassName();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type28 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type29 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type30 = org.mockito.asm.Type.BYTE_TYPE;
        int int31 = type30.getSize();
        java.lang.String str32 = type30.getClassName();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str34 = type33.getClassName();
        org.mockito.asm.Type[] typeArray35 = new org.mockito.asm.Type[] { type27, type28, type29, type30, type33 };
        org.mockito.cglib.core.Signature signature36 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type24, typeArray35);
        org.mockito.asm.Type[] typeArray37 = signature36.getArgumentTypes();
        org.mockito.cglib.core.Signature signature40 = new org.mockito.cglib.core.Signature("L1958877584", "");
        boolean boolean41 = signature36.equals((java.lang.Object) "L1958877584");
        org.mockito.asm.Type type42 = signature36.getReturnType();
        java.lang.String str43 = type42.toString();
        org.mockito.cglib.core.Local local44 = new org.mockito.cglib.core.Local(1, type42);
        org.mockito.asm.Type type45 = local44.getType();
        boolean boolean46 = type19.equals((java.lang.Object) type45);
        org.mockito.cglib.core.Local local47 = new org.mockito.cglib.core.Local(115, type19);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "byte" + "'", str4, "byte");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "byte" + "'", str10, "byte");
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "double" + "'", str12, "double");
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(CBBBD)B" + "'", str15, "(CBBBD)B");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(CBBBD)B" + "'", str16, "(CBBBD)B");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str17, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B" + "'", str18, "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B");
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 153 + "'", int21 == 153);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "byte" + "'", str26, "byte");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "byte" + "'", str32, "byte");
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "double" + "'", str34, "double");
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "B" + "'", str43, "B");
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test21882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21882");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.BYTE_TYPE;
        boolean boolean4 = type2.equals((java.lang.Object) 9);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type7 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray8 = new org.mockito.asm.Type[] {};
        java.lang.String str9 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray8);
        org.mockito.cglib.core.Signature signature10 = new org.mockito.cglib.core.Signature("double", type6, typeArray8);
        java.lang.String str11 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray8);
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray8);
        java.lang.String str13 = type1.getClassName();
        org.mockito.cglib.core.Local local14 = new org.mockito.cglib.core.Local((int) (short) 100, type1);
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = null;
        enhancer15.setNamingPolicy(namingPolicy16);
        java.lang.ClassLoader classLoader18 = null;
        enhancer15.setClassLoader(classLoader18);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter20 = null;
        enhancer15.setCallbackFilter(callbackFilter20);
        org.mockito.cglib.proxy.Callback callback22 = null;
        enhancer15.setCallback(callback22);
        java.lang.ClassLoader classLoader24 = null;
        enhancer15.setClassLoader(classLoader24);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy26 = null;
        enhancer15.setStrategy(generatorStrategy26);
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = enhancer15.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = enhancer15.getNamingPolicy();
        org.mockito.cglib.proxy.Callback callback30 = null;
        enhancer15.setCallback(callback30);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy32 = enhancer15.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy34 = null;
        enhancer33.setNamingPolicy(namingPolicy34);
        java.lang.ClassLoader classLoader36 = null;
        enhancer33.setClassLoader(classLoader36);
        boolean boolean38 = enhancer33.getAttemptLoad();
        java.lang.Class class39 = null;
        enhancer33.setSuperclass(class39);
        org.mockito.cglib.proxy.Callback callback41 = null;
        enhancer33.setCallback(callback41);
        org.mockito.cglib.proxy.Enhancer enhancer43 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy44 = null;
        enhancer43.setNamingPolicy(namingPolicy44);
        java.lang.ClassLoader classLoader46 = null;
        enhancer43.setClassLoader(classLoader46);
        boolean boolean48 = enhancer43.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy49 = enhancer43.getNamingPolicy();
        boolean boolean50 = enhancer43.getAttemptLoad();
        enhancer43.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer53 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy54 = null;
        enhancer53.setNamingPolicy(namingPolicy54);
        java.lang.ClassLoader classLoader56 = null;
        enhancer53.setClassLoader(classLoader56);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter58 = null;
        enhancer53.setCallbackFilter(callbackFilter58);
        org.mockito.cglib.proxy.Callback callback60 = null;
        enhancer53.setCallback(callback60);
        java.lang.ClassLoader classLoader62 = null;
        enhancer53.setClassLoader(classLoader62);
        enhancer53.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer66 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy67 = null;
        enhancer66.setNamingPolicy(namingPolicy67);
        java.lang.ClassLoader classLoader69 = null;
        enhancer66.setClassLoader(classLoader69);
        boolean boolean71 = enhancer66.getAttemptLoad();
        enhancer66.setUseCache(true);
        java.lang.ClassLoader classLoader74 = enhancer66.getClassLoader();
        enhancer53.setClassLoader(classLoader74);
        enhancer43.setClassLoader(classLoader74);
        enhancer33.setClassLoader(classLoader74);
        java.lang.ClassLoader classLoader78 = enhancer33.getClassLoader();
        enhancer15.setClassLoader(classLoader78);
        boolean boolean80 = type1.equals((java.lang.Object) enhancer15);
        org.mockito.cglib.core.NamingPolicy namingPolicy81 = null;
        enhancer15.setNamingPolicy(namingPolicy81);
        boolean boolean83 = enhancer15.getAttemptLoad();
        boolean boolean84 = enhancer15.getAttemptLoad();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "()D" + "'", str9, "()D");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "()B" + "'", str11, "()B");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "()F" + "'", str12, "()F");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "float" + "'", str13, "float");
        org.junit.Assert.assertNotNull(namingPolicy28);
        org.junit.Assert.assertNotNull(namingPolicy29);
        org.junit.Assert.assertNotNull(generatorStrategy32);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(namingPolicy49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(classLoader74);
        org.junit.Assert.assertNotNull(classLoader78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test21883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21883");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        boolean boolean5 = enhancer0.getAttemptLoad();
        enhancer0.setUseCache(true);
        java.lang.ClassLoader classLoader8 = enhancer0.getClassLoader();
        boolean boolean9 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy11 = null;
        enhancer10.setNamingPolicy(namingPolicy11);
        java.lang.ClassLoader classLoader13 = null;
        enhancer10.setClassLoader(classLoader13);
        boolean boolean15 = enhancer10.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer10.getNamingPolicy();
        org.mockito.cglib.proxy.Callback callback17 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray18 = new org.mockito.cglib.proxy.Callback[] { callback17 };
        enhancer10.setCallbacks(callbackArray18);
        enhancer0.setCallbacks(callbackArray18);
        org.mockito.cglib.proxy.Callback callback21 = null;
        enhancer0.setCallback(callback21);
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy26 = null;
        enhancer25.setNamingPolicy(namingPolicy26);
        java.lang.ClassLoader classLoader28 = null;
        enhancer25.setClassLoader(classLoader28);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter30 = null;
        enhancer25.setCallbackFilter(callbackFilter30);
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy33 = null;
        enhancer32.setNamingPolicy(namingPolicy33);
        java.lang.ClassLoader classLoader35 = null;
        enhancer32.setClassLoader(classLoader35);
        boolean boolean37 = enhancer32.getAttemptLoad();
        java.lang.Class class38 = null;
        enhancer32.setSuperclass(class38);
        org.mockito.cglib.core.NamingPolicy namingPolicy40 = enhancer32.getNamingPolicy();
        enhancer25.setNamingPolicy(namingPolicy40);
        enhancer25.setUseFactory(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy44 = enhancer25.getStrategy();
        enhancer0.setStrategy(generatorStrategy44);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class46 = enhancer0.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: createClass does not accept callbacks");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertNotNull(callbackArray18);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(namingPolicy40);
        org.junit.Assert.assertNotNull(generatorStrategy44);
    }

    @Test
    public void test21884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21884");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = null;
        enhancer5.setNamingPolicy(namingPolicy6);
        java.lang.ClassLoader classLoader8 = null;
        enhancer5.setClassLoader(classLoader8);
        java.lang.Class<?> wildcardClass10 = enhancer5.getClass();
        java.lang.String str11 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass10);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = null;
        enhancer12.setNamingPolicy(namingPolicy13);
        java.lang.ClassLoader classLoader15 = null;
        enhancer12.setClassLoader(classLoader15);
        java.lang.Class<?> wildcardClass17 = enhancer12.getClass();
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass10, wildcardClass17 };
        enhancer0.setInterfaces(classArray18);
        java.lang.ClassLoader classLoader20 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = null;
        enhancer21.setNamingPolicy(namingPolicy22);
        java.lang.ClassLoader classLoader24 = null;
        enhancer21.setClassLoader(classLoader24);
        boolean boolean26 = enhancer21.getAttemptLoad();
        enhancer21.setUseCache(true);
        java.lang.ClassLoader classLoader29 = enhancer21.getClassLoader();
        enhancer0.setClassLoader(classLoader29);
        boolean boolean31 = enhancer0.getUseCache();
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.proxy.Enhancer enhancer34 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy35 = null;
        enhancer34.setNamingPolicy(namingPolicy35);
        java.lang.ClassLoader classLoader37 = null;
        enhancer34.setClassLoader(classLoader37);
        org.mockito.cglib.proxy.Enhancer enhancer39 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy40 = null;
        enhancer39.setNamingPolicy(namingPolicy40);
        java.lang.ClassLoader classLoader42 = null;
        enhancer39.setClassLoader(classLoader42);
        java.lang.Class<?> wildcardClass44 = enhancer39.getClass();
        java.lang.String str45 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass44);
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy47 = null;
        enhancer46.setNamingPolicy(namingPolicy47);
        java.lang.ClassLoader classLoader49 = null;
        enhancer46.setClassLoader(classLoader49);
        java.lang.Class<?> wildcardClass51 = enhancer46.getClass();
        java.lang.Class[] classArray52 = new java.lang.Class[] { wildcardClass44, wildcardClass51 };
        enhancer34.setInterfaces(classArray52);
        boolean boolean54 = enhancer34.getAttemptLoad();
        boolean boolean55 = enhancer34.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer56 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy57 = null;
        enhancer56.setNamingPolicy(namingPolicy57);
        java.lang.ClassLoader classLoader59 = null;
        enhancer56.setClassLoader(classLoader59);
        boolean boolean61 = enhancer56.getAttemptLoad();
        enhancer56.setUseCache(true);
        java.lang.ClassLoader classLoader64 = enhancer56.getClassLoader();
        enhancer34.setClassLoader(classLoader64);
        enhancer0.setClassLoader(classLoader64);
        boolean boolean67 = enhancer0.getAttemptLoad();
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str11, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(classLoader20);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str45, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(classLoader64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test21885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21885");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        classEmitter2.setTarget((org.mockito.asm.ClassVisitor) classEmitter6);
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassInfo classInfo11 = classEmitter10.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.asm.ClassVisitor classVisitor14 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.cglib.core.ClassInfo classInfo17 = classEmitter16.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo18 = classEmitter16.getClassInfo();
        classEmitter13.setTarget((org.mockito.asm.ClassVisitor) classEmitter16);
        classEmitter6.setTarget((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter21.visitSource("(CBBBD)Lhi!B;", "L951805845");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo11);
        org.junit.Assert.assertNull(classInfo17);
        org.junit.Assert.assertNull(classInfo18);
    }

    @Test
    public void test21886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21886");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        classEmitter2.setTarget((org.mockito.asm.ClassVisitor) classEmitter6);
        org.mockito.cglib.core.ClassInfo classInfo8 = classEmitter6.getClassInfo();
        // The following exception was thrown during execution in test generation
        try {
            int int9 = classEmitter6.getAccess();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo8);
    }

    @Test
    public void test21887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21887");
        org.mockito.cglib.core.Signature signature2 = new org.mockito.cglib.core.Signature("L1723891711", "B");
        java.lang.String str3 = signature2.getName();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "L1723891711" + "'", str3, "L1723891711");
    }

    @Test
    public void test21888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21888");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.asm.ClassVisitor classVisitor6 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassInfo classInfo9 = classEmitter8.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter8.getClassInfo();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.asm.ClassVisitor classVisitor12 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter(classVisitor12);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter(classVisitor12);
        org.mockito.cglib.core.ClassInfo classInfo15 = classEmitter14.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter17);
        classEmitter8.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.asm.ClassVisitor classVisitor21 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter26);
        classEmitter23.setTarget((org.mockito.asm.ClassVisitor) classEmitter27);
        org.mockito.asm.ClassVisitor classVisitor29 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter(classVisitor29);
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter(classVisitor29);
        org.mockito.cglib.core.ClassInfo classInfo32 = classEmitter31.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter31);
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter33);
        org.mockito.asm.ClassVisitor classVisitor35 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter(classVisitor35);
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter(classVisitor35);
        org.mockito.cglib.core.ClassInfo classInfo38 = classEmitter37.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo39 = classEmitter37.getClassInfo();
        classEmitter34.setTarget((org.mockito.asm.ClassVisitor) classEmitter37);
        classEmitter27.setTarget((org.mockito.asm.ClassVisitor) classEmitter37);
        org.mockito.asm.ClassVisitor classVisitor42 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter43 = new org.mockito.cglib.core.ClassEmitter(classVisitor42);
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter(classVisitor42);
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter(classVisitor42);
        org.mockito.cglib.core.ClassEmitter classEmitter46 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter45);
        classEmitter27.setTarget((org.mockito.asm.ClassVisitor) classEmitter46);
        classEmitter8.setTarget((org.mockito.asm.ClassVisitor) classEmitter46);
        org.mockito.cglib.core.ClassEmitter classEmitter49 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.asm.ClassVisitor classVisitor50 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter51 = new org.mockito.cglib.core.ClassEmitter(classVisitor50);
        org.mockito.cglib.core.ClassEmitter classEmitter52 = new org.mockito.cglib.core.ClassEmitter(classVisitor50);
        org.mockito.cglib.core.ClassInfo classInfo53 = classEmitter52.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter54 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter52);
        org.mockito.cglib.core.ClassEmitter classEmitter55 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter54);
        org.mockito.cglib.core.ClassEmitter classEmitter56 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter55);
        org.mockito.cglib.core.ClassInfo classInfo57 = classEmitter55.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter58 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter55);
        classEmitter49.setTarget((org.mockito.asm.ClassVisitor) classEmitter55);
        org.mockito.cglib.core.ClassEmitter classEmitter60 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter55);
        org.mockito.cglib.core.ClassEmitter classEmitter61 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter60);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter61.visitSource("L1244288568", "org.mockito.cglib.proxy.Enhancer()Lg/mockito/cglib/proxy/Enhancer;");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo9);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo15);
        org.junit.Assert.assertNull(classInfo32);
        org.junit.Assert.assertNull(classInfo38);
        org.junit.Assert.assertNull(classInfo39);
        org.junit.Assert.assertNull(classInfo53);
        org.junit.Assert.assertNull(classInfo57);
    }

    @Test
    public void test21889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21889");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        boolean boolean5 = enhancer0.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Callback callback7 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray8 = new org.mockito.cglib.proxy.Callback[] { callback7 };
        enhancer0.setCallbacks(callbackArray8);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Callback callback12 = null;
        enhancer0.setCallback(callback12);
        enhancer0.setAttemptLoad(true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(namingPolicy6);
        org.junit.Assert.assertNotNull(callbackArray8);
    }

    @Test
    public void test21890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21890");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassInfo classInfo11 = classEmitter10.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.asm.ClassVisitor classVisitor14 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.cglib.core.ClassInfo classInfo17 = classEmitter16.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo18 = classEmitter16.getClassInfo();
        classEmitter13.setTarget((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.asm.ClassVisitor classVisitor20 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter(classVisitor20);
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter(classVisitor20);
        org.mockito.cglib.core.ClassInfo classInfo23 = classEmitter22.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter22);
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter24);
        org.mockito.asm.ClassVisitor classVisitor26 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter(classVisitor26);
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter(classVisitor26);
        org.mockito.cglib.core.ClassInfo classInfo29 = classEmitter28.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter28);
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter30);
        classEmitter25.setTarget((org.mockito.asm.ClassVisitor) classEmitter30);
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter25);
        classEmitter16.setTarget((org.mockito.asm.ClassVisitor) classEmitter25);
        org.mockito.asm.ClassVisitor classVisitor35 = null;
        classEmitter16.setTarget(classVisitor35);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.asm.ClassVisitor classVisitor38 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter(classVisitor38);
        org.mockito.cglib.core.ClassEmitter classEmitter40 = new org.mockito.cglib.core.ClassEmitter(classVisitor38);
        org.mockito.cglib.core.ClassInfo classInfo41 = classEmitter40.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo42 = classEmitter40.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo43 = classEmitter40.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter40);
        org.mockito.asm.ClassVisitor classVisitor45 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter46 = new org.mockito.cglib.core.ClassEmitter(classVisitor45);
        org.mockito.cglib.core.ClassEmitter classEmitter47 = new org.mockito.cglib.core.ClassEmitter(classVisitor45);
        org.mockito.cglib.core.ClassInfo classInfo48 = classEmitter47.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter49 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter47);
        org.mockito.cglib.core.ClassEmitter classEmitter50 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter49);
        org.mockito.asm.ClassVisitor classVisitor51 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter52 = new org.mockito.cglib.core.ClassEmitter(classVisitor51);
        org.mockito.cglib.core.ClassEmitter classEmitter53 = new org.mockito.cglib.core.ClassEmitter(classVisitor51);
        org.mockito.cglib.core.ClassInfo classInfo54 = classEmitter53.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo55 = classEmitter53.getClassInfo();
        classEmitter50.setTarget((org.mockito.asm.ClassVisitor) classEmitter53);
        org.mockito.asm.ClassVisitor classVisitor57 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter58 = new org.mockito.cglib.core.ClassEmitter(classVisitor57);
        org.mockito.cglib.core.ClassEmitter classEmitter59 = new org.mockito.cglib.core.ClassEmitter(classVisitor57);
        org.mockito.cglib.core.ClassInfo classInfo60 = classEmitter59.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter61 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter59);
        org.mockito.cglib.core.ClassEmitter classEmitter62 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter61);
        org.mockito.cglib.core.ClassEmitter classEmitter63 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter62);
        org.mockito.cglib.core.ClassEmitter classEmitter64 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter62);
        classEmitter53.setTarget((org.mockito.asm.ClassVisitor) classEmitter62);
        classEmitter44.setTarget((org.mockito.asm.ClassVisitor) classEmitter62);
        org.mockito.cglib.core.ClassEmitter classEmitter67 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor68 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter69 = new org.mockito.cglib.core.ClassEmitter(classVisitor68);
        org.mockito.cglib.core.ClassEmitter classEmitter70 = new org.mockito.cglib.core.ClassEmitter(classVisitor68);
        classEmitter67.setTarget((org.mockito.asm.ClassVisitor) classEmitter70);
        org.mockito.cglib.core.ClassEmitter classEmitter72 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter70);
        org.mockito.asm.ClassVisitor classVisitor73 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter74 = new org.mockito.cglib.core.ClassEmitter(classVisitor73);
        org.mockito.cglib.core.ClassEmitter classEmitter75 = new org.mockito.cglib.core.ClassEmitter(classVisitor73);
        org.mockito.cglib.core.ClassEmitter classEmitter76 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter75);
        org.mockito.cglib.core.ClassEmitter classEmitter77 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter75);
        org.mockito.cglib.core.ClassEmitter classEmitter78 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter79 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter78);
        classEmitter75.setTarget((org.mockito.asm.ClassVisitor) classEmitter79);
        org.mockito.asm.ClassVisitor classVisitor81 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter82 = new org.mockito.cglib.core.ClassEmitter(classVisitor81);
        org.mockito.cglib.core.ClassEmitter classEmitter83 = new org.mockito.cglib.core.ClassEmitter(classVisitor81);
        org.mockito.cglib.core.ClassInfo classInfo84 = classEmitter83.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter85 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter83);
        org.mockito.cglib.core.ClassEmitter classEmitter86 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter85);
        org.mockito.asm.ClassVisitor classVisitor87 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter88 = new org.mockito.cglib.core.ClassEmitter(classVisitor87);
        org.mockito.cglib.core.ClassEmitter classEmitter89 = new org.mockito.cglib.core.ClassEmitter(classVisitor87);
        org.mockito.cglib.core.ClassInfo classInfo90 = classEmitter89.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo91 = classEmitter89.getClassInfo();
        classEmitter86.setTarget((org.mockito.asm.ClassVisitor) classEmitter89);
        classEmitter79.setTarget((org.mockito.asm.ClassVisitor) classEmitter89);
        org.mockito.cglib.core.ClassInfo classInfo94 = classEmitter89.getClassInfo();
        classEmitter72.setTarget((org.mockito.asm.ClassVisitor) classEmitter89);
        classEmitter62.setTarget((org.mockito.asm.ClassVisitor) classEmitter72);
        classEmitter16.setTarget((org.mockito.asm.ClassVisitor) classEmitter62);
        java.lang.Class<?> wildcardClass98 = classEmitter62.getClass();
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo11);
        org.junit.Assert.assertNull(classInfo17);
        org.junit.Assert.assertNull(classInfo18);
        org.junit.Assert.assertNull(classInfo23);
        org.junit.Assert.assertNull(classInfo29);
        org.junit.Assert.assertNull(classInfo41);
        org.junit.Assert.assertNull(classInfo42);
        org.junit.Assert.assertNull(classInfo43);
        org.junit.Assert.assertNull(classInfo48);
        org.junit.Assert.assertNull(classInfo54);
        org.junit.Assert.assertNull(classInfo55);
        org.junit.Assert.assertNull(classInfo60);
        org.junit.Assert.assertNull(classInfo84);
        org.junit.Assert.assertNull(classInfo90);
        org.junit.Assert.assertNull(classInfo91);
        org.junit.Assert.assertNull(classInfo94);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test21891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21891");
        org.mockito.cglib.proxy.Enhancer enhancer1 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy2 = null;
        enhancer1.setNamingPolicy(namingPolicy2);
        java.lang.ClassLoader classLoader4 = null;
        enhancer1.setClassLoader(classLoader4);
        java.lang.Class<?> wildcardClass6 = enhancer1.getClass();
        java.lang.String str7 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass6);
        boolean boolean8 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass6);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        int int10 = type9.getSize();
        java.lang.String str11 = type9.getInternalName();
        org.mockito.asm.Type type12 = type9.getElementType();
        org.mockito.cglib.core.Local local13 = new org.mockito.cglib.core.Local(103, type12);
        org.mockito.asm.Label label15 = new org.mockito.asm.Label();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type type18 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.cglib.core.Local local19 = new org.mockito.cglib.core.Local(124, type18);
        boolean boolean21 = type18.equals((java.lang.Object) 0);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.BYTE_TYPE;
        int int24 = type23.getSize();
        java.lang.String str25 = type23.getClassName();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type27 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type28 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type29 = org.mockito.asm.Type.BYTE_TYPE;
        int int30 = type29.getSize();
        java.lang.String str31 = type29.getClassName();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str33 = type32.getClassName();
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type26, type27, type28, type29, type32 };
        org.mockito.cglib.core.Signature signature35 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type23, typeArray34);
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type18, typeArray34);
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type16, typeArray34);
        label15.info = type16;
        java.lang.String str39 = type16.toString();
        org.mockito.cglib.core.Local local40 = new org.mockito.cglib.core.Local(2, type16);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.BYTE_TYPE;
        int int43 = type42.getSize();
        java.lang.String str44 = type42.getClassName();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type46 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type47 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type48 = org.mockito.asm.Type.BYTE_TYPE;
        int int49 = type48.getSize();
        java.lang.String str50 = type48.getClassName();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str52 = type51.getClassName();
        org.mockito.asm.Type[] typeArray53 = new org.mockito.asm.Type[] { type45, type46, type47, type48, type51 };
        org.mockito.cglib.core.Signature signature54 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type42, typeArray53);
        java.lang.String str55 = signature54.getDescriptor();
        org.mockito.asm.Type[] typeArray56 = signature54.getArgumentTypes();
        java.lang.String str57 = org.mockito.asm.Type.getMethodDescriptor(type16, typeArray56);
        java.lang.String str58 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray56);
        int int59 = type12.getDimensions();
        int int60 = type12.getSize();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str7, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str11, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "byte" + "'", str25, "byte");
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "byte" + "'", str31, "byte");
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "double" + "'", str33, "double");
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(CBBBD)B" + "'", str36, "(CBBBD)B");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(CBBBD)I" + "'", str37, "(CBBBD)I");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "I" + "'", str39, "I");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "byte" + "'", str44, "byte");
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "byte" + "'", str50, "byte");
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "double" + "'", str52, "double");
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(CBBBD)B" + "'", str55, "(CBBBD)B");
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(CBBBD)I" + "'", str57, "(CBBBD)I");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(CBBBD)Lg/mockito/cglib/proxy/Enhancer;" + "'", str58, "(CBBBD)Lg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
    }

    @Test
    public void test21892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21892");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(56, "()Lorg/mockito/cglib/core/ClassEmitter;", (org.mockito.asm.MethodVisitor) localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.asm.Label label9 = new org.mockito.asm.Label();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type12 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] {};
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray13);
        org.mockito.cglib.core.Signature signature15 = new org.mockito.cglib.core.Signature("double", type11, typeArray13);
        label9.info = typeArray13;
        org.mockito.asm.Type type17 = org.mockito.asm.Type.LONG_TYPE;
        java.lang.String str18 = type17.getDescriptor();
        label9.info = str18;
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = null;
        enhancer20.setNamingPolicy(namingPolicy21);
        java.lang.ClassLoader classLoader23 = null;
        enhancer20.setClassLoader(classLoader23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy26 = null;
        enhancer25.setNamingPolicy(namingPolicy26);
        java.lang.ClassLoader classLoader28 = null;
        enhancer25.setClassLoader(classLoader28);
        java.lang.Class<?> wildcardClass30 = enhancer25.getClass();
        java.lang.String str31 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass30);
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy33 = null;
        enhancer32.setNamingPolicy(namingPolicy33);
        java.lang.ClassLoader classLoader35 = null;
        enhancer32.setClassLoader(classLoader35);
        java.lang.Class<?> wildcardClass37 = enhancer32.getClass();
        java.lang.Class[] classArray38 = new java.lang.Class[] { wildcardClass30, wildcardClass37 };
        enhancer20.setInterfaces(classArray38);
        boolean boolean40 = enhancer20.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy42 = null;
        enhancer41.setNamingPolicy(namingPolicy42);
        java.lang.ClassLoader classLoader44 = null;
        enhancer41.setClassLoader(classLoader44);
        java.lang.Class<?> wildcardClass46 = enhancer41.getClass();
        enhancer20.setSuperclass((java.lang.Class) wildcardClass46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass46);
        java.lang.String str49 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass46);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass46);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass46);
        boolean boolean52 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass46);
        boolean boolean53 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass46);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass46);
        label9.info = type54;
        int[] intArray59 = new int[] { 112, 169, 68 };
        org.mockito.asm.Label label60 = new org.mockito.asm.Label();
        java.lang.Object obj61 = label60.info;
        java.lang.String str62 = label60.toString();
        java.lang.String str63 = label60.toString();
        org.mockito.cglib.proxy.Enhancer enhancer64 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy65 = null;
        enhancer64.setNamingPolicy(namingPolicy65);
        java.lang.ClassLoader classLoader67 = null;
        enhancer64.setClassLoader(classLoader67);
        boolean boolean69 = enhancer64.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy70 = enhancer64.getStrategy();
        label60.info = generatorStrategy70;
        java.lang.String str72 = label60.toString();
        org.mockito.asm.Label[] labelArray73 = new org.mockito.asm.Label[] { label60 };
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter7.visitLookupSwitchInsn(label9, intArray59, labelArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "()D" + "'", str14, "()D");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "J" + "'", str18, "J");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str31, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(classArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str49, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[112, 169, 68]");
        org.junit.Assert.assertNull(obj61);
// flaky:         org.junit.Assert.assertEquals("'" + str62 + "' != '" + "L613794380" + "'", str62, "L613794380");
// flaky:         org.junit.Assert.assertEquals("'" + str63 + "' != '" + "L613794380" + "'", str63, "L613794380");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(generatorStrategy70);
// flaky:         org.junit.Assert.assertEquals("'" + str72 + "' != '" + "L613794380" + "'", str72, "L613794380");
        org.junit.Assert.assertNotNull(labelArray73);
    }

    @Test
    public void test21893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21893");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassInfo classInfo5 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.asm.ClassVisitor classVisitor7 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter(classVisitor7);
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter(classVisitor7);
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter9.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter9);
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.cglib.core.ClassInfo classInfo14 = classEmitter12.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor15 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter(classVisitor15);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter(classVisitor15);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter18);
        classEmitter12.setTarget((org.mockito.asm.ClassVisitor) classEmitter19);
        classEmitter2.setTarget((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getObjectType("L1570394950");
        java.lang.String str27 = type26.getInternalName();
        org.mockito.asm.ClassVisitor classVisitor28 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter(classVisitor28);
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter(classVisitor28);
        org.mockito.cglib.core.ClassInfo classInfo31 = classEmitter30.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter30);
        java.lang.Class<?> wildcardClass33 = classEmitter32.getClass();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass33);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass33);
        java.lang.String str36 = type35.getClassName();
        java.lang.String str37 = type35.getDescriptor();
        // The following exception was thrown during execution in test generation
        try {
            classEmitter22.declare_field(68, "L1598546161", type26, (java.lang.Object) type35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo5);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo14);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "L1570394950" + "'", str27, "L1570394950");
        org.junit.Assert.assertNull(classInfo31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "org.mockito.cglib.core.ClassEmitter" + "'", str36, "org.mockito.cglib.core.ClassEmitter");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Lorg/mockito/cglib/core/ClassEmitter;" + "'", str37, "Lorg/mockito/cglib/core/ClassEmitter;");
    }

    @Test
    public void test21894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21894");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("Lorg.mockito.cglib.core.ClassEmitter;");
        org.junit.Assert.assertNotNull(type1);
    }

    @Test
    public void test21895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21895");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        java.lang.ClassLoader classLoader9 = null;
        enhancer0.setClassLoader(classLoader9);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = null;
        enhancer0.setStrategy(generatorStrategy11);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = null;
        enhancer13.setNamingPolicy(namingPolicy14);
        java.lang.ClassLoader classLoader16 = null;
        enhancer13.setClassLoader(classLoader16);
        boolean boolean18 = enhancer13.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer13.getStrategy();
        enhancer0.setStrategy(generatorStrategy19);
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy23 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = null;
        enhancer24.setNamingPolicy(namingPolicy25);
        java.lang.ClassLoader classLoader27 = null;
        enhancer24.setClassLoader(classLoader27);
        boolean boolean29 = enhancer24.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy30 = enhancer24.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy30);
        java.lang.ClassLoader classLoader32 = enhancer0.getClassLoader();
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter37 = null;
        enhancer0.setCallbackFilter(callbackFilter37);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setSerialVersionUID((java.lang.Long) 10L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertNotNull(generatorStrategy23);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(namingPolicy30);
        org.junit.Assert.assertNotNull(classLoader32);
    }

    @Test
    public void test21896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21896");
        org.mockito.cglib.proxy.Enhancer enhancer2 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = null;
        enhancer2.setNamingPolicy(namingPolicy3);
        java.lang.ClassLoader classLoader5 = null;
        enhancer2.setClassLoader(classLoader5);
        java.lang.Class<?> wildcardClass7 = enhancer2.getClass();
        java.lang.String str8 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass7);
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass7);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass7);
        int int11 = type10.getSize();
        org.mockito.cglib.core.Local local12 = new org.mockito.cglib.core.Local(108, type10);
        java.lang.String str13 = type10.getDescriptor();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.getObjectType("byte");
        org.mockito.asm.Type type16 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray17 = new org.mockito.asm.Type[] {};
        java.lang.String str18 = org.mockito.asm.Type.getMethodDescriptor(type16, typeArray17);
        java.lang.String str19 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray17);
        org.mockito.cglib.core.Signature signature20 = new org.mockito.cglib.core.Signature("J", type10, typeArray17);
        org.mockito.asm.Type type21 = signature20.getReturnType();
        org.mockito.asm.MethodVisitor methodVisitor26 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter27 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor26);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter28 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter27);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter29 = new org.mockito.cglib.core.LocalVariablesSorter(56, "()Lorg/mockito/cglib/core/ClassEmitter;", (org.mockito.asm.MethodVisitor) localVariablesSorter27);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter30 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter29);
        boolean boolean31 = signature20.equals((java.lang.Object) localVariablesSorter30);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter32 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter30);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter30.visitCode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str8, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str13, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "()D" + "'", str18, "()D");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "()Lbyte;" + "'", str19, "()Lbyte;");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test21897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21897");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        enhancer0.setAttemptLoad(false);
        enhancer0.setUseCache(true);
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy10 = null;
        enhancer9.setNamingPolicy(namingPolicy10);
        java.lang.ClassLoader classLoader12 = null;
        enhancer9.setClassLoader(classLoader12);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter14 = null;
        enhancer9.setCallbackFilter(callbackFilter14);
        enhancer9.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy19 = null;
        enhancer18.setNamingPolicy(namingPolicy19);
        java.lang.ClassLoader classLoader21 = null;
        enhancer18.setClassLoader(classLoader21);
        boolean boolean23 = enhancer18.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy24 = enhancer18.getNamingPolicy();
        org.mockito.cglib.proxy.Callback callback25 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray26 = new org.mockito.cglib.proxy.Callback[] { callback25 };
        enhancer18.setCallbacks(callbackArray26);
        enhancer9.setCallbacks(callbackArray26);
        enhancer0.setCallbacks(callbackArray26);
        java.lang.ClassLoader classLoader30 = enhancer0.getClassLoader();
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(namingPolicy24);
        org.junit.Assert.assertNotNull(callbackArray26);
        org.junit.Assert.assertNotNull(classLoader30);
    }

    @Test
    public void test21898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21898");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo4 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo5 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.asm.ClassVisitor classVisitor7 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter(classVisitor7);
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter(classVisitor7);
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter9.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter9);
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        org.mockito.asm.ClassVisitor classVisitor13 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter(classVisitor13);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter(classVisitor13);
        org.mockito.cglib.core.ClassInfo classInfo16 = classEmitter15.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter15);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter17);
        classEmitter12.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter22);
        org.mockito.cglib.core.ClassInfo classInfo24 = classEmitter23.getClassInfo();
        classEmitter6.setTarget((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter6);
        org.mockito.cglib.core.Signature signature30 = new org.mockito.cglib.core.Signature("byte", "()B");
        org.mockito.asm.Type type31 = signature30.getReturnType();
        java.lang.String str32 = signature30.getName();
        org.mockito.asm.Type[] typeArray33 = signature30.getArgumentTypes();
        java.lang.String str34 = signature30.toString();
        org.mockito.asm.Type type35 = signature30.getReturnType();
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy38 = null;
        enhancer37.setNamingPolicy(namingPolicy38);
        java.lang.ClassLoader classLoader40 = null;
        enhancer37.setClassLoader(classLoader40);
        java.lang.Class<?> wildcardClass42 = enhancer37.getClass();
        java.lang.String str43 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass42);
        boolean boolean44 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass42);
        int int46 = type45.getSize();
        org.mockito.cglib.core.Signature signature49 = new org.mockito.cglib.core.Signature("", "hi!");
        java.lang.String str50 = signature49.getDescriptor();
        java.lang.String str51 = signature49.getDescriptor();
        boolean boolean52 = type45.equals((java.lang.Object) signature49);
        org.mockito.cglib.core.Local local53 = new org.mockito.cglib.core.Local(4, type45);
        java.lang.String str54 = type45.getInternalName();
        java.lang.String str55 = type45.getInternalName();
        java.lang.String str56 = type45.getDescriptor();
        org.mockito.cglib.proxy.Enhancer enhancer58 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy59 = null;
        enhancer58.setNamingPolicy(namingPolicy59);
        java.lang.ClassLoader classLoader61 = null;
        enhancer58.setClassLoader(classLoader61);
        java.lang.Class<?> wildcardClass63 = enhancer58.getClass();
        java.lang.String str64 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass63);
        boolean boolean65 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass63);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass63);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type type69 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.cglib.core.Local local70 = new org.mockito.cglib.core.Local(124, type69);
        boolean boolean72 = type69.equals((java.lang.Object) 0);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.BYTE_TYPE;
        int int75 = type74.getSize();
        java.lang.String str76 = type74.getClassName();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type78 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type79 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type80 = org.mockito.asm.Type.BYTE_TYPE;
        int int81 = type80.getSize();
        java.lang.String str82 = type80.getClassName();
        org.mockito.asm.Type type83 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str84 = type83.getClassName();
        org.mockito.asm.Type[] typeArray85 = new org.mockito.asm.Type[] { type77, type78, type79, type80, type83 };
        org.mockito.cglib.core.Signature signature86 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type74, typeArray85);
        java.lang.String str87 = org.mockito.asm.Type.getMethodDescriptor(type69, typeArray85);
        java.lang.String str88 = org.mockito.asm.Type.getMethodDescriptor(type67, typeArray85);
        org.mockito.cglib.core.Signature signature89 = new org.mockito.cglib.core.Signature("L1219436756", type66, typeArray85);
        java.lang.String str90 = org.mockito.asm.Type.getMethodDescriptor(type45, typeArray85);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.core.CodeEmitter codeEmitter91 = classEmitter6.begin_method(104, signature30, typeArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: classInfo is null! org.mockito.cglib.core.ClassEmitter@5d6ce479");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo4);
        org.junit.Assert.assertNull(classInfo5);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo16);
        org.junit.Assert.assertNull(classInfo24);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "byte" + "'", str32, "byte");
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "byte()B" + "'", str34, "byte()B");
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str43, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str54, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str55, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str56, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str64, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "byte" + "'", str76, "byte");
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "byte" + "'", str82, "byte");
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "double" + "'", str84, "double");
        org.junit.Assert.assertNotNull(typeArray85);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "(CBBBD)B" + "'", str87, "(CBBBD)B");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "(CBBBD)I" + "'", str88, "(CBBBD)I");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;" + "'", str90, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;");
    }

    @Test
    public void test21899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21899");
        org.mockito.asm.Type type4 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.cglib.core.Local local5 = new org.mockito.cglib.core.Local(124, type4);
        boolean boolean7 = type4.equals((java.lang.Object) 0);
        org.mockito.asm.Type[] typeArray8 = new org.mockito.asm.Type[] {};
        org.mockito.cglib.core.Signature signature9 = new org.mockito.cglib.core.Signature("L1176429447", type4, typeArray8);
        org.mockito.asm.MethodVisitor methodVisitor14 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter15 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor14);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter16 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter15);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter17 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter15);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter18 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter17);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter19 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter18);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter20 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter19);
        boolean boolean21 = type4.equals((java.lang.Object) localVariablesSorter20);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter22 = new org.mockito.cglib.core.LocalVariablesSorter(156, "()LLL1591299506;;", (org.mockito.asm.MethodVisitor) localVariablesSorter20);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter20.visitTypeInsn(41, "(CBBBD)LL131442752;");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test21900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21900");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = null;
        enhancer5.setNamingPolicy(namingPolicy6);
        java.lang.ClassLoader classLoader8 = null;
        enhancer5.setClassLoader(classLoader8);
        java.lang.Class<?> wildcardClass10 = enhancer5.getClass();
        java.lang.String str11 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass10);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = null;
        enhancer12.setNamingPolicy(namingPolicy13);
        java.lang.ClassLoader classLoader15 = null;
        enhancer12.setClassLoader(classLoader15);
        java.lang.Class<?> wildcardClass17 = enhancer12.getClass();
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass10, wildcardClass17 };
        enhancer0.setInterfaces(classArray18);
        boolean boolean20 = enhancer0.getAttemptLoad();
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = null;
        enhancer24.setNamingPolicy(namingPolicy25);
        java.lang.ClassLoader classLoader27 = null;
        enhancer24.setClassLoader(classLoader27);
        boolean boolean29 = enhancer24.getAttemptLoad();
        boolean boolean30 = enhancer24.getUseCache();
        org.mockito.cglib.proxy.Callback callback31 = null;
        enhancer24.setCallback(callback31);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter33 = null;
        enhancer24.setCallbackFilter(callbackFilter33);
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = null;
        enhancer35.setNamingPolicy(namingPolicy36);
        java.lang.ClassLoader classLoader38 = null;
        enhancer35.setClassLoader(classLoader38);
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy41 = null;
        enhancer40.setNamingPolicy(namingPolicy41);
        java.lang.ClassLoader classLoader43 = null;
        enhancer40.setClassLoader(classLoader43);
        java.lang.Class<?> wildcardClass45 = enhancer40.getClass();
        java.lang.String str46 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass45);
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy48 = null;
        enhancer47.setNamingPolicy(namingPolicy48);
        java.lang.ClassLoader classLoader50 = null;
        enhancer47.setClassLoader(classLoader50);
        java.lang.Class<?> wildcardClass52 = enhancer47.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[] { wildcardClass45, wildcardClass52 };
        enhancer35.setInterfaces(classArray53);
        boolean boolean55 = enhancer35.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer56 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy57 = null;
        enhancer56.setNamingPolicy(namingPolicy57);
        java.lang.ClassLoader classLoader59 = null;
        enhancer56.setClassLoader(classLoader59);
        java.lang.Class<?> wildcardClass61 = enhancer56.getClass();
        enhancer35.setSuperclass((java.lang.Class) wildcardClass61);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass61);
        java.lang.String str64 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass61);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass61);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass61);
        boolean boolean67 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass61);
        java.lang.String str68 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass61);
        java.lang.String str69 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass61);
        enhancer24.setSuperclass((java.lang.Class) wildcardClass61);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass61);
        org.mockito.cglib.proxy.Callback callback72 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj73 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass61, callback72);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str11, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str46, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str64, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str68, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str69, "org/mockito/cglib/proxy/Enhancer");
    }

    @Test
    public void test21901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21901");
        org.mockito.cglib.proxy.Enhancer enhancer3 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy4 = null;
        enhancer3.setNamingPolicy(namingPolicy4);
        java.lang.ClassLoader classLoader6 = null;
        enhancer3.setClassLoader(classLoader6);
        java.lang.Class<?> wildcardClass8 = enhancer3.getClass();
        java.lang.String str9 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass8);
        boolean boolean10 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass8);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass8);
        int int12 = type11.getSize();
        org.mockito.cglib.core.Local local13 = new org.mockito.cglib.core.Local(108, type11);
        org.mockito.cglib.core.Local local14 = new org.mockito.cglib.core.Local(108, type11);
        org.mockito.asm.Type type15 = local14.getType();
        java.lang.String str16 = type15.getClassName();
        org.mockito.asm.Type type17 = type15.getElementType();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type20 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray21 = new org.mockito.asm.Type[] {};
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray21);
        org.mockito.cglib.core.Signature signature23 = new org.mockito.cglib.core.Signature("double", type19, typeArray21);
        java.lang.String str24 = signature23.toString();
        org.mockito.asm.Type[] typeArray25 = signature23.getArgumentTypes();
        org.mockito.cglib.core.Signature signature26 = new org.mockito.cglib.core.Signature("org.mockito.cglib.proxy.Enhancer", type17, typeArray25);
        java.lang.String str27 = signature26.getName();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.getReturnType("Lorg/mockito/cglib/proxy/Enhancer;");
        java.lang.String str31 = type30.getDescriptor();
        java.lang.String str32 = type30.getDescriptor();
        org.mockito.cglib.core.Local local33 = new org.mockito.cglib.core.Local(125, type30);
        org.mockito.asm.Type type34 = local33.getType();
        boolean boolean35 = signature26.equals((java.lang.Object) type34);
        org.mockito.asm.Type type36 = type34.getElementType();
        java.lang.String str37 = type36.getDescriptor();
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str9, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.mockito.cglib.proxy.Enhancer" + "'", str16, "org.mockito.cglib.proxy.Enhancer");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "()D" + "'", str22, "()D");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "double()B" + "'", str24, "double()B");
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org.mockito.cglib.proxy.Enhancer" + "'", str27, "org.mockito.cglib.proxy.Enhancer");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str31, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str32, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Lg/mockito/cglib/proxy/Enhancer;" + "'", str37, "Lg/mockito/cglib/proxy/Enhancer;");
    }

    @Test
    public void test21902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21902");
        org.mockito.cglib.core.Signature signature2 = new org.mockito.cglib.core.Signature("hi!", "B");
        java.lang.String str3 = signature2.toString();
        org.mockito.asm.ClassVisitor classVisitor4 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter(classVisitor4);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter(classVisitor4);
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter6);
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter7);
        boolean boolean9 = signature2.equals((java.lang.Object) classEmitter8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter(classVisitor11);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter(classVisitor11);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        classEmitter13.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.asm.ClassVisitor classVisitor19 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter(classVisitor19);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter(classVisitor19);
        org.mockito.cglib.core.ClassInfo classInfo22 = classEmitter21.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.asm.ClassVisitor classVisitor25 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter(classVisitor25);
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter(classVisitor25);
        org.mockito.cglib.core.ClassInfo classInfo28 = classEmitter27.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo29 = classEmitter27.getClassInfo();
        classEmitter24.setTarget((org.mockito.asm.ClassVisitor) classEmitter27);
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter27);
        org.mockito.asm.ClassVisitor classVisitor32 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter(classVisitor32);
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter(classVisitor32);
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter(classVisitor32);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter35);
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter36);
        classEmitter8.setTarget((org.mockito.asm.ClassVisitor) classEmitter36);
        org.mockito.cglib.core.ClassInfo classInfo39 = classEmitter36.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor40 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter(classVisitor40);
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter(classVisitor40);
        org.mockito.cglib.core.ClassInfo classInfo43 = classEmitter42.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter42);
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter44);
        org.mockito.asm.ClassVisitor classVisitor46 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter47 = new org.mockito.cglib.core.ClassEmitter(classVisitor46);
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter(classVisitor46);
        org.mockito.cglib.core.ClassInfo classInfo49 = classEmitter48.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo50 = classEmitter48.getClassInfo();
        classEmitter45.setTarget((org.mockito.asm.ClassVisitor) classEmitter48);
        org.mockito.asm.ClassVisitor classVisitor52 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter53 = new org.mockito.cglib.core.ClassEmitter(classVisitor52);
        org.mockito.cglib.core.ClassEmitter classEmitter54 = new org.mockito.cglib.core.ClassEmitter(classVisitor52);
        org.mockito.cglib.core.ClassInfo classInfo55 = classEmitter54.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter56 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter54);
        org.mockito.cglib.core.ClassEmitter classEmitter57 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter56);
        org.mockito.cglib.core.ClassEmitter classEmitter58 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter57);
        org.mockito.cglib.core.ClassEmitter classEmitter59 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter57);
        classEmitter48.setTarget((org.mockito.asm.ClassVisitor) classEmitter57);
        org.mockito.cglib.core.ClassEmitter classEmitter61 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter62 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter61);
        org.mockito.cglib.core.ClassInfo classInfo63 = classEmitter62.getClassInfo();
        classEmitter57.setTarget((org.mockito.asm.ClassVisitor) classEmitter62);
        classEmitter36.setTarget((org.mockito.asm.ClassVisitor) classEmitter57);
        org.mockito.cglib.core.ClassInfo classInfo66 = classEmitter57.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo67 = classEmitter57.getClassInfo();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!B" + "'", str3, "hi!B");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(classInfo22);
        org.junit.Assert.assertNull(classInfo28);
        org.junit.Assert.assertNull(classInfo29);
        org.junit.Assert.assertNull(classInfo39);
        org.junit.Assert.assertNull(classInfo43);
        org.junit.Assert.assertNull(classInfo49);
        org.junit.Assert.assertNull(classInfo50);
        org.junit.Assert.assertNull(classInfo55);
        org.junit.Assert.assertNull(classInfo63);
        org.junit.Assert.assertNull(classInfo66);
        org.junit.Assert.assertNull(classInfo67);
    }

    @Test
    public void test21903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21903");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;");
        org.mockito.asm.Type type2 = type1.getElementType();
        int int4 = type2.getOpcode(161);
        java.lang.String str5 = type2.getDescriptor();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 165 + "'", int4 == 165);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Lg/mockito/cglib/proxy/Enhancer;" + "'", str5, "Lg/mockito/cglib/proxy/Enhancer;");
    }

    @Test
    public void test21904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21904");
        org.mockito.asm.MethodVisitor methodVisitor6 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(102, "()Lorg/mockito/cglib/proxy/Enhancer;", (org.mockito.asm.MethodVisitor) localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter13 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter12);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter13.visitVarInsn(41, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21905");
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor1);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter(classVisitor1);
        org.mockito.cglib.core.ClassInfo classInfo4 = classEmitter3.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter3);
        java.lang.Class<?> wildcardClass6 = classEmitter5.getClass();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        int int8 = type7.getSize();
        java.lang.String str9 = type7.getDescriptor();
        org.mockito.asm.Type[] typeArray11 = org.mockito.asm.Type.getArgumentTypes("()B");
        org.mockito.cglib.core.Signature signature12 = new org.mockito.cglib.core.Signature("L1402297421", type7, typeArray11);
        java.lang.String str13 = signature12.getDescriptor();
        org.mockito.asm.Type type14 = signature12.getReturnType();
        org.mockito.asm.Type type15 = signature12.getReturnType();
        java.lang.Class<?> wildcardClass16 = type15.getClass();
        java.lang.String str17 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass16);
        org.mockito.cglib.core.Signature signature21 = new org.mockito.cglib.core.Signature("", "hi!");
        java.lang.String str22 = signature21.getDescriptor();
        java.lang.String str23 = signature21.getDescriptor();
        java.lang.String str24 = signature21.getDescriptor();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = null;
        enhancer28.setNamingPolicy(namingPolicy29);
        java.lang.ClassLoader classLoader31 = null;
        enhancer28.setClassLoader(classLoader31);
        java.lang.Class<?> wildcardClass33 = enhancer28.getClass();
        java.lang.String str34 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass33);
        enhancer25.setSuperclass((java.lang.Class) wildcardClass33);
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy37 = null;
        enhancer36.setNamingPolicy(namingPolicy37);
        java.lang.ClassLoader classLoader39 = null;
        enhancer36.setClassLoader(classLoader39);
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy42 = null;
        enhancer41.setNamingPolicy(namingPolicy42);
        java.lang.ClassLoader classLoader44 = null;
        enhancer41.setClassLoader(classLoader44);
        java.lang.Class<?> wildcardClass46 = enhancer41.getClass();
        java.lang.String str47 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass46);
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy49 = null;
        enhancer48.setNamingPolicy(namingPolicy49);
        java.lang.ClassLoader classLoader51 = null;
        enhancer48.setClassLoader(classLoader51);
        java.lang.Class<?> wildcardClass53 = enhancer48.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[] { wildcardClass46, wildcardClass53 };
        enhancer36.setInterfaces(classArray54);
        enhancer25.setInterfaces(classArray54);
        boolean boolean57 = signature21.equals((java.lang.Object) classArray54);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter58 = null;
        org.mockito.cglib.proxy.Enhancer enhancer59 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy60 = null;
        enhancer59.setNamingPolicy(namingPolicy60);
        java.lang.ClassLoader classLoader62 = null;
        enhancer59.setClassLoader(classLoader62);
        boolean boolean64 = enhancer59.getAttemptLoad();
        java.lang.ClassLoader classLoader65 = enhancer59.getClassLoader();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter66 = null;
        enhancer59.setCallbackFilter(callbackFilter66);
        org.mockito.cglib.proxy.Enhancer enhancer68 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy69 = null;
        enhancer68.setNamingPolicy(namingPolicy69);
        java.lang.ClassLoader classLoader71 = null;
        enhancer68.setClassLoader(classLoader71);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter73 = null;
        enhancer68.setCallbackFilter(callbackFilter73);
        enhancer68.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer77 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy78 = null;
        enhancer77.setNamingPolicy(namingPolicy78);
        java.lang.ClassLoader classLoader80 = null;
        enhancer77.setClassLoader(classLoader80);
        boolean boolean82 = enhancer77.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy83 = enhancer77.getNamingPolicy();
        org.mockito.cglib.proxy.Callback callback84 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray85 = new org.mockito.cglib.proxy.Callback[] { callback84 };
        enhancer77.setCallbacks(callbackArray85);
        enhancer68.setCallbacks(callbackArray85);
        enhancer59.setCallbacks(callbackArray85);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj89 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass16, classArray54, callbackFilter58, callbackArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Lorg/mockito/cglib/core/ClassEmitter;" + "'", str9, "Lorg/mockito/cglib/core/ClassEmitter;");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "()Lorg/mockito/cglib/core/ClassEmitter;" + "'", str13, "()Lorg/mockito/cglib/core/ClassEmitter;");
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org/mockito/asm/Type" + "'", str17, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str34, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str47, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(classLoader65);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(namingPolicy83);
        org.junit.Assert.assertNotNull(callbackArray85);
    }

    @Test
    public void test21906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21906");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.BYTE_TYPE;
        int int2 = type1.getSize();
        java.lang.String str3 = type1.getClassName();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type5 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type6 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type7 = org.mockito.asm.Type.BYTE_TYPE;
        int int8 = type7.getSize();
        java.lang.String str9 = type7.getClassName();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str11 = type10.getClassName();
        org.mockito.asm.Type[] typeArray12 = new org.mockito.asm.Type[] { type4, type5, type6, type7, type10 };
        org.mockito.cglib.core.Signature signature13 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type1, typeArray12);
        java.lang.String str14 = signature13.toString();
        java.lang.String str15 = signature13.getName();
        org.mockito.asm.Label label16 = new org.mockito.asm.Label();
        java.lang.Object obj17 = label16.info;
        java.lang.String str18 = label16.toString();
        java.lang.String str19 = label16.toString();
        boolean boolean20 = signature13.equals((java.lang.Object) label16);
        org.mockito.asm.ClassVisitor classVisitor21 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter26);
        classEmitter23.setTarget((org.mockito.asm.ClassVisitor) classEmitter27);
        org.mockito.asm.ClassVisitor classVisitor29 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter(classVisitor29);
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter(classVisitor29);
        org.mockito.cglib.core.ClassInfo classInfo32 = classEmitter31.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter31);
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter33);
        org.mockito.asm.ClassVisitor classVisitor35 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter(classVisitor35);
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter(classVisitor35);
        org.mockito.cglib.core.ClassInfo classInfo38 = classEmitter37.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo39 = classEmitter37.getClassInfo();
        classEmitter34.setTarget((org.mockito.asm.ClassVisitor) classEmitter37);
        classEmitter27.setTarget((org.mockito.asm.ClassVisitor) classEmitter37);
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter27);
        org.mockito.asm.ClassVisitor classVisitor43 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter(classVisitor43);
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter(classVisitor43);
        org.mockito.cglib.core.ClassInfo classInfo46 = classEmitter45.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter47 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter45);
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter47);
        org.mockito.asm.ClassVisitor classVisitor49 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter50 = new org.mockito.cglib.core.ClassEmitter(classVisitor49);
        org.mockito.cglib.core.ClassEmitter classEmitter51 = new org.mockito.cglib.core.ClassEmitter(classVisitor49);
        org.mockito.cglib.core.ClassInfo classInfo52 = classEmitter51.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo53 = classEmitter51.getClassInfo();
        classEmitter48.setTarget((org.mockito.asm.ClassVisitor) classEmitter51);
        org.mockito.asm.ClassVisitor classVisitor55 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter56 = new org.mockito.cglib.core.ClassEmitter(classVisitor55);
        org.mockito.cglib.core.ClassEmitter classEmitter57 = new org.mockito.cglib.core.ClassEmitter(classVisitor55);
        org.mockito.cglib.core.ClassInfo classInfo58 = classEmitter57.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter59 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter57);
        org.mockito.cglib.core.ClassEmitter classEmitter60 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter59);
        org.mockito.asm.ClassVisitor classVisitor61 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter62 = new org.mockito.cglib.core.ClassEmitter(classVisitor61);
        org.mockito.cglib.core.ClassEmitter classEmitter63 = new org.mockito.cglib.core.ClassEmitter(classVisitor61);
        org.mockito.cglib.core.ClassInfo classInfo64 = classEmitter63.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter65 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter63);
        org.mockito.cglib.core.ClassEmitter classEmitter66 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter65);
        classEmitter60.setTarget((org.mockito.asm.ClassVisitor) classEmitter65);
        org.mockito.cglib.core.ClassEmitter classEmitter68 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter60);
        classEmitter51.setTarget((org.mockito.asm.ClassVisitor) classEmitter60);
        classEmitter42.setTarget((org.mockito.asm.ClassVisitor) classEmitter51);
        org.mockito.asm.ClassVisitor classVisitor71 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter72 = new org.mockito.cglib.core.ClassEmitter(classVisitor71);
        org.mockito.cglib.core.ClassEmitter classEmitter73 = new org.mockito.cglib.core.ClassEmitter(classVisitor71);
        org.mockito.cglib.core.ClassInfo classInfo74 = classEmitter73.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter75 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter73);
        org.mockito.cglib.core.ClassEmitter classEmitter76 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter75);
        org.mockito.cglib.core.ClassEmitter classEmitter77 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter76);
        org.mockito.cglib.core.ClassInfo classInfo78 = classEmitter76.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor79 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter80 = new org.mockito.cglib.core.ClassEmitter(classVisitor79);
        org.mockito.cglib.core.ClassEmitter classEmitter81 = new org.mockito.cglib.core.ClassEmitter(classVisitor79);
        org.mockito.cglib.core.ClassEmitter classEmitter82 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter81);
        org.mockito.cglib.core.ClassEmitter classEmitter83 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter82);
        classEmitter76.setTarget((org.mockito.asm.ClassVisitor) classEmitter83);
        org.mockito.cglib.core.ClassInfo classInfo85 = classEmitter83.getClassInfo();
        classEmitter51.setTarget((org.mockito.asm.ClassVisitor) classEmitter83);
        label16.info = classEmitter51;
        java.lang.String[] strArray97 = new java.lang.String[] { "L172715535", "L1818002221", "L607717655", "L1706487927", "L1954473854" };
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.MethodVisitor methodVisitor98 = classEmitter51.visitMethod((int) (byte) 1, "L1685441510", "L2111805462", "L1909071159", strArray97);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: classInfo is null! org.mockito.cglib.core.ClassEmitter@194af92");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "byte" + "'", str3, "byte");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "byte" + "'", str9, "byte");
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "double" + "'", str11, "double");
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B" + "'", str14, "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str15, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNull(obj17);
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "L1090648098" + "'", str18, "L1090648098");
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1090648098" + "'", str19, "L1090648098");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(classInfo32);
        org.junit.Assert.assertNull(classInfo38);
        org.junit.Assert.assertNull(classInfo39);
        org.junit.Assert.assertNull(classInfo46);
        org.junit.Assert.assertNull(classInfo52);
        org.junit.Assert.assertNull(classInfo53);
        org.junit.Assert.assertNull(classInfo58);
        org.junit.Assert.assertNull(classInfo64);
        org.junit.Assert.assertNull(classInfo74);
        org.junit.Assert.assertNull(classInfo78);
        org.junit.Assert.assertNull(classInfo85);
        org.junit.Assert.assertNotNull(strArray97);
    }

    @Test
    public void test21907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21907");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getObjectType("byte");
        label0.info = "byte";
        java.lang.String str4 = label0.toString();
        org.mockito.asm.MethodVisitor methodVisitor9 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter10);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        label0.info = localVariablesSorter11;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter14 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter15 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter14);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter16 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter15);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter15.visitMaxs((int) (byte) 100, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type2);
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L1282107597" + "'", str4, "L1282107597");
    }

    @Test
    public void test21908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21908");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.Object obj1 = label0.info;
        java.lang.String str2 = label0.toString();
        java.lang.Object obj3 = label0.info;
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy5 = null;
        enhancer4.setNamingPolicy(namingPolicy5);
        java.lang.ClassLoader classLoader7 = null;
        enhancer4.setClassLoader(classLoader7);
        enhancer4.setUseFactory(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy11 = enhancer4.getNamingPolicy();
        label0.info = enhancer4;
        java.lang.String str13 = label0.toString();
        org.mockito.asm.MethodVisitor methodVisitor18 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter19 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor18);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter20 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter19);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter21 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter19);
        label0.info = localVariablesSorter19;
        org.mockito.cglib.core.Signature signature25 = new org.mockito.cglib.core.Signature("L1183194368", "(CBBBD)Lorg/mockito/cglib/core/ClassEmitter;");
        label0.info = "L1183194368";
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = null;
        enhancer27.setNamingPolicy(namingPolicy28);
        java.lang.ClassLoader classLoader30 = null;
        enhancer27.setClassLoader(classLoader30);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter32 = null;
        enhancer27.setCallbackFilter(callbackFilter32);
        enhancer27.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy37 = null;
        enhancer36.setNamingPolicy(namingPolicy37);
        java.lang.ClassLoader classLoader39 = null;
        enhancer36.setClassLoader(classLoader39);
        boolean boolean41 = enhancer36.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy42 = enhancer36.getNamingPolicy();
        org.mockito.cglib.proxy.Callback callback43 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray44 = new org.mockito.cglib.proxy.Callback[] { callback43 };
        enhancer36.setCallbacks(callbackArray44);
        enhancer27.setCallbacks(callbackArray44);
        enhancer27.setAttemptLoad(true);
        enhancer27.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy51 = enhancer27.getStrategy();
        enhancer27.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter54 = null;
        enhancer27.setCallbackFilter(callbackFilter54);
        java.lang.ClassLoader classLoader56 = enhancer27.getClassLoader();
        label0.info = enhancer27;
        java.lang.ClassLoader classLoader58 = enhancer27.getClassLoader();
        org.junit.Assert.assertNull(obj1);
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "L1060716855" + "'", str2, "L1060716855");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(namingPolicy11);
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "L1060716855" + "'", str13, "L1060716855");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(namingPolicy42);
        org.junit.Assert.assertNotNull(callbackArray44);
        org.junit.Assert.assertNotNull(generatorStrategy51);
        org.junit.Assert.assertNotNull(classLoader56);
        org.junit.Assert.assertNotNull(classLoader58);
    }

    @Test
    public void test21909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21909");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        java.lang.Class<?> wildcardClass5 = enhancer0.getClass();
        java.lang.String str6 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass5);
        boolean boolean7 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        boolean boolean11 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        enhancer13.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy17 = null;
        enhancer16.setNamingPolicy(namingPolicy17);
        java.lang.ClassLoader classLoader19 = null;
        enhancer16.setClassLoader(classLoader19);
        java.lang.Class<?> wildcardClass21 = enhancer16.getClass();
        java.lang.String str22 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass21);
        enhancer13.setSuperclass((java.lang.Class) wildcardClass21);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = null;
        enhancer24.setNamingPolicy(namingPolicy25);
        java.lang.ClassLoader classLoader27 = null;
        enhancer24.setClassLoader(classLoader27);
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy30 = null;
        enhancer29.setNamingPolicy(namingPolicy30);
        java.lang.ClassLoader classLoader32 = null;
        enhancer29.setClassLoader(classLoader32);
        java.lang.Class<?> wildcardClass34 = enhancer29.getClass();
        java.lang.String str35 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass34);
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy37 = null;
        enhancer36.setNamingPolicy(namingPolicy37);
        java.lang.ClassLoader classLoader39 = null;
        enhancer36.setClassLoader(classLoader39);
        java.lang.Class<?> wildcardClass41 = enhancer36.getClass();
        java.lang.Class[] classArray42 = new java.lang.Class[] { wildcardClass34, wildcardClass41 };
        enhancer24.setInterfaces(classArray42);
        enhancer13.setInterfaces(classArray42);
        java.util.List list45 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.proxy.Enhancer.getMethods((java.lang.Class) wildcardClass5, classArray42, list45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str6, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str22, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str35, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(classArray42);
    }

    @Test
    public void test21910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21910");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter3 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type11 = org.mockito.asm.Type.BYTE_TYPE;
        boolean boolean13 = type11.equals((java.lang.Object) 9);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type16 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray17 = new org.mockito.asm.Type[] {};
        java.lang.String str18 = org.mockito.asm.Type.getMethodDescriptor(type16, typeArray17);
        org.mockito.cglib.core.Signature signature19 = new org.mockito.cglib.core.Signature("double", type15, typeArray17);
        java.lang.String str20 = org.mockito.asm.Type.getMethodDescriptor(type11, typeArray17);
        java.lang.String str21 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray17);
        java.lang.String str22 = type10.getClassName();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.BYTE_TYPE;
        int int25 = type24.getSize();
        java.lang.String str26 = type24.getClassName();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type28 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type29 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type30 = org.mockito.asm.Type.BYTE_TYPE;
        int int31 = type30.getSize();
        java.lang.String str32 = type30.getClassName();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str34 = type33.getClassName();
        org.mockito.asm.Type[] typeArray35 = new org.mockito.asm.Type[] { type27, type28, type29, type30, type33 };
        org.mockito.cglib.core.Signature signature36 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type24, typeArray35);
        org.mockito.asm.Type[] typeArray37 = signature36.getArgumentTypes();
        org.mockito.cglib.core.Signature signature38 = new org.mockito.cglib.core.Signature("D", type10, typeArray37);
        org.mockito.asm.Label label39 = new org.mockito.asm.Label();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type42 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] {};
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray43);
        org.mockito.cglib.core.Signature signature45 = new org.mockito.cglib.core.Signature("double", type41, typeArray43);
        label39.info = typeArray43;
        boolean boolean47 = signature38.equals((java.lang.Object) typeArray43);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.BYTE_TYPE;
        int int51 = type50.getSize();
        java.lang.String str52 = type50.getClassName();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type54 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type55 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type56 = org.mockito.asm.Type.BYTE_TYPE;
        int int57 = type56.getSize();
        java.lang.String str58 = type56.getClassName();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str60 = type59.getClassName();
        org.mockito.asm.Type[] typeArray61 = new org.mockito.asm.Type[] { type53, type54, type55, type56, type59 };
        org.mockito.cglib.core.Signature signature62 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type50, typeArray61);
        java.lang.String str63 = signature62.getDescriptor();
        org.mockito.asm.Type[] typeArray64 = signature62.getArgumentTypes();
        org.mockito.asm.Type[] typeArray65 = signature62.getArgumentTypes();
        org.mockito.asm.Type[] typeArray66 = signature62.getArgumentTypes();
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter6.visitFrame(149, 7, (java.lang.Object[]) typeArray43, 52, (java.lang.Object[]) typeArray66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "()D" + "'", str18, "()D");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "()B" + "'", str20, "()B");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "()F" + "'", str21, "()F");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "float" + "'", str22, "float");
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "byte" + "'", str26, "byte");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "byte" + "'", str32, "byte");
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "double" + "'", str34, "double");
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "()D" + "'", str44, "()D");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "byte" + "'", str52, "byte");
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "byte" + "'", str58, "byte");
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "double" + "'", str60, "double");
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(CBBBD)B" + "'", str63, "(CBBBD)B");
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertNotNull(typeArray66);
    }

    @Test
    public void test21911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21911");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.asm.ClassVisitor classVisitor6 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassInfo classInfo9 = classEmitter8.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter10);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.asm.ClassVisitor classVisitor19 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter(classVisitor19);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter(classVisitor19);
        org.mockito.cglib.core.ClassInfo classInfo22 = classEmitter21.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.asm.ClassVisitor classVisitor25 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter(classVisitor25);
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter(classVisitor25);
        org.mockito.cglib.core.ClassInfo classInfo28 = classEmitter27.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo29 = classEmitter27.getClassInfo();
        classEmitter24.setTarget((org.mockito.asm.ClassVisitor) classEmitter27);
        org.mockito.asm.ClassVisitor classVisitor31 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter(classVisitor31);
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter(classVisitor31);
        org.mockito.cglib.core.ClassInfo classInfo34 = classEmitter33.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter33);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter35);
        org.mockito.asm.ClassVisitor classVisitor37 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter(classVisitor37);
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter(classVisitor37);
        org.mockito.cglib.core.ClassInfo classInfo40 = classEmitter39.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter39);
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter41);
        classEmitter36.setTarget((org.mockito.asm.ClassVisitor) classEmitter41);
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter36);
        classEmitter27.setTarget((org.mockito.asm.ClassVisitor) classEmitter36);
        org.mockito.cglib.core.ClassInfo classInfo46 = classEmitter27.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo47 = classEmitter27.getClassInfo();
        classEmitter18.setTarget((org.mockito.asm.ClassVisitor) classEmitter27);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.core.CodeEmitter codeEmitter49 = classEmitter18.getStaticHook();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo9);
        org.junit.Assert.assertNull(classInfo22);
        org.junit.Assert.assertNull(classInfo28);
        org.junit.Assert.assertNull(classInfo29);
        org.junit.Assert.assertNull(classInfo34);
        org.junit.Assert.assertNull(classInfo40);
        org.junit.Assert.assertNull(classInfo46);
        org.junit.Assert.assertNull(classInfo47);
    }

    @Test
    public void test21912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21912");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        java.lang.ClassLoader classLoader9 = null;
        enhancer0.setClassLoader(classLoader9);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = null;
        enhancer0.setStrategy(generatorStrategy11);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = null;
        enhancer13.setNamingPolicy(namingPolicy14);
        java.lang.ClassLoader classLoader16 = null;
        enhancer13.setClassLoader(classLoader16);
        boolean boolean18 = enhancer13.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer13.getStrategy();
        enhancer0.setStrategy(generatorStrategy19);
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy23 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = null;
        enhancer24.setNamingPolicy(namingPolicy25);
        java.lang.ClassLoader classLoader27 = null;
        enhancer24.setClassLoader(classLoader27);
        boolean boolean29 = enhancer24.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy30 = enhancer24.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy30);
        java.lang.ClassLoader classLoader32 = enhancer0.getClassLoader();
        boolean boolean33 = enhancer0.getAttemptLoad();
        boolean boolean34 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader35 = enhancer0.getClassLoader();
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertNotNull(generatorStrategy23);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(namingPolicy30);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(classLoader35);
    }

    @Test
    public void test21913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21913");
        org.mockito.asm.MethodVisitor methodVisitor6 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(102, "()Lorg/mockito/cglib/proxy/Enhancer;", (org.mockito.asm.MethodVisitor) localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter13 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter12);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter14 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter13);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter15 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter14);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter16 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter14);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.AnnotationVisitor annotationVisitor19 = localVariablesSorter14.visitAnnotation("Lorg/mockito/cglib/core/DefaultGeneratorStrategy;", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21914");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("D");
        java.lang.String str2 = type1.toString();
        int int3 = type1.getSize();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "LD;" + "'", str2, "LD;");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    }

    @Test
    public void test21915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21915");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = null;
        enhancer5.setNamingPolicy(namingPolicy6);
        java.lang.ClassLoader classLoader8 = null;
        enhancer5.setClassLoader(classLoader8);
        java.lang.Class<?> wildcardClass10 = enhancer5.getClass();
        java.lang.String str11 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass10);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = null;
        enhancer12.setNamingPolicy(namingPolicy13);
        java.lang.ClassLoader classLoader15 = null;
        enhancer12.setClassLoader(classLoader15);
        java.lang.Class<?> wildcardClass17 = enhancer12.getClass();
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass10, wildcardClass17 };
        enhancer0.setInterfaces(classArray18);
        enhancer0.setUseCache(false);
        boolean boolean22 = enhancer0.getUseCache();
        boolean boolean23 = enhancer0.getAttemptLoad();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type26 = org.mockito.asm.Type.BYTE_TYPE;
        boolean boolean28 = type26.equals((java.lang.Object) 9);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type31 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray32 = new org.mockito.asm.Type[] {};
        java.lang.String str33 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray32);
        org.mockito.cglib.core.Signature signature34 = new org.mockito.cglib.core.Signature("double", type30, typeArray32);
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type26, typeArray32);
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type25, typeArray32);
        java.lang.String str37 = type25.getClassName();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.BYTE_TYPE;
        int int40 = type39.getSize();
        java.lang.String str41 = type39.getClassName();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type43 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type44 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type45 = org.mockito.asm.Type.BYTE_TYPE;
        int int46 = type45.getSize();
        java.lang.String str47 = type45.getClassName();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str49 = type48.getClassName();
        org.mockito.asm.Type[] typeArray50 = new org.mockito.asm.Type[] { type42, type43, type44, type45, type48 };
        org.mockito.cglib.core.Signature signature51 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type39, typeArray50);
        org.mockito.asm.Type[] typeArray52 = signature51.getArgumentTypes();
        org.mockito.cglib.core.Signature signature53 = new org.mockito.cglib.core.Signature("D", type25, typeArray52);
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = null;
        enhancer54.setNamingPolicy(namingPolicy55);
        boolean boolean57 = enhancer54.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer58 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy59 = null;
        enhancer58.setNamingPolicy(namingPolicy59);
        java.lang.ClassLoader classLoader61 = null;
        enhancer58.setClassLoader(classLoader61);
        enhancer58.setUseFactory(true);
        boolean boolean65 = enhancer58.getUseCache();
        java.lang.Class<?> wildcardClass66 = enhancer58.getClass();
        enhancer54.setSuperclass((java.lang.Class) wildcardClass66);
        boolean boolean68 = type25.equals((java.lang.Object) wildcardClass66);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass66);
        boolean boolean70 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass66);
        java.lang.String str71 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass66);
        java.lang.String str72 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str11, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "()D" + "'", str33, "()D");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "()B" + "'", str35, "()B");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "()F" + "'", str36, "()F");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "float" + "'", str37, "float");
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "byte" + "'", str41, "byte");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "byte" + "'", str47, "byte");
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "double" + "'", str49, "double");
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str71, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str72, "org/mockito/cglib/proxy/Enhancer");
    }

    @Test
    public void test21916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21916");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        boolean boolean5 = enhancer0.getAttemptLoad();
        java.lang.Class class6 = null;
        enhancer0.setSuperclass(class6);
        org.mockito.cglib.proxy.Callback callback8 = null;
        enhancer0.setCallback(callback8);
        java.lang.ClassLoader classLoader10 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter11 = null;
        enhancer0.setCallbackFilter(callbackFilter11);
        enhancer0.setUseCache(false);
        enhancer0.setAttemptLoad(true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(classLoader10);
    }

    @Test
    public void test21917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21917");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo4 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo5 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassInfo classInfo9 = classEmitter8.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor10 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter(classVisitor10);
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter(classVisitor10);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.cglib.core.ClassInfo classInfo14 = classEmitter12.getClassInfo();
        classEmitter8.setTarget((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.asm.ClassVisitor classVisitor16 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter(classVisitor16);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter(classVisitor16);
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter18);
        classEmitter12.setTarget((org.mockito.asm.ClassVisitor) classEmitter19);
        classEmitter6.setTarget((org.mockito.asm.ClassVisitor) classEmitter12);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type22 = classEmitter12.getClassType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo4);
        org.junit.Assert.assertNull(classInfo5);
        org.junit.Assert.assertNull(classInfo9);
        org.junit.Assert.assertNull(classInfo14);
    }

    @Test
    public void test21918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21918");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassInfo classInfo2 = classEmitter1.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor3 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter(classVisitor3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter(classVisitor3);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassInfo classInfo7 = classEmitter5.getClassInfo();
        classEmitter1.setTarget((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.asm.ClassVisitor classVisitor9 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter(classVisitor9);
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter(classVisitor9);
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.cglib.core.ClassInfo classInfo14 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo15 = classEmitter5.getClassInfo();
        org.junit.Assert.assertNull(classInfo2);
        org.junit.Assert.assertNull(classInfo7);
        org.junit.Assert.assertNull(classInfo14);
        org.junit.Assert.assertNull(classInfo15);
    }

    @Test
    public void test21919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21919");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(96, "(CBBBD)LLorg/mockito/cglib/proxy/Enhancer;(CBBBD)B;", (org.mockito.asm.MethodVisitor) localVariablesSorter11);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter13 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.AnnotationVisitor annotationVisitor17 = localVariablesSorter13.visitParameterAnnotation(68, "L38565477", true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21920");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.BYTE_TYPE;
        int int2 = type1.getSize();
        java.lang.String str3 = type1.getClassName();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type5 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type6 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type7 = org.mockito.asm.Type.BYTE_TYPE;
        int int8 = type7.getSize();
        java.lang.String str9 = type7.getClassName();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str11 = type10.getClassName();
        org.mockito.asm.Type[] typeArray12 = new org.mockito.asm.Type[] { type4, type5, type6, type7, type10 };
        org.mockito.cglib.core.Signature signature13 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type1, typeArray12);
        java.lang.String str14 = signature13.getDescriptor();
        java.lang.String str15 = signature13.getDescriptor();
        java.lang.String str16 = signature13.getName();
        java.lang.String str17 = signature13.toString();
        org.mockito.asm.Type[] typeArray18 = signature13.getArgumentTypes();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "byte" + "'", str3, "byte");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "byte" + "'", str9, "byte");
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "double" + "'", str11, "double");
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(CBBBD)B" + "'", str14, "(CBBBD)B");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(CBBBD)B" + "'", str15, "(CBBBD)B");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str16, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B" + "'", str17, "Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B");
        org.junit.Assert.assertNotNull(typeArray18);
    }

    @Test
    public void test21921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21921");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassInfo classInfo7 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo8 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo9 = classEmitter5.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor10 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter(classVisitor10);
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter(classVisitor10);
        org.mockito.cglib.core.ClassInfo classInfo13 = classEmitter12.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter15);
        org.mockito.cglib.core.ClassInfo classInfo17 = classEmitter15.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter15);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter15);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter15);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter22);
        java.lang.Object obj28 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.FieldVisitor fieldVisitor29 = classEmitter22.visitField(40, "", "L792473147", "L1524489750", obj28);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo7);
        org.junit.Assert.assertNull(classInfo8);
        org.junit.Assert.assertNull(classInfo9);
        org.junit.Assert.assertNull(classInfo13);
        org.junit.Assert.assertNull(classInfo17);
    }

    @Test
    public void test21922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21922");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassInfo classInfo5 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter2.visitInnerClass("", "", "L68402930", 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo5);
    }

    @Test
    public void test21923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21923");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = null;
        enhancer5.setNamingPolicy(namingPolicy6);
        java.lang.ClassLoader classLoader8 = null;
        enhancer5.setClassLoader(classLoader8);
        java.lang.Class<?> wildcardClass10 = enhancer5.getClass();
        java.lang.String str11 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass10);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = null;
        enhancer12.setNamingPolicy(namingPolicy13);
        java.lang.ClassLoader classLoader15 = null;
        enhancer12.setClassLoader(classLoader15);
        java.lang.Class<?> wildcardClass17 = enhancer12.getClass();
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass10, wildcardClass17 };
        enhancer0.setInterfaces(classArray18);
        boolean boolean20 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = null;
        enhancer21.setNamingPolicy(namingPolicy22);
        java.lang.ClassLoader classLoader24 = null;
        enhancer21.setClassLoader(classLoader24);
        java.lang.Class<?> wildcardClass26 = enhancer21.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass26);
        java.lang.String str29 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass26);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass26);
        java.lang.String str31 = type30.getInternalName();
        java.lang.String str32 = type30.toString();
        java.lang.String str33 = type30.toString();
        org.mockito.asm.Type type34 = type30.getElementType();
        int int35 = type34.getSize();
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str11, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str29, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str31, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str32, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str33, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
    }

    @Test
    public void test21924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21924");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassInfo classInfo7 = classEmitter5.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassInfo classInfo16 = classEmitter15.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor17 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter(classVisitor17);
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter(classVisitor17);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter19);
        org.mockito.cglib.core.ClassInfo classInfo21 = classEmitter19.getClassInfo();
        classEmitter15.setTarget((org.mockito.asm.ClassVisitor) classEmitter19);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter15);
        org.mockito.cglib.core.ClassInfo classInfo24 = classEmitter5.getClassInfo();
        // The following exception was thrown during execution in test generation
        try {
            classEmitter5.visitInnerClass("L1828780518", "", "L1133227622", 139);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo7);
        org.junit.Assert.assertNull(classInfo16);
        org.junit.Assert.assertNull(classInfo21);
        org.junit.Assert.assertNull(classInfo24);
    }

    @Test
    public void test21925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21925");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        java.lang.ClassLoader classLoader9 = null;
        enhancer0.setClassLoader(classLoader9);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = null;
        enhancer0.setStrategy(generatorStrategy11);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = null;
        enhancer13.setNamingPolicy(namingPolicy14);
        java.lang.ClassLoader classLoader16 = null;
        enhancer13.setClassLoader(classLoader16);
        boolean boolean18 = enhancer13.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer13.getStrategy();
        enhancer0.setStrategy(generatorStrategy19);
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = null;
        enhancer21.setNamingPolicy(namingPolicy22);
        java.lang.ClassLoader classLoader24 = null;
        enhancer21.setClassLoader(classLoader24);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter26 = null;
        enhancer21.setCallbackFilter(callbackFilter26);
        org.mockito.cglib.proxy.Callback callback28 = null;
        enhancer21.setCallback(callback28);
        java.lang.ClassLoader classLoader30 = null;
        enhancer21.setClassLoader(classLoader30);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy32 = null;
        enhancer21.setStrategy(generatorStrategy32);
        org.mockito.cglib.proxy.Enhancer enhancer34 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy35 = null;
        enhancer34.setNamingPolicy(namingPolicy35);
        java.lang.ClassLoader classLoader37 = null;
        enhancer34.setClassLoader(classLoader37);
        boolean boolean39 = enhancer34.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy40 = enhancer34.getStrategy();
        enhancer21.setStrategy(generatorStrategy40);
        enhancer0.setStrategy(generatorStrategy40);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter43 = null;
        enhancer0.setCallbackFilter(callbackFilter43);
        enhancer0.setInterceptDuringConstruction(false);
        boolean boolean47 = enhancer0.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy48 = enhancer0.getStrategy();
        enhancer0.setUseFactory(true);
        boolean boolean51 = enhancer0.getUseCache();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class52 = enhancer0.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: createClass does not accept callbacks");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(generatorStrategy40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(generatorStrategy48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test21926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21926");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter3);
        org.mockito.asm.ClassVisitor classVisitor5 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter(classVisitor5);
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter(classVisitor5);
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter9);
        classEmitter4.setTarget((org.mockito.asm.ClassVisitor) classEmitter9);
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter9);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter12);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.AnnotationVisitor annotationVisitor17 = classEmitter14.visitAnnotation("L2137743602", true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21927");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.asm.ClassVisitor classVisitor5 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter(classVisitor5);
        org.mockito.asm.ClassVisitor classVisitor7 = null;
        classEmitter6.setTarget(classVisitor7);
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter6);
        org.mockito.asm.ClassVisitor classVisitor10 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter(classVisitor10);
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter(classVisitor10);
        org.mockito.cglib.core.ClassInfo classInfo13 = classEmitter12.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo14 = classEmitter12.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo15 = classEmitter12.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.asm.ClassVisitor classVisitor17 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter(classVisitor17);
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter(classVisitor17);
        org.mockito.cglib.core.ClassInfo classInfo20 = classEmitter19.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter19);
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        org.mockito.asm.ClassVisitor classVisitor23 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter(classVisitor23);
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter(classVisitor23);
        org.mockito.cglib.core.ClassInfo classInfo26 = classEmitter25.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter25);
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter27);
        classEmitter22.setTarget((org.mockito.asm.ClassVisitor) classEmitter27);
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter27.setTarget((org.mockito.asm.ClassVisitor) classEmitter30);
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter30);
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter32);
        org.mockito.cglib.core.ClassInfo classInfo34 = classEmitter33.getClassInfo();
        classEmitter16.setTarget((org.mockito.asm.ClassVisitor) classEmitter33);
        classEmitter6.setTarget((org.mockito.asm.ClassVisitor) classEmitter33);
        classEmitter2.setTarget((org.mockito.asm.ClassVisitor) classEmitter6);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.AnnotationVisitor annotationVisitor40 = classEmitter2.visitAnnotation("L1215566912", true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo13);
        org.junit.Assert.assertNull(classInfo14);
        org.junit.Assert.assertNull(classInfo15);
        org.junit.Assert.assertNull(classInfo20);
        org.junit.Assert.assertNull(classInfo26);
        org.junit.Assert.assertNull(classInfo34);
    }

    @Test
    public void test21928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21928");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        java.lang.Class<?> wildcardClass5 = enhancer0.getClass();
        java.lang.String str6 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass5);
        boolean boolean7 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        int int11 = type10.getSize();
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = null;
        enhancer12.setNamingPolicy(namingPolicy13);
        java.lang.ClassLoader classLoader15 = null;
        enhancer12.setClassLoader(classLoader15);
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy18 = null;
        enhancer17.setNamingPolicy(namingPolicy18);
        java.lang.ClassLoader classLoader20 = null;
        enhancer17.setClassLoader(classLoader20);
        java.lang.Class<?> wildcardClass22 = enhancer17.getClass();
        java.lang.String str23 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = null;
        enhancer24.setNamingPolicy(namingPolicy25);
        java.lang.ClassLoader classLoader27 = null;
        enhancer24.setClassLoader(classLoader27);
        java.lang.Class<?> wildcardClass29 = enhancer24.getClass();
        java.lang.Class[] classArray30 = new java.lang.Class[] { wildcardClass22, wildcardClass29 };
        enhancer12.setInterfaces(classArray30);
        boolean boolean32 = enhancer12.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy34 = null;
        enhancer33.setNamingPolicy(namingPolicy34);
        java.lang.ClassLoader classLoader36 = null;
        enhancer33.setClassLoader(classLoader36);
        java.lang.Class<?> wildcardClass38 = enhancer33.getClass();
        enhancer12.setSuperclass((java.lang.Class) wildcardClass38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass38);
        java.lang.String str41 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass38);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass38);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.BYTE_TYPE;
        int int45 = type44.getSize();
        java.lang.String str46 = type44.getClassName();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type48 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type49 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type50 = org.mockito.asm.Type.BYTE_TYPE;
        int int51 = type50.getSize();
        java.lang.String str52 = type50.getClassName();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str54 = type53.getClassName();
        org.mockito.asm.Type[] typeArray55 = new org.mockito.asm.Type[] { type47, type48, type49, type50, type53 };
        org.mockito.cglib.core.Signature signature56 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type44, typeArray55);
        java.lang.String str57 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray55);
        java.lang.String str58 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray55);
        org.mockito.asm.Type type59 = type10.getElementType();
        org.mockito.cglib.core.ClassEmitter classEmitter60 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter61 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter60);
        boolean boolean62 = type59.equals((java.lang.Object) classEmitter60);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter60.end_class();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str6, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str23, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str41, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "byte" + "'", str46, "byte");
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "byte" + "'", str52, "byte");
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "double" + "'", str54, "double");
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;" + "'", str57, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;" + "'", str58, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test21929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21929");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        java.lang.ClassLoader classLoader9 = null;
        enhancer0.setClassLoader(classLoader9);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = null;
        enhancer13.setNamingPolicy(namingPolicy14);
        java.lang.ClassLoader classLoader16 = null;
        enhancer13.setClassLoader(classLoader16);
        boolean boolean18 = enhancer13.getAttemptLoad();
        enhancer13.setUseCache(true);
        java.lang.ClassLoader classLoader21 = enhancer13.getClassLoader();
        enhancer0.setClassLoader(classLoader21);
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy24 = null;
        enhancer23.setNamingPolicy(namingPolicy24);
        java.lang.ClassLoader classLoader26 = null;
        enhancer23.setClassLoader(classLoader26);
        boolean boolean28 = enhancer23.getAttemptLoad();
        java.lang.ClassLoader classLoader29 = enhancer23.getClassLoader();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter30 = null;
        enhancer23.setCallbackFilter(callbackFilter30);
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy33 = null;
        enhancer32.setNamingPolicy(namingPolicy33);
        boolean boolean35 = enhancer32.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy37 = null;
        enhancer36.setNamingPolicy(namingPolicy37);
        java.lang.ClassLoader classLoader39 = null;
        enhancer36.setClassLoader(classLoader39);
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy42 = null;
        enhancer41.setNamingPolicy(namingPolicy42);
        java.lang.ClassLoader classLoader44 = null;
        enhancer41.setClassLoader(classLoader44);
        java.lang.Class<?> wildcardClass46 = enhancer41.getClass();
        java.lang.String str47 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass46);
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy49 = null;
        enhancer48.setNamingPolicy(namingPolicy49);
        java.lang.ClassLoader classLoader51 = null;
        enhancer48.setClassLoader(classLoader51);
        java.lang.Class<?> wildcardClass53 = enhancer48.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[] { wildcardClass46, wildcardClass53 };
        enhancer36.setInterfaces(classArray54);
        enhancer32.setInterfaces(classArray54);
        enhancer23.setInterfaces(classArray54);
        enhancer0.setInterfaces(classArray54);
        org.mockito.cglib.proxy.Enhancer enhancer59 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy60 = null;
        enhancer59.setNamingPolicy(namingPolicy60);
        java.lang.ClassLoader classLoader62 = null;
        enhancer59.setClassLoader(classLoader62);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter64 = null;
        enhancer59.setCallbackFilter(callbackFilter64);
        enhancer59.setUseCache(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy68 = enhancer59.getNamingPolicy();
        enhancer59.setAttemptLoad(false);
        enhancer59.setUseCache(false);
        java.lang.ClassLoader classLoader73 = enhancer59.getClassLoader();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy74 = enhancer59.getStrategy();
        enhancer0.setStrategy(generatorStrategy74);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy76 = enhancer0.getStrategy();
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classLoader21);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str47, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(namingPolicy68);
        org.junit.Assert.assertNotNull(classLoader73);
        org.junit.Assert.assertNotNull(generatorStrategy74);
        org.junit.Assert.assertNotNull(generatorStrategy76);
    }

    @Test
    public void test21930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21930");
        org.mockito.cglib.core.Signature signature2 = new org.mockito.cglib.core.Signature("L1622326596", "");
        java.lang.String str3 = signature2.getDescriptor();
        java.lang.String str4 = signature2.getName();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L1622326596" + "'", str4, "L1622326596");
    }

    @Test
    public void test21931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21931");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.Object obj1 = label0.info;
        java.lang.String str2 = label0.toString();
        java.lang.String str3 = label0.toString();
        java.lang.String str4 = label0.toString();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.BYTE_TYPE;
        int int6 = type5.getSize();
        java.lang.String str7 = type5.getClassName();
        int int8 = type5.getSort();
        label0.info = type5;
        java.lang.String str10 = type5.toString();
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy12 = null;
        enhancer11.setNamingPolicy(namingPolicy12);
        java.lang.ClassLoader classLoader14 = null;
        enhancer11.setClassLoader(classLoader14);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter16 = null;
        enhancer11.setCallbackFilter(callbackFilter16);
        org.mockito.cglib.proxy.Callback callback18 = null;
        enhancer11.setCallback(callback18);
        java.lang.ClassLoader classLoader20 = null;
        enhancer11.setClassLoader(classLoader20);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy22 = null;
        enhancer11.setStrategy(generatorStrategy22);
        org.mockito.cglib.core.NamingPolicy namingPolicy24 = enhancer11.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = enhancer11.getNamingPolicy();
        org.mockito.cglib.proxy.Callback callback26 = null;
        enhancer11.setCallback(callback26);
        enhancer11.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer11.setAttemptLoad(false);
        boolean boolean32 = type5.equals((java.lang.Object) enhancer11);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy33 = enhancer11.getStrategy();
        java.lang.Class<?> wildcardClass34 = generatorStrategy33.getClass();
        java.lang.String str35 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass34);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass34);
        org.junit.Assert.assertNull(obj1);
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "L1368085942" + "'", str2, "L1368085942");
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "L1368085942" + "'", str3, "L1368085942");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L1368085942" + "'", str4, "L1368085942");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "byte" + "'", str7, "byte");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "B" + "'", str10, "B");
        org.junit.Assert.assertNotNull(namingPolicy24);
        org.junit.Assert.assertNotNull(namingPolicy25);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(generatorStrategy33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Lorg/mockito/cglib/core/DefaultGeneratorStrategy;" + "'", str35, "Lorg/mockito/cglib/core/DefaultGeneratorStrategy;");
        org.junit.Assert.assertNotNull(type36);
    }

    @Test
    public void test21932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21932");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        enhancer0.setUseCache(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy9 = enhancer0.getStrategy();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy10 = enhancer0.getStrategy();
        org.junit.Assert.assertNotNull(generatorStrategy9);
        org.junit.Assert.assertNotNull(generatorStrategy10);
    }

    @Test
    public void test21933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21933");
        org.mockito.asm.Label label4 = new org.mockito.asm.Label();
        java.lang.Object obj5 = label4.info;
        java.lang.String str6 = label4.toString();
        java.lang.Object obj7 = label4.info;
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy9 = null;
        enhancer8.setNamingPolicy(namingPolicy9);
        java.lang.ClassLoader classLoader11 = null;
        enhancer8.setClassLoader(classLoader11);
        enhancer8.setUseFactory(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy15 = enhancer8.getNamingPolicy();
        label4.info = enhancer8;
        java.lang.String str17 = label4.toString();
        org.mockito.asm.MethodVisitor methodVisitor22 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter23 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor22);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter24 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter23);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter25 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter23);
        label4.info = localVariablesSorter23;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter27 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter23);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter28 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter27);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter29 = new org.mockito.cglib.core.LocalVariablesSorter(2, "(CBBBD)LLorg.mockito.cglib.proxy.Enhancer;(CBBBD)B;", (org.mockito.asm.MethodVisitor) localVariablesSorter27);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter30 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter27);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter31 = new org.mockito.cglib.core.LocalVariablesSorter(137, "L1079432751", (org.mockito.asm.MethodVisitor) localVariablesSorter30);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj5);
// flaky:         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "L1431041718" + "'", str6, "L1431041718");
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(namingPolicy15);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "L1431041718" + "'", str17, "L1431041718");
    }

    @Test
    public void test21934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21934");
        org.mockito.asm.MethodVisitor methodVisitor6 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(102, "()Lorg/mockito/cglib/proxy/Enhancer;", (org.mockito.asm.MethodVisitor) localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter13 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter12);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter14 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter13);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter15 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter13);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter15.visitVarInsn(158, 39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21935");
        org.mockito.asm.MethodVisitor methodVisitor6 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(102, "()Lorg/mockito/cglib/proxy/Enhancer;", (org.mockito.asm.MethodVisitor) localVariablesSorter7);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter7.visitMaxs((int) (short) -1, 139);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21936");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassInfo classInfo2 = classEmitter1.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor3 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter(classVisitor3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter(classVisitor3);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassInfo classInfo7 = classEmitter5.getClassInfo();
        classEmitter1.setTarget((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.asm.ClassVisitor classVisitor9 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter(classVisitor9);
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter(classVisitor9);
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.asm.ClassVisitor classVisitor14 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter19);
        classEmitter16.setTarget((org.mockito.asm.ClassVisitor) classEmitter20);
        classEmitter12.setTarget((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.Signature signature26 = new org.mockito.cglib.core.Signature("hi!", "B");
        java.lang.String str27 = signature26.toString();
        org.mockito.asm.ClassVisitor classVisitor28 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter(classVisitor28);
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter(classVisitor28);
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter30);
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter31);
        boolean boolean33 = signature26.equals((java.lang.Object) classEmitter32);
        classEmitter23.setTarget((org.mockito.asm.ClassVisitor) classEmitter32);
        org.mockito.cglib.core.ClassInfo classInfo35 = classEmitter32.getClassInfo();
        // The following exception was thrown during execution in test generation
        try {
            classEmitter32.visitOuterClass("L951325639", "L38292834", "L1912331275");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo2);
        org.junit.Assert.assertNull(classInfo7);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!B" + "'", str27, "hi!B");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(classInfo35);
    }

    @Test
    public void test21937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21937");
        org.mockito.cglib.core.Signature signature2 = new org.mockito.cglib.core.Signature("L1622326596", "V");
        org.mockito.asm.ClassVisitor classVisitor3 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter(classVisitor3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter(classVisitor3);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassInfo classInfo7 = classEmitter5.getClassInfo();
        boolean boolean8 = signature2.equals((java.lang.Object) classEmitter5);
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor10 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter(classVisitor10);
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter(classVisitor10);
        classEmitter9.setTarget((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter12);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter18);
        org.mockito.cglib.core.ClassInfo classInfo20 = classEmitter19.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor21 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.cglib.core.ClassInfo classInfo25 = classEmitter23.getClassInfo();
        classEmitter19.setTarget((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.asm.ClassVisitor classVisitor27 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter(classVisitor27);
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter(classVisitor27);
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter29);
        classEmitter23.setTarget((org.mockito.asm.ClassVisitor) classEmitter30);
        org.mockito.asm.ClassVisitor classVisitor32 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter(classVisitor32);
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter(classVisitor32);
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter34);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter35);
        classEmitter23.setTarget((org.mockito.asm.ClassVisitor) classEmitter36);
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter36);
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter36);
        classEmitter16.setTarget((org.mockito.asm.ClassVisitor) classEmitter36);
        // The following exception was thrown during execution in test generation
        try {
            int int41 = classEmitter36.getAccess();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(classInfo20);
        org.junit.Assert.assertNull(classInfo25);
    }

    @Test
    public void test21938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21938");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = null;
        enhancer5.setNamingPolicy(namingPolicy6);
        java.lang.ClassLoader classLoader8 = null;
        enhancer5.setClassLoader(classLoader8);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter10 = null;
        enhancer5.setCallbackFilter(callbackFilter10);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = null;
        enhancer12.setNamingPolicy(namingPolicy13);
        java.lang.ClassLoader classLoader15 = null;
        enhancer12.setClassLoader(classLoader15);
        boolean boolean17 = enhancer12.getAttemptLoad();
        java.lang.Class class18 = null;
        enhancer12.setSuperclass(class18);
        org.mockito.cglib.core.NamingPolicy namingPolicy20 = enhancer12.getNamingPolicy();
        enhancer5.setNamingPolicy(namingPolicy20);
        enhancer0.setNamingPolicy(namingPolicy20);
        boolean boolean23 = enhancer0.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy24 = enhancer0.getStrategy();
        enhancer0.setUseFactory(true);
        boolean boolean27 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy30 = null;
        enhancer29.setNamingPolicy(namingPolicy30);
        java.lang.ClassLoader classLoader32 = null;
        enhancer29.setClassLoader(classLoader32);
        java.lang.Class<?> wildcardClass34 = enhancer29.getClass();
        java.lang.String str35 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass34);
        boolean boolean36 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass34);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.Type type40 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.cglib.core.Local local41 = new org.mockito.cglib.core.Local(124, type40);
        boolean boolean43 = type40.equals((java.lang.Object) 0);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.BYTE_TYPE;
        int int46 = type45.getSize();
        java.lang.String str47 = type45.getClassName();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type49 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type50 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type51 = org.mockito.asm.Type.BYTE_TYPE;
        int int52 = type51.getSize();
        java.lang.String str53 = type51.getClassName();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str55 = type54.getClassName();
        org.mockito.asm.Type[] typeArray56 = new org.mockito.asm.Type[] { type48, type49, type50, type51, type54 };
        org.mockito.cglib.core.Signature signature57 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type45, typeArray56);
        java.lang.String str58 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray56);
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type38, typeArray56);
        org.mockito.cglib.core.Signature signature60 = new org.mockito.cglib.core.Signature("L1219436756", type37, typeArray56);
        java.lang.String str61 = signature60.getName();
        java.lang.String str62 = signature60.getName();
        org.mockito.cglib.proxy.Enhancer enhancer63 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy64 = null;
        enhancer63.setNamingPolicy(namingPolicy64);
        java.lang.ClassLoader classLoader66 = null;
        enhancer63.setClassLoader(classLoader66);
        org.mockito.cglib.proxy.Enhancer enhancer68 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy69 = null;
        enhancer68.setNamingPolicy(namingPolicy69);
        java.lang.ClassLoader classLoader71 = null;
        enhancer68.setClassLoader(classLoader71);
        java.lang.Class<?> wildcardClass73 = enhancer68.getClass();
        java.lang.String str74 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass73);
        org.mockito.cglib.proxy.Enhancer enhancer75 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy76 = null;
        enhancer75.setNamingPolicy(namingPolicy76);
        java.lang.ClassLoader classLoader78 = null;
        enhancer75.setClassLoader(classLoader78);
        java.lang.Class<?> wildcardClass80 = enhancer75.getClass();
        java.lang.Class[] classArray81 = new java.lang.Class[] { wildcardClass73, wildcardClass80 };
        enhancer63.setInterfaces(classArray81);
        boolean boolean83 = enhancer63.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer84 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy85 = null;
        enhancer84.setNamingPolicy(namingPolicy85);
        java.lang.ClassLoader classLoader87 = null;
        enhancer84.setClassLoader(classLoader87);
        java.lang.Class<?> wildcardClass89 = enhancer84.getClass();
        enhancer63.setSuperclass((java.lang.Class) wildcardClass89);
        org.mockito.asm.Type type91 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass89);
        boolean boolean92 = signature60.equals((java.lang.Object) type91);
        java.lang.Class<?> wildcardClass93 = type91.getClass();
        boolean boolean94 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass93);
        java.lang.String str95 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass93);
        java.lang.String str96 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass93);
        java.lang.String str97 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass93);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.setCallbackType((java.lang.Class) wildcardClass93);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown callback type class org.mockito.asm.Type");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(namingPolicy20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(generatorStrategy24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str35, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "byte" + "'", str47, "byte");
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "byte" + "'", str53, "byte");
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "double" + "'", str55, "double");
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(CBBBD)B" + "'", str58, "(CBBBD)B");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(CBBBD)I" + "'", str59, "(CBBBD)I");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "L1219436756" + "'", str61, "L1219436756");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "L1219436756" + "'", str62, "L1219436756");
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str74, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(classArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str95, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "org/mockito/asm/Type" + "'", str96, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str97, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test21939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21939");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        boolean boolean5 = enhancer0.getAttemptLoad();
        enhancer0.setUseCache(true);
        java.lang.ClassLoader classLoader8 = enhancer0.getClassLoader();
        boolean boolean9 = enhancer0.getAttemptLoad();
        enhancer0.setUseCache(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setSerialVersionUID((java.lang.Long) 10L);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test21940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21940");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassInfo classInfo11 = classEmitter10.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassInfo classInfo15 = classEmitter13.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor16 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter(classVisitor16);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter(classVisitor16);
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter18);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter19);
        classEmitter13.setTarget((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassInfo classInfo22 = classEmitter13.getClassInfo();
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.asm.ClassVisitor classVisitor25 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter(classVisitor25);
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter(classVisitor25);
        org.mockito.cglib.core.ClassInfo classInfo28 = classEmitter27.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter27);
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.asm.ClassVisitor classVisitor31 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter(classVisitor31);
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter(classVisitor31);
        org.mockito.cglib.core.ClassInfo classInfo34 = classEmitter33.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo35 = classEmitter33.getClassInfo();
        classEmitter30.setTarget((org.mockito.asm.ClassVisitor) classEmitter33);
        org.mockito.asm.ClassVisitor classVisitor37 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter(classVisitor37);
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter(classVisitor37);
        org.mockito.cglib.core.ClassInfo classInfo40 = classEmitter39.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter39);
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter41);
        org.mockito.cglib.core.ClassEmitter classEmitter43 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter42);
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter42);
        classEmitter33.setTarget((org.mockito.asm.ClassVisitor) classEmitter42);
        org.mockito.cglib.core.ClassInfo classInfo46 = classEmitter42.getClassInfo();
        classEmitter24.setTarget((org.mockito.asm.ClassVisitor) classEmitter42);
        org.mockito.asm.Attribute attribute48 = null;
        // The following exception was thrown during execution in test generation
        try {
            classEmitter42.visitAttribute(attribute48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo11);
        org.junit.Assert.assertNull(classInfo15);
        org.junit.Assert.assertNull(classInfo22);
        org.junit.Assert.assertNull(classInfo28);
        org.junit.Assert.assertNull(classInfo34);
        org.junit.Assert.assertNull(classInfo35);
        org.junit.Assert.assertNull(classInfo40);
        org.junit.Assert.assertNull(classInfo46);
    }

    @Test
    public void test21941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21941");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter12.visitIntInsn(148, 160);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21942");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        boolean boolean5 = enhancer0.getAttemptLoad();
        java.lang.Class class6 = null;
        enhancer0.setSuperclass(class6);
        org.mockito.cglib.proxy.Callback callback8 = null;
        enhancer0.setCallback(callback8);
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy11 = null;
        enhancer10.setNamingPolicy(namingPolicy11);
        java.lang.ClassLoader classLoader13 = null;
        enhancer10.setClassLoader(classLoader13);
        boolean boolean15 = enhancer10.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer10.getNamingPolicy();
        boolean boolean17 = enhancer10.getAttemptLoad();
        enhancer10.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = null;
        enhancer20.setNamingPolicy(namingPolicy21);
        java.lang.ClassLoader classLoader23 = null;
        enhancer20.setClassLoader(classLoader23);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter25 = null;
        enhancer20.setCallbackFilter(callbackFilter25);
        org.mockito.cglib.proxy.Callback callback27 = null;
        enhancer20.setCallback(callback27);
        java.lang.ClassLoader classLoader29 = null;
        enhancer20.setClassLoader(classLoader29);
        enhancer20.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy34 = null;
        enhancer33.setNamingPolicy(namingPolicy34);
        java.lang.ClassLoader classLoader36 = null;
        enhancer33.setClassLoader(classLoader36);
        boolean boolean38 = enhancer33.getAttemptLoad();
        enhancer33.setUseCache(true);
        java.lang.ClassLoader classLoader41 = enhancer33.getClassLoader();
        enhancer20.setClassLoader(classLoader41);
        enhancer10.setClassLoader(classLoader41);
        enhancer0.setClassLoader(classLoader41);
        java.lang.ClassLoader classLoader45 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter46 = null;
        enhancer0.setCallbackFilter(callbackFilter46);
        enhancer0.setUseFactory(false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(classLoader41);
        org.junit.Assert.assertNotNull(classLoader45);
    }

    @Test
    public void test21943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21943");
        org.mockito.asm.MethodVisitor methodVisitor6 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter13 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter14 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter13);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter15 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter14);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter16 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter15);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter17 = new org.mockito.cglib.core.LocalVariablesSorter(161, "", (org.mockito.asm.MethodVisitor) localVariablesSorter15);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21944");
        org.mockito.cglib.core.Signature signature4 = new org.mockito.cglib.core.Signature("L842693193", "L1804543443");
        org.mockito.asm.MethodVisitor methodVisitor9 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter10);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter10);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter13 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter10);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter14 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter13);
        boolean boolean15 = signature4.equals((java.lang.Object) localVariablesSorter14);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter16 = new org.mockito.cglib.core.LocalVariablesSorter(0, "()B", (org.mockito.asm.MethodVisitor) localVariablesSorter14);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter14.visitIincInsn((int) (byte) 10, 22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test21945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21945");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassInfo classInfo2 = classEmitter1.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor3 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter(classVisitor3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter(classVisitor3);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassInfo classInfo7 = classEmitter5.getClassInfo();
        classEmitter1.setTarget((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.asm.ClassVisitor classVisitor9 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter(classVisitor9);
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter(classVisitor9);
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassInfo classInfo16 = classEmitter14.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor17 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter(classVisitor17);
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter(classVisitor17);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter19);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        classEmitter14.setTarget((org.mockito.asm.ClassVisitor) classEmitter21);
        classEmitter1.setTarget((org.mockito.asm.ClassVisitor) classEmitter21);
        org.mockito.cglib.core.ClassInfo classInfo24 = classEmitter1.getClassInfo();
        java.lang.String[] strArray30 = null;
        // The following exception was thrown during execution in test generation
        try {
            classEmitter1.visit(64, 150, "LL1635907023;", "L1450796465", "Lorg.mockito.cglib.proxy.Enhancer;(CBBBD)B", strArray30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo2);
        org.junit.Assert.assertNull(classInfo7);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNull(classInfo16);
        org.junit.Assert.assertNull(classInfo24);
    }

    @Test
    public void test21946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21946");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassInfo classInfo8 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter9);
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter(classVisitor11);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter(classVisitor11);
        org.mockito.cglib.core.ClassInfo classInfo14 = classEmitter13.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter15);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.asm.ClassVisitor classVisitor19 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter(classVisitor19);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter(classVisitor19);
        org.mockito.cglib.core.ClassInfo classInfo22 = classEmitter21.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.asm.ClassVisitor classVisitor25 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter(classVisitor25);
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter(classVisitor25);
        org.mockito.cglib.core.ClassInfo classInfo28 = classEmitter27.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo29 = classEmitter27.getClassInfo();
        classEmitter24.setTarget((org.mockito.asm.ClassVisitor) classEmitter27);
        org.mockito.asm.ClassVisitor classVisitor31 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter(classVisitor31);
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter(classVisitor31);
        org.mockito.cglib.core.ClassInfo classInfo34 = classEmitter33.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter33);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter35);
        org.mockito.asm.ClassVisitor classVisitor37 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter(classVisitor37);
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter(classVisitor37);
        org.mockito.cglib.core.ClassInfo classInfo40 = classEmitter39.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter39);
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter41);
        classEmitter36.setTarget((org.mockito.asm.ClassVisitor) classEmitter41);
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter36);
        classEmitter27.setTarget((org.mockito.asm.ClassVisitor) classEmitter36);
        org.mockito.asm.ClassVisitor classVisitor46 = null;
        classEmitter27.setTarget(classVisitor46);
        classEmitter18.setTarget((org.mockito.asm.ClassVisitor) classEmitter27);
        org.mockito.cglib.core.ClassEmitter classEmitter49 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter27);
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classEmitter49);
        org.mockito.cglib.core.ClassEmitter classEmitter51 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter49);
        org.mockito.cglib.core.ClassInfo classInfo52 = classEmitter51.getClassInfo();
        // The following exception was thrown during execution in test generation
        try {
            classEmitter51.visitSource("L1144030456", "L1297306875");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo8);
        org.junit.Assert.assertNull(classInfo14);
        org.junit.Assert.assertNull(classInfo22);
        org.junit.Assert.assertNull(classInfo28);
        org.junit.Assert.assertNull(classInfo29);
        org.junit.Assert.assertNull(classInfo34);
        org.junit.Assert.assertNull(classInfo40);
        org.junit.Assert.assertNull(classInfo52);
    }

    @Test
    public void test21947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21947");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.BYTE_TYPE;
        int int2 = type1.getSize();
        java.lang.String str3 = type1.getClassName();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type5 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type6 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type7 = org.mockito.asm.Type.BYTE_TYPE;
        int int8 = type7.getSize();
        java.lang.String str9 = type7.getClassName();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str11 = type10.getClassName();
        org.mockito.asm.Type[] typeArray12 = new org.mockito.asm.Type[] { type4, type5, type6, type7, type10 };
        org.mockito.cglib.core.Signature signature13 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type1, typeArray12);
        java.lang.String str14 = signature13.getDescriptor();
        java.lang.String str15 = signature13.getDescriptor();
        java.lang.String str16 = signature13.getName();
        org.mockito.asm.Type type17 = signature13.getReturnType();
        org.mockito.asm.ClassVisitor classVisitor18 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter(classVisitor18);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter(classVisitor18);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter23);
        classEmitter20.setTarget((org.mockito.asm.ClassVisitor) classEmitter24);
        org.mockito.asm.ClassVisitor classVisitor26 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter(classVisitor26);
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter(classVisitor26);
        org.mockito.cglib.core.ClassInfo classInfo29 = classEmitter28.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter28);
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter30);
        org.mockito.asm.ClassVisitor classVisitor32 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter(classVisitor32);
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter(classVisitor32);
        org.mockito.cglib.core.ClassInfo classInfo35 = classEmitter34.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo36 = classEmitter34.getClassInfo();
        classEmitter31.setTarget((org.mockito.asm.ClassVisitor) classEmitter34);
        classEmitter24.setTarget((org.mockito.asm.ClassVisitor) classEmitter34);
        org.mockito.asm.ClassVisitor classVisitor39 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter40 = new org.mockito.cglib.core.ClassEmitter(classVisitor39);
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter(classVisitor39);
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter(classVisitor39);
        org.mockito.cglib.core.ClassEmitter classEmitter43 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter42);
        classEmitter24.setTarget((org.mockito.asm.ClassVisitor) classEmitter43);
        org.mockito.cglib.core.ClassInfo classInfo45 = classEmitter43.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter46 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter43);
        boolean boolean47 = signature13.equals((java.lang.Object) classEmitter43);
        org.mockito.cglib.core.Signature signature50 = new org.mockito.cglib.core.Signature("hi!", "B");
        java.lang.String str51 = signature50.getDescriptor();
        java.lang.String str52 = signature50.toString();
        org.mockito.asm.ClassVisitor classVisitor53 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter54 = new org.mockito.cglib.core.ClassEmitter(classVisitor53);
        org.mockito.cglib.core.ClassEmitter classEmitter55 = new org.mockito.cglib.core.ClassEmitter(classVisitor53);
        org.mockito.cglib.core.ClassInfo classInfo56 = classEmitter55.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter57 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter55);
        org.mockito.cglib.core.ClassEmitter classEmitter58 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter57);
        org.mockito.cglib.core.ClassEmitter classEmitter59 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter58);
        org.mockito.cglib.core.ClassInfo classInfo60 = classEmitter58.getClassInfo();
        boolean boolean61 = signature50.equals((java.lang.Object) classEmitter58);
        classEmitter43.setTarget((org.mockito.asm.ClassVisitor) classEmitter58);
        org.mockito.cglib.core.ClassEmitter classEmitter63 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter58);
        org.mockito.cglib.core.ClassEmitter classEmitter64 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter58);
        java.lang.String[] strArray75 = new java.lang.String[] { "L411125690", "L1776203091", "L932675476", "Z", "L321282523", "()LLg/mockito/cglib/proxy/Enhancer;;" };
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.MethodVisitor methodVisitor76 = classEmitter58.visitMethod(148, "L1653034640", "L1108605654", "L1728670374", strArray75);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: classInfo is null! org.mockito.cglib.core.ClassEmitter@11fc2382");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "byte" + "'", str3, "byte");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "byte" + "'", str9, "byte");
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "double" + "'", str11, "double");
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(CBBBD)B" + "'", str14, "(CBBBD)B");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(CBBBD)B" + "'", str15, "(CBBBD)B");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str16, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNull(classInfo29);
        org.junit.Assert.assertNull(classInfo35);
        org.junit.Assert.assertNull(classInfo36);
        org.junit.Assert.assertNull(classInfo45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "B" + "'", str51, "B");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!B" + "'", str52, "hi!B");
        org.junit.Assert.assertNull(classInfo56);
        org.junit.Assert.assertNull(classInfo60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strArray75);
    }

    @Test
    public void test21948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21948");
        org.mockito.cglib.proxy.Enhancer enhancer2 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = null;
        enhancer2.setNamingPolicy(namingPolicy3);
        java.lang.ClassLoader classLoader5 = null;
        enhancer2.setClassLoader(classLoader5);
        java.lang.Class<?> wildcardClass7 = enhancer2.getClass();
        java.lang.String str8 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass7);
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass7);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass7);
        int int11 = type10.getSize();
        org.mockito.cglib.core.Local local12 = new org.mockito.cglib.core.Local(108, type10);
        org.mockito.cglib.core.Local local13 = new org.mockito.cglib.core.Local(108, type10);
        org.mockito.asm.Type type14 = local13.getType();
        java.lang.String str15 = type14.getClassName();
        org.mockito.asm.Type type16 = type14.getElementType();
        org.mockito.asm.ClassVisitor classVisitor17 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter(classVisitor17);
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter(classVisitor17);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter19);
        boolean boolean21 = type14.equals((java.lang.Object) classEmitter20);
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.cglib.core.ClassInfo classInfo25 = classEmitter23.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor26 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter(classVisitor26);
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter(classVisitor26);
        org.mockito.cglib.core.ClassInfo classInfo29 = classEmitter28.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter28);
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter30);
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter31);
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter31);
        org.mockito.cglib.core.ClassInfo classInfo34 = classEmitter31.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter31);
        org.mockito.cglib.core.ClassInfo classInfo36 = classEmitter35.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter37);
        org.mockito.cglib.core.ClassInfo classInfo39 = classEmitter38.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor40 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter(classVisitor40);
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter(classVisitor40);
        org.mockito.cglib.core.ClassEmitter classEmitter43 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter42);
        org.mockito.cglib.core.ClassInfo classInfo44 = classEmitter42.getClassInfo();
        classEmitter38.setTarget((org.mockito.asm.ClassVisitor) classEmitter42);
        org.mockito.asm.ClassVisitor classVisitor46 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter47 = new org.mockito.cglib.core.ClassEmitter(classVisitor46);
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter(classVisitor46);
        org.mockito.cglib.core.ClassEmitter classEmitter49 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter48);
        classEmitter42.setTarget((org.mockito.asm.ClassVisitor) classEmitter49);
        org.mockito.asm.ClassVisitor classVisitor51 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter52 = new org.mockito.cglib.core.ClassEmitter(classVisitor51);
        org.mockito.cglib.core.ClassEmitter classEmitter53 = new org.mockito.cglib.core.ClassEmitter(classVisitor51);
        org.mockito.cglib.core.ClassEmitter classEmitter54 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter53);
        org.mockito.cglib.core.ClassEmitter classEmitter55 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter54);
        classEmitter42.setTarget((org.mockito.asm.ClassVisitor) classEmitter55);
        org.mockito.cglib.core.ClassEmitter classEmitter57 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter55);
        org.mockito.cglib.core.ClassEmitter classEmitter58 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter55);
        classEmitter35.setTarget((org.mockito.asm.ClassVisitor) classEmitter58);
        org.mockito.cglib.core.ClassInfo classInfo60 = classEmitter58.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo61 = classEmitter58.getClassInfo();
        classEmitter23.setTarget((org.mockito.asm.ClassVisitor) classEmitter58);
        org.mockito.asm.Label label64 = new org.mockito.asm.Label();
        java.lang.Object obj65 = label64.info;
        java.lang.String str66 = label64.toString();
        java.lang.String str67 = label64.toString();
        java.lang.Object obj68 = label64.info;
        java.lang.Object obj69 = label64.info;
        label64.info = "()B";
        java.lang.String str72 = label64.toString();
        java.lang.Object obj73 = label64.info;
        java.lang.String str74 = label64.toString();
        java.lang.String str75 = label64.toString();
        org.mockito.cglib.core.Signature signature78 = new org.mockito.cglib.core.Signature("long", "L1047282847");
        java.lang.String str79 = signature78.getName();
        label64.info = signature78;
        org.mockito.asm.Type type82 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray83 = new org.mockito.asm.Type[] {};
        java.lang.String str84 = org.mockito.asm.Type.getMethodDescriptor(type82, typeArray83);
        org.mockito.asm.Type type86 = org.mockito.asm.Type.BYTE_TYPE;
        int int87 = type86.getSize();
        java.lang.String str88 = type86.getClassName();
        int int89 = type86.getSize();
        org.mockito.cglib.core.Signature signature92 = new org.mockito.cglib.core.Signature("byte", "()B");
        org.mockito.asm.Type type93 = signature92.getReturnType();
        java.lang.String str94 = signature92.getName();
        org.mockito.asm.Type[] typeArray95 = signature92.getArgumentTypes();
        org.mockito.cglib.core.Signature signature96 = new org.mockito.cglib.core.Signature("L769857137", type86, typeArray95);
        org.mockito.asm.Type[] typeArray97 = signature96.getArgumentTypes();
        org.mockito.cglib.core.Signature signature98 = new org.mockito.cglib.core.Signature("void", type82, typeArray97);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.core.CodeEmitter codeEmitter99 = classEmitter58.begin_method((-1), signature78, typeArray97);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: classInfo is null! org.mockito.cglib.core.ClassEmitter@3e0dcb8f");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str8, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.mockito.cglib.proxy.Enhancer" + "'", str15, "org.mockito.cglib.proxy.Enhancer");
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(classInfo25);
        org.junit.Assert.assertNull(classInfo29);
        org.junit.Assert.assertNull(classInfo34);
        org.junit.Assert.assertNull(classInfo36);
        org.junit.Assert.assertNull(classInfo39);
        org.junit.Assert.assertNull(classInfo44);
        org.junit.Assert.assertNull(classInfo60);
        org.junit.Assert.assertNull(classInfo61);
        org.junit.Assert.assertNull(obj65);
// flaky:         org.junit.Assert.assertEquals("'" + str66 + "' != '" + "L827114465" + "'", str66, "L827114465");
// flaky:         org.junit.Assert.assertEquals("'" + str67 + "' != '" + "L827114465" + "'", str67, "L827114465");
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNull(obj69);
// flaky:         org.junit.Assert.assertEquals("'" + str72 + "' != '" + "L827114465" + "'", str72, "L827114465");
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + "()B" + "'", obj73, "()B");
// flaky:         org.junit.Assert.assertEquals("'" + str74 + "' != '" + "L827114465" + "'", str74, "L827114465");
// flaky:         org.junit.Assert.assertEquals("'" + str75 + "' != '" + "L827114465" + "'", str75, "L827114465");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "long" + "'", str79, "long");
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(typeArray83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "()D" + "'", str84, "()D");
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "byte" + "'", str88, "byte");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertNotNull(type93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "byte" + "'", str94, "byte");
        org.junit.Assert.assertNotNull(typeArray95);
        org.junit.Assert.assertNotNull(typeArray97);
    }

    @Test
    public void test21949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21949");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.FLOAT_TYPE;
        int int1 = type0.getSize();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.BYTE_TYPE;
        boolean boolean4 = type2.equals((java.lang.Object) 9);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type7 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray8 = new org.mockito.asm.Type[] {};
        java.lang.String str9 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray8);
        org.mockito.cglib.core.Signature signature10 = new org.mockito.cglib.core.Signature("double", type6, typeArray8);
        java.lang.String str11 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray8);
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray8);
        int int14 = type0.getOpcode((int) (byte) 100);
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = null;
        enhancer15.setNamingPolicy(namingPolicy16);
        boolean boolean18 = enhancer15.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer19 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy20 = null;
        enhancer19.setNamingPolicy(namingPolicy20);
        java.lang.ClassLoader classLoader22 = null;
        enhancer19.setClassLoader(classLoader22);
        enhancer19.setUseFactory(true);
        boolean boolean26 = enhancer19.getUseCache();
        java.lang.Class<?> wildcardClass27 = enhancer19.getClass();
        enhancer15.setSuperclass((java.lang.Class) wildcardClass27);
        boolean boolean29 = type0.equals((java.lang.Object) enhancer15);
        org.mockito.cglib.core.NamingPolicy namingPolicy30 = enhancer15.getNamingPolicy();
        enhancer15.setUseCache(true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class33 = enhancer15.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback types are required");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "()D" + "'", str9, "()D");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "()B" + "'", str11, "()B");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "()F" + "'", str12, "()F");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 102 + "'", int14 == 102);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(namingPolicy30);
    }

    @Test
    public void test21950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21950");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        boolean boolean3 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy5 = null;
        enhancer4.setNamingPolicy(namingPolicy5);
        java.lang.ClassLoader classLoader7 = null;
        enhancer4.setClassLoader(classLoader7);
        enhancer4.setUseFactory(true);
        boolean boolean11 = enhancer4.getUseCache();
        java.lang.Class<?> wildcardClass12 = enhancer4.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass12);
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = null;
        enhancer15.setNamingPolicy(namingPolicy16);
        java.lang.ClassLoader classLoader18 = null;
        enhancer15.setClassLoader(classLoader18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = null;
        enhancer20.setNamingPolicy(namingPolicy21);
        java.lang.ClassLoader classLoader23 = null;
        enhancer20.setClassLoader(classLoader23);
        java.lang.Class<?> wildcardClass25 = enhancer20.getClass();
        java.lang.String str26 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass25);
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = null;
        enhancer27.setNamingPolicy(namingPolicy28);
        java.lang.ClassLoader classLoader30 = null;
        enhancer27.setClassLoader(classLoader30);
        java.lang.Class<?> wildcardClass32 = enhancer27.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[] { wildcardClass25, wildcardClass32 };
        enhancer15.setInterfaces(classArray33);
        boolean boolean35 = enhancer15.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy37 = null;
        enhancer36.setNamingPolicy(namingPolicy37);
        java.lang.ClassLoader classLoader39 = null;
        enhancer36.setClassLoader(classLoader39);
        java.lang.Class<?> wildcardClass41 = enhancer36.getClass();
        enhancer15.setSuperclass((java.lang.Class) wildcardClass41);
        boolean boolean43 = enhancer15.getUseCache();
        enhancer15.setUseFactory(true);
        enhancer15.setSerialVersionUID((java.lang.Long) 10L);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.getType("Lorg/mockito/cglib/proxy/Enhancer;");
        java.lang.Class<?> wildcardClass50 = type49.getClass();
        boolean boolean51 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass50);
        enhancer15.setSuperclass((java.lang.Class) wildcardClass50);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter53 = null;
        enhancer15.setCallbackFilter(callbackFilter53);
        org.mockito.cglib.proxy.Enhancer enhancer55 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy56 = null;
        enhancer55.setNamingPolicy(namingPolicy56);
        java.lang.ClassLoader classLoader58 = null;
        enhancer55.setClassLoader(classLoader58);
        boolean boolean60 = enhancer55.getAttemptLoad();
        boolean boolean61 = enhancer55.getUseCache();
        java.lang.ClassLoader classLoader62 = enhancer55.getClassLoader();
        enhancer15.setClassLoader(classLoader62);
        enhancer0.setClassLoader(classLoader62);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(namingPolicy14);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str26, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(classLoader62);
    }

    @Test
    public void test21951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21951");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = null;
        enhancer5.setNamingPolicy(namingPolicy6);
        java.lang.ClassLoader classLoader8 = null;
        enhancer5.setClassLoader(classLoader8);
        java.lang.Class<?> wildcardClass10 = enhancer5.getClass();
        java.lang.String str11 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass10);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = null;
        enhancer12.setNamingPolicy(namingPolicy13);
        java.lang.ClassLoader classLoader15 = null;
        enhancer12.setClassLoader(classLoader15);
        java.lang.Class<?> wildcardClass17 = enhancer12.getClass();
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass10, wildcardClass17 };
        enhancer0.setInterfaces(classArray18);
        boolean boolean20 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = null;
        enhancer21.setNamingPolicy(namingPolicy22);
        java.lang.ClassLoader classLoader24 = null;
        enhancer21.setClassLoader(classLoader24);
        java.lang.Class<?> wildcardClass26 = enhancer21.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass26);
        boolean boolean28 = enhancer0.getUseCache();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback31 = null;
        enhancer0.setCallback(callback31);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter33 = null;
        enhancer0.setCallbackFilter(callbackFilter33);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str11, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test21952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21952");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassInfo classInfo11 = classEmitter10.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassInfo classInfo15 = classEmitter13.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor16 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter(classVisitor16);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter(classVisitor16);
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter18);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter19);
        classEmitter13.setTarget((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassInfo classInfo22 = classEmitter13.getClassInfo();
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.asm.ClassVisitor classVisitor25 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter(classVisitor25);
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter(classVisitor25);
        org.mockito.cglib.core.ClassInfo classInfo28 = classEmitter27.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter27);
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.asm.ClassVisitor classVisitor31 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter(classVisitor31);
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter(classVisitor31);
        org.mockito.cglib.core.ClassInfo classInfo34 = classEmitter33.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo35 = classEmitter33.getClassInfo();
        classEmitter30.setTarget((org.mockito.asm.ClassVisitor) classEmitter33);
        org.mockito.asm.ClassVisitor classVisitor37 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter(classVisitor37);
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter(classVisitor37);
        org.mockito.cglib.core.ClassInfo classInfo40 = classEmitter39.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter39);
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter41);
        org.mockito.cglib.core.ClassEmitter classEmitter43 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter42);
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter42);
        classEmitter33.setTarget((org.mockito.asm.ClassVisitor) classEmitter42);
        org.mockito.cglib.core.ClassInfo classInfo46 = classEmitter42.getClassInfo();
        classEmitter24.setTarget((org.mockito.asm.ClassVisitor) classEmitter42);
        org.mockito.asm.ClassVisitor classVisitor48 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter49 = new org.mockito.cglib.core.ClassEmitter(classVisitor48);
        org.mockito.cglib.core.ClassEmitter classEmitter50 = new org.mockito.cglib.core.ClassEmitter(classVisitor48);
        org.mockito.cglib.core.ClassInfo classInfo51 = classEmitter50.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter52 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter50);
        org.mockito.cglib.core.ClassInfo classInfo53 = classEmitter50.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter54 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter50);
        org.mockito.cglib.core.ClassEmitter classEmitter55 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter50);
        classEmitter42.setTarget((org.mockito.asm.ClassVisitor) classEmitter50);
        org.mockito.cglib.core.ClassInfo classInfo57 = classEmitter50.getClassInfo();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.AnnotationVisitor annotationVisitor60 = classEmitter50.visitAnnotation("", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo11);
        org.junit.Assert.assertNull(classInfo15);
        org.junit.Assert.assertNull(classInfo22);
        org.junit.Assert.assertNull(classInfo28);
        org.junit.Assert.assertNull(classInfo34);
        org.junit.Assert.assertNull(classInfo35);
        org.junit.Assert.assertNull(classInfo40);
        org.junit.Assert.assertNull(classInfo46);
        org.junit.Assert.assertNull(classInfo51);
        org.junit.Assert.assertNull(classInfo53);
        org.junit.Assert.assertNull(classInfo57);
    }

    @Test
    public void test21953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21953");
        org.mockito.cglib.core.Signature signature2 = new org.mockito.cglib.core.Signature("byte", "()D");
        org.mockito.asm.Type[] typeArray3 = signature2.getArgumentTypes();
        org.mockito.asm.Label label4 = new org.mockito.asm.Label();
        java.lang.Object obj5 = label4.info;
        org.mockito.cglib.proxy.Enhancer enhancer6 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = null;
        enhancer6.setNamingPolicy(namingPolicy7);
        java.lang.ClassLoader classLoader9 = null;
        enhancer6.setClassLoader(classLoader9);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter11 = null;
        enhancer6.setCallbackFilter(callbackFilter11);
        enhancer6.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = null;
        enhancer15.setNamingPolicy(namingPolicy16);
        java.lang.ClassLoader classLoader18 = null;
        enhancer15.setClassLoader(classLoader18);
        boolean boolean20 = enhancer15.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = enhancer15.getNamingPolicy();
        org.mockito.cglib.proxy.Callback callback22 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray23 = new org.mockito.cglib.proxy.Callback[] { callback22 };
        enhancer15.setCallbacks(callbackArray23);
        enhancer6.setCallbacks(callbackArray23);
        enhancer6.setAttemptLoad(true);
        label4.info = enhancer6;
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = enhancer6.getNamingPolicy();
        boolean boolean30 = signature2.equals((java.lang.Object) namingPolicy29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.LONG_TYPE;
        int int32 = type31.getSize();
        java.lang.String str33 = type31.getClassName();
        int int34 = type31.getSort();
        int int35 = type31.getSize();
        int int36 = type31.getSort();
        boolean boolean37 = signature2.equals((java.lang.Object) type31);
        org.mockito.asm.Type type38 = signature2.getReturnType();
        java.lang.String str39 = signature2.getDescriptor();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(namingPolicy21);
        org.junit.Assert.assertNotNull(callbackArray23);
        org.junit.Assert.assertNotNull(namingPolicy29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "long" + "'", str33, "long");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 7 + "'", int34 == 7);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 7 + "'", int36 == 7);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "()D" + "'", str39, "()D");
    }

    @Test
    public void test21954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21954");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.asm.ClassVisitor classVisitor5 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter(classVisitor5);
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter(classVisitor5);
        org.mockito.cglib.core.ClassInfo classInfo8 = classEmitter7.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter9);
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter10.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor13 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter(classVisitor13);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter(classVisitor13);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter15);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        classEmitter2.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.asm.ClassVisitor classVisitor21 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassInfo classInfo24 = classEmitter23.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter25);
        org.mockito.cglib.core.ClassInfo classInfo27 = classEmitter26.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter26);
        classEmitter20.setTarget((org.mockito.asm.ClassVisitor) classEmitter28);
        org.mockito.asm.ClassVisitor classVisitor30 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter(classVisitor30);
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter(classVisitor30);
        org.mockito.cglib.core.ClassInfo classInfo33 = classEmitter32.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter32);
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter34);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter35);
        org.mockito.cglib.core.ClassInfo classInfo37 = classEmitter35.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor38 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter(classVisitor38);
        org.mockito.cglib.core.ClassEmitter classEmitter40 = new org.mockito.cglib.core.ClassEmitter(classVisitor38);
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter40);
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter41);
        classEmitter35.setTarget((org.mockito.asm.ClassVisitor) classEmitter42);
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter35);
        classEmitter20.setTarget((org.mockito.asm.ClassVisitor) classEmitter44);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.FieldVisitor fieldVisitor51 = classEmitter20.visitField(1, "L1120902591", "L1147973258", "L166302479", (java.lang.Object) "L1819869937");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo8);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNull(classInfo24);
        org.junit.Assert.assertNull(classInfo27);
        org.junit.Assert.assertNull(classInfo33);
        org.junit.Assert.assertNull(classInfo37);
    }

    @Test
    public void test21955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21955");
        org.mockito.cglib.proxy.Enhancer enhancer1 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy2 = null;
        enhancer1.setNamingPolicy(namingPolicy2);
        boolean boolean4 = enhancer1.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = null;
        enhancer5.setNamingPolicy(namingPolicy6);
        java.lang.ClassLoader classLoader8 = null;
        enhancer5.setClassLoader(classLoader8);
        enhancer5.setUseFactory(true);
        boolean boolean12 = enhancer5.getUseCache();
        java.lang.Class<?> wildcardClass13 = enhancer5.getClass();
        enhancer1.setSuperclass((java.lang.Class) wildcardClass13);
        java.lang.String str15 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass13);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass13);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass13);
        org.mockito.cglib.proxy.Enhancer enhancer19 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy20 = null;
        enhancer19.setNamingPolicy(namingPolicy20);
        java.lang.ClassLoader classLoader22 = null;
        enhancer19.setClassLoader(classLoader22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = null;
        enhancer24.setNamingPolicy(namingPolicy25);
        java.lang.ClassLoader classLoader27 = null;
        enhancer24.setClassLoader(classLoader27);
        java.lang.Class<?> wildcardClass29 = enhancer24.getClass();
        java.lang.String str30 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass29);
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy32 = null;
        enhancer31.setNamingPolicy(namingPolicy32);
        java.lang.ClassLoader classLoader34 = null;
        enhancer31.setClassLoader(classLoader34);
        java.lang.Class<?> wildcardClass36 = enhancer31.getClass();
        java.lang.Class[] classArray37 = new java.lang.Class[] { wildcardClass29, wildcardClass36 };
        enhancer19.setInterfaces(classArray37);
        boolean boolean39 = enhancer19.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy41 = null;
        enhancer40.setNamingPolicy(namingPolicy41);
        java.lang.ClassLoader classLoader43 = null;
        enhancer40.setClassLoader(classLoader43);
        java.lang.Class<?> wildcardClass45 = enhancer40.getClass();
        enhancer19.setSuperclass((java.lang.Class) wildcardClass45);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass45);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type50 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray51 = new org.mockito.asm.Type[] {};
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type50, typeArray51);
        org.mockito.cglib.core.Signature signature53 = new org.mockito.cglib.core.Signature("double", type49, typeArray51);
        org.mockito.cglib.core.Signature signature54 = new org.mockito.cglib.core.Signature("L811491585", type47, typeArray51);
        org.mockito.asm.Type type55 = signature54.getReturnType();
        org.mockito.asm.Type type56 = signature54.getReturnType();
        org.mockito.asm.Type[] typeArray57 = signature54.getArgumentTypes();
        org.mockito.asm.Type[] typeArray58 = signature54.getArgumentTypes();
        org.mockito.cglib.core.Signature signature59 = new org.mockito.cglib.core.Signature("L1172801658", type17, typeArray58);
        int int60 = type17.getSort();
        int int61 = type17.getSize();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str15, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str30, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "()D" + "'", str52, "()D");
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 10 + "'", int60 == 10);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
    }

    @Test
    public void test21956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21956");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getType("Lorg.mockito.cglib.proxy.Enhancer;(CBBBD)B");
        int int4 = type2.getOpcode((int) (short) 0);
        org.mockito.cglib.core.Local local5 = new org.mockito.cglib.core.Local((int) (byte) -1, type2);
        int int6 = local5.getIndex();
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 4 + "'", int4 == 4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test21957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21957");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.asm.ClassVisitor classVisitor6 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassInfo classInfo9 = classEmitter8.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter10);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassInfo classInfo14 = classEmitter13.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo15 = classEmitter13.getClassInfo();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.FieldVisitor fieldVisitor21 = classEmitter13.visitField(129, "L1245124109", "L932554203", "L541511612", (java.lang.Object) "L1758417034");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo9);
        org.junit.Assert.assertNull(classInfo14);
        org.junit.Assert.assertNull(classInfo15);
    }

    @Test
    public void test21958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21958");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy12 = null;
        enhancer11.setNamingPolicy(namingPolicy12);
        java.lang.ClassLoader classLoader14 = null;
        enhancer11.setClassLoader(classLoader14);
        boolean boolean16 = enhancer11.getAttemptLoad();
        java.lang.Class class17 = null;
        enhancer11.setSuperclass(class17);
        java.lang.ClassLoader classLoader19 = enhancer11.getClassLoader();
        boolean boolean20 = enhancer11.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = null;
        enhancer21.setNamingPolicy(namingPolicy22);
        java.lang.ClassLoader classLoader24 = null;
        enhancer21.setClassLoader(classLoader24);
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = null;
        enhancer26.setNamingPolicy(namingPolicy27);
        java.lang.ClassLoader classLoader29 = null;
        enhancer26.setClassLoader(classLoader29);
        java.lang.Class<?> wildcardClass31 = enhancer26.getClass();
        java.lang.String str32 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass31);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy34 = null;
        enhancer33.setNamingPolicy(namingPolicy34);
        java.lang.ClassLoader classLoader36 = null;
        enhancer33.setClassLoader(classLoader36);
        java.lang.Class<?> wildcardClass38 = enhancer33.getClass();
        java.lang.Class[] classArray39 = new java.lang.Class[] { wildcardClass31, wildcardClass38 };
        enhancer21.setInterfaces(classArray39);
        boolean boolean41 = enhancer21.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy43 = null;
        enhancer42.setNamingPolicy(namingPolicy43);
        java.lang.ClassLoader classLoader45 = null;
        enhancer42.setClassLoader(classLoader45);
        java.lang.Class<?> wildcardClass47 = enhancer42.getClass();
        enhancer21.setSuperclass((java.lang.Class) wildcardClass47);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass47);
        java.lang.String str50 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass47);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass47);
        enhancer11.setSuperclass((java.lang.Class) wildcardClass47);
        org.mockito.cglib.core.NamingPolicy namingPolicy53 = enhancer11.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy53);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy55 = enhancer0.getStrategy();
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj60 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(classLoader19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str32, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(classArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str50, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(namingPolicy53);
        org.junit.Assert.assertNotNull(generatorStrategy55);
    }

    @Test
    public void test21959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21959");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassInfo classInfo4 = classEmitter2.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor5 = null;
        classEmitter2.setTarget(classVisitor5);
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.junit.Assert.assertNull(classInfo4);
    }

    @Test
    public void test21960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21960");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.Object obj1 = label0.info;
        java.lang.String str2 = label0.toString();
        java.lang.Object obj3 = label0.info;
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy5 = null;
        enhancer4.setNamingPolicy(namingPolicy5);
        java.lang.ClassLoader classLoader7 = null;
        enhancer4.setClassLoader(classLoader7);
        enhancer4.setUseFactory(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy11 = enhancer4.getNamingPolicy();
        label0.info = enhancer4;
        java.lang.String str13 = label0.toString();
        java.lang.String str14 = label0.toString();
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = null;
        enhancer15.setNamingPolicy(namingPolicy16);
        java.lang.ClassLoader classLoader18 = null;
        enhancer15.setClassLoader(classLoader18);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter20 = null;
        enhancer15.setCallbackFilter(callbackFilter20);
        enhancer15.setUseCache(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy24 = enhancer15.getNamingPolicy();
        label0.info = namingPolicy24;
        java.lang.Object obj26 = label0.info;
        java.lang.Object obj27 = label0.info;
        java.lang.String str28 = label0.toString();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type31 = org.mockito.asm.Type.BYTE_TYPE;
        boolean boolean33 = type31.equals((java.lang.Object) 9);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type36 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] {};
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type36, typeArray37);
        org.mockito.cglib.core.Signature signature39 = new org.mockito.cglib.core.Signature("double", type35, typeArray37);
        java.lang.String str40 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray37);
        java.lang.String str41 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray37);
        java.lang.String str42 = type30.getClassName();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.BYTE_TYPE;
        int int45 = type44.getSize();
        java.lang.String str46 = type44.getClassName();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type48 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type49 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type50 = org.mockito.asm.Type.BYTE_TYPE;
        int int51 = type50.getSize();
        java.lang.String str52 = type50.getClassName();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str54 = type53.getClassName();
        org.mockito.asm.Type[] typeArray55 = new org.mockito.asm.Type[] { type47, type48, type49, type50, type53 };
        org.mockito.cglib.core.Signature signature56 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type44, typeArray55);
        org.mockito.asm.Type[] typeArray57 = signature56.getArgumentTypes();
        org.mockito.cglib.core.Signature signature58 = new org.mockito.cglib.core.Signature("D", type30, typeArray57);
        org.mockito.asm.Type[] typeArray59 = signature58.getArgumentTypes();
        org.mockito.asm.Type[] typeArray60 = signature58.getArgumentTypes();
        label0.info = signature58;
        org.mockito.asm.Type[] typeArray62 = signature58.getArgumentTypes();
        java.lang.String str63 = signature58.getDescriptor();
        org.junit.Assert.assertNull(obj1);
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "L1299441858" + "'", str2, "L1299441858");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(namingPolicy11);
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "L1299441858" + "'", str13, "L1299441858");
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L1299441858" + "'", str14, "L1299441858");
        org.junit.Assert.assertNotNull(namingPolicy24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "L1299441858" + "'", str28, "L1299441858");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "()D" + "'", str38, "()D");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "()B" + "'", str40, "()B");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "()F" + "'", str41, "()F");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "float" + "'", str42, "float");
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "byte" + "'", str46, "byte");
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "byte" + "'", str52, "byte");
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "double" + "'", str54, "double");
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(CBBBD)F" + "'", str63, "(CBBBD)F");
    }

    @Test
    public void test21961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21961");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        classEmitter2.setTarget((org.mockito.asm.ClassVisitor) classEmitter6);
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassInfo classInfo11 = classEmitter10.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.asm.ClassVisitor classVisitor14 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.cglib.core.ClassInfo classInfo17 = classEmitter16.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo18 = classEmitter16.getClassInfo();
        classEmitter13.setTarget((org.mockito.asm.ClassVisitor) classEmitter16);
        classEmitter6.setTarget((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.asm.ClassVisitor classVisitor21 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter24);
        classEmitter6.setTarget((org.mockito.asm.ClassVisitor) classEmitter25);
        org.mockito.cglib.core.ClassInfo classInfo27 = classEmitter6.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor28 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter(classVisitor28);
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter(classVisitor28);
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter30);
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter30);
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter33);
        org.mockito.cglib.core.ClassInfo classInfo35 = classEmitter34.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor36 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter(classVisitor36);
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter(classVisitor36);
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter38);
        org.mockito.cglib.core.ClassInfo classInfo40 = classEmitter38.getClassInfo();
        classEmitter34.setTarget((org.mockito.asm.ClassVisitor) classEmitter38);
        org.mockito.asm.ClassVisitor classVisitor42 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter43 = new org.mockito.cglib.core.ClassEmitter(classVisitor42);
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter(classVisitor42);
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter44);
        classEmitter38.setTarget((org.mockito.asm.ClassVisitor) classEmitter45);
        org.mockito.asm.ClassVisitor classVisitor47 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter(classVisitor47);
        org.mockito.asm.ClassVisitor classVisitor49 = null;
        classEmitter48.setTarget(classVisitor49);
        classEmitter38.setTarget((org.mockito.asm.ClassVisitor) classEmitter48);
        classEmitter30.setTarget((org.mockito.asm.ClassVisitor) classEmitter38);
        org.mockito.cglib.core.ClassInfo classInfo53 = classEmitter30.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter54 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter30);
        org.mockito.cglib.core.ClassInfo classInfo55 = classEmitter30.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter56 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter30);
        classEmitter6.setTarget((org.mockito.asm.ClassVisitor) classEmitter30);
        org.mockito.asm.ClassVisitor classVisitor58 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter59 = new org.mockito.cglib.core.ClassEmitter(classVisitor58);
        org.mockito.cglib.core.ClassEmitter classEmitter60 = new org.mockito.cglib.core.ClassEmitter(classVisitor58);
        org.mockito.cglib.core.ClassEmitter classEmitter61 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter60);
        org.mockito.cglib.core.ClassEmitter classEmitter62 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter60);
        classEmitter30.setTarget((org.mockito.asm.ClassVisitor) classEmitter62);
        org.mockito.cglib.core.ClassEmitter classEmitter64 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter30);
        java.lang.String[] strArray73 = new java.lang.String[] { "L729854282", "L574929459", "L1299441858" };
        // The following exception was thrown during execution in test generation
        try {
            classEmitter64.visit(114, 44, "L67163290", "L1965995226", "L1272227541", strArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo11);
        org.junit.Assert.assertNull(classInfo17);
        org.junit.Assert.assertNull(classInfo18);
        org.junit.Assert.assertNull(classInfo27);
        org.junit.Assert.assertNull(classInfo35);
        org.junit.Assert.assertNull(classInfo40);
        org.junit.Assert.assertNull(classInfo53);
        org.junit.Assert.assertNull(classInfo55);
        org.junit.Assert.assertNotNull(strArray73);
    }

    @Test
    public void test21962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21962");
        org.mockito.asm.MethodVisitor methodVisitor12 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter13 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor12);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter14 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter13);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter15 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter13);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter16 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter13);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter17 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter13);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter18 = new org.mockito.cglib.core.LocalVariablesSorter(102, "()Lorg/mockito/cglib/proxy/Enhancer;", (org.mockito.asm.MethodVisitor) localVariablesSorter13);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter19 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter18);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter20 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter19);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter21 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter19);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter22 = new org.mockito.cglib.core.LocalVariablesSorter(161, "()L()Lorg/mockito/cglib/core/ClassEmitter;;", (org.mockito.asm.MethodVisitor) localVariablesSorter19);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter23 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter19);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter24 = new org.mockito.cglib.core.LocalVariablesSorter(0, "(CBBBD)J", (org.mockito.asm.MethodVisitor) localVariablesSorter19);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter25 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter24);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter26 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) -1, "(CBBBD)LL965545342;", (org.mockito.asm.MethodVisitor) localVariablesSorter24);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter27 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter26);
        org.mockito.asm.Label label29 = new org.mockito.asm.Label();
        java.lang.Object obj30 = label29.info;
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy32 = null;
        enhancer31.setNamingPolicy(namingPolicy32);
        java.lang.ClassLoader classLoader34 = null;
        enhancer31.setClassLoader(classLoader34);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter36 = null;
        enhancer31.setCallbackFilter(callbackFilter36);
        enhancer31.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy41 = null;
        enhancer40.setNamingPolicy(namingPolicy41);
        java.lang.ClassLoader classLoader43 = null;
        enhancer40.setClassLoader(classLoader43);
        boolean boolean45 = enhancer40.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy46 = enhancer40.getNamingPolicy();
        org.mockito.cglib.proxy.Callback callback47 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray48 = new org.mockito.cglib.proxy.Callback[] { callback47 };
        enhancer40.setCallbacks(callbackArray48);
        enhancer31.setCallbacks(callbackArray48);
        enhancer31.setAttemptLoad(true);
        label29.info = enhancer31;
        java.lang.String str54 = label29.toString();
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter27.visitJumpInsn(112, label29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(namingPolicy46);
        org.junit.Assert.assertNotNull(callbackArray48);
// flaky:         org.junit.Assert.assertEquals("'" + str54 + "' != '" + "L159568117" + "'", str54, "L159568117");
    }

    @Test
    public void test21963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21963");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.asm.ClassVisitor classVisitor6 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassInfo classInfo9 = classEmitter8.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter10);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassInfo classInfo17 = classEmitter16.getClassInfo();
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo9);
        org.junit.Assert.assertNull(classInfo17);
    }

    @Test
    public void test21964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21964");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        boolean boolean5 = enhancer0.getAttemptLoad();
        boolean boolean6 = enhancer0.getUseCache();
        enhancer0.setAttemptLoad(false);
        boolean boolean9 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter10 = null;
        enhancer0.setCallbackFilter(callbackFilter10);
        enhancer0.setUseCache(false);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer0.setCallback(callback14);
        org.mockito.cglib.proxy.Callback callback16 = null;
        enhancer0.setCallback(callback16);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test21965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21965");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        java.lang.Class<?> wildcardClass5 = enhancer0.getClass();
        java.lang.String str6 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass5);
        boolean boolean7 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        int int11 = type10.getSize();
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = null;
        enhancer12.setNamingPolicy(namingPolicy13);
        java.lang.ClassLoader classLoader15 = null;
        enhancer12.setClassLoader(classLoader15);
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy18 = null;
        enhancer17.setNamingPolicy(namingPolicy18);
        java.lang.ClassLoader classLoader20 = null;
        enhancer17.setClassLoader(classLoader20);
        java.lang.Class<?> wildcardClass22 = enhancer17.getClass();
        java.lang.String str23 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = null;
        enhancer24.setNamingPolicy(namingPolicy25);
        java.lang.ClassLoader classLoader27 = null;
        enhancer24.setClassLoader(classLoader27);
        java.lang.Class<?> wildcardClass29 = enhancer24.getClass();
        java.lang.Class[] classArray30 = new java.lang.Class[] { wildcardClass22, wildcardClass29 };
        enhancer12.setInterfaces(classArray30);
        boolean boolean32 = enhancer12.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy34 = null;
        enhancer33.setNamingPolicy(namingPolicy34);
        java.lang.ClassLoader classLoader36 = null;
        enhancer33.setClassLoader(classLoader36);
        java.lang.Class<?> wildcardClass38 = enhancer33.getClass();
        enhancer12.setSuperclass((java.lang.Class) wildcardClass38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass38);
        java.lang.String str41 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass38);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass38);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.BYTE_TYPE;
        int int45 = type44.getSize();
        java.lang.String str46 = type44.getClassName();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type48 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type49 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type50 = org.mockito.asm.Type.BYTE_TYPE;
        int int51 = type50.getSize();
        java.lang.String str52 = type50.getClassName();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str54 = type53.getClassName();
        org.mockito.asm.Type[] typeArray55 = new org.mockito.asm.Type[] { type47, type48, type49, type50, type53 };
        org.mockito.cglib.core.Signature signature56 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type44, typeArray55);
        java.lang.String str57 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray55);
        java.lang.String str58 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray55);
        org.mockito.asm.Type type59 = type10.getElementType();
        org.mockito.cglib.core.ClassEmitter classEmitter60 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter61 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter60);
        boolean boolean62 = type59.equals((java.lang.Object) classEmitter60);
        org.mockito.asm.ClassVisitor classVisitor63 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter64 = new org.mockito.cglib.core.ClassEmitter(classVisitor63);
        org.mockito.cglib.core.ClassEmitter classEmitter65 = new org.mockito.cglib.core.ClassEmitter(classVisitor63);
        org.mockito.cglib.core.ClassInfo classInfo66 = classEmitter65.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter67 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter65);
        org.mockito.cglib.core.ClassEmitter classEmitter68 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter67);
        org.mockito.cglib.core.ClassEmitter classEmitter69 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter68);
        org.mockito.cglib.core.ClassInfo classInfo70 = classEmitter68.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor71 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter72 = new org.mockito.cglib.core.ClassEmitter(classVisitor71);
        org.mockito.cglib.core.ClassEmitter classEmitter73 = new org.mockito.cglib.core.ClassEmitter(classVisitor71);
        org.mockito.cglib.core.ClassEmitter classEmitter74 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter73);
        org.mockito.cglib.core.ClassEmitter classEmitter75 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter74);
        classEmitter68.setTarget((org.mockito.asm.ClassVisitor) classEmitter75);
        classEmitter60.setTarget((org.mockito.asm.ClassVisitor) classEmitter75);
        org.mockito.cglib.core.ClassEmitter classEmitter78 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter60);
        org.mockito.asm.ClassVisitor classVisitor79 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter80 = new org.mockito.cglib.core.ClassEmitter(classVisitor79);
        org.mockito.cglib.core.ClassEmitter classEmitter81 = new org.mockito.cglib.core.ClassEmitter(classVisitor79);
        org.mockito.cglib.core.ClassInfo classInfo82 = classEmitter81.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter83 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter81);
        org.mockito.cglib.core.ClassEmitter classEmitter84 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter83);
        org.mockito.cglib.core.ClassEmitter classEmitter85 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter84);
        org.mockito.cglib.core.ClassEmitter classEmitter86 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter84);
        classEmitter78.setTarget((org.mockito.asm.ClassVisitor) classEmitter84);
        org.mockito.cglib.core.ClassInfo classInfo88 = classEmitter78.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter89 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter78);
        org.mockito.cglib.core.ClassEmitter classEmitter90 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter89);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type91 = classEmitter90.getClassType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str6, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str23, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str41, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "byte" + "'", str46, "byte");
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "byte" + "'", str52, "byte");
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "double" + "'", str54, "double");
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;" + "'", str57, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;" + "'", str58, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(classInfo66);
        org.junit.Assert.assertNull(classInfo70);
        org.junit.Assert.assertNull(classInfo82);
        org.junit.Assert.assertNull(classInfo88);
    }

    @Test
    public void test21966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21966");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.AnnotationVisitor annotationVisitor13 = localVariablesSorter8.visitAnnotation("L1137354006", true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21967");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("L424966382");
        org.junit.Assert.assertNotNull(type1);
    }

    @Test
    public void test21968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21968");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassInfo classInfo8 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo9 = classEmitter5.getClassInfo();
        // The following exception was thrown during execution in test generation
        try {
            classEmitter5.end_class();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo8);
        org.junit.Assert.assertNull(classInfo9);
    }

    @Test
    public void test21969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21969");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        enhancer0.setUseFactory(true);
        boolean boolean7 = enhancer0.getUseCache();
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy11 = null;
        enhancer10.setNamingPolicy(namingPolicy11);
        java.lang.ClassLoader classLoader13 = null;
        enhancer10.setClassLoader(classLoader13);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter15 = null;
        enhancer10.setCallbackFilter(callbackFilter15);
        org.mockito.cglib.proxy.Callback callback17 = null;
        enhancer10.setCallback(callback17);
        java.lang.ClassLoader classLoader19 = null;
        enhancer10.setClassLoader(classLoader19);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy21 = null;
        enhancer10.setStrategy(generatorStrategy21);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer10.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = null;
        enhancer24.setNamingPolicy(namingPolicy25);
        java.lang.ClassLoader classLoader27 = null;
        enhancer24.setClassLoader(classLoader27);
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy30 = null;
        enhancer29.setNamingPolicy(namingPolicy30);
        java.lang.ClassLoader classLoader32 = null;
        enhancer29.setClassLoader(classLoader32);
        java.lang.Class<?> wildcardClass34 = enhancer29.getClass();
        java.lang.String str35 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass34);
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy37 = null;
        enhancer36.setNamingPolicy(namingPolicy37);
        java.lang.ClassLoader classLoader39 = null;
        enhancer36.setClassLoader(classLoader39);
        java.lang.Class<?> wildcardClass41 = enhancer36.getClass();
        java.lang.Class[] classArray42 = new java.lang.Class[] { wildcardClass34, wildcardClass41 };
        enhancer24.setInterfaces(classArray42);
        boolean boolean44 = enhancer24.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy46 = null;
        enhancer45.setNamingPolicy(namingPolicy46);
        java.lang.ClassLoader classLoader48 = null;
        enhancer45.setClassLoader(classLoader48);
        java.lang.Class<?> wildcardClass50 = enhancer45.getClass();
        enhancer24.setSuperclass((java.lang.Class) wildcardClass50);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass50);
        java.lang.String str53 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass50);
        enhancer10.setSuperclass((java.lang.Class) wildcardClass50);
        java.lang.String str55 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass50);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass50);
        boolean boolean57 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass50);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass50);
        java.lang.String str59 = type58.getInternalName();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str35, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(classArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str53, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str55, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str59, "org/mockito/cglib/proxy/Enhancer");
    }

    @Test
    public void test21970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21970");
        org.mockito.cglib.proxy.Enhancer enhancer2 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = null;
        enhancer2.setNamingPolicy(namingPolicy3);
        java.lang.ClassLoader classLoader5 = null;
        enhancer2.setClassLoader(classLoader5);
        java.lang.Class<?> wildcardClass7 = enhancer2.getClass();
        java.lang.String str8 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass7);
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass7);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass7);
        int int11 = type10.getSize();
        org.mockito.cglib.core.Local local12 = new org.mockito.cglib.core.Local(108, type10);
        org.mockito.cglib.core.Local local13 = new org.mockito.cglib.core.Local(108, type10);
        org.mockito.asm.Type type14 = local13.getType();
        java.lang.String str15 = type14.getClassName();
        org.mockito.asm.Type type16 = type14.getElementType();
        org.mockito.asm.ClassVisitor classVisitor17 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter(classVisitor17);
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter(classVisitor17);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter19);
        boolean boolean21 = type14.equals((java.lang.Object) classEmitter20);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.core.CodeEmitter codeEmitter22 = classEmitter20.begin_static();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: classInfo is null! org.mockito.cglib.core.ClassEmitter@3d7f3a77");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str8, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.mockito.cglib.proxy.Enhancer" + "'", str15, "org.mockito.cglib.proxy.Enhancer");
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test21971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21971");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("byte");
        int int2 = type1.getSize();
        org.mockito.cglib.proxy.Enhancer enhancer3 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy4 = null;
        enhancer3.setNamingPolicy(namingPolicy4);
        java.lang.ClassLoader classLoader6 = null;
        enhancer3.setClassLoader(classLoader6);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter8 = null;
        enhancer3.setCallbackFilter(callbackFilter8);
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer3.setCallback(callback10);
        enhancer3.setUseCache(false);
        boolean boolean14 = type1.equals((java.lang.Object) enhancer3);
        int int15 = type1.getDimensions();
        java.lang.Class<?> wildcardClass16 = type1.getClass();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass16);
        boolean boolean18 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass16);
        java.lang.String str19 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass16);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = null;
        enhancer20.setNamingPolicy(namingPolicy21);
        java.lang.ClassLoader classLoader23 = null;
        enhancer20.setClassLoader(classLoader23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy26 = null;
        enhancer25.setNamingPolicy(namingPolicy26);
        java.lang.ClassLoader classLoader28 = null;
        enhancer25.setClassLoader(classLoader28);
        java.lang.Class<?> wildcardClass30 = enhancer25.getClass();
        java.lang.String str31 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass30);
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy33 = null;
        enhancer32.setNamingPolicy(namingPolicy33);
        java.lang.ClassLoader classLoader35 = null;
        enhancer32.setClassLoader(classLoader35);
        java.lang.Class<?> wildcardClass37 = enhancer32.getClass();
        java.lang.Class[] classArray38 = new java.lang.Class[] { wildcardClass30, wildcardClass37 };
        enhancer20.setInterfaces(classArray38);
        enhancer20.setUseCache(false);
        enhancer20.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy45 = null;
        enhancer44.setNamingPolicy(namingPolicy45);
        java.lang.ClassLoader classLoader47 = null;
        enhancer44.setClassLoader(classLoader47);
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy50 = null;
        enhancer49.setNamingPolicy(namingPolicy50);
        java.lang.ClassLoader classLoader52 = null;
        enhancer49.setClassLoader(classLoader52);
        java.lang.Class<?> wildcardClass54 = enhancer49.getClass();
        java.lang.String str55 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass54);
        org.mockito.cglib.proxy.Enhancer enhancer56 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy57 = null;
        enhancer56.setNamingPolicy(namingPolicy57);
        java.lang.ClassLoader classLoader59 = null;
        enhancer56.setClassLoader(classLoader59);
        java.lang.Class<?> wildcardClass61 = enhancer56.getClass();
        java.lang.Class[] classArray62 = new java.lang.Class[] { wildcardClass54, wildcardClass61 };
        enhancer44.setInterfaces(classArray62);
        enhancer20.setInterfaces(classArray62);
        java.util.List list65 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.proxy.Enhancer.getMethods((java.lang.Class) wildcardClass16, classArray62, list65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str19, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str31, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(classArray38);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str55, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(classArray62);
    }

    @Test
    public void test21972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21972");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor1);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.getType("()Lorg.mockito.cglib.core.ClassEmitter;");
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = null;
        enhancer12.setNamingPolicy(namingPolicy13);
        java.lang.ClassLoader classLoader15 = null;
        enhancer12.setClassLoader(classLoader15);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter17 = null;
        enhancer12.setCallbackFilter(callbackFilter17);
        org.mockito.cglib.proxy.Callback callback19 = null;
        enhancer12.setCallback(callback19);
        java.lang.ClassLoader classLoader21 = null;
        enhancer12.setClassLoader(classLoader21);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy23 = null;
        enhancer12.setStrategy(generatorStrategy23);
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = enhancer12.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy26 = enhancer12.getNamingPolicy();
        org.mockito.cglib.proxy.Callback callback27 = null;
        enhancer12.setCallback(callback27);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy29 = enhancer12.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = null;
        enhancer30.setNamingPolicy(namingPolicy31);
        java.lang.ClassLoader classLoader33 = null;
        enhancer30.setClassLoader(classLoader33);
        boolean boolean35 = enhancer30.getAttemptLoad();
        java.lang.Class class36 = null;
        enhancer30.setSuperclass(class36);
        org.mockito.cglib.proxy.Callback callback38 = null;
        enhancer30.setCallback(callback38);
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy41 = null;
        enhancer40.setNamingPolicy(namingPolicy41);
        java.lang.ClassLoader classLoader43 = null;
        enhancer40.setClassLoader(classLoader43);
        boolean boolean45 = enhancer40.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy46 = enhancer40.getNamingPolicy();
        boolean boolean47 = enhancer40.getAttemptLoad();
        enhancer40.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer50 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy51 = null;
        enhancer50.setNamingPolicy(namingPolicy51);
        java.lang.ClassLoader classLoader53 = null;
        enhancer50.setClassLoader(classLoader53);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter55 = null;
        enhancer50.setCallbackFilter(callbackFilter55);
        org.mockito.cglib.proxy.Callback callback57 = null;
        enhancer50.setCallback(callback57);
        java.lang.ClassLoader classLoader59 = null;
        enhancer50.setClassLoader(classLoader59);
        enhancer50.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer63 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy64 = null;
        enhancer63.setNamingPolicy(namingPolicy64);
        java.lang.ClassLoader classLoader66 = null;
        enhancer63.setClassLoader(classLoader66);
        boolean boolean68 = enhancer63.getAttemptLoad();
        enhancer63.setUseCache(true);
        java.lang.ClassLoader classLoader71 = enhancer63.getClassLoader();
        enhancer50.setClassLoader(classLoader71);
        enhancer40.setClassLoader(classLoader71);
        enhancer30.setClassLoader(classLoader71);
        java.lang.ClassLoader classLoader75 = enhancer30.getClassLoader();
        enhancer12.setClassLoader(classLoader75);
        enhancer12.setUseFactory(true);
        boolean boolean79 = type11.equals((java.lang.Object) true);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.FieldVisitor fieldVisitor80 = classEmitter5.visitField(114, "L415954201", "L1144664822()Lorg/mockito/cglib/proxy/Enhancer;", "L1724650129", (java.lang.Object) true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(namingPolicy25);
        org.junit.Assert.assertNotNull(namingPolicy26);
        org.junit.Assert.assertNotNull(generatorStrategy29);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(namingPolicy46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(classLoader71);
        org.junit.Assert.assertNotNull(classLoader75);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test21973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21973");
        org.mockito.cglib.proxy.Enhancer enhancer1 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy2 = null;
        enhancer1.setNamingPolicy(namingPolicy2);
        java.lang.ClassLoader classLoader4 = null;
        enhancer1.setClassLoader(classLoader4);
        org.mockito.cglib.proxy.Enhancer enhancer6 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = null;
        enhancer6.setNamingPolicy(namingPolicy7);
        java.lang.ClassLoader classLoader9 = null;
        enhancer6.setClassLoader(classLoader9);
        java.lang.Class<?> wildcardClass11 = enhancer6.getClass();
        java.lang.String str12 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass11);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = null;
        enhancer13.setNamingPolicy(namingPolicy14);
        java.lang.ClassLoader classLoader16 = null;
        enhancer13.setClassLoader(classLoader16);
        java.lang.Class<?> wildcardClass18 = enhancer13.getClass();
        java.lang.Class[] classArray19 = new java.lang.Class[] { wildcardClass11, wildcardClass18 };
        enhancer1.setInterfaces(classArray19);
        boolean boolean21 = enhancer1.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = null;
        enhancer22.setNamingPolicy(namingPolicy23);
        java.lang.ClassLoader classLoader25 = null;
        enhancer22.setClassLoader(classLoader25);
        java.lang.Class<?> wildcardClass27 = enhancer22.getClass();
        enhancer1.setSuperclass((java.lang.Class) wildcardClass27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass27);
        java.lang.String str30 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass27);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass27);
        org.mockito.cglib.core.Local local32 = new org.mockito.cglib.core.Local((int) (byte) 100, type31);
        java.lang.Class<?> wildcardClass33 = type31.getClass();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass33);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass33);
        boolean boolean36 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str12, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str30, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test21974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21974");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        java.lang.Class<?> wildcardClass5 = enhancer0.getClass();
        java.lang.String str6 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass5);
        boolean boolean7 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        int int9 = type8.getSize();
        java.lang.String str10 = type8.getInternalName();
        org.mockito.asm.Type type11 = type8.getElementType();
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy15 = null;
        enhancer14.setNamingPolicy(namingPolicy15);
        java.lang.ClassLoader classLoader17 = null;
        enhancer14.setClassLoader(classLoader17);
        org.mockito.cglib.proxy.Enhancer enhancer19 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy20 = null;
        enhancer19.setNamingPolicy(namingPolicy20);
        java.lang.ClassLoader classLoader22 = null;
        enhancer19.setClassLoader(classLoader22);
        java.lang.Class<?> wildcardClass24 = enhancer19.getClass();
        java.lang.String str25 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass24);
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = null;
        enhancer26.setNamingPolicy(namingPolicy27);
        java.lang.ClassLoader classLoader29 = null;
        enhancer26.setClassLoader(classLoader29);
        java.lang.Class<?> wildcardClass31 = enhancer26.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[] { wildcardClass24, wildcardClass31 };
        enhancer14.setInterfaces(classArray32);
        boolean boolean34 = enhancer14.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = null;
        enhancer35.setNamingPolicy(namingPolicy36);
        java.lang.ClassLoader classLoader38 = null;
        enhancer35.setClassLoader(classLoader38);
        java.lang.Class<?> wildcardClass40 = enhancer35.getClass();
        enhancer14.setSuperclass((java.lang.Class) wildcardClass40);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass40);
        java.lang.String str43 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass40);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass40);
        org.mockito.cglib.core.Local local45 = new org.mockito.cglib.core.Local((int) (byte) 100, type44);
        java.lang.Class<?> wildcardClass46 = type44.getClass();
        java.lang.String str47 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass46);
        java.lang.String str48 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass46);
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass46);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass46);
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = null;
        enhancer54.setNamingPolicy(namingPolicy55);
        java.lang.ClassLoader classLoader57 = null;
        enhancer54.setClassLoader(classLoader57);
        java.lang.Class<?> wildcardClass59 = enhancer54.getClass();
        java.lang.String str60 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass59);
        boolean boolean61 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass59);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass59);
        int int63 = type62.getSize();
        org.mockito.cglib.core.Local local64 = new org.mockito.cglib.core.Local(108, type62);
        org.mockito.cglib.core.Local local65 = new org.mockito.cglib.core.Local(108, type62);
        org.mockito.asm.Type type66 = local65.getType();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.BYTE_TYPE;
        int int69 = type68.getSize();
        java.lang.String str70 = type68.getClassName();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type type72 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type73 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type74 = org.mockito.asm.Type.BYTE_TYPE;
        int int75 = type74.getSize();
        java.lang.String str76 = type74.getClassName();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str78 = type77.getClassName();
        org.mockito.asm.Type[] typeArray79 = new org.mockito.asm.Type[] { type71, type72, type73, type74, type77 };
        org.mockito.cglib.core.Signature signature80 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type68, typeArray79);
        boolean boolean82 = signature80.equals((java.lang.Object) 124);
        org.mockito.asm.Type[] typeArray83 = signature80.getArgumentTypes();
        org.mockito.cglib.core.Signature signature84 = new org.mockito.cglib.core.Signature("hi!B", type66, typeArray83);
        org.mockito.asm.Type type85 = signature84.getReturnType();
        boolean boolean87 = signature84.equals((java.lang.Object) 8);
        java.lang.String str88 = signature84.toString();
        org.mockito.asm.Type[] typeArray89 = signature84.getArgumentTypes();
        org.mockito.cglib.core.Signature signature90 = new org.mockito.cglib.core.Signature("L509225657", type50, typeArray89);
        java.lang.String str91 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray89);
        int int92 = type8.getSort();
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str6, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str10, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str25, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str43, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str47, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "org/mockito/asm/Type" + "'", str48, "org/mockito/asm/Type");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str60, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "byte" + "'", str70, "byte");
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "byte" + "'", str76, "byte");
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "double" + "'", str78, "double");
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(typeArray83);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "hi!B(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;" + "'", str88, "hi!B(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(typeArray89);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;" + "'", str91, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 10 + "'", int92 == 10);
    }

    @Test
    public void test21975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21975");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback1 = null;
        enhancer0.setCallback(callback1);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = null;
        enhancer5.setNamingPolicy(namingPolicy6);
        java.lang.ClassLoader classLoader8 = null;
        enhancer5.setClassLoader(classLoader8);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter10 = null;
        enhancer5.setCallbackFilter(callbackFilter10);
        enhancer5.setUseCache(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = enhancer5.getNamingPolicy();
        boolean boolean15 = enhancer5.getAttemptLoad();
        enhancer5.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy19 = null;
        enhancer18.setNamingPolicy(namingPolicy19);
        java.lang.ClassLoader classLoader21 = null;
        enhancer18.setClassLoader(classLoader21);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter23 = null;
        enhancer18.setCallbackFilter(callbackFilter23);
        org.mockito.cglib.proxy.Callback callback25 = null;
        enhancer18.setCallback(callback25);
        enhancer18.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy30 = null;
        enhancer29.setNamingPolicy(namingPolicy30);
        java.lang.ClassLoader classLoader32 = null;
        enhancer29.setClassLoader(classLoader32);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter34 = null;
        enhancer29.setCallbackFilter(callbackFilter34);
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy37 = null;
        enhancer36.setNamingPolicy(namingPolicy37);
        java.lang.ClassLoader classLoader39 = null;
        enhancer36.setClassLoader(classLoader39);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter41 = null;
        enhancer36.setCallbackFilter(callbackFilter41);
        org.mockito.cglib.proxy.Callback callback43 = null;
        enhancer36.setCallback(callback43);
        java.lang.ClassLoader classLoader45 = null;
        enhancer36.setClassLoader(classLoader45);
        enhancer36.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy50 = null;
        enhancer49.setNamingPolicy(namingPolicy50);
        java.lang.ClassLoader classLoader52 = null;
        enhancer49.setClassLoader(classLoader52);
        boolean boolean54 = enhancer49.getAttemptLoad();
        enhancer49.setUseCache(true);
        java.lang.ClassLoader classLoader57 = enhancer49.getClassLoader();
        enhancer36.setClassLoader(classLoader57);
        enhancer29.setClassLoader(classLoader57);
        enhancer18.setClassLoader(classLoader57);
        enhancer5.setClassLoader(classLoader57);
        enhancer0.setClassLoader(classLoader57);
        boolean boolean63 = enhancer0.getAttemptLoad();
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Enhancer enhancer70 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy71 = null;
        enhancer70.setNamingPolicy(namingPolicy71);
        java.lang.ClassLoader classLoader73 = null;
        enhancer70.setClassLoader(classLoader73);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter75 = null;
        enhancer70.setCallbackFilter(callbackFilter75);
        enhancer70.setUseCache(false);
        enhancer70.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer81 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy82 = null;
        enhancer81.setNamingPolicy(namingPolicy82);
        java.lang.ClassLoader classLoader84 = null;
        enhancer81.setClassLoader(classLoader84);
        boolean boolean86 = enhancer81.getAttemptLoad();
        java.lang.Class class87 = null;
        enhancer81.setSuperclass(class87);
        java.lang.ClassLoader classLoader89 = enhancer81.getClassLoader();
        enhancer81.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy92 = enhancer81.getStrategy();
        enhancer70.setStrategy(generatorStrategy92);
        enhancer70.setUseFactory(true);
        java.lang.ClassLoader classLoader96 = enhancer70.getClassLoader();
        enhancer0.setClassLoader(classLoader96);
        org.junit.Assert.assertNotNull(namingPolicy14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(classLoader57);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(classLoader89);
        org.junit.Assert.assertNotNull(generatorStrategy92);
        org.junit.Assert.assertNotNull(classLoader96);
    }

    @Test
    public void test21976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21976");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter6.visitTypeInsn(136, "L434066517");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21977");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter3 = new org.mockito.cglib.core.LocalVariablesSorter(129, "(CBBBD)Lg/mockito/cglib/proxy/Enhancer;", methodVisitor2);
        org.mockito.asm.Label label7 = new org.mockito.asm.Label();
        java.lang.Object obj8 = label7.info;
        org.mockito.asm.ClassVisitor classVisitor9 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter(classVisitor9);
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter(classVisitor9);
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassInfo classInfo15 = classEmitter14.getClassInfo();
        label7.info = classInfo15;
        java.lang.String str17 = label7.toString();
        java.lang.String str18 = label7.toString();
        java.lang.String str19 = label7.toString();
        java.lang.Object obj20 = label7.info;
        java.lang.String str21 = label7.toString();
        java.lang.Object obj22 = label7.info;
        java.lang.Object obj23 = label7.info;
        java.lang.String str24 = label7.toString();
        org.mockito.asm.Label label25 = new org.mockito.asm.Label();
        java.lang.Object obj26 = label25.info;
        org.mockito.asm.ClassVisitor classVisitor27 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter(classVisitor27);
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter(classVisitor27);
        org.mockito.cglib.core.ClassInfo classInfo30 = classEmitter29.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter31);
        org.mockito.cglib.core.ClassInfo classInfo33 = classEmitter32.getClassInfo();
        label25.info = classInfo33;
        java.lang.String str35 = label25.toString();
        java.lang.String str36 = label25.toString();
        java.lang.String str37 = label25.toString();
        java.lang.Object obj38 = label25.info;
        java.lang.String str39 = label25.toString();
        java.lang.Object obj40 = label25.info;
        java.lang.Object obj41 = label25.info;
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter3.visitLocalVariable("L424966382", "L958802523", "", label7, label25, 158);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown local variable 158");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNull(classInfo15);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "L623088935" + "'", str17, "L623088935");
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "L623088935" + "'", str18, "L623088935");
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L623088935" + "'", str19, "L623088935");
        org.junit.Assert.assertNull(obj20);
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L623088935" + "'", str21, "L623088935");
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(obj23);
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "L623088935" + "'", str24, "L623088935");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(classInfo30);
        org.junit.Assert.assertNull(classInfo33);
// flaky:         org.junit.Assert.assertEquals("'" + str35 + "' != '" + "L1293197448" + "'", str35, "L1293197448");
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L1293197448" + "'", str36, "L1293197448");
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "L1293197448" + "'", str37, "L1293197448");
        org.junit.Assert.assertNull(obj38);
// flaky:         org.junit.Assert.assertEquals("'" + str39 + "' != '" + "L1293197448" + "'", str39, "L1293197448");
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(obj41);
    }

    @Test
    public void test21978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21978");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter10.visitIntInsn(3, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21979");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.asm.ClassVisitor classVisitor6 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassInfo classInfo9 = classEmitter8.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter10);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.asm.ClassVisitor classVisitor14 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.asm.ClassVisitor classVisitor16 = null;
        classEmitter15.setTarget(classVisitor16);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter15);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter18);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter18);
        org.mockito.asm.ClassVisitor classVisitor21 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter(classVisitor21);
        org.mockito.cglib.core.ClassInfo classInfo24 = classEmitter23.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.cglib.core.ClassInfo classInfo26 = classEmitter23.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter23);
        classEmitter18.setTarget((org.mockito.asm.ClassVisitor) classEmitter28);
        org.mockito.cglib.core.ClassInfo classInfo30 = classEmitter18.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo31 = classEmitter18.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo32 = classEmitter18.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor33 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter(classVisitor33);
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter(classVisitor33);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter(classVisitor33);
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter36);
        org.mockito.asm.ClassVisitor classVisitor38 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter(classVisitor38);
        org.mockito.cglib.core.ClassEmitter classEmitter40 = new org.mockito.cglib.core.ClassEmitter(classVisitor38);
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter40);
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter41);
        org.mockito.cglib.core.ClassEmitter classEmitter43 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter42);
        classEmitter37.setTarget((org.mockito.asm.ClassVisitor) classEmitter42);
        classEmitter18.setTarget((org.mockito.asm.ClassVisitor) classEmitter37);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter18.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo9);
        org.junit.Assert.assertNull(classInfo24);
        org.junit.Assert.assertNull(classInfo26);
        org.junit.Assert.assertNull(classInfo30);
        org.junit.Assert.assertNull(classInfo31);
        org.junit.Assert.assertNull(classInfo32);
    }

    @Test
    public void test21980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21980");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        boolean boolean5 = enhancer0.getAttemptLoad();
        java.lang.Class class6 = null;
        enhancer0.setSuperclass(class6);
        org.mockito.cglib.proxy.Callback callback8 = null;
        enhancer0.setCallback(callback8);
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy11 = null;
        enhancer10.setNamingPolicy(namingPolicy11);
        java.lang.ClassLoader classLoader13 = null;
        enhancer10.setClassLoader(classLoader13);
        boolean boolean15 = enhancer10.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer10.getNamingPolicy();
        boolean boolean17 = enhancer10.getAttemptLoad();
        enhancer10.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = null;
        enhancer20.setNamingPolicy(namingPolicy21);
        java.lang.ClassLoader classLoader23 = null;
        enhancer20.setClassLoader(classLoader23);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter25 = null;
        enhancer20.setCallbackFilter(callbackFilter25);
        org.mockito.cglib.proxy.Callback callback27 = null;
        enhancer20.setCallback(callback27);
        java.lang.ClassLoader classLoader29 = null;
        enhancer20.setClassLoader(classLoader29);
        enhancer20.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy34 = null;
        enhancer33.setNamingPolicy(namingPolicy34);
        java.lang.ClassLoader classLoader36 = null;
        enhancer33.setClassLoader(classLoader36);
        boolean boolean38 = enhancer33.getAttemptLoad();
        enhancer33.setUseCache(true);
        java.lang.ClassLoader classLoader41 = enhancer33.getClassLoader();
        enhancer20.setClassLoader(classLoader41);
        enhancer10.setClassLoader(classLoader41);
        enhancer0.setClassLoader(classLoader41);
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy46 = null;
        enhancer45.setNamingPolicy(namingPolicy46);
        java.lang.ClassLoader classLoader48 = null;
        enhancer45.setClassLoader(classLoader48);
        boolean boolean50 = enhancer45.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy51 = enhancer45.getNamingPolicy();
        org.mockito.cglib.proxy.Callback callback52 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray53 = new org.mockito.cglib.proxy.Callback[] { callback52 };
        enhancer45.setCallbacks(callbackArray53);
        enhancer0.setCallbacks(callbackArray53);
        org.mockito.cglib.proxy.Callback callback56 = null;
        enhancer0.setCallback(callback56);
        enhancer0.setUseCache(false);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        org.mockito.cglib.proxy.Callback callback62 = null;
        enhancer0.setCallback(callback62);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(classLoader41);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(namingPolicy51);
        org.junit.Assert.assertNotNull(callbackArray53);
    }

    @Test
    public void test21981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21981");
        org.mockito.cglib.core.Signature signature2 = new org.mockito.cglib.core.Signature("L62291075", "double()B");
        org.mockito.asm.Type type3 = signature2.getReturnType();
        java.lang.String str4 = type3.toString();
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "B" + "'", str4, "B");
    }

    @Test
    public void test21982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21982");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter8.visitInsn(9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21983");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = null;
        enhancer5.setNamingPolicy(namingPolicy6);
        java.lang.ClassLoader classLoader8 = null;
        enhancer5.setClassLoader(classLoader8);
        java.lang.Class<?> wildcardClass10 = enhancer5.getClass();
        java.lang.String str11 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass10);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = null;
        enhancer12.setNamingPolicy(namingPolicy13);
        java.lang.ClassLoader classLoader15 = null;
        enhancer12.setClassLoader(classLoader15);
        java.lang.Class<?> wildcardClass17 = enhancer12.getClass();
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass10, wildcardClass17 };
        enhancer0.setInterfaces(classArray18);
        boolean boolean20 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = null;
        enhancer21.setNamingPolicy(namingPolicy22);
        java.lang.ClassLoader classLoader24 = null;
        enhancer21.setClassLoader(classLoader24);
        java.lang.Class<?> wildcardClass26 = enhancer21.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass26);
        java.lang.String str29 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass26);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass26);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass26);
        java.lang.String str32 = type31.getClassName();
        int int34 = type31.getOpcode((int) (short) 1);
        int int36 = type31.getOpcode(3);
        int int37 = type31.getDimensions();
        org.mockito.asm.ClassVisitor classVisitor38 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter(classVisitor38);
        org.mockito.cglib.core.ClassEmitter classEmitter40 = new org.mockito.cglib.core.ClassEmitter(classVisitor38);
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter40);
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter40);
        org.mockito.cglib.core.ClassEmitter classEmitter43 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter43);
        classEmitter40.setTarget((org.mockito.asm.ClassVisitor) classEmitter44);
        org.mockito.asm.ClassVisitor classVisitor46 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter47 = new org.mockito.cglib.core.ClassEmitter(classVisitor46);
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter(classVisitor46);
        org.mockito.cglib.core.ClassInfo classInfo49 = classEmitter48.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter50 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter48);
        org.mockito.cglib.core.ClassEmitter classEmitter51 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter50);
        org.mockito.asm.ClassVisitor classVisitor52 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter53 = new org.mockito.cglib.core.ClassEmitter(classVisitor52);
        org.mockito.cglib.core.ClassEmitter classEmitter54 = new org.mockito.cglib.core.ClassEmitter(classVisitor52);
        org.mockito.cglib.core.ClassInfo classInfo55 = classEmitter54.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo56 = classEmitter54.getClassInfo();
        classEmitter51.setTarget((org.mockito.asm.ClassVisitor) classEmitter54);
        classEmitter44.setTarget((org.mockito.asm.ClassVisitor) classEmitter54);
        org.mockito.asm.ClassVisitor classVisitor59 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter60 = new org.mockito.cglib.core.ClassEmitter(classVisitor59);
        org.mockito.cglib.core.ClassEmitter classEmitter61 = new org.mockito.cglib.core.ClassEmitter(classVisitor59);
        org.mockito.cglib.core.ClassEmitter classEmitter62 = new org.mockito.cglib.core.ClassEmitter(classVisitor59);
        org.mockito.cglib.core.ClassEmitter classEmitter63 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter62);
        classEmitter44.setTarget((org.mockito.asm.ClassVisitor) classEmitter63);
        org.mockito.cglib.core.ClassInfo classInfo65 = classEmitter63.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter66 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter63);
        org.mockito.asm.ClassVisitor classVisitor67 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter68 = new org.mockito.cglib.core.ClassEmitter(classVisitor67);
        org.mockito.cglib.core.ClassEmitter classEmitter69 = new org.mockito.cglib.core.ClassEmitter(classVisitor67);
        org.mockito.cglib.core.ClassInfo classInfo70 = classEmitter69.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter71 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter69);
        org.mockito.cglib.core.ClassEmitter classEmitter72 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter71);
        org.mockito.cglib.core.ClassEmitter classEmitter73 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter72);
        org.mockito.cglib.core.ClassEmitter classEmitter74 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter72);
        classEmitter63.setTarget((org.mockito.asm.ClassVisitor) classEmitter72);
        boolean boolean76 = type31.equals((java.lang.Object) classEmitter72);
        int int77 = type31.getSize();
        int int78 = type31.getSize();
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str11, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str29, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org.mockito.cglib.proxy.Enhancer" + "'", str32, "org.mockito.cglib.proxy.Enhancer");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 5 + "'", int34 == 5);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 7 + "'", int36 == 7);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNull(classInfo49);
        org.junit.Assert.assertNull(classInfo55);
        org.junit.Assert.assertNull(classInfo56);
        org.junit.Assert.assertNull(classInfo65);
        org.junit.Assert.assertNull(classInfo70);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
    }

    @Test
    public void test21984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21984");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        classEmitter2.setTarget((org.mockito.asm.ClassVisitor) classEmitter6);
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter(classVisitor8);
        org.mockito.cglib.core.ClassInfo classInfo11 = classEmitter10.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter10);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.asm.ClassVisitor classVisitor14 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter(classVisitor14);
        org.mockito.cglib.core.ClassInfo classInfo17 = classEmitter16.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo18 = classEmitter16.getClassInfo();
        classEmitter13.setTarget((org.mockito.asm.ClassVisitor) classEmitter16);
        classEmitter6.setTarget((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        org.mockito.cglib.core.ClassInfo classInfo23 = classEmitter21.getClassInfo();
        java.lang.String[] strArray32 = new java.lang.String[] { "L65357566", "L1896510863(CBBBD)Lorg/mockito/cglib/core/ClassEmitter;", "L13801669(CBBBD)LL1570394950;" };
        // The following exception was thrown during execution in test generation
        try {
            classEmitter21.visit(165, (int) '#', "L280559097", "L2139556704", "L1524489750", strArray32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo11);
        org.junit.Assert.assertNull(classInfo17);
        org.junit.Assert.assertNull(classInfo18);
        org.junit.Assert.assertNull(classInfo23);
        org.junit.Assert.assertNotNull(strArray32);
    }

    @Test
    public void test21985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21985");
        org.mockito.asm.MethodVisitor methodVisitor6 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(102, "()Lorg/mockito/cglib/proxy/Enhancer;", (org.mockito.asm.MethodVisitor) localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter13 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter12);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter14 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter12);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter15 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter12);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter16 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter15);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter17 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter15);
        org.mockito.asm.Label label19 = new org.mockito.asm.Label();
        java.lang.Object obj20 = label19.info;
        java.lang.String str21 = label19.toString();
        java.lang.String str22 = label19.toString();
        java.lang.String str23 = label19.toString();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.getReturnType("Lorg/mockito/cglib/proxy/Enhancer;(CBBBD)B");
        label19.info = type25;
        java.lang.Object obj27 = label19.info;
        java.lang.Object obj28 = label19.info;
        java.lang.String str29 = label19.toString();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.getObjectType("L491776462");
        label19.info = "L491776462";
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter15.visitLineNumber(65, label19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj20);
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L197036355" + "'", str21, "L197036355");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L197036355" + "'", str22, "L197036355");
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L197036355" + "'", str23, "L197036355");
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "B");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "B");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "B");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "B");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "B");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "B");
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "L197036355" + "'", str29, "L197036355");
        org.junit.Assert.assertNotNull(type31);
    }

    @Test
    public void test21986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21986");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        enhancer0.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy10 = null;
        enhancer9.setNamingPolicy(namingPolicy10);
        java.lang.ClassLoader classLoader12 = null;
        enhancer9.setClassLoader(classLoader12);
        boolean boolean14 = enhancer9.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy15 = enhancer9.getNamingPolicy();
        org.mockito.cglib.proxy.Callback callback16 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray17 = new org.mockito.cglib.proxy.Callback[] { callback16 };
        enhancer9.setCallbacks(callbackArray17);
        enhancer0.setCallbacks(callbackArray17);
        enhancer0.setAttemptLoad(true);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy24 = null;
        enhancer0.setNamingPolicy(namingPolicy24);
        enhancer0.setUseFactory(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = enhancer0.getNamingPolicy();
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(namingPolicy15);
        org.junit.Assert.assertNotNull(callbackArray17);
        org.junit.Assert.assertNotNull(namingPolicy28);
    }

    @Test
    public void test21987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21987");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = null;
        enhancer5.setNamingPolicy(namingPolicy6);
        java.lang.ClassLoader classLoader8 = null;
        enhancer5.setClassLoader(classLoader8);
        java.lang.Class<?> wildcardClass10 = enhancer5.getClass();
        java.lang.String str11 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass10);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = null;
        enhancer12.setNamingPolicy(namingPolicy13);
        java.lang.ClassLoader classLoader15 = null;
        enhancer12.setClassLoader(classLoader15);
        java.lang.Class<?> wildcardClass17 = enhancer12.getClass();
        java.lang.Class[] classArray18 = new java.lang.Class[] { wildcardClass10, wildcardClass17 };
        enhancer0.setInterfaces(classArray18);
        boolean boolean20 = enhancer0.getAttemptLoad();
        enhancer0.setAttemptLoad(false);
        org.mockito.asm.ClassVisitor classVisitor23 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter(classVisitor23);
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter(classVisitor23);
        org.mockito.cglib.core.ClassInfo classInfo26 = classEmitter25.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter25);
        java.lang.Class<?> wildcardClass28 = classEmitter25.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass28);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass28);
        int int32 = type31.getSort();
        java.lang.String str33 = type31.getInternalName();
        int int35 = type31.getOpcode((int) (short) 100);
        org.mockito.asm.MethodVisitor methodVisitor38 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter39 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor38);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter40 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter39);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter41 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter39);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter42 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter39);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter43 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter42);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter44 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter43);
        boolean boolean45 = type31.equals((java.lang.Object) localVariablesSorter43);
        org.mockito.asm.Attribute attribute46 = null;
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter43.visitAttribute(attribute46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str11, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(classInfo26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org/mockito/cglib/core/ClassEmitter" + "'", str33, "org/mockito/cglib/core/ClassEmitter");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 104 + "'", int35 == 104);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test21988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21988");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        boolean boolean5 = enhancer0.getAttemptLoad();
        enhancer0.setUseCache(true);
        java.lang.ClassLoader classLoader8 = enhancer0.getClassLoader();
        boolean boolean9 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy11 = null;
        enhancer10.setNamingPolicy(namingPolicy11);
        java.lang.ClassLoader classLoader13 = null;
        enhancer10.setClassLoader(classLoader13);
        boolean boolean15 = enhancer10.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer10.getNamingPolicy();
        org.mockito.cglib.proxy.Callback callback17 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray18 = new org.mockito.cglib.proxy.Callback[] { callback17 };
        enhancer10.setCallbacks(callbackArray18);
        enhancer0.setCallbacks(callbackArray18);
        org.mockito.cglib.proxy.Callback callback21 = null;
        enhancer0.setCallback(callback21);
        org.mockito.asm.ClassVisitor classVisitor23 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter(classVisitor23);
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter(classVisitor23);
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter25);
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter25);
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter28);
        classEmitter25.setTarget((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.asm.ClassVisitor classVisitor31 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter(classVisitor31);
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter(classVisitor31);
        org.mockito.cglib.core.ClassInfo classInfo34 = classEmitter33.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter33);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter35);
        org.mockito.asm.ClassVisitor classVisitor37 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter(classVisitor37);
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter(classVisitor37);
        org.mockito.cglib.core.ClassInfo classInfo40 = classEmitter39.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo41 = classEmitter39.getClassInfo();
        classEmitter36.setTarget((org.mockito.asm.ClassVisitor) classEmitter39);
        classEmitter29.setTarget((org.mockito.asm.ClassVisitor) classEmitter39);
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.cglib.core.ClassInfo classInfo45 = classEmitter29.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter46 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.cglib.core.ClassInfo classInfo47 = classEmitter29.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor48 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter49 = new org.mockito.cglib.core.ClassEmitter(classVisitor48);
        org.mockito.cglib.core.ClassEmitter classEmitter50 = new org.mockito.cglib.core.ClassEmitter(classVisitor48);
        org.mockito.cglib.core.ClassInfo classInfo51 = classEmitter50.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter52 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter50);
        org.mockito.cglib.core.ClassEmitter classEmitter53 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter52);
        org.mockito.cglib.core.ClassEmitter classEmitter54 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter53);
        org.mockito.cglib.core.ClassEmitter classEmitter55 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter53);
        org.mockito.asm.ClassVisitor classVisitor56 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter57 = new org.mockito.cglib.core.ClassEmitter(classVisitor56);
        org.mockito.cglib.core.ClassEmitter classEmitter58 = new org.mockito.cglib.core.ClassEmitter(classVisitor56);
        org.mockito.cglib.core.ClassInfo classInfo59 = classEmitter58.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter60 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter58);
        org.mockito.cglib.core.ClassEmitter classEmitter61 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter60);
        org.mockito.cglib.core.ClassEmitter classEmitter62 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter61);
        org.mockito.cglib.core.ClassInfo classInfo63 = classEmitter61.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor64 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter65 = new org.mockito.cglib.core.ClassEmitter(classVisitor64);
        org.mockito.cglib.core.ClassEmitter classEmitter66 = new org.mockito.cglib.core.ClassEmitter(classVisitor64);
        org.mockito.cglib.core.ClassEmitter classEmitter67 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter66);
        org.mockito.cglib.core.ClassEmitter classEmitter68 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter67);
        classEmitter61.setTarget((org.mockito.asm.ClassVisitor) classEmitter68);
        org.mockito.cglib.core.ClassInfo classInfo70 = classEmitter61.getClassInfo();
        classEmitter55.setTarget((org.mockito.asm.ClassVisitor) classEmitter61);
        org.mockito.cglib.core.ClassEmitter classEmitter72 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter55);
        classEmitter29.setTarget((org.mockito.asm.ClassVisitor) classEmitter72);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass((org.mockito.asm.ClassVisitor) classEmitter72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertNotNull(callbackArray18);
        org.junit.Assert.assertNull(classInfo34);
        org.junit.Assert.assertNull(classInfo40);
        org.junit.Assert.assertNull(classInfo41);
        org.junit.Assert.assertNull(classInfo45);
        org.junit.Assert.assertNull(classInfo47);
        org.junit.Assert.assertNull(classInfo51);
        org.junit.Assert.assertNull(classInfo59);
        org.junit.Assert.assertNull(classInfo63);
        org.junit.Assert.assertNull(classInfo70);
    }

    @Test
    public void test21989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21989");
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy5 = null;
        enhancer4.setNamingPolicy(namingPolicy5);
        java.lang.ClassLoader classLoader7 = null;
        enhancer4.setClassLoader(classLoader7);
        java.lang.Class<?> wildcardClass9 = enhancer4.getClass();
        java.lang.String str10 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass9);
        boolean boolean11 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass9);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass9);
        int int13 = type12.getSize();
        org.mockito.cglib.core.Local local14 = new org.mockito.cglib.core.Local(108, type12);
        java.lang.String str15 = type12.getDescriptor();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getObjectType("byte");
        org.mockito.asm.Type type18 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type[] typeArray19 = new org.mockito.asm.Type[] {};
        java.lang.String str20 = org.mockito.asm.Type.getMethodDescriptor(type18, typeArray19);
        java.lang.String str21 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray19);
        org.mockito.cglib.core.Signature signature22 = new org.mockito.cglib.core.Signature("J", type12, typeArray19);
        org.mockito.asm.Type type23 = signature22.getReturnType();
        org.mockito.asm.MethodVisitor methodVisitor28 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter29 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor28);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter30 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter29);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter31 = new org.mockito.cglib.core.LocalVariablesSorter(56, "()Lorg/mockito/cglib/core/ClassEmitter;", (org.mockito.asm.MethodVisitor) localVariablesSorter29);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter32 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter31);
        boolean boolean33 = signature22.equals((java.lang.Object) localVariablesSorter32);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter34 = new org.mockito.cglib.core.LocalVariablesSorter(96, "(CBBBD)Lbyte;", (org.mockito.asm.MethodVisitor) localVariablesSorter32);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter35 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter34);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter36 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter34);
        org.mockito.asm.Label label40 = new org.mockito.asm.Label();
        java.lang.Object obj41 = label40.info;
        java.lang.String str42 = label40.toString();
        java.lang.String str43 = label40.toString();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.LONG_TYPE;
        java.lang.String str45 = type44.getDescriptor();
        label40.info = str45;
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy48 = null;
        enhancer47.setNamingPolicy(namingPolicy48);
        java.lang.ClassLoader classLoader50 = null;
        enhancer47.setClassLoader(classLoader50);
        boolean boolean52 = enhancer47.getAttemptLoad();
        java.lang.Class class53 = null;
        enhancer47.setSuperclass(class53);
        org.mockito.cglib.proxy.Callback callback55 = null;
        enhancer47.setCallback(callback55);
        label40.info = callback55;
        java.lang.Object obj58 = label40.info;
        java.lang.String str59 = label40.toString();
        org.mockito.asm.Label label60 = null;
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter34.visitLocalVariable("L1385940987", "L1721828493", "L95809685", label40, label60, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown local variable 6");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str10, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str15, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "()D" + "'", str20, "()D");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "()Lbyte;" + "'", str21, "()Lbyte;");
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(obj41);
// flaky:         org.junit.Assert.assertEquals("'" + str42 + "' != '" + "L128080013" + "'", str42, "L128080013");
// flaky:         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "L128080013" + "'", str43, "L128080013");
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "J" + "'", str45, "J");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(obj58);
// flaky:         org.junit.Assert.assertEquals("'" + str59 + "' != '" + "L128080013" + "'", str59, "L128080013");
    }

    @Test
    public void test21990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21990");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.Object obj1 = label0.info;
        java.lang.String str2 = label0.toString();
        java.lang.String str3 = label0.toString();
        java.lang.Object obj4 = label0.info;
        java.lang.Object obj5 = label0.info;
        label0.info = "()B";
        java.lang.Object obj8 = label0.info;
        java.lang.Object obj9 = label0.info;
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy11 = null;
        enhancer10.setNamingPolicy(namingPolicy11);
        java.lang.ClassLoader classLoader13 = null;
        enhancer10.setClassLoader(classLoader13);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter15 = null;
        enhancer10.setCallbackFilter(callbackFilter15);
        org.mockito.cglib.proxy.Callback callback17 = null;
        enhancer10.setCallback(callback17);
        java.lang.ClassLoader classLoader19 = null;
        enhancer10.setClassLoader(classLoader19);
        enhancer10.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy24 = null;
        enhancer23.setNamingPolicy(namingPolicy24);
        java.lang.ClassLoader classLoader26 = null;
        enhancer23.setClassLoader(classLoader26);
        boolean boolean28 = enhancer23.getAttemptLoad();
        enhancer23.setUseCache(true);
        java.lang.ClassLoader classLoader31 = enhancer23.getClassLoader();
        enhancer10.setClassLoader(classLoader31);
        enhancer10.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = null;
        enhancer35.setNamingPolicy(namingPolicy36);
        java.lang.ClassLoader classLoader38 = null;
        enhancer35.setClassLoader(classLoader38);
        boolean boolean40 = enhancer35.getAttemptLoad();
        enhancer35.setUseCache(true);
        java.lang.ClassLoader classLoader43 = enhancer35.getClassLoader();
        boolean boolean44 = enhancer35.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy46 = null;
        enhancer45.setNamingPolicy(namingPolicy46);
        java.lang.ClassLoader classLoader48 = null;
        enhancer45.setClassLoader(classLoader48);
        boolean boolean50 = enhancer45.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy51 = enhancer45.getNamingPolicy();
        org.mockito.cglib.proxy.Callback callback52 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray53 = new org.mockito.cglib.proxy.Callback[] { callback52 };
        enhancer45.setCallbacks(callbackArray53);
        enhancer35.setCallbacks(callbackArray53);
        enhancer10.setCallbacks(callbackArray53);
        enhancer10.setUseCache(false);
        enhancer10.setSerialVersionUID((java.lang.Long) 0L);
        label0.info = enhancer10;
        org.mockito.cglib.core.NamingPolicy namingPolicy62 = enhancer10.getNamingPolicy();
        org.junit.Assert.assertNull(obj1);
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "L390763490" + "'", str2, "L390763490");
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "L390763490" + "'", str3, "L390763490");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + "()B" + "'", obj8, "()B");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + "()B" + "'", obj9, "()B");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(classLoader43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(namingPolicy51);
        org.junit.Assert.assertNotNull(callbackArray53);
        org.junit.Assert.assertNotNull(namingPolicy62);
    }

    @Test
    public void test21991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21991");
        org.mockito.asm.MethodVisitor methodVisitor6 = null;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(112, "(CBBBD)Lorg/mockito/cglib/proxy/Enhancer;", methodVisitor6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(153, "()D", (org.mockito.asm.MethodVisitor) localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(102, "()Lorg/mockito/cglib/proxy/Enhancer;", (org.mockito.asm.MethodVisitor) localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter13 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter12);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter14 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter13);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter15 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter14);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.AnnotationVisitor annotationVisitor18 = localVariablesSorter15.visitAnnotation("L2069135860", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test21992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21992");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter3);
        org.mockito.asm.ClassVisitor classVisitor5 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter(classVisitor5);
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter(classVisitor5);
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter9);
        classEmitter4.setTarget((org.mockito.asm.ClassVisitor) classEmitter9);
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter9);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.cglib.core.ClassInfo classInfo14 = classEmitter13.getClassInfo();
        org.junit.Assert.assertNull(classInfo14);
    }

    @Test
    public void test21993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21993");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.asm.ClassVisitor classVisitor6 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassInfo classInfo9 = classEmitter8.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter8.getClassInfo();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.asm.ClassVisitor classVisitor12 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter(classVisitor12);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter(classVisitor12);
        org.mockito.cglib.core.ClassInfo classInfo15 = classEmitter14.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter17);
        classEmitter8.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        org.mockito.cglib.core.ClassInfo classInfo23 = classEmitter22.getClassInfo();
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter22);
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter25);
        org.mockito.asm.ClassVisitor classVisitor27 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter(classVisitor27);
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter(classVisitor27);
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter32);
        classEmitter29.setTarget((org.mockito.asm.ClassVisitor) classEmitter33);
        org.mockito.asm.ClassVisitor classVisitor35 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter(classVisitor35);
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter(classVisitor35);
        org.mockito.cglib.core.ClassInfo classInfo38 = classEmitter37.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter37);
        org.mockito.cglib.core.ClassEmitter classEmitter40 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter39);
        org.mockito.asm.ClassVisitor classVisitor41 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter(classVisitor41);
        org.mockito.cglib.core.ClassEmitter classEmitter43 = new org.mockito.cglib.core.ClassEmitter(classVisitor41);
        org.mockito.cglib.core.ClassInfo classInfo44 = classEmitter43.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo45 = classEmitter43.getClassInfo();
        classEmitter40.setTarget((org.mockito.asm.ClassVisitor) classEmitter43);
        classEmitter33.setTarget((org.mockito.asm.ClassVisitor) classEmitter43);
        org.mockito.asm.ClassVisitor classVisitor48 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter49 = new org.mockito.cglib.core.ClassEmitter(classVisitor48);
        org.mockito.cglib.core.ClassEmitter classEmitter50 = new org.mockito.cglib.core.ClassEmitter(classVisitor48);
        org.mockito.cglib.core.ClassEmitter classEmitter51 = new org.mockito.cglib.core.ClassEmitter(classVisitor48);
        org.mockito.cglib.core.ClassEmitter classEmitter52 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter51);
        classEmitter33.setTarget((org.mockito.asm.ClassVisitor) classEmitter52);
        classEmitter25.setTarget((org.mockito.asm.ClassVisitor) classEmitter52);
        classEmitter22.setTarget((org.mockito.asm.ClassVisitor) classEmitter25);
        org.mockito.cglib.core.ClassEmitter classEmitter56 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter22);
        org.mockito.asm.ClassVisitor classVisitor57 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter58 = new org.mockito.cglib.core.ClassEmitter(classVisitor57);
        org.mockito.cglib.core.ClassEmitter classEmitter59 = new org.mockito.cglib.core.ClassEmitter(classVisitor57);
        org.mockito.cglib.core.ClassInfo classInfo60 = classEmitter59.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter61 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter59);
        org.mockito.cglib.core.ClassEmitter classEmitter62 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter61);
        org.mockito.cglib.core.ClassEmitter classEmitter63 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter62);
        org.mockito.cglib.core.ClassInfo classInfo64 = classEmitter62.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor65 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter66 = new org.mockito.cglib.core.ClassEmitter(classVisitor65);
        org.mockito.cglib.core.ClassEmitter classEmitter67 = new org.mockito.cglib.core.ClassEmitter(classVisitor65);
        org.mockito.cglib.core.ClassEmitter classEmitter68 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter67);
        org.mockito.cglib.core.ClassEmitter classEmitter69 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter68);
        classEmitter62.setTarget((org.mockito.asm.ClassVisitor) classEmitter69);
        org.mockito.cglib.core.ClassInfo classInfo71 = classEmitter69.getClassInfo();
        classEmitter22.setTarget((org.mockito.asm.ClassVisitor) classEmitter69);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter69.visitInnerClass("L2041546374", "L2139556704", "L738139109", 102);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo9);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo15);
        org.junit.Assert.assertNull(classInfo23);
        org.junit.Assert.assertNull(classInfo38);
        org.junit.Assert.assertNull(classInfo44);
        org.junit.Assert.assertNull(classInfo45);
        org.junit.Assert.assertNull(classInfo60);
        org.junit.Assert.assertNull(classInfo64);
        org.junit.Assert.assertNull(classInfo71);
    }

    @Test
    public void test21994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21994");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassInfo classInfo8 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter9);
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter(classVisitor11);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter(classVisitor11);
        org.mockito.cglib.core.ClassInfo classInfo14 = classEmitter13.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter15);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.asm.ClassVisitor classVisitor19 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter(classVisitor19);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter(classVisitor19);
        org.mockito.cglib.core.ClassInfo classInfo22 = classEmitter21.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.asm.ClassVisitor classVisitor25 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter(classVisitor25);
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter(classVisitor25);
        org.mockito.cglib.core.ClassInfo classInfo28 = classEmitter27.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo29 = classEmitter27.getClassInfo();
        classEmitter24.setTarget((org.mockito.asm.ClassVisitor) classEmitter27);
        org.mockito.asm.ClassVisitor classVisitor31 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter(classVisitor31);
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter(classVisitor31);
        org.mockito.cglib.core.ClassInfo classInfo34 = classEmitter33.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter33);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter35);
        org.mockito.asm.ClassVisitor classVisitor37 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter(classVisitor37);
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter(classVisitor37);
        org.mockito.cglib.core.ClassInfo classInfo40 = classEmitter39.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter39);
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter41);
        classEmitter36.setTarget((org.mockito.asm.ClassVisitor) classEmitter41);
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter36);
        classEmitter27.setTarget((org.mockito.asm.ClassVisitor) classEmitter36);
        org.mockito.asm.ClassVisitor classVisitor46 = null;
        classEmitter27.setTarget(classVisitor46);
        classEmitter18.setTarget((org.mockito.asm.ClassVisitor) classEmitter27);
        org.mockito.cglib.core.ClassEmitter classEmitter49 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter27);
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classEmitter49);
        org.mockito.cglib.core.ClassEmitter classEmitter51 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter49);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter49.end_class();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo8);
        org.junit.Assert.assertNull(classInfo14);
        org.junit.Assert.assertNull(classInfo22);
        org.junit.Assert.assertNull(classInfo28);
        org.junit.Assert.assertNull(classInfo29);
        org.junit.Assert.assertNull(classInfo34);
        org.junit.Assert.assertNull(classInfo40);
    }

    @Test
    public void test21995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21995");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy1 = null;
        enhancer0.setNamingPolicy(namingPolicy1);
        java.lang.ClassLoader classLoader3 = null;
        enhancer0.setClassLoader(classLoader3);
        boolean boolean5 = enhancer0.getAttemptLoad();
        java.lang.Class class6 = null;
        enhancer0.setSuperclass(class6);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy9 = null;
        enhancer8.setNamingPolicy(namingPolicy9);
        java.lang.ClassLoader classLoader11 = null;
        enhancer8.setClassLoader(classLoader11);
        boolean boolean13 = enhancer8.getAttemptLoad();
        java.lang.Class class14 = null;
        enhancer8.setSuperclass(class14);
        java.lang.ClassLoader classLoader16 = enhancer8.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy17 = enhancer8.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy17);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter21 = null;
        enhancer0.setCallbackFilter(callbackFilter21);
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy26 = null;
        enhancer25.setNamingPolicy(namingPolicy26);
        java.lang.ClassLoader classLoader28 = null;
        enhancer25.setClassLoader(classLoader28);
        enhancer25.setUseFactory(true);
        enhancer25.setInterceptDuringConstruction(true);
        enhancer25.setAttemptLoad(true);
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy37 = null;
        enhancer36.setNamingPolicy(namingPolicy37);
        java.lang.ClassLoader classLoader39 = null;
        enhancer36.setClassLoader(classLoader39);
        java.lang.Class<?> wildcardClass41 = enhancer36.getClass();
        java.lang.String str42 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass41);
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass41);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass41);
        boolean boolean45 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass41);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass41);
        boolean boolean47 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass41);
        boolean boolean48 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass41);
        java.lang.Class[] classArray49 = new java.lang.Class[] { wildcardClass41 };
        enhancer25.setInterfaces(classArray49);
        enhancer25.setUseCache(false);
        enhancer25.setUseFactory(false);
        org.mockito.cglib.proxy.Enhancer enhancer55 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy56 = null;
        enhancer55.setNamingPolicy(namingPolicy56);
        java.lang.ClassLoader classLoader58 = null;
        enhancer55.setClassLoader(classLoader58);
        org.mockito.cglib.proxy.Enhancer enhancer60 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy61 = null;
        enhancer60.setNamingPolicy(namingPolicy61);
        java.lang.ClassLoader classLoader63 = null;
        enhancer60.setClassLoader(classLoader63);
        java.lang.Class<?> wildcardClass65 = enhancer60.getClass();
        java.lang.String str66 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass65);
        org.mockito.cglib.proxy.Enhancer enhancer67 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy68 = null;
        enhancer67.setNamingPolicy(namingPolicy68);
        java.lang.ClassLoader classLoader70 = null;
        enhancer67.setClassLoader(classLoader70);
        java.lang.Class<?> wildcardClass72 = enhancer67.getClass();
        java.lang.Class[] classArray73 = new java.lang.Class[] { wildcardClass65, wildcardClass72 };
        enhancer55.setInterfaces(classArray73);
        boolean boolean75 = enhancer55.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer76 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy77 = null;
        enhancer76.setNamingPolicy(namingPolicy77);
        java.lang.ClassLoader classLoader79 = null;
        enhancer76.setClassLoader(classLoader79);
        java.lang.Class<?> wildcardClass81 = enhancer76.getClass();
        enhancer55.setSuperclass((java.lang.Class) wildcardClass81);
        java.lang.ClassLoader classLoader83 = enhancer55.getClassLoader();
        java.lang.Class<?> wildcardClass84 = enhancer55.getClass();
        enhancer25.setSuperclass((java.lang.Class) wildcardClass84);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy86 = enhancer25.getStrategy();
        enhancer0.setStrategy(generatorStrategy86);
        boolean boolean88 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter89 = null;
        enhancer0.setCallbackFilter(callbackFilter89);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(classLoader16);
        org.junit.Assert.assertNotNull(namingPolicy17);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str42, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(classArray49);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str66, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(classArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(classLoader83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(generatorStrategy86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test21996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21996");
        org.mockito.cglib.core.Signature signature2 = new org.mockito.cglib.core.Signature("L1622326596", "V");
        org.mockito.asm.ClassVisitor classVisitor3 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter(classVisitor3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter(classVisitor3);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassInfo classInfo7 = classEmitter5.getClassInfo();
        boolean boolean8 = signature2.equals((java.lang.Object) classEmitter5);
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor10 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter(classVisitor10);
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter(classVisitor10);
        classEmitter9.setTarget((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter12);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter16.visitOuterClass("L626799988", "L837333887", "L1161401210");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test21997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21997");
        org.mockito.cglib.proxy.Enhancer enhancer2 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = null;
        enhancer2.setNamingPolicy(namingPolicy3);
        java.lang.ClassLoader classLoader5 = null;
        enhancer2.setClassLoader(classLoader5);
        java.lang.Class<?> wildcardClass7 = enhancer2.getClass();
        java.lang.String str8 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass7);
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass7);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass7);
        int int11 = type10.getSize();
        org.mockito.cglib.core.Local local12 = new org.mockito.cglib.core.Local(108, type10);
        org.mockito.cglib.core.Local local13 = new org.mockito.cglib.core.Local(108, type10);
        org.mockito.asm.Type type14 = type10.getElementType();
        int int15 = type10.getSize();
        int int16 = type10.getSort();
        int int18 = type10.getOpcode(155);
        org.mockito.asm.Type type19 = type10.getElementType();
        org.mockito.asm.Type type20 = type19.getElementType();
        int int22 = type20.getOpcode(172);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str8, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 159 + "'", int18 == 159);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 176 + "'", int22 == 176);
    }

    @Test
    public void test21998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21998");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassInfo classInfo5 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter6);
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = null;
        enhancer15.setNamingPolicy(namingPolicy16);
        boolean boolean18 = enhancer15.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy19 = enhancer15.getNamingPolicy();
        boolean boolean20 = enhancer15.getAttemptLoad();
        enhancer15.setUseCache(false);
        enhancer15.setUseCache(true);
        boolean boolean25 = enhancer15.getUseCache();
        org.mockito.asm.Label label26 = new org.mockito.asm.Label();
        java.lang.Object obj27 = label26.info;
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = null;
        enhancer28.setNamingPolicy(namingPolicy29);
        java.lang.ClassLoader classLoader31 = null;
        enhancer28.setClassLoader(classLoader31);
        boolean boolean33 = enhancer28.getAttemptLoad();
        boolean boolean34 = enhancer28.getUseCache();
        org.mockito.cglib.proxy.Callback callback35 = null;
        enhancer28.setCallback(callback35);
        boolean boolean37 = enhancer28.getUseCache();
        org.mockito.cglib.proxy.Callback callback38 = null;
        enhancer28.setCallback(callback38);
        enhancer28.setAttemptLoad(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy42 = enhancer28.getStrategy();
        label26.info = enhancer28;
        enhancer28.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy47 = enhancer46.getNamingPolicy();
        enhancer46.setAttemptLoad(false);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter50 = null;
        enhancer46.setCallbackFilter(callbackFilter50);
        enhancer46.setAttemptLoad(false);
        org.mockito.cglib.core.Signature signature56 = new org.mockito.cglib.core.Signature("byte", "()D");
        org.mockito.asm.Type[] typeArray57 = signature56.getArgumentTypes();
        org.mockito.asm.Label label58 = new org.mockito.asm.Label();
        java.lang.Object obj59 = label58.info;
        org.mockito.cglib.proxy.Enhancer enhancer60 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy61 = null;
        enhancer60.setNamingPolicy(namingPolicy61);
        java.lang.ClassLoader classLoader63 = null;
        enhancer60.setClassLoader(classLoader63);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter65 = null;
        enhancer60.setCallbackFilter(callbackFilter65);
        enhancer60.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer69 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.core.NamingPolicy namingPolicy70 = null;
        enhancer69.setNamingPolicy(namingPolicy70);
        java.lang.ClassLoader classLoader72 = null;
        enhancer69.setClassLoader(classLoader72);
        boolean boolean74 = enhancer69.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy75 = enhancer69.getNamingPolicy();
        org.mockito.cglib.proxy.Callback callback76 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray77 = new org.mockito.cglib.proxy.Callback[] { callback76 };
        enhancer69.setCallbacks(callbackArray77);
        enhancer60.setCallbacks(callbackArray77);
        enhancer60.setAttemptLoad(true);
        label58.info = enhancer60;
        org.mockito.cglib.core.NamingPolicy namingPolicy83 = enhancer60.getNamingPolicy();
        boolean boolean84 = signature56.equals((java.lang.Object) namingPolicy83);
        enhancer46.setNamingPolicy(namingPolicy83);
        enhancer28.setNamingPolicy(namingPolicy83);
        enhancer15.setNamingPolicy(namingPolicy83);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.FieldVisitor fieldVisitor88 = classEmitter10.visitField(138, "L834681642", "L1854834029", "L811591708", (java.lang.Object) namingPolicy83);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo5);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(namingPolicy19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(generatorStrategy42);
        org.junit.Assert.assertNotNull(namingPolicy47);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(namingPolicy75);
        org.junit.Assert.assertNotNull(callbackArray77);
        org.junit.Assert.assertNotNull(namingPolicy83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test21999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test21999");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("L944454528");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test22000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest43.test22000");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter(classVisitor0);
        org.mockito.cglib.core.ClassInfo classInfo3 = classEmitter2.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.asm.ClassVisitor classVisitor6 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter(classVisitor6);
        org.mockito.cglib.core.ClassInfo classInfo9 = classEmitter8.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter8.getClassInfo();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.asm.ClassVisitor classVisitor12 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter(classVisitor12);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter(classVisitor12);
        org.mockito.cglib.core.ClassInfo classInfo15 = classEmitter14.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.asm.ClassVisitor classVisitor18 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter(classVisitor18);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter(classVisitor18);
        org.mockito.cglib.core.ClassInfo classInfo21 = classEmitter20.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter22);
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter22);
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter17);
        classEmitter8.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter8);
        org.mockito.asm.ClassVisitor classVisitor28 = null;
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter(classVisitor28);
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter(classVisitor28);
        org.mockito.cglib.core.ClassInfo classInfo31 = classEmitter30.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter30);
        org.mockito.cglib.core.ClassInfo classInfo33 = classEmitter30.getClassInfo();
        classEmitter8.setTarget((org.mockito.asm.ClassVisitor) classEmitter30);
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter30);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter30);
        org.junit.Assert.assertNull(classInfo3);
        org.junit.Assert.assertNull(classInfo9);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo15);
        org.junit.Assert.assertNull(classInfo21);
        org.junit.Assert.assertNull(classInfo31);
        org.junit.Assert.assertNull(classInfo33);
    }
}
