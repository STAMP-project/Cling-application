import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest18 {

    public static boolean debug = false;

    @Test
    public void test9001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9001");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append('a');
        int int8 = strBuilder1.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        int int10 = strBuilder9.capacity();
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(stringBuffer11, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.insert(1, (double) 32);
        boolean boolean18 = strBuilder9.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder9.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.clear();
        int int21 = strBuilder20.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder1.append(strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        int int25 = strBuilder24.capacity();
        java.lang.StringBuffer stringBuffer26 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(stringBuffer26, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.insert(1, (double) 32);
        java.lang.String str34 = strBuilder24.rightString((int) ' ');
        boolean boolean36 = strBuilder24.startsWith("");
        char[] charArray37 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder22.insert((int) (short) 0, charArray37);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("l");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst("", "");
        char[] charArray45 = strBuilder41.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, "");
        boolean boolean48 = strTokenizer47.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer47.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher40, strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, 't');
        int int54 = strTokenizer53.previousIndex();
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 32 + "'", int25 == 32);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\n32.0" + "'", str34, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
    }

    @Test
    public void test9002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9002");
        java.io.IOException iOException1 = new java.io.IOException();
        java.lang.Throwable[] throwableArray2 = iOException1.getSuppressed();
        java.lang.Throwable[] throwableArray3 = iOException1.getSuppressed();
        java.io.IOException iOException4 = new java.io.IOException("########", (java.lang.Throwable) iOException1);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("\n32.0", throwable7);
        java.io.IOException iOException9 = new java.io.IOException((java.lang.Throwable) iOException8);
        java.util.Properties properties10 = new java.util.Properties();
        int int11 = properties10.size();
        boolean boolean13 = properties10.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties14 = new java.util.Properties();
        int int15 = properties14.size();
        boolean boolean17 = properties14.containsKey((java.lang.Object) (-1.0f));
        properties10.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.lang.String str20 = properties14.getProperty("h");
        java.util.Enumeration<?> wildcardEnumeration21 = properties14.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet22 = properties14.entrySet();
        java.io.IOException iOException23 = new java.io.IOException();
        java.lang.Throwable[] throwableArray24 = iOException23.getSuppressed();
        java.lang.Throwable[] throwableArray25 = iOException23.getSuppressed();
        java.io.IOException iOException26 = new java.io.IOException((java.lang.Throwable) iOException23);
        boolean boolean27 = properties14.containsValue((java.lang.Object) iOException26);
        iOException9.addSuppressed((java.lang.Throwable) iOException26);
        java.io.IOException iOException29 = new java.io.IOException((java.lang.Throwable) iOException26);
        java.lang.Throwable[] throwableArray30 = iOException26.getSuppressed();
        iOException5.addSuppressed((java.lang.Throwable) iOException26);
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(wildcardEnumeration21);
        org.junit.Assert.assertNotNull(objEntrySet22);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(throwableArray30);
    }

    @Test
    public void test9003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9003");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("35.0\n100.0", '1');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setDelimiterChar('\000');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer4.add("#\n100\n");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer4);
    }

    @Test
    public void test9004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9004");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.setNewLineText("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.replace(1, 6, "\n32.0a4\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((double) 39);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder23.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln((double) '#');
        char[] charArray27 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder20.appendln(charArray27);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str31 = strBuilder20.substring((int) '.', 52);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "35.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "35.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[3, 5, ., 0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
    }

    @Test
    public void test9005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9005");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.lang.String str18 = strList14.remove(0);
        char[] charArray23 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, ' ');
        int int26 = strTokenizer25.size();
        boolean boolean27 = strTokenizer25.hasNext();
        java.util.List<java.lang.String> strList28 = strTokenizer25.getTokenList();
        java.lang.String[] strArray32 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        boolean boolean35 = strList28.addAll((java.util.Collection<java.lang.String>) strList33);
        boolean boolean36 = strList14.addAll((java.util.Collection<java.lang.String>) strList33);
        java.util.stream.Stream<java.lang.String> strStream37 = strList33.parallelStream();
        java.lang.Object[] objArray38 = strList33.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator39 = strList33.spliterator();
        java.lang.Class<?> wildcardClass40 = strList33.getClass();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\n32.0" + "'", str18, "\n32.0");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strStream37);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[\n32.0, , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[\n32.0, , ]");
        org.junit.Assert.assertNotNull(strSpliterator39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test9006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9006");
        java.lang.Throwable throwable3 = null;
        java.io.IOException iOException4 = new java.io.IOException("{}", throwable3);
        java.lang.Throwable[] throwableArray5 = iOException4.getSuppressed();
        java.io.IOException iOException6 = new java.io.IOException("\n", (java.lang.Throwable) iOException4);
        java.io.IOException iOException7 = new java.io.IOException("tue", (java.lang.Throwable) iOException6);
        org.junit.Assert.assertNotNull(throwableArray5);
    }

    @Test
    public void test9007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9007");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("true\n###################################");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendSeparator('1');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.insert((int) '.', false);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 46");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
    }

    @Test
    public void test9008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9008");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        int int12 = strBuilder11.capacity();
        java.lang.StringBuffer stringBuffer13 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(stringBuffer13, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int18 = strBuilder16.lastIndexOf(strMatcher17);
        boolean boolean19 = strBuilder9.equalsIgnoreCase(strBuilder16);
        char[] charArray22 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray22);
        boolean boolean24 = properties0.replace((java.lang.Object) strBuilder6, (java.lang.Object) strBuilder9, (java.lang.Object) strTokenizer23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder9.deleteAll("StrTokenizer[]");
        int int28 = strBuilder26.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("");
        int int33 = strBuilder29.indexOf("");
        int int36 = strBuilder29.lastIndexOf('#', (int) (byte) 0);
        boolean boolean38 = strBuilder29.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder29.appendAll((java.util.Iterator<java.lang.String>) strTokenizer39);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder29.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder29.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder26.append(strBuilder44, 1, 0);
        java.lang.StringBuffer stringBuffer48 = strBuilder26.toStringBuffer();
        java.lang.String str49 = strBuilder26.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder26.replaceAll("h", "java.io.IOException: {}");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("0.23\n10.0\n", 'e', '{');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder52.appendAll((java.util.Iterator<java.lang.String>) strTokenizer56);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder52.appendln("#############################3");
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(stringBuffer48);
        org.junit.Assert.assertEquals(stringBuffer48.toString(), "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
    }

    @Test
    public void test9009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9009");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int7 = strBuilder5.lastIndexOf(strMatcher6);
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.lang.Object obj12 = null;
        boolean boolean13 = strList10.contains(obj12);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.appendAll((java.lang.Iterable<java.lang.String>) strList10);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.append('a');
        int int23 = strBuilder16.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        int int25 = strBuilder24.capacity();
        java.lang.StringBuffer stringBuffer26 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(stringBuffer26, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.insert(1, (double) 32);
        boolean boolean33 = strBuilder24.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder24.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder24.clear();
        int int36 = strBuilder35.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder16.append(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        int int40 = strBuilder39.capacity();
        java.lang.StringBuffer stringBuffer41 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.appendln(stringBuffer41, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder39.insert(1, (double) 32);
        java.lang.String str49 = strBuilder39.rightString((int) ' ');
        boolean boolean51 = strBuilder39.startsWith("");
        char[] charArray52 = strBuilder39.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder37.insert((int) (short) 0, charArray52);
        boolean boolean54 = strList10.contains((java.lang.Object) strBuilder37);
        java.util.Properties properties55 = new java.util.Properties();
        int int56 = properties55.size();
        java.util.Set<java.lang.Object> objSet57 = properties55.keySet();
        java.util.Properties properties60 = new java.util.Properties();
        int int61 = properties60.size();
        boolean boolean63 = properties60.containsKey((java.lang.Object) (-1.0f));
        boolean boolean64 = properties55.replace((java.lang.Object) (byte) 1, (java.lang.Object) true, (java.lang.Object) (-1.0f));
        char[] charArray69 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, ' ');
        int int72 = strTokenizer71.size();
        boolean boolean73 = strTokenizer71.hasNext();
        java.util.List<java.lang.String> strList74 = strTokenizer71.getTokenList();
        java.lang.String[] strArray78 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        boolean boolean81 = strList74.addAll((java.util.Collection<java.lang.String>) strList79);
        java.util.Spliterator<java.lang.String> strSpliterator82 = strList79.spliterator();
        int int83 = strList79.size();
        boolean boolean85 = strList79.add("StrTokenizer[]");
        java.util.stream.Stream<java.lang.String> strStream86 = strList79.stream();
        boolean boolean87 = properties55.containsKey((java.lang.Object) strList79);
        int int88 = strList79.size();
        boolean boolean89 = strList10.retainAll((java.util.Collection<java.lang.String>) strList79);
        java.util.Iterator<java.lang.String> strItor90 = strList79.iterator();
        java.lang.String str91 = strItor90.next();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 32 + "'", int25 == 32);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 32 + "'", int36 == 32);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 32 + "'", int40 == 32);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "\n32.0" + "'", str49, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(objSet57);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(strSpliterator82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 3 + "'", int83 == 3);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(strStream86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 4 + "'", int88 == 4);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(strItor90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "\n32.0" + "'", str91, "\n32.0");
    }

    @Test
    public void test9010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9010");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        char[] charArray7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.appendln(charArray7, (int) (short) 1, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.insert(0, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.appendPadding((int) (byte) 0, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.append(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.reverse();
        boolean boolean21 = strBuilder19.endsWith("2.0 \n   -1");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test9011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9011");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append('a');
        char[] charArray14 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, ' ');
        int int17 = strTokenizer16.size();
        boolean boolean18 = strTokenizer16.hasNext();
        java.util.List<java.lang.String> strList19 = strTokenizer16.getTokenList();
        java.lang.String[] strArray23 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        boolean boolean26 = strList19.addAll((java.util.Collection<java.lang.String>) strList24);
        char[] charArray31 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        int int34 = strTokenizer33.size();
        boolean boolean35 = strTokenizer33.hasNext();
        java.util.List<java.lang.String> strList36 = strTokenizer33.getTokenList();
        java.lang.String[] strArray40 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        boolean boolean43 = strList36.addAll((java.util.Collection<java.lang.String>) strList41);
        java.util.Spliterator<java.lang.String> strSpliterator44 = strList41.spliterator();
        int int45 = strList41.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int49 = strList41.lastIndexOf((java.lang.Object) strTokenizer48);
        java.util.List<java.lang.String> strList50 = strTokenizer48.getTokenList();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor51 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        int int53 = strBuilder52.capacity();
        java.lang.StringBuffer stringBuffer54 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder52.appendln(stringBuffer54, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder52.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.appendln(true);
        boolean boolean64 = strSubstitutor51.replaceIn(strBuilder61, (int) '$', 0);
        boolean boolean65 = strList50.equals((java.lang.Object) '$');
        boolean boolean66 = strList19.retainAll((java.util.Collection<java.lang.String>) strList50);
        java.util.stream.Stream<java.lang.String> strStream67 = strList19.stream();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder5.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList19, "true\n");
        java.lang.Object obj70 = null;
        boolean boolean71 = strList19.remove(obj70);
        java.util.stream.Stream<java.lang.String> strStream72 = strList19.parallelStream();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strSpliterator44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 3 + "'", int45 == 3);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 32 + "'", int53 == 32);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strStream67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strStream72);
    }

    @Test
    public void test9012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9012");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendSeparator('#', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.append((float) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendln(32);
        java.io.Reader reader11 = strBuilder6.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst("", "");
        char[] charArray26 = strBuilder22.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder21.appendln(charArray26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder12.replaceFirst(strMatcher28, "StrTokenizer[]");
        int int31 = strBuilder6.lastIndexOf(strMatcher28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst("", "");
        char[] charArray43 = strBuilder39.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder38.appendln(charArray43);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray43);
        int int49 = strMatcher28.isMatch(charArray43, (int) (byte) 0, (int) (byte) 100, (int) (byte) 100);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer51.setQuoteChar('1');
        java.lang.String str54 = strTokenizer51.previousToken();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[]");
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNull(str54);
    }

    @Test
    public void test9013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9013");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        int int12 = strBuilder11.capacity();
        java.lang.StringBuffer stringBuffer13 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(stringBuffer13, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int18 = strBuilder16.lastIndexOf(strMatcher17);
        boolean boolean19 = strBuilder9.equalsIgnoreCase(strBuilder16);
        char[] charArray22 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray22);
        boolean boolean24 = properties0.replace((java.lang.Object) strBuilder6, (java.lang.Object) strBuilder9, (java.lang.Object) strTokenizer23);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        int int26 = strBuilder25.capacity();
        java.lang.StringBuffer stringBuffer27 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.appendln(stringBuffer27, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder25.setNullText("");
        java.lang.Object obj33 = properties0.get((java.lang.Object) strBuilder32);
        java.util.Properties properties34 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray41 = strTokenizer40.getTokenArray();
        java.lang.String[] strArray42 = strTokenizer40.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder38.appendWithSeparators((java.lang.Object[]) strArray42, "4#4");
        char[] charArray47 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray47);
        java.lang.Object obj49 = properties34.getOrDefault((java.lang.Object) strBuilder38, (java.lang.Object) strTokenizer48);
        int int50 = properties34.size();
        int int51 = properties34.size();
        java.util.Set<java.lang.String> strSet52 = properties34.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder32.appendAll((java.lang.Iterable<java.lang.String>) strSet52);
        java.lang.CharSequence charSequence54 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder32.append(charSequence54, (int) 'e', (int) (byte) -1);
        int int58 = strBuilder32.length();
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 32 + "'", int26 == 32);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
    }

    @Test
    public void test9014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9014");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder21.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln((double) '#');
        boolean boolean25 = strBuilder15.equals(strBuilder24);
        java.util.stream.IntStream intStream26 = strBuilder15.codePoints();
        boolean boolean27 = strList9.contains((java.lang.Object) strBuilder15);
        int int28 = strList9.size();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(intStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
    }

    @Test
    public void test9015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9015");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("-1.0");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test9016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9016");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray13 = strTokenizer12.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.appendAll((java.lang.Object[]) strArray13);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst("", "");
        char[] charArray22 = strBuilder18.toCharArray();
        char[] charArray23 = strBuilder15.getChars(charArray22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray22);
        char[] charArray25 = strBuilder7.getChars(charArray22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer27.reset("");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer27.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer6.setTrimmerMatcher(strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer6.setIgnoreEmptyTokens(true);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer35);
    }

    @Test
    public void test9017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9017");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.setNewLineText("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.replace(1, 6, "\n32.0a4\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((double) 39);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder23.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln((double) '#');
        char[] charArray27 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder20.appendln(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, "35.0\n");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "35.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "35.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[3, 5, ., 0, \n]");
        org.junit.Assert.assertNotNull(strBuilder28);
    }

    @Test
    public void test9018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9018");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        java.lang.String[] strArray7 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendWithSeparators((java.lang.Object[]) strArray7, "4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteAll(strMatcher10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append(false);
        java.lang.String str15 = strBuilder9.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.append((int) (short) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        boolean boolean23 = strTokenizer21.hasPrevious();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.appendAll((java.util.Iterator<java.lang.String>) strTokenizer21);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer21.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strBuilder24);
    }

    @Test
    public void test9019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9019");
        java.lang.Throwable throwable2 = null;
        java.io.IOException iOException3 = new java.io.IOException("\n32.0", throwable2);
        java.io.IOException iOException4 = new java.io.IOException("l", throwable2);
        java.util.Properties properties7 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray14 = strTokenizer13.getTokenArray();
        java.lang.String[] strArray15 = strTokenizer13.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendWithSeparators((java.lang.Object[]) strArray15, "4#4");
        char[] charArray20 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray20);
        java.lang.Object obj22 = properties7.getOrDefault((java.lang.Object) strBuilder11, (java.lang.Object) strTokenizer21);
        int int23 = properties7.size();
        int int24 = properties7.size();
        java.io.IOException iOException25 = new java.io.IOException();
        java.lang.Throwable[] throwableArray26 = iOException25.getSuppressed();
        boolean boolean27 = properties7.equals((java.lang.Object) iOException25);
        java.io.IOException iOException28 = new java.io.IOException((java.lang.Throwable) iOException25);
        java.io.IOException iOException29 = new java.io.IOException("java.io.IOException: hi!", (java.lang.Throwable) iOException28);
        java.io.IOException iOException30 = new java.io.IOException("1", (java.lang.Throwable) iOException28);
        iOException4.addSuppressed((java.lang.Throwable) iOException28);
        java.lang.String str32 = iOException4.toString();
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "java.io.IOException: l" + "'", str32, "java.io.IOException: l");
    }

    @Test
    public void test9020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9020");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer6, "h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer6.reset("\n32.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst("", "");
        char[] charArray28 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.appendln(charArray28);
        int int33 = strMatcher16.isMatch(charArray28, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("{}3.0", strMatcher14, strMatcher16);
        int int35 = strTokenizer34.size();
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[]");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
    }

    @Test
    public void test9021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9021");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties0.isEmpty();
        java.util.Collection<java.lang.Object> objCollection3 = properties0.values();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst('a', '4');
        boolean boolean12 = strBuilder7.contains('$');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        int int14 = strBuilder13.capacity();
        java.lang.StringBuffer stringBuffer15 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(stringBuffer15, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.insert(1, (double) 32);
        java.util.Properties properties22 = new java.util.Properties();
        int int23 = properties22.size();
        boolean boolean25 = properties22.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst("", "");
        char[] charArray30 = strBuilder26.toCharArray();
        boolean boolean31 = properties22.containsValue((java.lang.Object) charArray30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder13.append(charArray30, (int) (byte) 0, 0);
        java.lang.String str35 = strBuilder34.toString();
        char[] charArray40 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        java.lang.String str43 = strTokenizer42.next();
        int int44 = strTokenizer42.previousIndex();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder34.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer42, "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder34.deleteCharAt((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln("\n32.0java.io.IOException: hi!");
        java.lang.Object obj51 = properties0.put((java.lang.Object) strBuilder7, (java.lang.Object) strBuilder50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: hi!", ' ');
        java.lang.Object obj55 = properties0.remove((java.lang.Object) ' ');
        java.io.InputStream inputStream56 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(inputStream56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objCollection3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 32 + "'", int14 == 32);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n32.0" + "'", str35, "\n32.0");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 4, #, 4]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "4#4" + "'", str43, "4#4");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNull(obj55);
    }

    @Test
    public void test9022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9022");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst("", "");
        java.lang.String str8 = strBuilder4.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendln((float) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder3.appendFixedWidthPadLeft((java.lang.Object) 100, (int) (short) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.replace(0, (int) (short) 100, "java.io.IOException: java.io.IOException: \n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.ensureCapacity(0);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test9023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9023");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.appendSeparator("a}3.0$", "####\000\000\000\000\000\000\000\000\000\000");
        int int11 = strBuilder9.indexOf("org.apache.commons.lang3.text.StrLookup$MapStrLo");
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test9024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9024");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.util.Spliterator<java.lang.String> strSpliterator17 = strList14.spliterator();
        char[] charArray22 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, ' ');
        int int25 = strTokenizer24.size();
        boolean boolean26 = strTokenizer24.hasNext();
        java.util.List<java.lang.String> strList27 = strTokenizer24.getTokenList();
        java.lang.String[] strArray31 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        boolean boolean34 = strList27.addAll((java.util.Collection<java.lang.String>) strList32);
        java.util.Spliterator<java.lang.String> strSpliterator35 = strList32.spliterator();
        int int36 = strList32.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int40 = strList32.lastIndexOf((java.lang.Object) strTokenizer39);
        java.util.List<java.lang.String> strList41 = strTokenizer39.getTokenList();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor42 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        int int44 = strBuilder43.capacity();
        java.lang.StringBuffer stringBuffer45 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.appendln(stringBuffer45, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder43.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln(true);
        boolean boolean55 = strSubstitutor42.replaceIn(strBuilder52, (int) '$', 0);
        boolean boolean56 = strList41.equals((java.lang.Object) '$');
        boolean boolean57 = strList14.containsAll((java.util.Collection<java.lang.String>) strList41);
        java.util.Iterator<java.lang.String> strItor58 = strList14.iterator();
        char[] charArray63 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, ' ');
        int int66 = strTokenizer65.size();
        boolean boolean67 = strTokenizer65.hasNext();
        java.util.List<java.lang.String> strList68 = strTokenizer65.getTokenList();
        java.lang.String[] strArray72 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList73 = new java.util.ArrayList<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        boolean boolean75 = strList68.addAll((java.util.Collection<java.lang.String>) strList73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray78 = strTokenizer77.getTokenArray();
        java.lang.String[] strArray79 = strTokenizer77.getTokenArray();
        boolean boolean80 = strTokenizer77.hasNext();
        int int81 = strTokenizer77.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = strTokenizer77.getQuoteMatcher();
        java.util.List<java.lang.String> strList83 = strTokenizer77.getTokenList();
        boolean boolean84 = strList68.retainAll((java.util.Collection<java.lang.String>) strList83);
        java.lang.Object[] objArray85 = strList68.toArray();
        boolean boolean86 = strList14.containsAll((java.util.Collection<java.lang.String>) strList68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray89 = strTokenizer88.getTokenArray();
        java.lang.String[] strArray90 = strTokenizer88.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = strTokenizer88.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = strTokenizer88.reset("{}");
        java.lang.String str95 = strTokenizer94.getContent();
        boolean boolean96 = strList68.contains((java.lang.Object) strTokenizer94);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strSpliterator17);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strSpliterator35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 3 + "'", int36 == 3);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 32 + "'", int44 == 32);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strItor58);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strList83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertNotNull(strTokenizer92);
        org.junit.Assert.assertNotNull(strTokenizer94);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "{}" + "'", str95, "{}");
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test9025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9025");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.util.Set<java.lang.Object> objSet2 = properties0.keySet();
        java.util.Properties properties5 = new java.util.Properties();
        int int6 = properties5.size();
        boolean boolean8 = properties5.containsKey((java.lang.Object) (-1.0f));
        boolean boolean9 = properties0.replace((java.lang.Object) (byte) 1, (java.lang.Object) true, (java.lang.Object) (-1.0f));
        char[] charArray14 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, ' ');
        int int17 = strTokenizer16.size();
        boolean boolean18 = strTokenizer16.hasNext();
        java.util.List<java.lang.String> strList19 = strTokenizer16.getTokenList();
        java.lang.String[] strArray23 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        boolean boolean26 = strList19.addAll((java.util.Collection<java.lang.String>) strList24);
        java.util.Spliterator<java.lang.String> strSpliterator27 = strList24.spliterator();
        int int28 = strList24.size();
        boolean boolean30 = strList24.add("StrTokenizer[]");
        java.util.stream.Stream<java.lang.String> strStream31 = strList24.stream();
        boolean boolean32 = properties0.containsKey((java.lang.Object) strList24);
        char[] charArray37 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, ' ');
        int int40 = strTokenizer39.size();
        boolean boolean41 = strTokenizer39.hasNext();
        java.util.List<java.lang.String> strList42 = strTokenizer39.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst("", "");
        char[] charArray47 = strBuilder43.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray47);
        boolean boolean51 = strList42.equals((java.lang.Object) charArray47);
        char[] charArray56 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, ' ');
        int int59 = strTokenizer58.size();
        boolean boolean60 = strTokenizer58.hasNext();
        java.util.List<java.lang.String> strList61 = strTokenizer58.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        int int63 = strBuilder62.capacity();
        java.lang.StringBuffer stringBuffer64 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder62.appendln(stringBuffer64, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder62.insert(1, (double) 32);
        java.lang.String str72 = strBuilder62.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder62.insert(1, '#');
        boolean boolean76 = strList61.equals((java.lang.Object) strBuilder62);
        boolean boolean77 = strList42.containsAll((java.util.Collection<java.lang.String>) strList61);
        java.lang.String str79 = strList42.remove((int) (short) 0);
        java.util.Iterator<java.lang.String> strItor80 = strList42.iterator();
        char[] charArray85 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray85, ' ');
        int int88 = strTokenizer87.size();
        boolean boolean89 = strTokenizer87.hasNext();
        java.util.List<java.lang.String> strList90 = strTokenizer87.getTokenList();
        boolean boolean91 = strList42.containsAll((java.util.Collection<java.lang.String>) strList90);
        boolean boolean92 = strList24.removeAll((java.util.Collection<java.lang.String>) strList42);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str94 = strList42.remove(31);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 31, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(objSet2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strSpliterator27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 3 + "'", int28 == 3);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strStream31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 32 + "'", int63 == 32);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "\n32.0" + "'", str72, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "4#4" + "'", str79, "4#4");
        org.junit.Assert.assertNotNull(strItor80);
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(strList90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test9026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9026");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.util.Spliterator<java.lang.String> strSpliterator17 = strList14.spliterator();
        int int18 = strList14.size();
        java.lang.String str20 = strList14.remove((int) (byte) 0);
        boolean boolean22 = strList14.add("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray28 = strTokenizer27.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.appendAll((java.lang.Object[]) strArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder23.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray38 = strTokenizer37.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.appendAll((java.lang.Object[]) strArray38);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder23.appendln(strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst("", "");
        char[] charArray52 = strBuilder48.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.appendln(charArray52);
        boolean boolean54 = strBuilder23.equals((java.lang.Object) strBuilder47);
        boolean boolean55 = strList14.remove((java.lang.Object) strBuilder23);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder23.replaceAll("{}", "h");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder23.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder23.deleteAll('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.deleteAll('\000');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strBuilder61.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        int int66 = strBuilder65.capacity();
        java.lang.StringBuffer stringBuffer67 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder65.appendln(stringBuffer67, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder65.insert(1, (double) 32);
        java.lang.String str75 = strBuilder65.rightString((int) ' ');
        boolean boolean77 = strBuilder65.startsWith("");
        char[] charArray78 = strBuilder65.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder65.insert(1, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder65.append(53);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder83.appendSeparator("#", 32);
        char[] charArray89 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray89);
        java.lang.String[] strArray91 = strTokenizer90.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder86.appendAll((java.lang.Object[]) strArray91);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder61.appendAll((java.lang.Object[]) strArray91);
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder61.append((long) '\000');
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strSpliterator17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\n32.0" + "'", str20, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[]");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 32 + "'", int66 == 32);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "\n32.0" + "'", str75, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder95);
    }

    @Test
    public void test9027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9027");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln('#');
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.append(stringBuffer8, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder5.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder5.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder5.appendSeparator("StrTokenizer[not tokenized yet]", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        int int21 = strBuilder20.capacity();
        java.lang.StringBuffer stringBuffer22 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.appendln(stringBuffer22, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder20.insert(1, (double) 32);
        boolean boolean29 = strBuilder20.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder20.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceAll("#", "true\n###################################3\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) "#", 100, 't');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder5.appendSeparator('\000', 'e');
        boolean boolean40 = strBuilder1.equals((java.lang.Object) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder1.appendln(false);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder42);
    }

    @Test
    public void test9028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9028");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder5.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.minimizeCapacity();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.delete(79, 49);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
    }

    @Test
    public void test9029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9029");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendSeparator("java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.appendFixedWidthPadRight((int) 't', 5, '4');
        java.util.stream.IntStream intStream16 = strBuilder15.chars();
        java.lang.String str18 = strBuilder15.rightString(71);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "11644" + "'", str18, "11644");
    }

    @Test
    public void test9030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9030");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray25 = strTokenizer24.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendAll((java.lang.Object[]) strArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder20.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray35 = strTokenizer34.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.appendAll((java.lang.Object[]) strArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder20.appendln(strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.appendSeparator("hi!", "");
        java.lang.String str44 = strBuilder42.rightString((int) '#');
        java.lang.StringBuffer stringBuffer45 = strBuilder42.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder19.appendln(stringBuffer45);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder19.appendFixedWidthPadRight(117, 58, 'r');
        java.lang.String str52 = strBuilder50.rightString(248);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "97\nhi!" + "'", str44, "97\nhi!");
        org.junit.Assert.assertNotNull(stringBuffer45);
        org.junit.Assert.assertEquals(stringBuffer45.toString(), "97\nhi!");
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "97\n97\nhi!\n117rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" + "'", str52, "97\n97\nhi!\n117rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr");
    }

    @Test
    public void test9031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9031");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        char[] charArray16 = strBuilder12.toCharArray();
        char[] charArray17 = strBuilder9.getChars(charArray16);
        java.io.Reader reader18 = strBuilder9.asReader();
        java.lang.Object obj19 = properties0.remove((java.lang.Object) strBuilder9);
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader29 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray35 = strTokenizer34.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.appendAll((java.lang.Object[]) strArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream40 = strBuilder30.codePoints();
        java.lang.Object obj41 = properties20.replace((java.lang.Object) reader29, (java.lang.Object) intStream40);
        reader29.reset();
        properties0.load(reader29);
        boolean boolean44 = reader29.markSupported();
        reader29.mark(80);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(intStream40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test9032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9032");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, '$', 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("0.0true");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setTrimmerMatcher(strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer19.reset();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer20);
    }

    @Test
    public void test9033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9033");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("0.0100\n");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test9034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9034");
        java.lang.Throwable throwable2 = null;
        java.io.IOException iOException3 = new java.io.IOException("\n32.0", throwable2);
        java.io.IOException iOException4 = new java.io.IOException("l", throwable2);
        java.io.IOException iOException6 = new java.io.IOException("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        iOException4.addSuppressed((java.lang.Throwable) iOException6);
    }

    @Test
    public void test9035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9035");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        boolean boolean25 = properties0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst('a', '4');
        char[] charArray37 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, ' ');
        int int40 = strTokenizer39.size();
        boolean boolean41 = strTokenizer39.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer39.setIgnoredMatcher(strMatcher42);
        int int45 = strBuilder29.indexOf(strMatcher42, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder29.deleteFirst("StrTokenizer[32.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        int int49 = strBuilder48.capacity();
        java.lang.StringBuffer stringBuffer50 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.appendln(stringBuffer50, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder53.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder66.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.appendln((double) '#');
        boolean boolean70 = strBuilder60.equals(strBuilder69);
        java.util.stream.IntStream intStream71 = strBuilder60.codePoints();
        java.util.Iterator<java.lang.String> strItor72 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder60.appendWithSeparators(strItor72, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.replaceFirst(' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder54.appendln(strBuilder74, 0, (int) (byte) 1);
        java.lang.Object obj81 = properties0.putIfAbsent((java.lang.Object) strBuilder47, (java.lang.Object) strBuilder80);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder80.delete(63, 178);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 32 + "'", int49 == 32);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(intStream71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNull(obj81);
    }

    @Test
    public void test9036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9036");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: StrTokenizer[]", 'o');
        int int3 = strTokenizer2.nextIndex();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test9037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9037");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0001.0\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000", "\naaaa100100.0a");
    }

    @Test
    public void test9038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9038");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        char[] charArray14 = strBuilder10.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        boolean boolean18 = strList9.equals((java.lang.Object) charArray14);
        char[] charArray23 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, ' ');
        int int26 = strTokenizer25.size();
        boolean boolean27 = strTokenizer25.hasNext();
        java.util.List<java.lang.String> strList28 = strTokenizer25.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        int int30 = strBuilder29.capacity();
        java.lang.StringBuffer stringBuffer31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(stringBuffer31, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder29.insert(1, (double) 32);
        java.lang.String str39 = strBuilder29.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder29.insert(1, '#');
        boolean boolean43 = strList28.equals((java.lang.Object) strBuilder29);
        boolean boolean44 = strList9.containsAll((java.util.Collection<java.lang.String>) strList28);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder56.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.appendln((double) '#');
        boolean boolean60 = strBuilder50.equals(strBuilder59);
        java.util.stream.IntStream intStream61 = strBuilder50.codePoints();
        java.util.Iterator<java.lang.String> strItor62 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder50.appendWithSeparators(strItor62, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceFirst(' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.replaceAll('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.appendSeparator('4', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder76.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.setNullText("");
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder77.replaceAll(strMatcher81, "hi!");
        int int84 = strBuilder73.lastIndexOf(strMatcher81);
        boolean boolean85 = strList28.contains((java.lang.Object) int84);
        java.util.stream.Stream<java.lang.String> strStream86 = strList28.stream();
        java.util.ListIterator<java.lang.String> strItor87 = strList28.listIterator();
        java.util.ListIterator<java.lang.String> strItor88 = strList28.listIterator();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 32 + "'", int30 == 32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\n32.0" + "'", str39, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(intStream61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(strStream86);
        org.junit.Assert.assertNotNull(strItor87);
        org.junit.Assert.assertNotNull(strItor88);
    }

    @Test
    public void test9039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9039");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.append((long) '$');
        int int22 = strBuilder17.lastIndexOf("1", 53);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.setNewLineText("\n32.0a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.appendln('#');
        java.lang.StringBuffer stringBuffer33 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.append(stringBuffer33, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.deleteFirst("hi!");
        char[] charArray39 = strBuilder30.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer26.reset(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer40.reset();
        java.lang.String str42 = strTokenizer41.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder24.appendAll((java.util.Iterator<java.lang.String>) strTokenizer41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.setNewLineText("tttttttttttttttttttttttttttttttttttttttttttttttttt");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray51 = strTokenizer50.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder46.appendAll((java.lang.Object[]) strArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder55.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.ensureCapacity((int) (short) 10);
        boolean boolean59 = strBuilder52.equals((java.lang.Object) strBuilder58);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder52.setNullText("java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder45.appendFixedWidthPadLeft((java.lang.Object) strBuilder61, 178, 'a');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "#" + "'", str42, "#");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
    }

    @Test
    public void test9040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9040");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder0.indexOf("");
        int int7 = strBuilder0.lastIndexOf('#', (int) (byte) 0);
        boolean boolean9 = strBuilder0.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer10);
        boolean boolean12 = strTokenizer10.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer10.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst("", "");
        char[] charArray28 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.appendln(charArray28);
        int int33 = strMatcher16.isMatch(charArray28, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer14.setTrimmerMatcher(strMatcher16);
        boolean boolean35 = strTokenizer34.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer34.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer34.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer34.reset();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str39 = strTokenizer34.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[]");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer38);
    }

    @Test
    public void test9041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9041");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.util.Properties properties9 = new java.util.Properties();
        int int10 = properties9.size();
        boolean boolean12 = properties9.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "");
        char[] charArray17 = strBuilder13.toCharArray();
        boolean boolean18 = properties9.containsValue((java.lang.Object) charArray17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder0.append(charArray17, (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, '4', 'a');
        int int25 = strTokenizer24.nextIndex();
        java.lang.String str26 = strTokenizer24.toString();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer24.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str26, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test9042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9042");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln('#');
        java.lang.StringBuffer stringBuffer6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.append(stringBuffer6, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder3.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("");
        int int16 = strBuilder12.indexOf("");
        int int19 = strBuilder12.lastIndexOf('#', (int) (byte) 0);
        boolean boolean21 = strBuilder12.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder12.appendAll((java.util.Iterator<java.lang.String>) strTokenizer22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder12.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder12.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray33 = strTokenizer32.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder28.appendAll((java.lang.Object[]) strArray33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder28.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray43 = strTokenizer42.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder38.appendAll((java.lang.Object[]) strArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder28.appendln(strBuilder44);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder44.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst('a', '4');
        java.io.Writer writer58 = strBuilder57.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.replaceFirst("", "");
        char[] charArray70 = strBuilder66.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder65.appendln(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray70);
        writer58.write(charArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder50.append(charArray70);
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder27.replaceFirst(strMatcher75, "hi!");
        int int78 = strBuilder11.indexOf(strMatcher75);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder11.setCharAt((int) '\000', 'r');
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder81.append((double) 'e');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("8100");
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder83.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer85, "java.io.IOException: java.io.IOException:");
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder83.ensureCapacity((int) '0');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(writer58);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[]");
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder89);
    }

    @Test
    public void test9043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9043");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        char[] charArray4 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer7.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, strMatcher5, strMatcher8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 't', 't');
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray4);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray4);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strMatcher14);
    }

    @Test
    public void test9044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9044");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.lang.String str10 = strBuilder0.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst("", "");
        char[] charArray18 = strBuilder14.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, "");
        boolean boolean21 = strTokenizer20.hasNext();
        boolean boolean22 = strTokenizer20.hasPrevious();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder13.appendAll((java.util.Iterator<java.lang.String>) strTokenizer20);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder13.replaceAll('4', ' ');
        char[] charArray27 = strBuilder26.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray27);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\n32.0" + "'", str10, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strMatcher28);
    }

    @Test
    public void test9045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9045");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.lang.String str10 = properties4.getProperty("h");
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet12 = properties4.entrySet();
        java.io.IOException iOException13 = new java.io.IOException();
        java.lang.Throwable[] throwableArray14 = iOException13.getSuppressed();
        java.lang.Throwable[] throwableArray15 = iOException13.getSuppressed();
        java.io.IOException iOException16 = new java.io.IOException((java.lang.Throwable) iOException13);
        boolean boolean17 = properties4.containsValue((java.lang.Object) iOException16);
        char[] charArray23 = new char[] { ' ', '4', '#', '#', ' ' };
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder(3);
        char[] charArray27 = strBuilder26.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray35 = strTokenizer34.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.appendAll((java.lang.Object[]) strArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.replaceFirst('a', 'a');
        java.lang.String str41 = strBuilder39.rightString((int) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.ensureCapacity(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder39.deleteFirst('$');
        java.lang.Object obj46 = properties4.put((java.lang.Object) strTokenizer29, (java.lang.Object) strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder49.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.setNullText("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer55.setDelimiterString("{}");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer57.getIgnoredMatcher();
        int int60 = strBuilder52.indexOf(strMatcher58, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder52.clear();
        java.util.stream.IntStream intStream62 = strBuilder61.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder64.append('a');
        boolean boolean71 = strBuilder69.endsWith("100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.appendNewLine();
        boolean boolean73 = properties4.remove((java.lang.Object) intStream62, (java.lang.Object) strBuilder69);
        boolean boolean75 = strBuilder69.contains("ttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNotNull(objEntrySet12);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 4## ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 4## ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, #, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(intStream62);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test9046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9046");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.append((double) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendln("[\n32.0, , , StrTokenizer[]]");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append(false);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test9047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9047");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(" 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendSeparator('$');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln('#');
        java.lang.StringBuffer stringBuffer12 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.append(stringBuffer12, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.deleteFirst("hi!");
        char[] charArray18 = strBuilder9.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer5.reset(charArray18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer19.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer20.reset();
        java.lang.String[] strArray22 = strTokenizer21.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray30 = strTokenizer29.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder24.appendAll((java.lang.Object[]) strArray30);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst("", "");
        char[] charArray39 = strBuilder35.toCharArray();
        char[] charArray40 = strBuilder32.getChars(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39);
        char[] charArray42 = strBuilder24.getChars(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer44.reset("");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer44.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("10.0", strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer21.setIgnoredMatcher(strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer21.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer52);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder1.insert((int) (byte) 1, 'e');
        java.lang.String str58 = strBuilder1.rightString(41);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + " e4#4$#" + "'", str58, " e4#4$#");
    }

    @Test
    public void test9048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9048");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = new org.apache.commons.lang3.text.StrTokenizer();
        java.lang.String[] strArray1 = strTokenizer0.getTokenArray();
        int int2 = strTokenizer0.nextIndex();
        boolean boolean3 = strTokenizer0.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer0.getQuoteMatcher();
        boolean boolean5 = strTokenizer0.hasPrevious();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test9049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9049");
        char[] charArray2 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setDelimiterString("hi!");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterMatcher(strMatcher7);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strTokenizer8);
    }

    @Test
    public void test9050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9050");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = strTokenizer1.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.reset();
        int int4 = strTokenizer3.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setTrimmerMatcher(strMatcher5);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = strTokenizer3.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(strTokenizer6);
    }

    @Test
    public void test9051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9051");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Object obj2 = properties0.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder3.appendFixedWidthPadRight((java.lang.Object) strBuilder12, (int) (byte) -1, '#');
        java.lang.Object obj16 = properties0.get((java.lang.Object) strBuilder3);
        java.util.Properties properties17 = new java.util.Properties();
        int int18 = properties17.size();
        boolean boolean20 = properties17.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties21 = new java.util.Properties();
        int int22 = properties21.size();
        boolean boolean24 = properties21.containsKey((java.lang.Object) (-1.0f));
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        char[] charArray30 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, ' ');
        int int33 = strTokenizer32.size();
        boolean boolean34 = strTokenizer32.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer32.setIgnoredMatcher(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "");
        java.lang.Object obj41 = properties17.putIfAbsent((java.lang.Object) strMatcher35, (java.lang.Object) strBuilder37);
        boolean boolean42 = strBuilder3.equals(obj41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder3.appendln((long) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.appendln((float) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("{}");
        boolean boolean52 = strTokenizer51.hasNext();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder44.appendAll((java.util.Iterator<java.lang.String>) strTokenizer51);
        java.io.Writer writer54 = strBuilder53.asWriter();
        java.io.Writer writer56 = writer54.append('\n');
        writer56.flush();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(writer54);
        org.junit.Assert.assertNotNull(writer56);
    }

    @Test
    public void test9052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9052");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder0.indexOf("");
        int int7 = strBuilder0.lastIndexOf('#', (int) (byte) 0);
        boolean boolean9 = strBuilder0.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        int int17 = strBuilder16.capacity();
        java.lang.StringBuffer stringBuffer18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendln(stringBuffer18, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder16.insert(1, (double) 32);
        java.util.Properties properties25 = new java.util.Properties();
        int int26 = properties25.size();
        boolean boolean28 = properties25.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst("", "");
        char[] charArray33 = strBuilder29.toCharArray();
        boolean boolean34 = properties25.containsValue((java.lang.Object) charArray33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder16.append(charArray33, (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder16.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder0.append((java.lang.Object) true);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder0.trim();
        int int44 = strBuilder41.lastIndexOf("{\ntrue\n=1.0}", 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.minimizeCapacity();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.append("\n\n97\n\n", (int) (byte) 100, 69);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 32 + "'", int17 == 32);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
    }

    @Test
    public void test9053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9053");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendAll((java.lang.Object[]) strArray6);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.append((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendPadding(73, '$');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test9054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9054");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.append((double) 8);
        int int13 = strBuilder0.indexOf('o');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test9055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9055");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, "java.io.IOException: \000");
    }

    @Test
    public void test9056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9056");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.trim();
        boolean boolean13 = strBuilder10.contains("4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.delete(0, 0);
        boolean boolean19 = strBuilder17.endsWith("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.reverse();
        java.io.Writer writer21 = strBuilder20.asWriter();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(writer21);
    }

    @Test
    public void test9057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9057");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("java.io.IOException: StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.appendSeparator("\ntrue32.0\n#\n\n32.0\ntru", " 4## ");
        java.lang.String str5 = strBuilder1.getNullText();
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test9058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9058");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        char[] charArray7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.appendln(charArray7, (int) (short) 1, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.insert(0, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.appendPadding((int) (byte) 0, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.append(0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strBuilder13.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setIgnoreEmptyTokens(true);
        java.util.List<java.lang.String> strList22 = strTokenizer21.getTokenList();
        java.lang.String str23 = strTokenizer21.getContent();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1\n0" + "'", str23, "1\n0");
    }

    @Test
    public void test9059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9059");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties4.keys();
        java.util.Set<java.lang.String> strSet10 = properties4.stringPropertyNames();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader21 = strBuilder17.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray27 = strTokenizer26.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.appendAll((java.lang.Object[]) strArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder22.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream32 = strBuilder22.codePoints();
        java.lang.Object obj33 = properties12.replace((java.lang.Object) reader21, (java.lang.Object) intStream32);
        long long35 = reader21.skip(0L);
        reader21.mark(2);
        reader21.mark((int) (short) 1);
        properties4.load(reader21);
        boolean boolean41 = reader21.ready();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.deleteFirst("");
        int int46 = strBuilder42.indexOf("");
        int int49 = strBuilder42.lastIndexOf('#', (int) (byte) 0);
        java.io.Reader reader50 = strBuilder42.asReader();
        reader50.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray57 = strTokenizer56.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder52.appendAll((java.lang.Object[]) strArray57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder52.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream62 = strBuilder52.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst("", "");
        char[] charArray67 = strBuilder63.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder52.appendln(charArray67);
        int int71 = reader50.read(charArray67);
        // The following exception was thrown during execution in test generation
        try {
            int int74 = reader21.read(charArray67, 53, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(intStream32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(reader50);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(intStream62);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[]");
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
    }

    @Test
    public void test9060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9060");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream10 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst("", "");
        char[] charArray15 = strBuilder11.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder0.appendln(charArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder21.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.replaceFirst('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.append((float) 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder22.setLength((int) (byte) 1);
        int int33 = strBuilder22.lastIndexOf("\n4\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder18.appendln((java.lang.Object) int33);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder18.insert((int) 's', 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 115");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[]");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
    }

    @Test
    public void test9061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9061");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        char[] charArray14 = strBuilder10.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        boolean boolean18 = strList9.equals((java.lang.Object) charArray14);
        java.util.Spliterator<java.lang.String> strSpliterator19 = strList9.spliterator();
        strList9.add((int) (short) 1, "a4");
        java.util.stream.Stream<java.lang.String> strStream23 = strList9.stream();
        java.util.stream.Stream<java.lang.String> strStream24 = strList9.parallelStream();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strSpliterator19);
        org.junit.Assert.assertNotNull(strStream23);
        org.junit.Assert.assertNotNull(strStream24);
    }

    @Test
    public void test9062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9062");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst('a', '4');
        java.io.Writer writer9 = strBuilder8.asWriter();
        properties1.store(writer9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        java.io.Reader reader16 = strBuilder12.asReader();
        properties1.load(reader16);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst("", "");
        char[] charArray29 = strBuilder25.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder24.appendln(charArray29);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.appendln((double) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteAll('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst("", "");
        char[] charArray39 = strBuilder35.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_PREFIX;
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceFirst("", "");
        char[] charArray54 = strBuilder50.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.appendln(charArray54);
        int int59 = strMatcher42.isMatch(charArray54, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher40, strMatcher42);
        java.lang.Object obj61 = properties1.put((java.lang.Object) strBuilder34, (java.lang.Object) strTokenizer60);
        java.util.Set<java.lang.Object> objSet62 = properties1.keySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        int int64 = strBuilder63.capacity();
        java.lang.StringBuffer stringBuffer65 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder63.appendln(stringBuffer65, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder68.appendNewLine();
        int int70 = strBuilder69.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder72.append('a');
        int int79 = strBuilder72.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = new org.apache.commons.lang3.text.StrBuilder();
        int int81 = strBuilder80.capacity();
        java.lang.StringBuffer stringBuffer82 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder80.appendln(stringBuffer82, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder80.insert(1, (double) 32);
        boolean boolean89 = strBuilder80.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder80.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder80.clear();
        int int92 = strBuilder91.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder72.append(strBuilder91);
        java.io.Writer writer94 = strBuilder91.asWriter();
        java.lang.Object obj95 = properties1.getOrDefault((java.lang.Object) int70, (java.lang.Object) writer94);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet96 = properties1.entrySet();
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[]");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[]");
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[]");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(objSet62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 32 + "'", int64 == 32);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 32 + "'", int70 == 32);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 32 + "'", int81 == 32);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 32 + "'", int92 == 32);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(writer94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(objEntrySet96);
    }

    @Test
    public void test9063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9063");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        char[] charArray21 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        int int24 = strTokenizer23.size();
        boolean boolean25 = strTokenizer23.hasNext();
        java.util.List<java.lang.String> strList26 = strTokenizer23.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "");
        char[] charArray31 = strBuilder27.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        boolean boolean35 = strList26.equals((java.lang.Object) charArray31);
        char[] charArray40 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        int int43 = strTokenizer42.size();
        boolean boolean44 = strTokenizer42.hasNext();
        java.util.List<java.lang.String> strList45 = strTokenizer42.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        int int47 = strBuilder46.capacity();
        java.lang.StringBuffer stringBuffer48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(stringBuffer48, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder46.insert(1, (double) 32);
        java.lang.String str56 = strBuilder46.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder46.insert(1, '#');
        boolean boolean60 = strList45.equals((java.lang.Object) strBuilder46);
        boolean boolean61 = strList26.containsAll((java.util.Collection<java.lang.String>) strList45);
        boolean boolean62 = strList9.addAll((java.util.Collection<java.lang.String>) strList45);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln('#');
        java.lang.StringBuffer stringBuffer69 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.append(stringBuffer69, (int) (byte) -1, (int) (byte) 100);
        int int73 = strList9.lastIndexOf((java.lang.Object) stringBuffer69);
        java.util.Iterator<java.lang.String> strItor74 = strList9.iterator();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 32 + "'", int47 == 32);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\n32.0" + "'", str56, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(strItor74);
    }

    @Test
    public void test9064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9064");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        int int3 = strBuilder2.capacity();
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.appendln(stringBuffer4, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.insert(1, (double) 32);
        java.util.Properties properties11 = new java.util.Properties();
        int int12 = properties11.size();
        boolean boolean14 = properties11.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst("", "");
        char[] charArray19 = strBuilder15.toCharArray();
        boolean boolean20 = properties11.containsValue((java.lang.Object) charArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder2.append(charArray19, (int) (byte) 0, 0);
        boolean boolean24 = properties0.equals((java.lang.Object) 0);
        java.util.Collection<java.lang.Object> objCollection25 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties0.keys();
        java.util.Properties properties27 = new java.util.Properties();
        int int28 = properties27.size();
        boolean boolean30 = properties27.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst("", "");
        boolean boolean36 = strBuilder34.endsWith("StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln('#');
        java.lang.StringBuffer stringBuffer45 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder42.append(stringBuffer45, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder42.deleteFirst("hi!");
        char[] charArray51 = strBuilder42.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer38.reset(charArray51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray51);
        char[] charArray54 = strBuilder34.getChars(charArray51);
        java.lang.Object obj55 = properties27.remove((java.lang.Object) charArray54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray54);
        char[] charArray63 = new char[] { ' ', '4', '#', '#', ' ' };
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray63);
        java.lang.Object obj65 = properties0.putIfAbsent((java.lang.Object) charArray54, (java.lang.Object) strMatcher64);
        java.io.PrintWriter printWriter66 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printWriter66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 32 + "'", int3 == 32);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, \n]");
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), " 4## ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), " 4## ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[ , 4, #, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNull(obj65);
    }

    @Test
    public void test9065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9065");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int7 = strBuilder5.lastIndexOf(strMatcher6);
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.lang.Object obj12 = null;
        boolean boolean13 = strList10.contains(obj12);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.appendAll((java.lang.Iterable<java.lang.String>) strList10);
        java.lang.String str16 = strList10.get((int) (byte) 0);
        java.util.stream.Stream<java.lang.String> strStream17 = strList10.stream();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = strList10.get(53);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 53, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strStream17);
    }

    @Test
    public void test9066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9066");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        char[] charArray16 = strBuilder12.toCharArray();
        char[] charArray17 = strBuilder9.getChars(charArray16);
        java.io.Reader reader18 = strBuilder9.asReader();
        java.lang.Object obj19 = properties0.remove((java.lang.Object) strBuilder9);
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader29 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray35 = strTokenizer34.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.appendAll((java.lang.Object[]) strArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream40 = strBuilder30.codePoints();
        java.lang.Object obj41 = properties20.replace((java.lang.Object) reader29, (java.lang.Object) intStream40);
        reader29.reset();
        properties0.load(reader29);
        java.util.Set<java.lang.Object> objSet44 = properties0.keySet();
        java.util.Collection<java.lang.Object> objCollection45 = properties0.values();
        java.lang.Object obj46 = null;
        boolean boolean47 = properties0.equals(obj46);
        java.util.Set<java.lang.String> strSet48 = properties0.stringPropertyNames();
        boolean boolean49 = properties0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(intStream40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objSet44);
        org.junit.Assert.assertNotNull(objCollection45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test9067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9067");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        java.lang.String[] strArray7 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendWithSeparators((java.lang.Object[]) strArray7, "4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.delete(0, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder3.appendSeparator("1", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.appendNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strBuilder16.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.setLength((int) 't');
        java.io.Reader reader22 = strBuilder21.asReader();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(reader22);
    }

    @Test
    public void test9068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9068");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Set<java.lang.Object> objSet9 = properties4.keySet();
        java.util.Set<java.lang.Object> objSet10 = properties4.keySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray17 = strTokenizer16.getTokenArray();
        java.lang.String[] strArray18 = strTokenizer16.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.appendWithSeparators((java.lang.Object[]) strArray18, "4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteAll(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray31 = strTokenizer30.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.appendAll((java.lang.Object[]) strArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.replaceFirst('a', 'a');
        char[] charArray40 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        int int43 = strTokenizer42.size();
        boolean boolean44 = strTokenizer42.hasNext();
        java.util.List<java.lang.String> strList45 = strTokenizer42.getTokenList();
        java.lang.String[] strArray49 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        boolean boolean52 = strList45.addAll((java.util.Collection<java.lang.String>) strList50);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder26.appendAll((java.lang.Iterable<java.lang.String>) strList50);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder20.appendAll((java.lang.Iterable<java.lang.String>) strList50);
        boolean boolean55 = properties4.containsValue((java.lang.Object) strList50);
        java.util.Iterator<java.lang.String> strItor56 = strList50.iterator();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strItor56);
    }

    @Test
    public void test9069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9069");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[4#4]");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendFixedWidthPadLeft(32, (int) (short) 0, '$');
        java.lang.String str6 = strBuilder1.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.appendln("}{\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder1.setLength(51);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
    }

    @Test
    public void test9070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9070");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("a4", strMatcher1);
        int int3 = strTokenizer2.size();
        java.lang.String str4 = strTokenizer2.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer2.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterChar('4');
        java.lang.String str8 = strTokenizer5.nextToken();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer5.set("E");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "a4" + "'", str4, "a4");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "a" + "'", str8, "a");
    }

    @Test
    public void test9071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9071");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.keys();
        java.lang.Object obj4 = properties0.setProperty("h", "{}");
        boolean boolean5 = properties0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        int int7 = strBuilder6.capacity();
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder6.appendln(stringBuffer8, (int) '#', (int) (byte) 0);
        int int14 = strBuilder11.indexOf('4', (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.setNullText("97\nhi!");
        java.lang.String str17 = strBuilder11.getNullText();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.setDelimiterString("{\n36.0\n=StrTokenizer[not tokenized yet]}");
        java.lang.Object obj24 = properties0.replace((java.lang.Object) str17, (java.lang.Object) strTokenizer21);
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 32 + "'", int7 == 32);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "97\nhi!" + "'", str17, "97\nhi!");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNull(obj24);
    }

    @Test
    public void test9072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9072");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("00.0\000\000\000\000\000");
        boolean boolean4 = strBuilder1.contains(strMatcher3);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test9073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9073");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst('a', '4');
        java.io.Writer writer9 = strBuilder8.asWriter();
        properties1.store(writer9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        java.io.Reader reader16 = strBuilder12.asReader();
        properties1.load(reader16);
        int int18 = reader16.read();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst("", "");
        char[] charArray23 = strBuilder19.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_PREFIX;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst("", "");
        char[] charArray38 = strBuilder34.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.appendln(charArray38);
        int int43 = strMatcher26.isMatch(charArray38, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher24, strMatcher26);
        int int45 = reader16.read(charArray23);
        reader16.mark((int) '.');
        long long49 = reader16.skip(0L);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[]");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
    }

    @Test
    public void test9074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9074");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.setCharAt(0, '4');
        java.util.Properties properties12 = new java.util.Properties();
        int int13 = properties12.size();
        java.lang.Object obj14 = properties12.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder21.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder15.appendFixedWidthPadRight((java.lang.Object) strBuilder24, (int) (byte) -1, '#');
        java.lang.Object obj28 = properties12.get((java.lang.Object) strBuilder15);
        java.util.Properties properties29 = new java.util.Properties();
        int int30 = properties29.size();
        boolean boolean32 = properties29.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties33 = new java.util.Properties();
        int int34 = properties33.size();
        boolean boolean36 = properties33.containsKey((java.lang.Object) (-1.0f));
        properties29.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        char[] charArray42 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, ' ');
        int int45 = strTokenizer44.size();
        boolean boolean46 = strTokenizer44.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer44.setIgnoredMatcher(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst("", "");
        java.lang.Object obj53 = properties29.putIfAbsent((java.lang.Object) strMatcher47, (java.lang.Object) strBuilder49);
        boolean boolean54 = strBuilder15.equals(obj53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder15.appendln((double) 100L);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder15.replaceAll('$', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder11.appendFixedWidthPadLeft((java.lang.Object) strBuilder59, (int) '\000', ' ');
        boolean boolean64 = strBuilder59.contains('t');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "{}");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test9075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9075");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        int int32 = strBuilder31.capacity();
        java.lang.StringBuffer stringBuffer33 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.appendln(stringBuffer33, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder31.setLength(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.append('#');
        java.lang.Object obj47 = properties0.putIfAbsent((java.lang.Object) strBuilder30, (java.lang.Object) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder30.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder48.appendNewLine();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.replace(114, 2, "StrTokenizer[StrTokenizer[not, tokenized, yet]]");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 32 + "'", int32 == 32);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
    }

    @Test
    public void test9076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9076");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.util.Set<java.lang.Object> objSet2 = properties0.keySet();
        java.util.Properties properties3 = new java.util.Properties(properties0);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader13 = strBuilder9.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray19 = strTokenizer18.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.appendAll((java.lang.Object[]) strArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder14.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream24 = strBuilder14.codePoints();
        java.lang.Object obj25 = properties4.replace((java.lang.Object) reader13, (java.lang.Object) intStream24);
        long long27 = reader13.skip(0L);
        boolean boolean28 = reader13.markSupported();
        properties3.load(reader13);
        java.util.Properties properties30 = new java.util.Properties();
        java.util.Properties properties31 = new java.util.Properties(properties30);
        boolean boolean32 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet33 = properties30.keySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteFirst("");
        int int38 = strBuilder34.indexOf("");
        int int41 = strBuilder34.lastIndexOf('#', (int) (byte) 0);
        boolean boolean43 = strBuilder34.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder34.appendAll((java.util.Iterator<java.lang.String>) strTokenizer44);
        boolean boolean46 = strTokenizer44.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer44.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("{}");
        java.lang.Object obj50 = properties30.replace((java.lang.Object) strTokenizer44, (java.lang.Object) "{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder62.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.appendln((double) '#');
        boolean boolean66 = strBuilder56.equals(strBuilder65);
        java.util.stream.IntStream intStream67 = strBuilder56.codePoints();
        java.util.Iterator<java.lang.String> strItor68 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder56.appendWithSeparators(strItor68, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder56.append((long) 3);
        boolean boolean73 = properties30.equals((java.lang.Object) strBuilder56);
        java.lang.Object obj74 = properties3.get((java.lang.Object) properties30);
        java.util.Properties properties75 = new java.util.Properties();
        int int76 = properties75.size();
        boolean boolean78 = properties75.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties79 = new java.util.Properties();
        int int80 = properties79.size();
        boolean boolean82 = properties79.containsKey((java.lang.Object) (-1.0f));
        properties75.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties79);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet84 = properties79.entrySet();
        properties79.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder86.replaceFirst("", "");
        java.io.Reader reader90 = strBuilder86.asReader();
        properties79.load(reader90);
        java.lang.Object obj92 = properties30.get((java.lang.Object) reader90);
        java.io.Reader reader93 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties30.load(reader93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(objSet2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(intStream24);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(intStream67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(objEntrySet84);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(reader90);
        org.junit.Assert.assertNull(obj92);
    }

    @Test
    public void test9077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9077");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.util.Spliterator<java.lang.String> strSpliterator17 = strList14.spliterator();
        int int18 = strList14.size();
        java.lang.String str20 = strList14.remove((int) (byte) 0);
        boolean boolean22 = strList14.add("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray28 = strTokenizer27.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.appendAll((java.lang.Object[]) strArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder23.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray38 = strTokenizer37.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.appendAll((java.lang.Object[]) strArray38);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder23.appendln(strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst("", "");
        char[] charArray52 = strBuilder48.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.appendln(charArray52);
        boolean boolean54 = strBuilder23.equals((java.lang.Object) strBuilder47);
        boolean boolean55 = strList14.remove((java.lang.Object) strBuilder23);
        boolean boolean56 = strList14.isEmpty();
        boolean boolean58 = strList14.add("StrTokenizer[]");
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator59 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList14.replaceAll(strUnaryOperator59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strSpliterator17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\n32.0" + "'", str20, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[]");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test9078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9078");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        char[] charArray4 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setEmptyTokenAsNull(false);
        java.lang.String str11 = strTokenizer10.nextToken();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test9079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9079");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        int int24 = strBuilder23.capacity();
        java.lang.StringBuffer stringBuffer25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.appendln(stringBuffer25, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.insert(1, (double) 32);
        java.lang.String str33 = strBuilder23.rightString((int) ' ');
        boolean boolean35 = strBuilder23.startsWith("");
        char[] charArray36 = strBuilder23.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray36);
        boolean boolean38 = strBuilder22.contains(strMatcher37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder22.append((int) '$');
        java.lang.String str41 = strBuilder40.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.setNewLineText("java.io.IOException: [\n32.0, , , StrTokenizer[]]");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.deleteFirst('4');
        java.util.stream.IntStream intStream46 = strBuilder45.chars();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 32 + "'", int24 == 32);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\n32.0" + "'", str33, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "97\nhi!36" + "'", str41, "97\nhi!36");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(intStream46);
    }

    @Test
    public void test9080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9080");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        boolean boolean9 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.clear();
        int int12 = strBuilder11.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader20 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendln(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder11.replaceFirst("\n32.0", "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder11.appendSeparator("#\n4#44#443.0", "#");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.appendFixedWidthPadRight((int) (short) 10, 72, '4');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.appendln("47", 31, 37);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test9081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9081");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = new org.apache.commons.lang3.text.StrTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendPadding(10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder10.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer15, "h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer15.reset("\n32.0");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer15.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder9.appendFixedWidthPadRight((java.lang.Object) strTokenizer15, 4, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        int int26 = strBuilder25.capacity();
        java.lang.StringBuffer stringBuffer27 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.appendln(stringBuffer27, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder25.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder25.setLength(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.append((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.append('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray47 = strTokenizer46.getTokenArray();
        java.lang.String[] strArray48 = strTokenizer46.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder44.appendWithSeparators((java.lang.Object[]) strArray48, "4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteAll(strMatcher51);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.deleteAll('4');
        int int63 = strBuilder61.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceFirst("", "");
        char[] charArray68 = strBuilder64.toCharArray();
        char[] charArray69 = strBuilder61.getChars(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray68);
        char[] charArray71 = strBuilder55.getChars(charArray68);
        char[] charArray72 = strBuilder38.getChars(charArray71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer15.reset(charArray71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray71, 'a', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer2.reset(charArray71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer0.reset(charArray71);
        int int79 = strTokenizer78.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str80 = strTokenizer78.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 32 + "'", int26 == 32);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[]");
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "32.01#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "32.01#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[3, 2, ., 0, 1, #]");
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
    }

    @Test
    public void test9082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9082");
        java.lang.Throwable throwable2 = null;
        java.io.IOException iOException3 = new java.io.IOException("\n32.0", throwable2);
        java.io.IOException iOException4 = new java.io.IOException((java.lang.Throwable) iOException3);
        java.util.Properties properties5 = new java.util.Properties();
        int int6 = properties5.size();
        boolean boolean8 = properties5.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties9 = new java.util.Properties();
        int int10 = properties9.size();
        boolean boolean12 = properties9.containsKey((java.lang.Object) (-1.0f));
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.lang.String str15 = properties9.getProperty("h");
        java.util.Enumeration<?> wildcardEnumeration16 = properties9.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties9.entrySet();
        java.io.IOException iOException18 = new java.io.IOException();
        java.lang.Throwable[] throwableArray19 = iOException18.getSuppressed();
        java.lang.Throwable[] throwableArray20 = iOException18.getSuppressed();
        java.io.IOException iOException21 = new java.io.IOException((java.lang.Throwable) iOException18);
        boolean boolean22 = properties9.containsValue((java.lang.Object) iOException21);
        iOException4.addSuppressed((java.lang.Throwable) iOException21);
        java.io.IOException iOException26 = new java.io.IOException("StrTokenizer[]");
        java.io.IOException iOException27 = new java.io.IOException((java.lang.Throwable) iOException26);
        java.io.IOException iOException28 = new java.io.IOException("false", (java.lang.Throwable) iOException27);
        iOException4.addSuppressed((java.lang.Throwable) iOException28);
        java.io.IOException iOException30 = new java.io.IOException("########", (java.lang.Throwable) iOException4);
        java.io.IOException iOException33 = new java.io.IOException();
        java.lang.Throwable[] throwableArray34 = iOException33.getSuppressed();
        java.lang.Throwable[] throwableArray35 = iOException33.getSuppressed();
        java.io.IOException iOException36 = new java.io.IOException("########", (java.lang.Throwable) iOException33);
        java.io.IOException iOException37 = new java.io.IOException((java.lang.Throwable) iOException36);
        java.io.IOException iOException38 = new java.io.IOException("#\n", (java.lang.Throwable) iOException36);
        java.io.IOException iOException41 = new java.io.IOException("hi!");
        java.io.IOException iOException43 = new java.io.IOException("hi!");
        iOException41.addSuppressed((java.lang.Throwable) iOException43);
        java.io.IOException iOException45 = new java.io.IOException("StrTokenizer[]", (java.lang.Throwable) iOException43);
        java.lang.Throwable throwable47 = null;
        java.io.IOException iOException48 = new java.io.IOException("\n32.0", throwable47);
        iOException45.addSuppressed((java.lang.Throwable) iOException48);
        java.io.IOException iOException51 = new java.io.IOException("hi!");
        java.io.IOException iOException53 = new java.io.IOException("hi!");
        iOException51.addSuppressed((java.lang.Throwable) iOException53);
        iOException48.addSuppressed((java.lang.Throwable) iOException53);
        iOException38.addSuppressed((java.lang.Throwable) iOException48);
        java.lang.Throwable[] throwableArray57 = iOException48.getSuppressed();
        iOException4.addSuppressed((java.lang.Throwable) iOException48);
        java.lang.Throwable[] throwableArray59 = iOException48.getSuppressed();
        java.lang.String str60 = iOException48.toString();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(wildcardEnumeration16);
        org.junit.Assert.assertNotNull(objEntrySet17);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "java.io.IOException: \n32.0" + "'", str60, "java.io.IOException: \n32.0");
    }

    @Test
    public void test9083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9083");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        char[] charArray6 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.insert(0, true);
        char[] charArray14 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, ' ');
        int int17 = strTokenizer16.size();
        boolean boolean18 = strTokenizer16.hasNext();
        java.util.List<java.lang.String> strList19 = strTokenizer16.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        int int21 = strBuilder20.capacity();
        java.lang.StringBuffer stringBuffer22 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.appendln(stringBuffer22, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder20.insert(1, (double) 32);
        java.lang.String str30 = strBuilder20.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder20.insert(1, '#');
        boolean boolean34 = strList19.equals((java.lang.Object) strBuilder20);
        boolean boolean36 = strList19.add("true\n###################################3\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder9.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList19, "1001\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder9.appendSeparator("###########################################java.io.I", "47");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n32.0" + "'", str30, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
    }

    @Test
    public void test9084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9084");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        int int12 = strBuilder11.capacity();
        java.lang.StringBuffer stringBuffer13 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(stringBuffer13, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int18 = strBuilder16.lastIndexOf(strMatcher17);
        boolean boolean19 = strBuilder9.equalsIgnoreCase(strBuilder16);
        char[] charArray22 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray22);
        boolean boolean24 = properties0.replace((java.lang.Object) strBuilder6, (java.lang.Object) strBuilder9, (java.lang.Object) strTokenizer23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder9.deleteAll("StrTokenizer[]");
        int int28 = strBuilder26.lastIndexOf('#');
        char[] charArray33 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, ' ');
        int int36 = strTokenizer35.size();
        boolean boolean37 = strTokenizer35.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer35.setIgnoredMatcher(strMatcher38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder26.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder26.appendSeparator('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.ensureCapacity((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.ensureCapacity(45);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
    }

    @Test
    public void test9085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9085");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("###################3");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        int int3 = strBuilder1.indexOf(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test9086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9086");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteAll('4');
        int int7 = strBuilder5.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst("java.io.IOException: hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder5.replaceFirst("\n32.0java.io.IOException: hi!", "java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.deleteAll('4');
        int int23 = strBuilder21.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.replaceFirst("java.io.IOException: hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder15.append((java.lang.CharSequence) "java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln('$');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
    }

    @Test
    public void test9087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9087");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.lang.String str10 = strBuilder0.rightString((int) ' ');
        boolean boolean12 = strBuilder0.startsWith("");
        char[] charArray13 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.ensureCapacity((int) (short) 0);
        java.lang.StringBuffer stringBuffer16 = strBuilder0.toStringBuffer();
        boolean boolean18 = strBuilder0.endsWith("#\n");
        java.lang.StringBuffer stringBuffer19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder0.appendln(stringBuffer19, 52, 5);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = strBuilder0.substring(86);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\n32.0" + "'", str10, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(stringBuffer16);
        org.junit.Assert.assertEquals(stringBuffer16.toString(), "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test9088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9088");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("false0\n");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test9089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9089");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.lang.String str10 = strBuilder0.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.insert(1, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        java.lang.String str16 = strTokenizer15.next();
        boolean boolean17 = strTokenizer15.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("\n32.0", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer15.setIgnoredMatcher(strMatcher21);
        int int23 = strBuilder13.lastIndexOf(strMatcher21);
        char[] charArray28 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, ' ');
        int int31 = strTokenizer30.size();
        boolean boolean32 = strTokenizer30.hasNext();
        java.util.List<java.lang.String> strList33 = strTokenizer30.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst("", "");
        char[] charArray38 = strBuilder34.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38);
        boolean boolean42 = strList33.equals((java.lang.Object) charArray38);
        char[] charArray47 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, ' ');
        int int50 = strTokenizer49.size();
        boolean boolean51 = strTokenizer49.hasNext();
        java.util.List<java.lang.String> strList52 = strTokenizer49.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        int int54 = strBuilder53.capacity();
        java.lang.StringBuffer stringBuffer55 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder53.appendln(stringBuffer55, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder53.insert(1, (double) 32);
        java.lang.String str63 = strBuilder53.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder53.insert(1, '#');
        boolean boolean67 = strList52.equals((java.lang.Object) strBuilder53);
        boolean boolean68 = strList33.containsAll((java.util.Collection<java.lang.String>) strList52);
        java.lang.String str70 = strList33.remove((int) (short) 0);
        java.util.Iterator<java.lang.String> strItor71 = strList33.iterator();
        java.util.Iterator<java.lang.String> strItor72 = strList33.iterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder13.appendAll((java.lang.Iterable<java.lang.String>) strList33);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder76.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.appendSeparator("hi!", "4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = new org.apache.commons.lang3.text.StrBuilder();
        int int82 = strBuilder81.capacity();
        java.lang.StringBuffer stringBuffer83 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder81.appendln(stringBuffer83, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int88 = strBuilder86.lastIndexOf(strMatcher87);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder77.replaceFirst(strMatcher87, "hi!");
        char[] charArray93 = strBuilder90.toCharArray(0, (int) (short) 10);
        boolean boolean94 = strList33.contains((java.lang.Object) 0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\n32.0" + "'", str10, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "StrTokenizer[]" + "'", str16, "StrTokenizer[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 32 + "'", int54 == 32);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "\n32.0" + "'", str63, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "4#4" + "'", str70, "4#4");
        org.junit.Assert.assertNotNull(strItor71);
        org.junit.Assert.assertNotNull(strItor72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 32 + "'", int82 == 32);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(charArray93);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray93), "4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray93), "4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray93), "[4, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test9090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9090");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer5, "h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer5.reset("\n32.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setEmptyTokenAsNull(true);
        boolean boolean13 = strTokenizer10.hasNext();
        java.util.List<java.lang.String> strList14 = strTokenizer10.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer10.setQuoteChar(' ');
        java.lang.String[] strArray17 = strTokenizer10.getTokenArray();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test9091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9091");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder2.lastIndexOf("4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        int int6 = strBuilder5.capacity();
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.appendln(stringBuffer7, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((float) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder2.appendFixedWidthPadRight((java.lang.Object) strBuilder14, (int) (byte) 0, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder2.appendSeparator("", "0");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.append("StrTokenizer[]", 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder22.append("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000", (int) (short) 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.setNewLineText("###");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst("\n0\n", "org.apache.commons.lang3.text.StrLookup$MapStrLo");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.appendSeparator('4', 23);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 32 + "'", int6 == 32);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
    }

    @Test
    public void test9092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9092");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.lang.Object obj27 = properties0.setProperty(" 4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        int int29 = strBuilder28.capacity();
        java.lang.StringBuffer stringBuffer30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendln(stringBuffer30, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int35 = strBuilder33.lastIndexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.insert((int) (short) 1, 32);
        java.util.Properties properties39 = new java.util.Properties();
        int int40 = properties39.size();
        boolean boolean42 = properties39.containsKey((java.lang.Object) (-1.0f));
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties39.entrySet();
        java.lang.Object obj44 = properties0.putIfAbsent((java.lang.Object) strBuilder38, (java.lang.Object) objEntrySet43);
        boolean boolean46 = strBuilder38.startsWith("4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder38.setNullText("java.io.IOException");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder38.appendln((float) (short) -1);
        java.util.stream.IntStream intStream51 = strBuilder38.codePoints();
        java.util.Properties properties52 = new java.util.Properties();
        int int53 = properties52.size();
        boolean boolean55 = properties52.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties56 = new java.util.Properties();
        int int57 = properties56.size();
        boolean boolean59 = properties56.containsKey((java.lang.Object) (-1.0f));
        properties52.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties56);
        char[] charArray65 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, ' ');
        int int68 = strTokenizer67.size();
        boolean boolean69 = strTokenizer67.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer67.setIgnoredMatcher(strMatcher70);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.replaceFirst("", "");
        java.lang.Object obj76 = properties52.putIfAbsent((java.lang.Object) strMatcher70, (java.lang.Object) strBuilder72);
        java.lang.Object obj79 = properties52.setProperty(" 4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = strTokenizer85.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder80.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer85, "h");
        int int89 = strTokenizer85.nextIndex();
        boolean boolean90 = properties52.containsValue((java.lang.Object) strTokenizer85);
        java.lang.String str91 = properties52.toString();
        java.util.Enumeration<java.lang.Object> objEnumeration92 = properties52.keys();
        boolean boolean93 = strBuilder38.equals((java.lang.Object) properties52);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 32 + "'", int29 == 32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEntrySet43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(intStream51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(objEnumeration92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test9093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9093");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendSeparator("hi!", "4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        int int8 = strBuilder7.capacity();
        java.lang.StringBuffer stringBuffer9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.appendln(stringBuffer9, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int14 = strBuilder12.lastIndexOf(strMatcher13);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.replaceFirst(strMatcher13, "hi!");
        char[] charArray19 = strBuilder16.toCharArray(0, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.deleteAll("\n32.0java.io.IOException: hi!");
        boolean boolean23 = strBuilder21.contains('a');
        boolean boolean25 = strBuilder21.contains('$');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 32 + "'", int8 == 32);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test9094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9094");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder0.indexOf("");
        int int7 = strBuilder0.lastIndexOf('#', (int) (byte) 0);
        java.io.Reader reader8 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendSeparator("{}");
        java.lang.StringBuffer stringBuffer11 = strBuilder10.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.appendSeparator("########");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.setNullText("");
        char[] charArray20 = strBuilder19.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, "true\n###################################3\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder10.appendln(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, "true");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(reader8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(stringBuffer11);
        org.junit.Assert.assertEquals(stringBuffer11.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[]");
        org.junit.Assert.assertNotNull(strBuilder23);
    }

    @Test
    public void test9095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9095");
        char[] charArray2 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setDelimiterString("hi!");
        int int6 = strTokenizer5.previousIndex();
        int int7 = strTokenizer5.nextIndex();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test9096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9096");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((double) '#');
        boolean boolean15 = strBuilder5.equals(strBuilder14);
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader26 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray32 = strTokenizer31.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendAll((java.lang.Object[]) strArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder27.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream37 = strBuilder27.codePoints();
        java.lang.Object obj38 = properties17.replace((java.lang.Object) reader26, (java.lang.Object) intStream37);
        reader26.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst("", "");
        char[] charArray51 = strBuilder47.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder46.appendln(charArray51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray51);
        int int54 = reader26.read(charArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder14.insert(0, (java.lang.Object) charArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.replaceFirst("", "");
        java.io.Reader reader60 = strBuilder56.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder56.appendSeparator('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder56.replaceFirst(' ', '4');
        java.io.Reader reader66 = strBuilder65.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.setNewLineText("java.io.IOException: hi!false");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder65.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.deleteFirst('e');
        boolean boolean72 = strBuilder14.equalsIgnoreCase(strBuilder71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.deleteFirst("");
        int int77 = strBuilder73.indexOf("");
        int int80 = strBuilder73.lastIndexOf('#', (int) (byte) 0);
        java.io.Reader reader81 = strBuilder73.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder73.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder73.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder84.appendSeparator("java.io.IOException: java.io.IOException", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder87.replaceAll('{', '\000');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder71.appendln(strBuilder90, 134, 23);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(intStream37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(reader60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(reader66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(reader81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder90);
    }

    @Test
    public void test9097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9097");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException", "h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer2.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer2.setQuoteChar(' ');
        java.lang.String str9 = strTokenizer8.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer8.setIgnoreEmptyTokens(true);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "java.io.IOException" + "'", str9, "java.io.IOException");
        org.junit.Assert.assertNotNull(strTokenizer11);
    }

    @Test
    public void test9098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9098");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteAll('4');
        boolean boolean7 = strBuilder0.contains(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setNewLineText("StrTokenizer[{}]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendln('a');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test9099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9099");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.ensureCapacity((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendSeparator("100.0\n35.0\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0001.0\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000", (int) (byte) -1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test9100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9100");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln('#');
        int int7 = strBuilder3.lastIndexOf(" 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder3.replace((int) (byte) 0, (int) (byte) 100, "a4");
        java.util.stream.IntStream intStream12 = strBuilder3.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder3.replaceFirst(" e4#4$#", "4\n32.00.0");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(intStream12);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test9101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9101");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties4.keys();
        java.util.Properties properties10 = new java.util.Properties();
        int int11 = properties10.size();
        boolean boolean13 = properties10.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties14 = new java.util.Properties();
        int int15 = properties14.size();
        boolean boolean17 = properties14.containsKey((java.lang.Object) (-1.0f));
        properties10.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        char[] charArray23 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, ' ');
        int int26 = strTokenizer25.size();
        boolean boolean27 = strTokenizer25.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer25.setIgnoredMatcher(strMatcher28);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst("", "");
        java.lang.Object obj34 = properties10.putIfAbsent((java.lang.Object) strMatcher28, (java.lang.Object) strBuilder30);
        java.lang.Object obj37 = properties10.setProperty(" 4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        int int39 = strBuilder38.capacity();
        java.lang.StringBuffer stringBuffer40 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.appendln(stringBuffer40, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int45 = strBuilder43.lastIndexOf(strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.insert((int) (short) 1, 32);
        java.util.Properties properties49 = new java.util.Properties();
        int int50 = properties49.size();
        boolean boolean52 = properties49.containsKey((java.lang.Object) (-1.0f));
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet53 = properties49.entrySet();
        java.lang.Object obj54 = properties10.putIfAbsent((java.lang.Object) strBuilder48, (java.lang.Object) objEntrySet53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        int int56 = strBuilder55.capacity();
        java.lang.StringBuffer stringBuffer57 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.appendln(stringBuffer57, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int62 = strBuilder60.lastIndexOf(strMatcher61);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder60.insert((int) (short) 1, 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteAll("java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder70.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.setNullText("");
        char[] charArray74 = strBuilder73.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder73.insert(0, true);
        java.io.Writer writer78 = strBuilder73.asWriter();
        boolean boolean79 = properties10.remove((java.lang.Object) "java.io.IOException: hi!", (java.lang.Object) writer78);
        writer78.write((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder82.replaceFirst("", "");
        char[] charArray86 = strBuilder82.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray86, 'a');
        writer78.write(charArray86);
        java.lang.CharSequence charSequence90 = null;
        java.io.Writer writer91 = writer78.append(charSequence90);
        writer78.close();
        writer78.close();
        boolean boolean94 = properties4.equals((java.lang.Object) writer78);
        writer78.close();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 32 + "'", int39 == 32);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objEntrySet53);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 32 + "'", int56 == 32);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[]");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(writer78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[]");
        org.junit.Assert.assertNotNull(writer91);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test9102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9102");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.appendln((double) '$');
        char[] charArray19 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, ' ');
        int int22 = strTokenizer21.size();
        boolean boolean23 = strTokenizer21.hasNext();
        java.util.List<java.lang.String> strList24 = strTokenizer21.getTokenList();
        java.lang.String[] strArray28 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        boolean boolean31 = strList24.addAll((java.util.Collection<java.lang.String>) strList29);
        java.lang.String str33 = strList29.remove(0);
        char[] charArray38 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ');
        int int41 = strTokenizer40.size();
        boolean boolean42 = strTokenizer40.hasNext();
        java.util.List<java.lang.String> strList43 = strTokenizer40.getTokenList();
        java.lang.String[] strArray47 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        boolean boolean50 = strList43.addAll((java.util.Collection<java.lang.String>) strList48);
        boolean boolean51 = strList29.addAll((java.util.Collection<java.lang.String>) strList48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder6.appendAll((java.lang.Iterable<java.lang.String>) strList29);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder6.setCharAt(4, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.appendFixedWidthPadRight(55, (int) 'o', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder55.append(0L);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\n32.0" + "'", str33, "\n32.0");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
    }

    @Test
    public void test9103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9103");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.util.Spliterator<java.lang.String> strSpliterator17 = strList14.spliterator();
        int int18 = strList14.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int22 = strList14.lastIndexOf((java.lang.Object) strTokenizer21);
        java.util.List<java.lang.String> strList23 = strTokenizer21.getTokenList();
        java.util.Spliterator<java.lang.String> strSpliterator24 = strList23.spliterator();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strSpliterator17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strSpliterator24);
    }

    @Test
    public void test9104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9104");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "");
        char[] charArray7 = strBuilder3.toCharArray();
        char[] charArray8 = strBuilder0.getChars(charArray7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray7);
        boolean boolean10 = strTokenizer9.hasPrevious();
        java.util.List<java.lang.String> strList11 = strTokenizer9.getTokenList();
        strList11.clear();
        strList11.clear();
        char[] charArray18 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ');
        int int21 = strTokenizer20.size();
        boolean boolean22 = strTokenizer20.hasNext();
        java.util.List<java.lang.String> strList23 = strTokenizer20.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst("", "");
        char[] charArray28 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        boolean boolean32 = strList23.equals((java.lang.Object) charArray28);
        char[] charArray37 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, ' ');
        int int40 = strTokenizer39.size();
        boolean boolean41 = strTokenizer39.hasNext();
        java.util.List<java.lang.String> strList42 = strTokenizer39.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        int int44 = strBuilder43.capacity();
        java.lang.StringBuffer stringBuffer45 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.appendln(stringBuffer45, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder43.insert(1, (double) 32);
        java.lang.String str53 = strBuilder43.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder43.insert(1, '#');
        boolean boolean57 = strList42.equals((java.lang.Object) strBuilder43);
        boolean boolean58 = strList23.containsAll((java.util.Collection<java.lang.String>) strList42);
        char[] charArray63 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, ' ');
        int int66 = strTokenizer65.size();
        boolean boolean67 = strTokenizer65.hasNext();
        java.util.List<java.lang.String> strList68 = strTokenizer65.getTokenList();
        java.lang.String[] strArray72 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList73 = new java.util.ArrayList<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        boolean boolean75 = strList68.addAll((java.util.Collection<java.lang.String>) strList73);
        boolean boolean76 = strList42.containsAll((java.util.Collection<java.lang.String>) strList73);
        java.util.ListIterator<java.lang.String> strItor77 = strList42.listIterator();
        boolean boolean78 = strList11.addAll((java.util.Collection<java.lang.String>) strList42);
        java.lang.String str80 = strList42.get(0);
        java.lang.String str81 = org.apache.commons.lang3.text.StrSubstitutor.replaceSystemProperties((java.lang.Object) strList42);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 32 + "'", int44 == 32);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\n32.0" + "'", str53, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strItor77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "4#4" + "'", str80, "4#4");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[4#4]" + "'", str81, "[4#4]");
    }

    @Test
    public void test9105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9105");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder0.indexOf("");
        int int7 = strBuilder0.lastIndexOf('#', (int) (byte) 0);
        java.io.Reader reader8 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.append((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.append("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceAll("#", "java.io.IOException: java.io.IOException: StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.append((float) 49);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        int int21 = strBuilder20.capacity();
        java.lang.StringBuffer stringBuffer22 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.appendln(stringBuffer22, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder20.insert(1, (double) 32);
        int int29 = strBuilder20.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder20.append((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder20.append((float) 5);
        char[] charArray34 = strBuilder20.toCharArray();
        boolean boolean35 = strBuilder19.equals(strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder19.appendSeparator("java.io.IOException: l", "true\n###################################org.apache.co");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(reader8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 32 + "'", int29 == 32);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "\n32.032.05.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "\n32.032.05.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[\n, 3, 2, ., 0, 3, 2, ., 0, 5, ., 0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
    }

    @Test
    public void test9106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9106");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendAll((java.lang.Object[]) strArray6);
        java.util.stream.IntStream intStream8 = strBuilder7.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.appendFixedWidthPadLeft((int) (short) 1, 114, '$');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(intStream8);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test9107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9107");
        java.lang.String[] strArray1 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = strList2.contains(obj4);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.String> strItor7 = strList2.listIterator(93);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 93");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test9108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9108");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder0.indexOf("");
        int int7 = strBuilder0.lastIndexOf('#', (int) (byte) 0);
        boolean boolean9 = strBuilder0.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln((int) (byte) 100);
        char[] charArray18 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, "###");
        java.util.List<java.lang.String> strList23 = strTokenizer22.getTokenList();
        java.util.ListIterator<java.lang.String> strItor24 = strList23.listIterator();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "0.0100\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "0.0100\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[0, ., 0, 1, 0, 0, \n]");
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strItor24);
    }

    @Test
    public void test9109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9109");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.appendSeparator('t', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray10 = strTokenizer9.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.appendAll((java.lang.Object[]) strArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.replaceFirst('a', 'a');
        java.lang.StringBuffer stringBuffer15 = strBuilder14.toStringBuffer();
        char[] charArray20 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, ' ');
        int int23 = strTokenizer22.size();
        boolean boolean24 = strTokenizer22.hasNext();
        java.util.List<java.lang.String> strList25 = strTokenizer22.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst("", "");
        char[] charArray30 = strBuilder26.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray30);
        boolean boolean34 = strList25.equals((java.lang.Object) charArray30);
        char[] charArray39 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, ' ');
        int int42 = strTokenizer41.size();
        boolean boolean43 = strTokenizer41.hasNext();
        java.util.List<java.lang.String> strList44 = strTokenizer41.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        int int46 = strBuilder45.capacity();
        java.lang.StringBuffer stringBuffer47 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.appendln(stringBuffer47, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder45.insert(1, (double) 32);
        java.lang.String str55 = strBuilder45.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder45.insert(1, '#');
        boolean boolean59 = strList44.equals((java.lang.Object) strBuilder45);
        boolean boolean60 = strList25.containsAll((java.util.Collection<java.lang.String>) strList44);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder14.appendAll((java.lang.Iterable<java.lang.String>) strList44);
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int64 = strList44.lastIndexOf((java.lang.Object) "hi!");
        char[] charArray69 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, ' ');
        int int72 = strTokenizer71.size();
        boolean boolean73 = strTokenizer71.hasNext();
        java.util.List<java.lang.String> strList74 = strTokenizer71.getTokenList();
        java.lang.String[] strArray78 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        boolean boolean81 = strList74.addAll((java.util.Collection<java.lang.String>) strList79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray84 = strTokenizer83.getTokenArray();
        java.lang.String[] strArray85 = strTokenizer83.getTokenArray();
        boolean boolean86 = strTokenizer83.hasNext();
        int int87 = strTokenizer83.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = strTokenizer83.getQuoteMatcher();
        java.util.List<java.lang.String> strList89 = strTokenizer83.getTokenList();
        boolean boolean90 = strList74.retainAll((java.util.Collection<java.lang.String>) strList89);
        boolean boolean91 = strList44.removeAll((java.util.Collection<java.lang.String>) strList89);
        java.util.ListIterator<java.lang.String> strItor92 = strList44.listIterator();
        java.lang.String str94 = strList44.remove(0);
        boolean boolean95 = strList44.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList44);
        java.util.Iterator<java.lang.String> strItor97 = strList44.iterator();
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(stringBuffer15);
        org.junit.Assert.assertEquals(stringBuffer15.toString(), "");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 32 + "'", int46 == 32);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "\n32.0" + "'", str55, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(strItor92);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "4#4" + "'", str94, "4#4");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertNotNull(strItor97);
    }

    @Test
    public void test9110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9110");
        java.io.IOException iOException1 = new java.io.IOException("35true");
    }

    @Test
    public void test9111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9111");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        char[] charArray11 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, ' ');
        int int14 = strTokenizer13.size();
        boolean boolean15 = strTokenizer13.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer13.setIgnoredMatcher(strMatcher16);
        int int19 = strBuilder3.indexOf(strMatcher16, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder3.deleteFirst("StrTokenizer[32.0]");
        char[] charArray26 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ');
        int int29 = strTokenizer28.size();
        boolean boolean30 = strTokenizer28.hasNext();
        java.util.List<java.lang.String> strList31 = strTokenizer28.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst("", "");
        char[] charArray36 = strBuilder32.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray36);
        boolean boolean40 = strList31.equals((java.lang.Object) charArray36);
        boolean boolean42 = strList31.add("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder21.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList31, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.appendSeparator('4', 0);
        java.lang.String str50 = strBuilder47.midString(37, 58);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
    }

    @Test
    public void test9112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9112");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        int int12 = strBuilder11.capacity();
        java.lang.StringBuffer stringBuffer13 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(stringBuffer13, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int18 = strBuilder16.lastIndexOf(strMatcher17);
        boolean boolean19 = strBuilder9.equalsIgnoreCase(strBuilder16);
        char[] charArray22 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray22);
        boolean boolean24 = properties0.replace((java.lang.Object) strBuilder6, (java.lang.Object) strBuilder9, (java.lang.Object) strTokenizer23);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        int int26 = strBuilder25.capacity();
        java.lang.StringBuffer stringBuffer27 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.appendln(stringBuffer27, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder25.setNullText("");
        java.lang.Object obj33 = properties0.get((java.lang.Object) strBuilder32);
        java.util.Set<java.lang.Object> objSet34 = properties0.keySet();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("#\nfalse\n", "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        java.lang.Object obj38 = strTokenizer37.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst("", "");
        char[] charArray50 = strBuilder46.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder45.appendln(charArray50);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder45.appendln((double) '$');
        java.lang.Object obj54 = properties0.putIfAbsent((java.lang.Object) strTokenizer37, (java.lang.Object) '$');
        java.lang.String[] strArray55 = strTokenizer37.getTokenArray();
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 32 + "'", int26 == 32);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[]");
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(strArray55);
    }

    @Test
    public void test9113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9113");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        java.lang.String[] strArray7 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendWithSeparators((java.lang.Object[]) strArray7, "4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteAll(strMatcher10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append(false);
        java.lang.String str15 = strBuilder9.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.append((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.append('a');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test9114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9114");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((double) '#');
        boolean boolean15 = strBuilder5.equals(strBuilder14);
        java.util.stream.IntStream intStream16 = strBuilder5.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder5.minimizeCapacity();
        java.lang.String str19 = strBuilder17.rightString(3);
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader29 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray35 = strTokenizer34.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.appendAll((java.lang.Object[]) strArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream40 = strBuilder30.codePoints();
        java.lang.Object obj41 = properties20.replace((java.lang.Object) reader29, (java.lang.Object) intStream40);
        reader29.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceFirst("", "");
        char[] charArray54 = strBuilder50.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.appendln(charArray54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray54);
        int int57 = reader29.read(charArray54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray54);
        int int59 = strTokenizer58.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer58.setIgnoredChar('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder17.appendAll((java.util.Iterator<java.lang.String>) strTokenizer61);
        java.lang.Object obj63 = strTokenizer61.clone();
        java.lang.String[] strArray64 = strTokenizer61.getTokenArray();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "###" + "'", str19, "###");
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(intStream40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[]");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strArray64);
    }

    @Test
    public void test9115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9115");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        char[] charArray6 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, "true\n###################################3\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer12.getQuoteMatcher();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]");
        org.junit.Assert.assertNotNull(strMatcher13);
    }

    @Test
    public void test9116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9116");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("");
        boolean boolean2 = strTokenizer1.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setDelimiterChar('a');
        int int5 = strTokenizer1.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer1.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer7.setIgnoreEmptyTokens(false);
        int int10 = strTokenizer9.previousIndex();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test9117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9117");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteAll('4');
        int int7 = strBuilder5.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst("java.io.IOException: hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteAll(strMatcher12);
        int int14 = strBuilder13.capacity();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test9118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9118");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength(32);
        java.io.Writer writer11 = strBuilder10.asWriter();
        writer11.write(" 4#4", (int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        int int17 = strBuilder16.capacity();
        java.lang.StringBuffer stringBuffer18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendln(stringBuffer18, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder16.insert(1, (double) 32);
        java.lang.String str26 = strBuilder16.rightString((int) ' ');
        boolean boolean28 = strBuilder16.startsWith("");
        char[] charArray29 = strBuilder16.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray29);
        writer11.write(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setDelimiterString("10.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer33.setEmptyTokenAsNull(true);
        boolean boolean38 = strTokenizer37.hasNext();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 32 + "'", int17 == 32);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n32.0" + "'", str26, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test9119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9119");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((double) '#');
        boolean boolean15 = strBuilder5.equals(strBuilder14);
        java.util.stream.IntStream intStream16 = strBuilder5.codePoints();
        java.util.Iterator<java.lang.String> strItor17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder5.appendWithSeparators(strItor17, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst(' ', ' ');
        java.util.Properties properties23 = new java.util.Properties();
        int int24 = properties23.size();
        java.lang.Object obj25 = properties23.clone();
        java.util.Set<java.lang.String> strSet26 = properties23.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder19.appendFixedWidthPadLeft((java.lang.Object) properties23, (int) '$', '#');
        int int32 = strBuilder19.lastIndexOf('a', 49);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "{}");
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
    }

    @Test
    public void test9120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9120");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendSeparator('#', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.append((float) '$');
        java.lang.String str9 = strBuilder6.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder6.appendln((double) 178);
        java.lang.String str12 = strBuilder11.getNewLineText();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test9121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9121");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteAll('4');
        int int7 = strBuilder5.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst("", "");
        char[] charArray12 = strBuilder8.toCharArray();
        char[] charArray13 = strBuilder5.getChars(charArray12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray12);
        java.lang.Object obj15 = strTokenizer14.clone();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test9122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9122");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader9 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream20 = strBuilder10.codePoints();
        java.lang.Object obj21 = properties0.replace((java.lang.Object) reader9, (java.lang.Object) intStream20);
        java.util.Properties properties22 = new java.util.Properties();
        int int23 = properties22.size();
        boolean boolean25 = properties22.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties26 = new java.util.Properties();
        int int27 = properties26.size();
        boolean boolean29 = properties26.containsKey((java.lang.Object) (-1.0f));
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        char[] charArray35 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        int int38 = strTokenizer37.size();
        boolean boolean39 = strTokenizer37.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer37.setIgnoredMatcher(strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst("", "");
        java.lang.Object obj46 = properties22.putIfAbsent((java.lang.Object) strMatcher40, (java.lang.Object) strBuilder42);
        java.lang.Object obj49 = properties22.setProperty(" 4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        int int51 = strBuilder50.capacity();
        java.lang.StringBuffer stringBuffer52 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.appendln(stringBuffer52, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int57 = strBuilder55.lastIndexOf(strMatcher56);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.insert((int) (short) 1, 32);
        java.util.Properties properties61 = new java.util.Properties();
        int int62 = properties61.size();
        boolean boolean64 = properties61.containsKey((java.lang.Object) (-1.0f));
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet65 = properties61.entrySet();
        java.lang.Object obj66 = properties22.putIfAbsent((java.lang.Object) strBuilder60, (java.lang.Object) objEntrySet65);
        java.lang.String str67 = strBuilder60.getNewLineText();
        boolean boolean68 = properties0.equals((java.lang.Object) strBuilder60);
        int int69 = properties0.size();
        java.util.Set<java.lang.String> strSet70 = properties0.stringPropertyNames();
        java.util.Enumeration<?> wildcardEnumeration71 = properties0.propertyNames();
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 32 + "'", int51 == 32);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(objEntrySet65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(strSet70);
        org.junit.Assert.assertNotNull(wildcardEnumeration71);
    }

    @Test
    public void test9123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9123");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder0.appendln('t');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder0.deleteFirst("32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder0.append(37);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendSeparator('s', 'E');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test9124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9124");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test9125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9125");
        java.lang.Throwable throwable1 = null;
        java.io.IOException iOException2 = new java.io.IOException("{}", throwable1);
        java.io.IOException iOException3 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.lang.Throwable[] throwableArray4 = iOException3.getSuppressed();
        java.io.IOException iOException7 = new java.io.IOException();
        java.lang.Throwable[] throwableArray8 = iOException7.getSuppressed();
        java.lang.Throwable[] throwableArray9 = iOException7.getSuppressed();
        java.io.IOException iOException10 = new java.io.IOException("########", (java.lang.Throwable) iOException7);
        java.io.IOException iOException11 = new java.io.IOException((java.lang.Throwable) iOException10);
        java.io.IOException iOException12 = new java.io.IOException("#\n", (java.lang.Throwable) iOException10);
        java.lang.Throwable throwable14 = null;
        java.io.IOException iOException15 = new java.io.IOException("\n32.0", throwable14);
        java.io.IOException iOException16 = new java.io.IOException((java.lang.Throwable) iOException15);
        java.util.Properties properties17 = new java.util.Properties();
        int int18 = properties17.size();
        boolean boolean20 = properties17.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties21 = new java.util.Properties();
        int int22 = properties21.size();
        boolean boolean24 = properties21.containsKey((java.lang.Object) (-1.0f));
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.lang.String str27 = properties21.getProperty("h");
        java.util.Enumeration<?> wildcardEnumeration28 = properties21.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties21.entrySet();
        java.io.IOException iOException30 = new java.io.IOException();
        java.lang.Throwable[] throwableArray31 = iOException30.getSuppressed();
        java.lang.Throwable[] throwableArray32 = iOException30.getSuppressed();
        java.io.IOException iOException33 = new java.io.IOException((java.lang.Throwable) iOException30);
        boolean boolean34 = properties21.containsValue((java.lang.Object) iOException33);
        iOException16.addSuppressed((java.lang.Throwable) iOException33);
        java.io.IOException iOException36 = new java.io.IOException((java.lang.Throwable) iOException33);
        iOException10.addSuppressed((java.lang.Throwable) iOException33);
        iOException3.addSuppressed((java.lang.Throwable) iOException33);
        java.lang.String str39 = iOException33.toString();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(wildcardEnumeration28);
        org.junit.Assert.assertNotNull(objEntrySet29);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "java.io.IOException: java.io.IOException" + "'", str39, "java.io.IOException: java.io.IOException");
    }

    @Test
    public void test9126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9126");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        int int3 = strBuilder2.capacity();
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.appendln(stringBuffer4, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder2.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln(true);
        boolean boolean14 = strSubstitutor1.replaceIn(strBuilder11, (int) '$', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.ensureCapacity((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("", "");
        java.lang.String str25 = strBuilder21.getNewLineText();
        java.util.stream.IntStream intStream26 = strBuilder21.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.append((java.lang.CharSequence) strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder18.appendFixedWidthPadLeft((int) (byte) 1, 32, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder11.appendln(strBuilder18);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder18.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder37.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder52.deleteAll(strMatcher56);
        boolean boolean58 = strBuilder45.contains(strMatcher56);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder37.replaceAll(strMatcher56, "\n\n97\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        int int62 = strBuilder61.capacity();
        java.lang.StringBuffer stringBuffer63 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.appendln(stringBuffer63, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder61.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.appendln(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = strTokenizer72.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = strTokenizer72.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder68.replaceFirst(strMatcher74, "h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer("!", strMatcher56, strMatcher74);
        java.lang.String str78 = org.apache.commons.lang3.text.StrSubstitutor.replaceSystemProperties((java.lang.Object) "!");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 32 + "'", int3 == 32);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(intStream26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 32 + "'", int62 == 32);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "!" + "'", str78, "!");
    }

    @Test
    public void test9127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9127");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst('a', '4');
        java.io.Writer writer9 = strBuilder8.asWriter();
        properties1.store(writer9, "");
        java.util.Enumeration<?> wildcardEnumeration12 = properties1.propertyNames();
        int int13 = properties1.size();
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(wildcardEnumeration12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test9128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9128");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        boolean boolean9 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.clear();
        int int12 = strBuilder11.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader20 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendln(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.clear();
        java.util.stream.IntStream intStream23 = strBuilder16.codePoints();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(intStream23);
    }

    @Test
    public void test9129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9129");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray11 = strTokenizer10.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendAll((java.lang.Object[]) strArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder6.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray21 = strTokenizer20.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendAll((java.lang.Object[]) strArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder6.appendln(strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst('a', '4');
        java.io.Writer writer36 = strBuilder35.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst("", "");
        char[] charArray48 = strBuilder44.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.appendln(charArray48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray48);
        writer36.write(charArray48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder28.append(charArray48);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charMatcher('#');
        int int56 = strBuilder28.indexOf(strMatcher54, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder3.deleteAll(strMatcher54);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.insert(0, (long) 10);
        java.io.Writer writer61 = strBuilder57.asWriter();
        writer61.close();
        writer61.write("java.io.IOException: java.io.IOException: false");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(writer36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[]");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(writer61);
    }

    @Test
    public void test9130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9130");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray9 = strTokenizer8.getTokenArray();
        java.lang.String[] strArray10 = strTokenizer8.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendWithSeparators((java.lang.Object[]) strArray10, "4#4");
        java.util.Properties properties13 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties13.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader22 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray28 = strTokenizer27.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.appendAll((java.lang.Object[]) strArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder23.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream33 = strBuilder23.codePoints();
        java.lang.Object obj34 = properties13.replace((java.lang.Object) reader22, (java.lang.Object) intStream33);
        long long36 = reader22.skip(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray42 = strTokenizer41.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder37.appendAll((java.lang.Object[]) strArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder37.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream47 = strBuilder37.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst("", "");
        char[] charArray52 = strBuilder48.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder37.appendln(charArray52);
        int int56 = reader22.read(charArray52);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder6.append(charArray52);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer("{\ntrue\n=1.0}", strMatcher58);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer59);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(intStream33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(intStream47);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[]");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strBuilder61);
    }

    @Test
    public void test9131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9131");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((int) (short) 1);
        int int16 = strBuilder10.lastIndexOf("{}", 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder(3);
        char[] charArray20 = strBuilder19.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, "true\n###################################");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder10.appendAll((java.util.Iterator<java.lang.String>) strTokenizer23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer23.reset("###");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer26.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setDelimiterString("[]");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[]");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer29);
    }

    @Test
    public void test9132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9132");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((double) '#');
        boolean boolean15 = strBuilder5.equals(strBuilder14);
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader26 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray32 = strTokenizer31.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendAll((java.lang.Object[]) strArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder27.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream37 = strBuilder27.codePoints();
        java.lang.Object obj38 = properties17.replace((java.lang.Object) reader26, (java.lang.Object) intStream37);
        reader26.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst("", "");
        char[] charArray51 = strBuilder47.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder46.appendln(charArray51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray51);
        int int54 = reader26.read(charArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder14.insert(0, (java.lang.Object) charArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.append((float) 't');
        java.lang.Object obj58 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.append(obj58);
        int int60 = strBuilder59.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.append((double) 3);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(intStream37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 21 + "'", int60 == 21);
        org.junit.Assert.assertNotNull(strBuilder62);
    }

    @Test
    public void test9133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9133");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(44);
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.append("86");
        org.junit.Assert.assertNotNull(strBuilder3);
    }

    @Test
    public void test9134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9134");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        char[] charArray14 = strBuilder10.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        boolean boolean18 = strList9.equals((java.lang.Object) charArray14);
        char[] charArray23 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, ' ');
        int int26 = strTokenizer25.size();
        boolean boolean27 = strTokenizer25.hasNext();
        java.util.List<java.lang.String> strList28 = strTokenizer25.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        int int30 = strBuilder29.capacity();
        java.lang.StringBuffer stringBuffer31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(stringBuffer31, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder29.insert(1, (double) 32);
        java.lang.String str39 = strBuilder29.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder29.insert(1, '#');
        boolean boolean43 = strList28.equals((java.lang.Object) strBuilder29);
        boolean boolean44 = strList9.containsAll((java.util.Collection<java.lang.String>) strList28);
        java.lang.String str46 = strList9.remove((int) (short) 0);
        java.util.Iterator<java.lang.String> strItor47 = strList9.iterator();
        boolean boolean49 = strList9.add("");
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList52 = strList9.subList((int) 'a', 15);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 15");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 32 + "'", int30 == 32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\n32.0" + "'", str39, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "4#4" + "'", str46, "4#4");
        org.junit.Assert.assertNotNull(strItor47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test9135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9135");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        char[] charArray14 = strBuilder10.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        boolean boolean18 = strList9.equals((java.lang.Object) charArray14);
        char[] charArray23 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, ' ');
        int int26 = strTokenizer25.size();
        boolean boolean27 = strTokenizer25.hasNext();
        java.util.List<java.lang.String> strList28 = strTokenizer25.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        int int30 = strBuilder29.capacity();
        java.lang.StringBuffer stringBuffer31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(stringBuffer31, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder29.insert(1, (double) 32);
        java.lang.String str39 = strBuilder29.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder29.insert(1, '#');
        boolean boolean43 = strList28.equals((java.lang.Object) strBuilder29);
        boolean boolean44 = strList9.containsAll((java.util.Collection<java.lang.String>) strList28);
        char[] charArray49 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        int int52 = strTokenizer51.size();
        boolean boolean53 = strTokenizer51.hasNext();
        java.util.List<java.lang.String> strList54 = strTokenizer51.getTokenList();
        java.lang.String[] strArray58 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        boolean boolean61 = strList54.addAll((java.util.Collection<java.lang.String>) strList59);
        boolean boolean62 = strList28.containsAll((java.util.Collection<java.lang.String>) strList59);
        java.util.Iterator<java.lang.String> strItor63 = strList59.iterator();
        java.util.Collection<java.lang.String> strCollection64 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean65 = strList59.retainAll(strCollection64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 32 + "'", int30 == 32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\n32.0" + "'", str39, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strItor63);
    }

    @Test
    public void test9136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9136");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray2 = strTokenizer1.getTokenArray();
        java.lang.String[] strArray3 = strTokenizer1.getTokenArray();
        boolean boolean4 = strTokenizer1.hasNext();
        int int5 = strTokenizer1.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer1.getQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        int int8 = strBuilder7.capacity();
        java.lang.StringBuffer stringBuffer9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.appendln(stringBuffer9, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder7.insert(1, (double) 32);
        int int16 = strBuilder7.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder7.append((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder7.append((float) 5);
        char[] charArray21 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer1.reset(charArray21);
        java.lang.String str23 = strTokenizer22.toString();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 32 + "'", int8 == 32);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 32 + "'", int16 == 32);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "\n32.032.05.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "\n32.032.05.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[\n, 3, 2, ., 0, 3, 2, ., 0, 5, ., 0]");
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str23, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test9137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9137");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer5, "h");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst("35.0\n100.0");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
    }

    @Test
    public void test9138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9138");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setIgnoreEmptyTokens(false);
        org.junit.Assert.assertNotNull(strTokenizer4);
    }

    @Test
    public void test9139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9139");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.append('#');
        int int16 = strBuilder13.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.append((double) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.reverse();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 32 + "'", int16 == 32);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test9140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9140");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceAll("32.0", "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder2.appendFixedWidthPadRight(49, 4, 't');
        java.util.Properties properties10 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        int int22 = strBuilder21.capacity();
        java.lang.StringBuffer stringBuffer23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(stringBuffer23, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int28 = strBuilder26.lastIndexOf(strMatcher27);
        boolean boolean29 = strBuilder19.equalsIgnoreCase(strBuilder26);
        char[] charArray32 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray32);
        boolean boolean34 = properties10.replace((java.lang.Object) strBuilder16, (java.lang.Object) strBuilder19, (java.lang.Object) strTokenizer33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder19.deleteAll("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder37.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer42, "h");
        int int46 = strTokenizer42.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer42.getIgnoredMatcher();
        int int49 = strBuilder36.indexOf(strMatcher47, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder9.replaceFirst(strMatcher47, "");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 32 + "'", int22 == 32);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strBuilder51);
    }

    @Test
    public void test9141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9141");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader7 = strBuilder3.asReader();
        long long9 = reader7.skip((long) '#');
        reader7.mark((int) (short) 10);
        boolean boolean12 = reader7.ready();
        boolean boolean13 = reader7.ready();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader7);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test9142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9142");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("l");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setIgnoredChar('r');
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
    }

    @Test
    public void test9143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9143");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        java.util.Collection<java.lang.Object> objCollection16 = properties0.values();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder21.appendFixedWidthPadRight((java.lang.Object) strBuilder30, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int35 = strBuilder21.lastIndexOf(strMatcher34);
        char[] charArray40 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        int int43 = strTokenizer42.size();
        boolean boolean44 = strTokenizer42.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer42.setIgnoredMatcher(strMatcher45);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder21.deleteFirst(strMatcher45);
        java.lang.Object obj48 = properties0.getOrDefault((java.lang.Object) strTokenizer20, (java.lang.Object) strBuilder47);
        java.util.Collection<java.lang.Object> objCollection49 = properties0.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet50 = properties0.entrySet();
        properties0.clear();
        java.util.Enumeration<?> wildcardEnumeration52 = properties0.propertyNames();
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "");
        org.junit.Assert.assertNotNull(objCollection49);
        org.junit.Assert.assertNotNull(objEntrySet50);
        org.junit.Assert.assertNotNull(wildcardEnumeration52);
    }

    @Test
    public void test9144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9144");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.appendln((double) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteAll('a');
        char[] charArray19 = strBuilder14.toCharArray((int) (byte) 1, 53);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.appendln('$');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteAll("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append(1.0f);
        boolean boolean28 = strBuilder25.isEmpty();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "36.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "36.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[3, 6, ., 0, \n]");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test9145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9145");
        java.io.IOException iOException1 = new java.io.IOException("0-1");
    }

    @Test
    public void test9146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9146");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        int int16 = properties0.size();
        int int17 = properties0.size();
        java.util.Set<java.lang.String> strSet18 = properties0.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        int int20 = strBuilder19.capacity();
        java.lang.StringBuffer stringBuffer21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.appendln(stringBuffer21, (int) '#', (int) (byte) 0);
        java.util.stream.IntStream intStream25 = strBuilder19.codePoints();
        boolean boolean26 = properties0.containsKey((java.lang.Object) strBuilder19);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.append(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder19.replaceAll("100.0", "StrTokenizer[]");
        java.lang.String str32 = strBuilder19.getNullText();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder19.insert(73, (double) 52);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 73");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 32 + "'", int20 == 32);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(intStream25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test9147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9147");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder6.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder9, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append("\n");
        java.util.Iterator<java.lang.String> strItor15 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendAll(strItor15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendSeparator("{}", "{}3.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.deleteFirst('\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteFirst("\n4\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.setNewLineText("false\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.setNullText("java.io.IOException: java.io.IOException: \n32.0");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
    }

    @Test
    public void test9148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9148");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        int int8 = strTokenizer6.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer6.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer6.getDelimiterMatcher();
        boolean boolean12 = strTokenizer6.hasNext();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test9149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9149");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer14.reset("StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.setDelimiterString("StrTokenizer[ 4#4]");
        java.lang.String[] strArray20 = strTokenizer17.getTokenArray();
        int int21 = strTokenizer17.previousIndex();
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[StrTokenizer[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[StrTokenizer[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[StrTokenizer[]]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test9150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9150");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        char[] charArray16 = strBuilder12.toCharArray();
        char[] charArray17 = strBuilder9.getChars(charArray16);
        java.io.Reader reader18 = strBuilder9.asReader();
        java.lang.Object obj19 = properties0.remove((java.lang.Object) strBuilder9);
        java.io.Writer writer20 = strBuilder9.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder9.appendSeparator("[4#4]", "java.io.IOException: java.io.IOException: \n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder9.appendln((long) 35);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendSeparator("!", 71);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.trim();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(writer20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
    }

    @Test
    public void test9151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9151");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst("", "");
        boolean boolean9 = strBuilder7.endsWith("StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.appendln('#');
        java.lang.StringBuffer stringBuffer18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.append(stringBuffer18, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder15.deleteFirst("hi!");
        char[] charArray24 = strBuilder15.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer11.reset(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray24);
        char[] charArray27 = strBuilder7.getChars(charArray24);
        java.lang.Object obj28 = properties0.remove((java.lang.Object) charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("\n     ");
        boolean boolean31 = properties0.containsKey((java.lang.Object) "\n     ");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, \n]");
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test9152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9152");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        int int5 = strBuilder4.capacity();
        java.lang.StringBuffer stringBuffer6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(stringBuffer6, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int11 = strBuilder9.lastIndexOf(strMatcher10);
        boolean boolean12 = strBuilder2.equalsIgnoreCase(strBuilder9);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln((float) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.appendln((long) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder9.appendPadding(14, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceAll('1', 'a');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 32 + "'", int5 == 32);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test9153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9153");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        java.io.Reader reader4 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst(' ', '4');
        java.lang.StringBuffer stringBuffer10 = strBuilder0.toStringBuffer();
        char[] charArray15 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, ' ');
        int int18 = strTokenizer17.size();
        boolean boolean19 = strTokenizer17.hasNext();
        java.util.List<java.lang.String> strList20 = strTokenizer17.getTokenList();
        java.lang.String[] strArray24 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        boolean boolean27 = strList20.addAll((java.util.Collection<java.lang.String>) strList25);
        java.util.Spliterator<java.lang.String> strSpliterator28 = strList25.spliterator();
        int int29 = strList25.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int33 = strList25.lastIndexOf((java.lang.Object) strTokenizer32);
        strList25.clear();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("");
        boolean boolean37 = strTokenizer36.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer36.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray45 = strTokenizer44.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder40.appendAll((java.lang.Object[]) strArray45);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray55 = strTokenizer54.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder50.appendAll((java.lang.Object[]) strArray55);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder40.appendln(strBuilder56);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder56.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.replaceFirst('a', '4');
        java.io.Writer writer70 = strBuilder69.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder78.replaceFirst("", "");
        char[] charArray82 = strBuilder78.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder77.appendln(charArray82);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray82);
        writer70.write(charArray82);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder62.append(charArray82);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer39.reset(charArray82);
        java.lang.String[] strArray88 = strTokenizer39.getTokenArray();
        java.lang.CharSequence[] charSequenceArray89 = strList25.toArray((java.lang.CharSequence[]) strArray88);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder0.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList25, "java.io.IOException: java.io.IOException: \n32.0");
        java.util.ListIterator<java.lang.String> strItor92 = strList25.listIterator();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(stringBuffer10);
        org.junit.Assert.assertEquals(stringBuffer10.toString(), "");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strSpliterator28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 3 + "'", int29 == 3);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(writer70);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[]");
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(charSequenceArray89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strItor92);
    }

    @Test
    public void test9154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9154");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.setNewLineText("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.appendln((float) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendln((float) ' ');
        char[] charArray21 = strBuilder12.toCharArray(4, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder((int) (short) 0);
        java.lang.String str24 = strBuilder23.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.append((-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder12.append((java.lang.CharSequence) strBuilder26);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.insert(408, (float) 'r');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 408");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "\n32.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "\n32.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[\n, 3, 2, ., 0, \n]");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test9155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9155");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        int int12 = strBuilder11.capacity();
        java.lang.StringBuffer stringBuffer13 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(stringBuffer13, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int18 = strBuilder16.lastIndexOf(strMatcher17);
        boolean boolean19 = strBuilder9.equalsIgnoreCase(strBuilder16);
        char[] charArray22 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray22);
        boolean boolean24 = properties0.replace((java.lang.Object) strBuilder6, (java.lang.Object) strBuilder9, (java.lang.Object) strTokenizer23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder9.deleteAll("StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer28.setIgnoredChar('$');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer31, "StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.append("true");
        boolean boolean37 = strBuilder35.endsWith("\na32");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.appendln((long) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder35.append("eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee", 18, 0);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder43);
    }

    @Test
    public void test9156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9156");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        char[] charArray6 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, "true\n###################################3\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray6);
        java.util.List<java.lang.String> strList13 = strTokenizer12.getTokenList();
        boolean boolean14 = strList13.isEmpty();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]");
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test9157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9157");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.lang.String str18 = strList14.remove(0);
        java.util.Properties properties19 = new java.util.Properties();
        int int20 = properties19.size();
        boolean boolean22 = properties19.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties23 = new java.util.Properties();
        int int24 = properties23.size();
        boolean boolean26 = properties23.containsKey((java.lang.Object) (-1.0f));
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties23);
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        int int29 = properties23.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("#######0");
        java.util.List<java.lang.String> strList32 = strTokenizer31.getTokenList();
        java.lang.Object obj33 = null;
        int int34 = strList32.indexOf(obj33);
        java.io.IOException iOException36 = new java.io.IOException("\n");
        java.lang.Throwable[] throwableArray37 = iOException36.getSuppressed();
        java.io.IOException iOException38 = new java.io.IOException((java.lang.Throwable) iOException36);
        java.lang.Throwable[] throwableArray39 = iOException38.getSuppressed();
        boolean boolean40 = strList32.contains((java.lang.Object) throwableArray39);
        java.lang.Object[] objArray41 = strList32.toArray();
        boolean boolean42 = properties23.equals((java.lang.Object) objArray41);
        boolean boolean43 = strList14.equals((java.lang.Object) properties23);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\n32.0" + "'", str18, "\n32.0");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[#######0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[#######0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test9158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9158");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        java.io.Writer writer7 = strBuilder6.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst("", "");
        char[] charArray19 = strBuilder15.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.appendln(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray19);
        writer7.write(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, '4', '$');
        java.util.Properties properties26 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray33 = strTokenizer32.getTokenArray();
        java.lang.String[] strArray34 = strTokenizer32.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.appendWithSeparators((java.lang.Object[]) strArray34, "4#4");
        char[] charArray39 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray39);
        java.lang.Object obj41 = properties26.getOrDefault((java.lang.Object) strBuilder30, (java.lang.Object) strTokenizer40);
        java.util.Collection<java.lang.Object> objCollection42 = properties26.values();
        boolean boolean43 = properties26.isEmpty();
        properties26.clear();
        java.lang.Object obj45 = properties26.clone();
        boolean boolean46 = properties26.isEmpty();
        java.lang.String str47 = org.apache.commons.lang3.text.StrSubstitutor.replace((java.lang.Object) strTokenizer25, properties26);
        properties26.clear();
        java.util.Enumeration<?> wildcardEnumeration49 = properties26.propertyNames();
        properties26.clear();
        java.lang.String str51 = properties26.toString();
        boolean boolean52 = properties26.isEmpty();
        java.io.OutputStream outputStream53 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties26.storeToXML(outputStream53, "\n36.0\n\n", "####\000\000\000\000\000\000\000\000\000\000");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(writer7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(objCollection42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "{}");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str47, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(wildcardEnumeration49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "{}" + "'", str51, "{}");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test9159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9159");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Properties properties26 = new java.util.Properties(properties25);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst('a', '4');
        java.io.Writer writer34 = strBuilder33.asWriter();
        properties26.store(writer34, "");
        java.util.Properties properties37 = new java.util.Properties();
        int int38 = properties37.size();
        boolean boolean40 = properties37.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties41 = new java.util.Properties();
        int int42 = properties41.size();
        boolean boolean44 = properties41.containsKey((java.lang.Object) (-1.0f));
        properties37.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties41);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties41.keys();
        boolean boolean47 = properties26.containsValue((java.lang.Object) objEnumeration46);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Collection<java.lang.Object> objCollection49 = properties26.values();
        java.util.Properties properties50 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray57 = strTokenizer56.getTokenArray();
        java.lang.String[] strArray58 = strTokenizer56.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder54.appendWithSeparators((java.lang.Object[]) strArray58, "4#4");
        char[] charArray63 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray63);
        java.lang.Object obj65 = properties50.getOrDefault((java.lang.Object) strBuilder54, (java.lang.Object) strTokenizer64);
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getTrimmerMatcher();
        boolean boolean70 = properties26.containsKey((java.lang.Object) strTokenizer68);
        int int71 = properties26.size();
        java.util.Collection<java.lang.Object> objCollection72 = properties26.values();
        boolean boolean73 = properties26.isEmpty();
        boolean boolean74 = properties26.isEmpty();
        int int75 = properties26.size();
        java.util.Collection<java.lang.Object> objCollection76 = properties26.values();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(writer34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objCollection49);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(objCollection72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(objCollection76);
    }

    @Test
    public void test9160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9160");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader9 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream20 = strBuilder10.codePoints();
        java.lang.Object obj21 = properties0.replace((java.lang.Object) reader9, (java.lang.Object) intStream20);
        int int22 = properties0.size();
        java.lang.String str24 = properties0.getProperty("true");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.deleteAll(strMatcher42);
        boolean boolean44 = strBuilder31.contains(strMatcher42);
        char[] charArray49 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        int int52 = strTokenizer51.size();
        boolean boolean53 = strTokenizer51.hasNext();
        java.util.List<java.lang.String> strList54 = strTokenizer51.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        int int56 = strBuilder55.capacity();
        java.lang.StringBuffer stringBuffer57 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.appendln(stringBuffer57, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder55.insert(1, (double) 32);
        java.lang.String str65 = strBuilder55.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder55.insert(1, '#');
        boolean boolean69 = strList54.equals((java.lang.Object) strBuilder55);
        java.lang.Throwable throwable71 = null;
        java.io.IOException iOException72 = new java.io.IOException("{}", throwable71);
        java.lang.Throwable[] throwableArray73 = iOException72.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder55.appendWithSeparators((java.lang.Object[]) throwableArray73, "10.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder55.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.appendln("a4");
        java.lang.Object obj79 = properties0.getOrDefault((java.lang.Object) strBuilder31, (java.lang.Object) "a4");
        java.util.Enumeration<?> wildcardEnumeration80 = properties0.propertyNames();
        java.lang.Object obj81 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean82 = properties0.containsKey(obj81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 32 + "'", int56 == 32);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "\n32.0" + "'", str65, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + "a4" + "'", obj79, "a4");
        org.junit.Assert.assertNotNull(wildcardEnumeration80);
    }

    @Test
    public void test9161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9161");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((-1));
        java.lang.String str4 = strBuilder1.midString((int) (short) 100, (int) ' ');
        java.util.Properties properties5 = new java.util.Properties();
        int int6 = properties5.size();
        boolean boolean8 = properties5.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties9 = new java.util.Properties();
        int int10 = properties9.size();
        boolean boolean12 = properties9.containsKey((java.lang.Object) (-1.0f));
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        char[] charArray18 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ');
        int int21 = strTokenizer20.size();
        boolean boolean22 = strTokenizer20.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer20.setIgnoredMatcher(strMatcher23);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst("", "");
        java.lang.Object obj29 = properties5.putIfAbsent((java.lang.Object) strMatcher23, (java.lang.Object) strBuilder25);
        java.lang.Object obj32 = properties5.setProperty(" 4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder33.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer38, "h");
        int int42 = strTokenizer38.nextIndex();
        boolean boolean43 = properties5.containsValue((java.lang.Object) strTokenizer38);
        char[] charArray48 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, ' ');
        int int51 = strTokenizer50.size();
        boolean boolean52 = strTokenizer50.hasNext();
        java.util.List<java.lang.String> strList53 = strTokenizer50.getTokenList();
        java.lang.String[] strArray57 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        boolean boolean60 = strList53.addAll((java.util.Collection<java.lang.String>) strList58);
        java.lang.String str62 = strList58.remove(0);
        char[] charArray67 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, ' ');
        int int70 = strTokenizer69.size();
        boolean boolean71 = strTokenizer69.hasNext();
        java.util.List<java.lang.String> strList72 = strTokenizer69.getTokenList();
        java.lang.String[] strArray76 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList77 = new java.util.ArrayList<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        boolean boolean79 = strList72.addAll((java.util.Collection<java.lang.String>) strList77);
        boolean boolean80 = strList58.addAll((java.util.Collection<java.lang.String>) strList77);
        java.lang.Object obj81 = properties5.remove((java.lang.Object) strList77);
        java.util.Spliterator<java.lang.String> strSpliterator82 = strList77.spliterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder1.appendln((java.lang.Object) strList77);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder1.appendFixedWidthPadRight(41, 40, 'o');
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder87.delete(18, 69);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "\n32.0" + "'", str62, "\n32.0");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNotNull(strSpliterator82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder90);
    }

    @Test
    public void test9162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9162");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Object obj2 = properties0.clone();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor3 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        int int5 = strBuilder4.capacity();
        java.lang.StringBuffer stringBuffer6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(stringBuffer6, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln(true);
        boolean boolean16 = strSubstitutor3.replaceIn(strBuilder13, (int) '$', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendln((double) '#');
        boolean boolean32 = strBuilder22.equals(strBuilder31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder13.appendFixedWidthPadRight((java.lang.Object) boolean32, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst('a', '4');
        char[] charArray47 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, ' ');
        int int50 = strTokenizer49.size();
        boolean boolean51 = strTokenizer49.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer49.setIgnoredMatcher(strMatcher52);
        int int55 = strBuilder39.indexOf(strMatcher52, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder39.deleteAll("StrTokenizer[]");
        boolean boolean58 = properties0.remove((java.lang.Object) boolean32, (java.lang.Object) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray65 = strTokenizer64.getTokenArray();
        java.lang.String[] strArray66 = strTokenizer64.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder62.appendWithSeparators((java.lang.Object[]) strArray66, "4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.deleteAll(strMatcher69);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder68.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder74.deleteAll('4');
        int int81 = strBuilder79.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder82.replaceFirst("", "");
        char[] charArray86 = strBuilder82.toCharArray();
        char[] charArray87 = strBuilder79.getChars(charArray86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray86);
        char[] charArray89 = strBuilder73.getChars(charArray86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray89);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder39.append(charArray89);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray89);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 32 + "'", int5 == 32);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[]");
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[]");
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strTokenizer92);
    }

    @Test
    public void test9163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9163");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.util.Set<java.lang.Object> objSet2 = properties0.keySet();
        java.util.Properties properties5 = new java.util.Properties();
        int int6 = properties5.size();
        boolean boolean8 = properties5.containsKey((java.lang.Object) (-1.0f));
        boolean boolean9 = properties0.replace((java.lang.Object) (byte) 1, (java.lang.Object) true, (java.lang.Object) (-1.0f));
        char[] charArray14 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, ' ');
        int int17 = strTokenizer16.size();
        boolean boolean18 = strTokenizer16.hasNext();
        java.util.List<java.lang.String> strList19 = strTokenizer16.getTokenList();
        java.lang.String[] strArray23 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        boolean boolean26 = strList19.addAll((java.util.Collection<java.lang.String>) strList24);
        java.util.Spliterator<java.lang.String> strSpliterator27 = strList24.spliterator();
        int int28 = strList24.size();
        boolean boolean30 = strList24.add("StrTokenizer[]");
        java.util.stream.Stream<java.lang.String> strStream31 = strList24.stream();
        boolean boolean32 = properties0.containsKey((java.lang.Object) strList24);
        int int33 = strList24.size();
        java.io.IOException iOException36 = new java.io.IOException("hi!");
        java.io.IOException iOException38 = new java.io.IOException("hi!");
        iOException36.addSuppressed((java.lang.Throwable) iOException38);
        java.io.IOException iOException40 = new java.io.IOException("StrTokenizer[]", (java.lang.Throwable) iOException38);
        java.lang.Throwable throwable42 = null;
        java.io.IOException iOException43 = new java.io.IOException("\n32.0", throwable42);
        iOException40.addSuppressed((java.lang.Throwable) iOException43);
        boolean boolean45 = strList24.contains((java.lang.Object) iOException40);
        java.lang.Object[] objArray46 = strList24.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator47 = strList24.spliterator();
        char[] charArray51 = new char[] { 'a', '$', '$' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, '$');
        java.util.List<java.lang.String> strList54 = strTokenizer53.getTokenList();
        boolean boolean55 = strList54.isEmpty();
        java.util.stream.Stream<java.lang.String> strStream56 = strList54.parallelStream();
        boolean boolean57 = strList24.retainAll((java.util.Collection<java.lang.String>) strList54);
        char[] charArray62 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, ' ');
        int int65 = strTokenizer64.size();
        boolean boolean66 = strTokenizer64.hasNext();
        java.util.List<java.lang.String> strList67 = strTokenizer64.getTokenList();
        java.lang.String[] strArray71 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList72 = new java.util.ArrayList<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        boolean boolean74 = strList67.addAll((java.util.Collection<java.lang.String>) strList72);
        java.util.Spliterator<java.lang.String> strSpliterator75 = strList72.spliterator();
        int int76 = strList72.size();
        java.lang.String str78 = strList72.remove((int) (byte) 0);
        boolean boolean80 = strList72.add("{}");
        boolean boolean81 = strList24.containsAll((java.util.Collection<java.lang.String>) strList72);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(objSet2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strSpliterator27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 3 + "'", int28 == 3);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strStream31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 4 + "'", int33 == 4);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[\n32.0, , , StrTokenizer[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[\n32.0, , , StrTokenizer[]]");
        org.junit.Assert.assertNotNull(strSpliterator47);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "a$$");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "a$$");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[a, $, $]");
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strStream56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(strSpliterator75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 3 + "'", int76 == 3);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "\n32.0" + "'", str78, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test9164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9164");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln('#');
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.append(stringBuffer8, (int) (byte) -1, (int) (byte) 100);
        char[] charArray16 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder5.append(charArray16);
        boolean boolean20 = properties0.equals((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln((double) '#');
        boolean boolean36 = strBuilder26.equals(strBuilder35);
        java.util.stream.IntStream intStream37 = strBuilder26.codePoints();
        java.util.Iterator<java.lang.String> strItor38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder26.appendWithSeparators(strItor38, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst(' ', ' ');
        int int45 = strBuilder43.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.insert((int) '$', '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder43.insert((int) (short) 0, 53);
        boolean boolean52 = properties0.equals((java.lang.Object) (short) 0);
        int int53 = properties0.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        int int55 = strBuilder54.capacity();
        java.lang.StringBuffer stringBuffer56 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder54.appendln(stringBuffer56, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder54.insert(1, (double) 32);
        int int63 = strBuilder54.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder54.append((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder54.append((float) 5);
        char[] charArray68 = strBuilder54.toCharArray();
        boolean boolean69 = properties0.equals((java.lang.Object) charArray68);
        java.lang.String str71 = properties0.getProperty("java.io.IOException: java.io.IOException: StrTokenizer[]");
        java.util.Properties properties72 = new java.util.Properties();
        int int73 = properties72.size();
        java.lang.Object obj74 = properties72.clone();
        java.util.Set<java.lang.String> strSet75 = properties72.stringPropertyNames();
        java.lang.Object obj76 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj77 = properties0.replace((java.lang.Object) strSet75, obj76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[ , 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(intStream37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 32 + "'", int55 == 32);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 32 + "'", int63 == 32);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "\n32.032.05.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "\n32.032.05.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[\n, 3, 2, ., 0, 3, 2, ., 0, 5, ., 0]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "{}");
        org.junit.Assert.assertNotNull(strSet75);
    }

    @Test
    public void test9165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9165");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("###0", '$');
        int int3 = strTokenizer2.previousIndex();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test9166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9166");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("\n32.0a");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst("", "");
        char[] charArray13 = strBuilder9.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.appendln(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, '$', 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("a4", strMatcher19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer17.setDelimiterMatcher(strMatcher19);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer1.setQuoteMatcher(strMatcher22);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strTokenizer23);
    }

    @Test
    public void test9167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9167");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = strTokenizer1.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.reset("");
        java.lang.String str5 = strTokenizer4.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer4.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer4.getDelimiterMatcher();
        java.lang.String str9 = strTokenizer4.toString();
        java.lang.String str10 = strTokenizer4.getContent();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[]" + "'", str9, "StrTokenizer[]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test9168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9168");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.replaceAll('$', '#');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
    }

    @Test
    public void test9169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9169");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((double) '#');
        boolean boolean15 = strBuilder5.equals(strBuilder14);
        java.util.stream.IntStream intStream16 = strBuilder5.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder5.minimizeCapacity();
        java.lang.String str19 = strBuilder17.rightString(3);
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader29 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray35 = strTokenizer34.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.appendAll((java.lang.Object[]) strArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream40 = strBuilder30.codePoints();
        java.lang.Object obj41 = properties20.replace((java.lang.Object) reader29, (java.lang.Object) intStream40);
        reader29.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceFirst("", "");
        char[] charArray54 = strBuilder50.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.appendln(charArray54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray54);
        int int57 = reader29.read(charArray54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray54);
        int int59 = strTokenizer58.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer58.setIgnoredChar('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder17.appendAll((java.util.Iterator<java.lang.String>) strTokenizer61);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.replaceFirst("", "");
        char[] charArray76 = strBuilder72.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder71.appendln(charArray76);
        int int81 = strMatcher64.isMatch(charArray76, (-1), (int) ' ', (int) (byte) -1);
        int int83 = strBuilder17.lastIndexOf(strMatcher64, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder17.append((float) 53);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder17.appendln((long) 35);
        boolean boolean89 = strBuilder17.startsWith("\n#\n0.23eurt\nStrTokenizer[32.0]");
        int int92 = strBuilder17.indexOf('#', 39);
        org.apache.commons.lang3.text.StrMatcher strMatcher94 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("1");
        int int96 = strBuilder17.lastIndexOf(strMatcher94, (int) (short) 10);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "###" + "'", str19, "###");
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(intStream40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[]");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[]");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 39 + "'", int92 == 39);
        org.junit.Assert.assertNotNull(strMatcher94);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + (-1) + "'", int96 == (-1));
    }

    @Test
    public void test9170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9170");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray11 = strTokenizer10.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendAll((java.lang.Object[]) strArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder6.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray21 = strTokenizer20.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendAll((java.lang.Object[]) strArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder6.appendln(strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst('a', '4');
        java.io.Writer writer36 = strBuilder35.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst("", "");
        char[] charArray48 = strBuilder44.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.appendln(charArray48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray48);
        writer36.write(charArray48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder28.append(charArray48);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charMatcher('#');
        int int56 = strBuilder28.indexOf(strMatcher54, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder3.deleteAll(strMatcher54);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.insert(0, (long) 10);
        int int63 = strBuilder57.lastIndexOf("\naaaa100100.0a", 47);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(writer36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[]");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
    }

    @Test
    public void test9171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9171");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        int int26 = strBuilder25.capacity();
        java.lang.StringBuffer stringBuffer27 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.appendln(stringBuffer27, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder25.insert(1, (double) 32);
        boolean boolean34 = strBuilder25.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder25.appendSeparator('a', ' ');
        boolean boolean38 = strBuilder37.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray44 = strTokenizer43.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder39.appendAll((java.lang.Object[]) strArray44);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.append((double) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.appendln('#');
        java.lang.StringBuffer stringBuffer54 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder51.append(stringBuffer54, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder51.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder51.appendSeparator("4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder51.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder45.append((java.lang.CharSequence) strBuilder64);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder37.append((java.lang.CharSequence) strBuilder45);
        boolean boolean67 = properties0.containsValue((java.lang.Object) strBuilder37);
        java.util.Collection<java.lang.Object> objCollection68 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties0.elements();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 32 + "'", int26 == 32);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objCollection68);
        org.junit.Assert.assertNotNull(objEnumeration69);
    }

    @Test
    public void test9172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9172");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.util.Properties properties9 = new java.util.Properties();
        int int10 = properties9.size();
        boolean boolean12 = properties9.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "");
        char[] charArray17 = strBuilder13.toCharArray();
        boolean boolean18 = properties9.containsValue((java.lang.Object) charArray17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder0.append(charArray17, (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder0.delete(1, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.setNullText("");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.replaceAll(strMatcher38, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder30.replaceFirst(strMatcher38, "########a4\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder0.replaceAll(strMatcher38, "java.io.IOException: hi!false");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder0.appendNull();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder0.deleteCharAt((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 97");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
    }

    @Test
    public void test9173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9173");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendSeparator("hi!", "4#4");
        char[] charArray11 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, ' ');
        int int14 = strTokenizer13.size();
        boolean boolean15 = strTokenizer13.hasNext();
        java.util.List<java.lang.String> strList16 = strTokenizer13.getTokenList();
        java.lang.String[] strArray20 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        boolean boolean23 = strList16.addAll((java.util.Collection<java.lang.String>) strList21);
        java.util.Spliterator<java.lang.String> strSpliterator24 = strList21.spliterator();
        int int25 = strList21.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int29 = strList21.lastIndexOf((java.lang.Object) strTokenizer28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer28.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder6.replaceAll(strMatcher30, "0.23\n     StrTokenizer[not tokenized yet]");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder6.insert(116, (double) 79);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 116");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strSpliterator24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 3 + "'", int25 == 3);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
    }

    @Test
    public void test9174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9174");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("###################################", 't');
    }

    @Test
    public void test9175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9175");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Object obj2 = properties0.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder3.appendFixedWidthPadRight((java.lang.Object) strBuilder12, (int) (byte) -1, '#');
        java.lang.Object obj16 = properties0.get((java.lang.Object) strBuilder3);
        java.util.Properties properties17 = new java.util.Properties();
        int int18 = properties17.size();
        boolean boolean20 = properties17.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties21 = new java.util.Properties();
        int int22 = properties21.size();
        boolean boolean24 = properties21.containsKey((java.lang.Object) (-1.0f));
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        char[] charArray30 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, ' ');
        int int33 = strTokenizer32.size();
        boolean boolean34 = strTokenizer32.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer32.setIgnoredMatcher(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "");
        java.lang.Object obj41 = properties17.putIfAbsent((java.lang.Object) strMatcher35, (java.lang.Object) strBuilder37);
        boolean boolean42 = strBuilder3.equals(obj41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder3.appendln((double) 100L);
        java.lang.String str45 = strBuilder44.getNullText();
        boolean boolean47 = strBuilder44.contains("eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test9176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9176");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.ensureCapacity((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst("", "");
        java.lang.String str10 = strBuilder6.getNewLineText();
        java.util.stream.IntStream intStream11 = strBuilder6.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.append((java.lang.CharSequence) strBuilder6);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder3.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder3.appendFixedWidthPadLeft((int) (byte) 1, 32, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendSeparator("100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendFixedWidthPadRight(14, (int) 'e', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.deleteAll('#');
        java.lang.String str27 = strBuilder26.getNewLineText();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(intStream11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test9177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9177");
        java.io.IOException iOException1 = new java.io.IOException("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
    }

    @Test
    public void test9178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9178");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder2.lastIndexOf("4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        int int6 = strBuilder5.capacity();
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.appendln(stringBuffer7, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((float) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder2.appendFixedWidthPadRight((java.lang.Object) strBuilder14, (int) (byte) 0, '$');
        java.util.stream.IntStream intStream20 = strBuilder14.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendSeparator('#', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append((float) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.appendln(32);
        java.io.Reader reader32 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst("", "");
        char[] charArray47 = strBuilder43.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder42.appendln(charArray47);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder33.replaceFirst(strMatcher49, "StrTokenizer[]");
        int int52 = strBuilder27.lastIndexOf(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder14.appendln(strBuilder27);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder27.insert(61, (long) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 61");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 32 + "'", int6 == 32);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[]");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strBuilder53);
    }

    @Test
    public void test9179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9179");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        char[] charArray4 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.deleteAll(strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer9.setIgnoredMatcher(strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.setQuoteChar('{');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.setDelimiterString("\000\000\000\000\000\000\000\000\000\000\000");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
    }

    @Test
    public void test9180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9180");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder0.indexOf("");
        int int7 = strBuilder0.lastIndexOf('#', (int) (byte) 0);
        boolean boolean9 = strBuilder0.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray14 = strTokenizer13.getTokenArray();
        java.lang.String[] strArray15 = strTokenizer13.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendWithSeparators((java.lang.Object[]) strArray15, "");
        boolean boolean18 = strBuilder17.isEmpty();
        int int21 = strBuilder17.lastIndexOf('#', 0);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test9181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9181");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        char[] charArray14 = strBuilder10.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        boolean boolean18 = strList9.equals((java.lang.Object) charArray14);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray24 = strTokenizer23.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendAll((java.lang.Object[]) strArray24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.replaceFirst('a', 'a');
        char[] charArray33 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, ' ');
        int int36 = strTokenizer35.size();
        boolean boolean37 = strTokenizer35.hasNext();
        java.util.List<java.lang.String> strList38 = strTokenizer35.getTokenList();
        java.lang.String[] strArray42 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        boolean boolean45 = strList38.addAll((java.util.Collection<java.lang.String>) strList43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder19.appendAll((java.lang.Iterable<java.lang.String>) strList43);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor47 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        int int49 = strBuilder48.capacity();
        java.lang.StringBuffer stringBuffer50 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.appendln(stringBuffer50, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder48.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.appendln(true);
        boolean boolean60 = strSubstitutor47.replaceIn(strBuilder57, (int) '$', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder19.append((java.lang.CharSequence) strBuilder57);
        boolean boolean62 = strBuilder19.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder19.appendSeparator('4');
        int int65 = strList9.indexOf((java.lang.Object) strBuilder19);
        java.lang.Object[] objArray66 = strList9.toArray();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str68 = strList9.remove(72);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 72, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 32 + "'", int49 == 32);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[4#4]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[4#4]");
    }

    @Test
    public void test9182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9182");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("E");
    }

    @Test
    public void test9183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9183");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties4.keys();
        java.util.Set<java.lang.String> strSet10 = properties4.stringPropertyNames();
        java.lang.Object obj13 = properties4.setProperty("java.io.IOException: {}", "StrTokenizer[ 4#4]");
        boolean boolean14 = properties4.isEmpty();
        java.util.Collection<java.lang.Object> objCollection15 = properties4.values();
        int int16 = properties4.size();
        int int17 = properties4.size();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet18 = properties4.entrySet();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(objEntrySet18);
    }

    @Test
    public void test9184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9184");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.util.Spliterator<java.lang.String> strSpliterator17 = strList14.spliterator();
        int int18 = strList14.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int22 = strList14.lastIndexOf((java.lang.Object) strTokenizer21);
        java.util.List<java.lang.String> strList23 = strTokenizer21.getTokenList();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor24 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        int int26 = strBuilder25.capacity();
        java.lang.StringBuffer stringBuffer27 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.appendln(stringBuffer27, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder25.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln(true);
        boolean boolean37 = strSubstitutor24.replaceIn(strBuilder34, (int) '$', 0);
        boolean boolean38 = strList23.equals((java.lang.Object) '$');
        java.util.Properties properties39 = new java.util.Properties();
        int int40 = properties39.size();
        java.util.Set<java.lang.Object> objSet41 = properties39.keySet();
        java.util.Properties properties44 = new java.util.Properties();
        int int45 = properties44.size();
        boolean boolean47 = properties44.containsKey((java.lang.Object) (-1.0f));
        boolean boolean48 = properties39.replace((java.lang.Object) (byte) 1, (java.lang.Object) true, (java.lang.Object) (-1.0f));
        char[] charArray53 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, ' ');
        int int56 = strTokenizer55.size();
        boolean boolean57 = strTokenizer55.hasNext();
        java.util.List<java.lang.String> strList58 = strTokenizer55.getTokenList();
        java.lang.String[] strArray62 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        boolean boolean65 = strList58.addAll((java.util.Collection<java.lang.String>) strList63);
        java.util.Spliterator<java.lang.String> strSpliterator66 = strList63.spliterator();
        int int67 = strList63.size();
        boolean boolean69 = strList63.add("StrTokenizer[]");
        java.util.stream.Stream<java.lang.String> strStream70 = strList63.stream();
        boolean boolean71 = properties39.containsKey((java.lang.Object) strList63);
        boolean boolean72 = strList23.retainAll((java.util.Collection<java.lang.String>) strList63);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray79 = strTokenizer78.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder73.appendAll((java.lang.Object[]) strArray79);
        int int82 = strBuilder73.indexOf("java.io.IOException");
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder73.appendln((float) 100L);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder73.minimizeCapacity();
        int int86 = strList63.indexOf((java.lang.Object) strBuilder73);
        java.util.Iterator<java.lang.String> strItor87 = strList63.iterator();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strSpliterator17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 32 + "'", int26 == 32);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strSpliterator66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 3 + "'", int67 == 3);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strStream70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNotNull(strItor87);
    }

    @Test
    public void test9185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9185");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder0.indexOf("");
        int int7 = strBuilder0.lastIndexOf('#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("");
        boolean boolean10 = strTokenizer9.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer9.setDelimiterChar('a');
        int int13 = strTokenizer9.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer9.setIgnoredChar(' ');
        java.lang.String[] strArray16 = strTokenizer15.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder0.appendWithSeparators((java.lang.Object[]) strArray16, "###");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.delete((int) (short) 0, 53);
        int int24 = strBuilder18.indexOf('e', (int) (short) 100);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
    }

    @Test
    public void test9186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9186");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.util.Properties properties9 = new java.util.Properties();
        int int10 = properties9.size();
        boolean boolean12 = properties9.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "");
        char[] charArray17 = strBuilder13.toCharArray();
        boolean boolean18 = properties9.containsValue((java.lang.Object) charArray17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder0.append(charArray17, (int) (byte) 0, 0);
        java.lang.String str22 = strBuilder21.toString();
        char[] charArray27 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, ' ');
        java.lang.String str30 = strTokenizer29.next();
        int int31 = strTokenizer29.previousIndex();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder21.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer29, "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder21.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer40.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder35.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer40, "h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer40.reset("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder52.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder46.appendFixedWidthPadRight((java.lang.Object) strBuilder55, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int60 = strBuilder46.lastIndexOf(strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer40.setQuoteMatcher(strMatcher59);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder21.appendFixedWidthPadLeft((java.lang.Object) strTokenizer40, (int) '$', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteFirst("");
        int int70 = strBuilder66.indexOf("");
        int int73 = strBuilder66.lastIndexOf('#', (int) (byte) 0);
        boolean boolean75 = strBuilder66.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder66.appendAll((java.util.Iterator<java.lang.String>) strTokenizer76);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder66.appendSeparator("{}");
        char[] charArray80 = strBuilder79.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder21.insert((int) '\n', charArray80);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder21.appendSeparator('r');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\n32.0" + "'", str22, "\n32.0");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[ , 4, #, 4]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "4#4" + "'", str30, "4#4");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[]");
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
    }

    @Test
    public void test9187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9187");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteAll('4');
        int int7 = strBuilder5.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst("java.io.IOException: hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.deleteFirst("true");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln('t');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.ensureCapacity(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('e', 14);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor20 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        int int22 = strBuilder21.capacity();
        java.lang.StringBuffer stringBuffer23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(stringBuffer23, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln(true);
        boolean boolean33 = strSubstitutor20.replaceIn(strBuilder30, (int) '$', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder36.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.ensureCapacity((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst("", "");
        java.lang.String str44 = strBuilder40.getNewLineText();
        java.util.stream.IntStream intStream45 = strBuilder40.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder37.append((java.lang.CharSequence) strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder37.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder37.appendFixedWidthPadLeft((int) (byte) 1, 32, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder30.appendln(strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder37.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.appendln((long) 41);
        boolean boolean59 = strBuilder19.equalsIgnoreCase(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 32 + "'", int22 == 32);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(intStream45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test9188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9188");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Properties properties26 = new java.util.Properties(properties25);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst('a', '4');
        java.io.Writer writer34 = strBuilder33.asWriter();
        properties26.store(writer34, "");
        java.util.Properties properties37 = new java.util.Properties();
        int int38 = properties37.size();
        boolean boolean40 = properties37.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties41 = new java.util.Properties();
        int int42 = properties41.size();
        boolean boolean44 = properties41.containsKey((java.lang.Object) (-1.0f));
        properties37.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties41);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties41.keys();
        boolean boolean47 = properties26.containsValue((java.lang.Object) objEnumeration46);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Collection<java.lang.Object> objCollection49 = properties26.values();
        java.util.Properties properties50 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray57 = strTokenizer56.getTokenArray();
        java.lang.String[] strArray58 = strTokenizer56.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder54.appendWithSeparators((java.lang.Object[]) strArray58, "4#4");
        char[] charArray63 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray63);
        java.lang.Object obj65 = properties50.getOrDefault((java.lang.Object) strBuilder54, (java.lang.Object) strTokenizer64);
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getTrimmerMatcher();
        boolean boolean70 = properties26.containsKey((java.lang.Object) strTokenizer68);
        int int71 = properties26.size();
        java.util.Collection<java.lang.Object> objCollection72 = properties26.values();
        boolean boolean73 = properties26.isEmpty();
        boolean boolean74 = properties26.isEmpty();
        java.util.Set<java.lang.Object> objSet75 = properties26.keySet();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(writer34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objCollection49);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(objCollection72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(objSet75);
    }

    @Test
    public void test9189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9189");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.replaceFirst('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.append((float) 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder3.insert((int) (short) 0, "{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder3.append((java.lang.CharSequence) strBuilder19);
        int int22 = strBuilder20.indexOf('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer28, "h");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder23.setLength((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.insert((int) '4', (double) (byte) 1);
        char[] charArray39 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        int int44 = strBuilder43.capacity();
        java.lang.StringBuffer stringBuffer45 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.appendln(stringBuffer45, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder43.insert(1, (double) 32);
        java.lang.String str53 = strBuilder43.rightString((int) ' ');
        boolean boolean55 = strBuilder43.startsWith("");
        char[] charArray56 = strBuilder43.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer42.setDelimiterMatcher(strMatcher57);
        int int59 = strBuilder33.indexOf(strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder33.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder20.appendFixedWidthPadRight((java.lang.Object) strBuilder33, 20, 't');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder20.replaceAll("1\ne\n\n55\n", "true");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder20.appendNull();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 32 + "'", int44 == 32);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\n32.0" + "'", str53, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 53 + "'", int59 == 53);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
    }

    @Test
    public void test9190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9190");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append('a');
        int int8 = strBuilder1.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        int int10 = strBuilder9.capacity();
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(stringBuffer11, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.insert(1, (double) 32);
        boolean boolean18 = strBuilder9.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder9.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.clear();
        int int21 = strBuilder20.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder1.append(strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strBuilder1.asTokenizer();
        java.lang.String str25 = strTokenizer24.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer24.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer24.reset();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str28 = strTokenizer27.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "a\n" + "'", str25, "a\n");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strTokenizer27);
    }

    @Test
    public void test9191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9191");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.lang.Object obj27 = properties0.setProperty(" 4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder28.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer33, "h");
        int int37 = strTokenizer33.nextIndex();
        boolean boolean38 = properties0.containsValue((java.lang.Object) strTokenizer33);
        java.util.Set<java.lang.Object> objSet39 = properties0.keySet();
        java.util.Collection<java.lang.Object> objCollection40 = properties0.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet41 = properties0.entrySet();
        java.lang.Object obj42 = properties0.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("\n32.0 \n", "true52\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("true");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.append((double) '\n');
        java.lang.Object obj50 = properties0.put((java.lang.Object) "\n32.0 \n", (java.lang.Object) '\n');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertNotNull(objEntrySet41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNull(obj50);
    }

    @Test
    public void test9192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9192");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln('#');
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.append(stringBuffer8, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder5.deleteFirst("hi!");
        char[] charArray14 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer1.reset(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer15.reset();
        int int17 = strTokenizer16.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer16.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer16.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer16.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getQuoteMatcher();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strMatcher22);
    }

    @Test
    public void test9193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9193");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Properties properties26 = new java.util.Properties(properties25);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst('a', '4');
        java.io.Writer writer34 = strBuilder33.asWriter();
        properties26.store(writer34, "");
        java.util.Properties properties37 = new java.util.Properties();
        int int38 = properties37.size();
        boolean boolean40 = properties37.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties41 = new java.util.Properties();
        int int42 = properties41.size();
        boolean boolean44 = properties41.containsKey((java.lang.Object) (-1.0f));
        properties37.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties41);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties41.keys();
        boolean boolean47 = properties26.containsValue((java.lang.Object) objEnumeration46);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Properties properties49 = new java.util.Properties(properties0);
        int int50 = properties0.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst("", "");
        char[] charArray55 = strBuilder51.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, 'a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder67.deleteAll(strMatcher71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer60.setIgnoredMatcher(strMatcher71);
        boolean boolean74 = strTokenizer60.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer60.reset("97\nhi!");
        java.lang.Object obj77 = properties0.remove((java.lang.Object) strTokenizer60);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(writer34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[]");
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNull(obj77);
    }

    @Test
    public void test9194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9194");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append('a');
        int int8 = strBuilder1.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strBuilder1.asTokenizer();
        int int12 = strBuilder1.lastIndexOf("35.0\n", (-1));
        java.lang.String str14 = strBuilder1.leftString(71);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "a" + "'", str14, "a");
    }

    @Test
    public void test9195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9195");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        java.lang.String[] strArray7 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendWithSeparators((java.lang.Object[]) strArray7, "4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteAll(strMatcher10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst("java.io.IOException: {}", "StrTokenizer[ 4#4]");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray23 = strTokenizer22.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.appendAll((java.lang.Object[]) strArray23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder17.appendWithSeparators((java.lang.Object[]) strArray23, "java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.insert((int) (short) 1, 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendSeparator('\000');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test9196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9196");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.charMatcher('T');
        org.junit.Assert.assertNotNull(strMatcher1);
    }

    @Test
    public void test9197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9197");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        int int12 = strBuilder11.capacity();
        java.lang.StringBuffer stringBuffer13 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(stringBuffer13, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int18 = strBuilder16.lastIndexOf(strMatcher17);
        boolean boolean19 = strBuilder9.equalsIgnoreCase(strBuilder16);
        char[] charArray22 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray22);
        boolean boolean24 = properties0.replace((java.lang.Object) strBuilder6, (java.lang.Object) strBuilder9, (java.lang.Object) strTokenizer23);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        int int26 = strBuilder25.capacity();
        java.lang.StringBuffer stringBuffer27 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.appendln(stringBuffer27, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder25.setNullText("");
        java.lang.Object obj33 = properties0.get((java.lang.Object) strBuilder32);
        java.util.Set<java.lang.Object> objSet34 = properties0.keySet();
        java.lang.String str35 = properties0.toString();
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 32 + "'", int26 == 32);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "{}" + "'", str35, "{}");
    }

    @Test
    public void test9198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9198");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Throwable throwable3 = null;
        java.io.IOException iOException4 = new java.io.IOException("\n32.0", throwable3);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException4);
        char[] charArray8 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln('#');
        java.lang.StringBuffer stringBuffer20 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append(stringBuffer20, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.deleteFirst("hi!");
        char[] charArray26 = strBuilder17.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer13.reset(charArray26);
        boolean boolean28 = properties0.replace((java.lang.Object) iOException4, (java.lang.Object) "hi!", (java.lang.Object) strTokenizer13);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties0.entrySet();
        java.util.Collection<java.lang.Object> objCollection30 = properties0.values();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEntrySet29);
        org.junit.Assert.assertNotNull(objCollection30);
    }

    @Test
    public void test9199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9199");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties4.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties4.entrySet();
        java.util.Collection<java.lang.Object> objCollection11 = properties4.values();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray17 = strTokenizer16.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendAll((java.lang.Object[]) strArray17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder12.replaceFirst('a', 'a');
        char[] charArray26 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ');
        int int29 = strTokenizer28.size();
        boolean boolean30 = strTokenizer28.hasNext();
        java.util.List<java.lang.String> strList31 = strTokenizer28.getTokenList();
        java.lang.String[] strArray35 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        boolean boolean38 = strList31.addAll((java.util.Collection<java.lang.String>) strList36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder12.appendAll((java.lang.Iterable<java.lang.String>) strList36);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor40 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        int int42 = strBuilder41.capacity();
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendln(stringBuffer43, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln(true);
        boolean boolean53 = strSubstitutor40.replaceIn(strBuilder50, (int) '$', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder12.append((java.lang.CharSequence) strBuilder50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strBuilder50.asTokenizer();
        char[] charArray60 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, ' ');
        int int63 = strTokenizer62.size();
        boolean boolean64 = strTokenizer62.hasNext();
        java.util.List<java.lang.String> strList65 = strTokenizer62.getTokenList();
        java.lang.String[] strArray69 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList70 = new java.util.ArrayList<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        boolean boolean72 = strList65.addAll((java.util.Collection<java.lang.String>) strList70);
        java.util.Spliterator<java.lang.String> strSpliterator73 = strList70.spliterator();
        int int74 = strList70.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int78 = strList70.lastIndexOf((java.lang.Object) strTokenizer77);
        strList70.clear();
        java.util.Spliterator<java.lang.String> strSpliterator80 = strList70.spliterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder50.appendAll((java.lang.Iterable<java.lang.String>) strList70);
        boolean boolean82 = properties4.equals((java.lang.Object) strBuilder81);
        int int83 = properties4.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNotNull(objCollection11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 32 + "'", int42 == 32);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(strSpliterator73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 3 + "'", int74 == 3);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(strSpliterator80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
    }

    @Test
    public void test9200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9200");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.appendSeparator("StrTokenizer[]", "java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.append(false);
        java.lang.String str11 = strBuilder10.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append("java.io.IOException: hi!false");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append(20);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.replaceFirst('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder19.append((float) 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder19.insert((int) (short) 0, "{}");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("java.io.IOException");
        int int33 = strBuilder29.lastIndexOf(strMatcher31, (int) 'a');
        boolean boolean34 = strBuilder10.contains(strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder46.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln((double) '#');
        boolean boolean50 = strBuilder40.equals(strBuilder49);
        java.util.stream.IntStream intStream51 = strBuilder40.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder40.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder40.ensureCapacity(53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder40.ensureCapacity((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder56.appendNull();
        java.lang.String str58 = strBuilder56.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder56.append((double) 2L);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder10.append((java.lang.CharSequence) strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "java.io.IOException: hi!false" + "'", str11, "java.io.IOException: hi!false");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 3 + "'", int33 == 3);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(intStream51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
    }

    @Test
    public void test9201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9201");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((double) '#');
        boolean boolean15 = strBuilder5.equals(strBuilder14);
        java.util.stream.IntStream intStream16 = strBuilder5.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder5.minimizeCapacity();
        java.lang.String str19 = strBuilder17.rightString(3);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.appendFixedWidthPadRight(47, 50, '\000');
        java.lang.String str26 = strBuilder23.midString(10, 43);
        char[] charArray27 = strBuilder23.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, 't');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.setEmptyTokenAsNull(true);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "###" + "'", str19, "###");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "##############################47\000\000\000\000\000\000\000\000\000\000\000" + "'", str26, "##############################47\000\000\000\000\000\000\000\000\000\000\000");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "true\n###################################47\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "true\n###################################47\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[t, r, u, e, \n, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, 4, 7, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000]");
        org.junit.Assert.assertNotNull(strTokenizer31);
    }

    @Test
    public void test9202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9202");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendSeparator("{}");
        java.io.Writer writer8 = strBuilder5.asWriter();
        writer8.close();
        writer8.write("0.0true");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst("", "");
        char[] charArray23 = strBuilder19.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.appendln(charArray23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.setNewLineText("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendln((float) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.appendFixedWidthPadLeft((int) (short) -1, (int) ' ', ' ');
        java.io.Writer writer33 = writer8.append((java.lang.CharSequence) strBuilder24);
        int int35 = strBuilder24.lastIndexOf('$');
        int int37 = strBuilder24.indexOf('T');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(writer8);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(writer33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
    }

    @Test
    public void test9203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9203");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.trim();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strBuilder3.asTokenizer();
        int int8 = strTokenizer7.previousIndex();
        int int9 = strTokenizer7.nextIndex();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test9204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9204");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.ensureCapacity((int) (short) 10);
        boolean boolean13 = strBuilder6.equals((java.lang.Object) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.setNullText("java.io.IOException");
        java.lang.String str16 = strBuilder12.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.deleteFirst("\n\n");
        java.io.Writer writer19 = strBuilder12.asWriter();
        java.io.Writer writer21 = writer19.append('#');
        java.util.Properties properties22 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder31.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        int int34 = strBuilder33.capacity();
        java.lang.StringBuffer stringBuffer35 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.appendln(stringBuffer35, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int40 = strBuilder38.lastIndexOf(strMatcher39);
        boolean boolean41 = strBuilder31.equalsIgnoreCase(strBuilder38);
        char[] charArray44 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray44);
        boolean boolean46 = properties22.replace((java.lang.Object) strBuilder28, (java.lang.Object) strBuilder31, (java.lang.Object) strTokenizer45);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        int int48 = strBuilder47.capacity();
        java.lang.StringBuffer stringBuffer49 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder47.appendln(stringBuffer49, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.setNullText("");
        java.lang.Object obj55 = properties22.get((java.lang.Object) strBuilder54);
        java.util.Properties properties56 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray63 = strTokenizer62.getTokenArray();
        java.lang.String[] strArray64 = strTokenizer62.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder60.appendWithSeparators((java.lang.Object[]) strArray64, "4#4");
        char[] charArray69 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray69);
        java.lang.Object obj71 = properties56.getOrDefault((java.lang.Object) strBuilder60, (java.lang.Object) strTokenizer70);
        int int72 = properties56.size();
        int int73 = properties56.size();
        java.util.Set<java.lang.String> strSet74 = properties56.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder54.appendAll((java.lang.Iterable<java.lang.String>) strSet74);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder75.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder75.replaceAll('t', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder82.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder83.setNullText("");
        char[] charArray86 = strBuilder85.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder85.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder75.appendFixedWidthPadLeft((java.lang.Object) strBuilder85, 53, 'e');
        java.io.Writer writer91 = writer19.append((java.lang.CharSequence) strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "java.io.IOException" + "'", str16, "java.io.IOException");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(writer19);
        org.junit.Assert.assertNotNull(writer21);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 32 + "'", int34 == 32);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 32 + "'", int48 == 32);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(strSet74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[]");
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(writer91);
    }

    @Test
    public void test9205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9205");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        int int5 = strBuilder4.capacity();
        java.lang.StringBuffer stringBuffer6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(stringBuffer6, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int11 = strBuilder9.lastIndexOf(strMatcher10);
        boolean boolean12 = strBuilder2.equalsIgnoreCase(strBuilder9);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln((float) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.appendln((long) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder9.appendSeparator("", 8);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder9.appendSeparator("\n#\n0.23eurt\nStrTokenizer[ 4#4]");
        java.util.Properties properties22 = new java.util.Properties();
        int int23 = properties22.size();
        boolean boolean25 = properties22.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties26 = new java.util.Properties();
        int int27 = properties26.size();
        boolean boolean29 = properties26.containsKey((java.lang.Object) (-1.0f));
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties26.keys();
        java.util.Set<java.lang.Object> objSet32 = properties26.keySet();
        boolean boolean33 = properties26.isEmpty();
        properties26.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer40.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder35.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer40, "h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer40.reset("\n32.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.setEmptyTokenAsNull(true);
        boolean boolean48 = strTokenizer45.hasNext();
        boolean boolean49 = strTokenizer45.isEmptyTokenAsNull();
        boolean boolean50 = properties26.contains((java.lang.Object) boolean49);
        java.util.Set<java.lang.Object> objSet51 = properties26.keySet();
        boolean boolean52 = strBuilder21.equals((java.lang.Object) properties26);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 32 + "'", int5 == 32);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objSet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test9206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9206");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        int int16 = properties0.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray22 = strTokenizer21.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.appendAll((java.lang.Object[]) strArray22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder17.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray32 = strTokenizer31.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendAll((java.lang.Object[]) strArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder17.appendln(strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.replaceFirst('4', 'a');
        boolean boolean46 = properties0.remove((java.lang.Object) strBuilder33, (java.lang.Object) '4');
        java.util.Set<java.lang.Object> objSet47 = properties0.keySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        int int50 = strBuilder49.capacity();
        java.lang.StringBuffer stringBuffer51 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.appendln(stringBuffer51, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int56 = strBuilder54.lastIndexOf(strMatcher55);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        boolean boolean58 = strBuilder54.contains(strMatcher57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer59.setDelimiterString("java.io.IOException");
        java.lang.Object obj62 = properties0.remove((java.lang.Object) strTokenizer59);
        properties0.clear();
        java.lang.String str65 = properties0.getProperty("0");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder68.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder69.replaceFirst('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder69.append((float) 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder69.insert((int) (short) 0, "{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder82.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder83.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder69.append((java.lang.CharSequence) strBuilder85);
        int int88 = strBuilder86.indexOf('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder86.replaceAll('r', 't');
        java.lang.Object obj93 = properties0.replace((java.lang.Object) strBuilder91, (java.lang.Object) 29);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 32 + "'", int50 == 32);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNull(obj93);
    }

    @Test
    public void test9207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9207");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        char[] charArray14 = strBuilder10.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.appendln(charArray14);
        int int19 = strMatcher2.isMatch(charArray14, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray25 = strTokenizer24.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendAll((java.lang.Object[]) strArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder20.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray35 = strTokenizer34.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.appendAll((java.lang.Object[]) strArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder20.appendln(strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst('a', '4');
        java.io.Writer writer50 = strBuilder49.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst("", "");
        char[] charArray62 = strBuilder58.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder57.appendln(charArray62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray62);
        writer50.write(charArray62);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder42.append(charArray62);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException", strMatcher2, strMatcher67);
        java.lang.String str69 = strTokenizer68.getContent();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]");
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(writer50);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[]");
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "java.io.IOException" + "'", str69, "java.io.IOException");
    }

    @Test
    public void test9208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9208");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder6.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder9, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.replaceFirst("StrTokenizer[not tokenized yet]", "{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.insert((int) (short) 1, (float) (-1));
        java.lang.StringBuffer stringBuffer21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.append(stringBuffer21, (-1), 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendSeparator("{}3.0", "1001\n");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.insert(61, (float) 49);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 61");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test9209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9209");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("###################################");
        org.junit.Assert.assertNotNull(strMatcher1);
    }

    @Test
    public void test9210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9210");
        java.io.IOException iOException1 = new java.io.IOException("100.0\n35.0\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0001.0\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n");
    }

    @Test
    public void test9211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9211");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.ensureCapacity((int) (short) 10);
        boolean boolean13 = strBuilder6.equals((java.lang.Object) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder6.setNullText("java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        int int17 = strBuilder16.capacity();
        java.lang.StringBuffer stringBuffer18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendln(stringBuffer18, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder16.insert(1, (double) 32);
        boolean boolean25 = strBuilder16.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder16.appendSeparator('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray34 = strTokenizer33.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder29.appendAll((java.lang.Object[]) strArray34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder29.replaceFirst('a', 'a');
        java.lang.StringBuffer stringBuffer39 = strBuilder38.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder16.append(stringBuffer39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder15.append((java.lang.Object) strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder15.appendln(1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder49.append('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.setDelimiterString("{}");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer58.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder49.replaceFirst(strMatcher59, "true");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder15.deleteAll(strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray65 = strTokenizer64.getTokenArray();
        java.lang.String[] strArray66 = strTokenizer64.getTokenArray();
        boolean boolean67 = strTokenizer64.hasNext();
        int int68 = strTokenizer64.size();
        boolean boolean69 = strTokenizer64.hasPrevious();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.replaceFirst("", "");
        char[] charArray77 = strBuilder73.toCharArray();
        char[] charArray78 = strBuilder70.getChars(charArray77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray77);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray86 = strTokenizer85.getTokenArray();
        java.lang.String[] strArray87 = strTokenizer85.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder83.appendWithSeparators((java.lang.Object[]) strArray87, "4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher90 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder89.deleteAll(strMatcher90);
        org.apache.commons.lang3.text.StrMatcher strMatcher92 = org.apache.commons.lang3.text.StrMatcher.doubleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, strMatcher90, strMatcher92);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = new org.apache.commons.lang3.text.StrTokenizer(charArray77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = strTokenizer64.reset(charArray77);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder62.append(charArray77, (int) '$', 200);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 200");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 32 + "'", int17 == 32);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(stringBuffer39);
        org.junit.Assert.assertEquals(stringBuffer39.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[]");
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[]");
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strMatcher90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strMatcher92);
        org.junit.Assert.assertNotNull(strTokenizer95);
    }

    @Test
    public void test9212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9212");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Set<java.lang.Object> objSet9 = properties4.keySet();
        java.util.Set<java.lang.Object> objSet10 = properties4.keySet();
        java.lang.Object obj13 = properties4.setProperty("10.0StrTokenizer[ 4#4]\n", "[\n32.0, , , StrTokenizer[]]");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.setNullText("");
        char[] charArray20 = strBuilder19.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("h", '4', '$');
        java.lang.String str26 = strTokenizer25.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer25.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer21.setDelimiterMatcher(strMatcher27);
        boolean boolean29 = properties4.contains((java.lang.Object) strTokenizer21);
        int int30 = properties4.size();
        java.util.Properties properties31 = new java.util.Properties();
        int int32 = properties31.size();
        boolean boolean34 = properties31.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties35 = new java.util.Properties();
        int int36 = properties35.size();
        boolean boolean38 = properties35.containsKey((java.lang.Object) (-1.0f));
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties35);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties35.keys();
        java.util.Set<java.lang.String> strSet41 = properties35.stringPropertyNames();
        java.lang.Object obj44 = properties35.setProperty("java.io.IOException: {}", "StrTokenizer[ 4#4]");
        boolean boolean45 = properties35.isEmpty();
        java.util.Collection<java.lang.Object> objCollection46 = properties35.values();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray52 = strTokenizer51.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.appendAll((java.lang.Object[]) strArray52);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder47.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray62 = strTokenizer61.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder57.appendAll((java.lang.Object[]) strArray62);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder47.appendln(strBuilder63);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder63.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.deleteAll(strMatcher70);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder69.replaceAll("{}", "0");
        int int76 = strBuilder69.lastIndexOf(' ');
        java.io.IOException iOException78 = new java.io.IOException();
        java.lang.Throwable[] throwableArray79 = iOException78.getSuppressed();
        java.lang.Throwable[] throwableArray80 = iOException78.getSuppressed();
        java.io.IOException iOException81 = new java.io.IOException("########", (java.lang.Throwable) iOException78);
        java.io.IOException iOException82 = new java.io.IOException((java.lang.Throwable) iOException78);
        java.lang.Throwable[] throwableArray83 = iOException78.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder69.appendAll((java.lang.Object[]) throwableArray83);
        java.lang.Object obj85 = properties4.putIfAbsent((java.lang.Object) objCollection46, (java.lang.Object) throwableArray83);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "h" + "'", str26, "h");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objCollection46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(throwableArray79);
        org.junit.Assert.assertNotNull(throwableArray80);
        org.junit.Assert.assertNotNull(throwableArray83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNull(obj85);
    }

    @Test
    public void test9213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9213");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.trim();
        boolean boolean13 = strBuilder10.contains("4#4");
        java.io.IOException iOException16 = new java.io.IOException("hi!");
        java.io.IOException iOException18 = new java.io.IOException("hi!");
        iOException16.addSuppressed((java.lang.Throwable) iOException18);
        java.io.IOException iOException21 = new java.io.IOException("hi!");
        java.io.IOException iOException23 = new java.io.IOException("hi!");
        iOException21.addSuppressed((java.lang.Throwable) iOException23);
        iOException18.addSuppressed((java.lang.Throwable) iOException23);
        java.io.IOException iOException26 = new java.io.IOException("hi!", (java.lang.Throwable) iOException23);
        java.lang.Throwable[] throwableArray27 = iOException23.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder10.appendAll((java.lang.Object[]) throwableArray27);
        int int31 = strBuilder10.indexOf("100.0\000\000\000\000\000", 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder43.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln((double) '#');
        boolean boolean47 = strBuilder37.equals(strBuilder46);
        java.util.stream.IntStream intStream48 = strBuilder37.codePoints();
        java.util.Iterator<java.lang.String> strItor49 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder37.appendWithSeparators(strItor49, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst(' ', ' ');
        java.io.Writer writer55 = strBuilder54.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer61.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder56.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer61, "h");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder56.setLength((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.insert((int) '4', (double) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder54.append(strBuilder69, 32, (int) (byte) 10);
        char[] charArray73 = strBuilder69.toCharArray();
        boolean boolean74 = strBuilder10.equals((java.lang.Object) strBuilder69);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder69.appendln((int) '4');
        java.lang.Object obj77 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder76.appendFixedWidthPadRight(obj77, (int) ' ', '$');
        int int81 = strBuilder80.length();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(intStream48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(writer55);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0001.0\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0001.0\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 138 + "'", int81 == 138);
    }

    @Test
    public void test9214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9214");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: \000");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer1.set("true\n###################################\n32.0");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test9215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9215");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.ensureCapacity((int) (short) 10);
        boolean boolean13 = strBuilder6.equals((java.lang.Object) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder6.setNullText("java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder6.deleteFirst(strMatcher17);
        java.util.stream.IntStream intStream19 = strBuilder18.codePoints();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence22 = strBuilder18.subSequence(69, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -69");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(intStream19);
    }

    @Test
    public void test9216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9216");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        boolean boolean25 = properties0.isEmpty();
        java.util.Set<java.lang.String> strSet26 = properties0.stringPropertyNames();
        java.util.Properties properties27 = new java.util.Properties(properties0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strSet26);
    }

    @Test
    public void test9217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9217");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength(32);
        java.io.Writer writer11 = strBuilder10.asWriter();
        writer11.write(" 4#4", (int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        int int17 = strBuilder16.capacity();
        java.lang.StringBuffer stringBuffer18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendln(stringBuffer18, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((float) '4');
        java.io.Writer writer28 = writer11.append((java.lang.CharSequence) strBuilder25);
        writer28.write((int) '4');
        writer28.flush();
        writer28.write(0);
        writer28.flush();
        // The following exception was thrown during execution in test generation
        try {
            writer28.write("8100", 0, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 32 + "'", int17 == 32);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(writer28);
    }

    @Test
    public void test9218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9218");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.util.Spliterator<java.lang.String> strSpliterator17 = strList14.spliterator();
        int int18 = strList14.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int22 = strList14.lastIndexOf((java.lang.Object) strTokenizer21);
        java.util.ListIterator<java.lang.String> strItor24 = strList14.listIterator((int) (short) 1);
        char[] charArray29 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, ' ');
        int int32 = strTokenizer31.size();
        boolean boolean33 = strTokenizer31.hasNext();
        java.util.List<java.lang.String> strList34 = strTokenizer31.getTokenList();
        java.lang.String[] strArray38 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        boolean boolean41 = strList34.addAll((java.util.Collection<java.lang.String>) strList39);
        java.lang.String str43 = strList39.remove(0);
        char[] charArray48 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, ' ');
        int int51 = strTokenizer50.size();
        boolean boolean52 = strTokenizer50.hasNext();
        java.util.List<java.lang.String> strList53 = strTokenizer50.getTokenList();
        java.lang.String[] strArray57 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        boolean boolean60 = strList53.addAll((java.util.Collection<java.lang.String>) strList58);
        boolean boolean61 = strList39.addAll((java.util.Collection<java.lang.String>) strList58);
        java.util.stream.Stream<java.lang.String> strStream62 = strList58.parallelStream();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder65.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.append((double) 10L);
        java.lang.Object obj69 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.appendFixedWidthPadLeft(obj69, (int) (byte) -1, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.appendln("StrTokenizer[ 4#4]");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.deleteAll("\n");
        boolean boolean77 = strList58.contains((java.lang.Object) strBuilder76);
        boolean boolean78 = strList14.removeAll((java.util.Collection<java.lang.String>) strList58);
        java.util.stream.Stream<java.lang.String> strStream79 = strList14.parallelStream();
        java.lang.Object[] objArray80 = strList14.toArray();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strSpliterator17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strItor24);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\n32.0" + "'", str43, "\n32.0");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strStream62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(strStream79);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[]");
    }

    @Test
    public void test9219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9219");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        char[] charArray21 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        int int24 = strTokenizer23.size();
        boolean boolean25 = strTokenizer23.hasNext();
        java.util.List<java.lang.String> strList26 = strTokenizer23.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "");
        char[] charArray31 = strBuilder27.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        boolean boolean35 = strList26.equals((java.lang.Object) charArray31);
        char[] charArray40 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        int int43 = strTokenizer42.size();
        boolean boolean44 = strTokenizer42.hasNext();
        java.util.List<java.lang.String> strList45 = strTokenizer42.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        int int47 = strBuilder46.capacity();
        java.lang.StringBuffer stringBuffer48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(stringBuffer48, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder46.insert(1, (double) 32);
        java.lang.String str56 = strBuilder46.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder46.insert(1, '#');
        boolean boolean60 = strList45.equals((java.lang.Object) strBuilder46);
        boolean boolean61 = strList26.containsAll((java.util.Collection<java.lang.String>) strList45);
        boolean boolean62 = strList9.addAll((java.util.Collection<java.lang.String>) strList45);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln('#');
        java.lang.StringBuffer stringBuffer69 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.append(stringBuffer69, (int) (byte) -1, (int) (byte) 100);
        int int73 = strList9.lastIndexOf((java.lang.Object) stringBuffer69);
        char[] charArray78 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, ' ');
        int int81 = strTokenizer80.size();
        int int82 = strTokenizer80.previousIndex();
        boolean boolean83 = strList9.equals((java.lang.Object) strTokenizer80);
        java.lang.String str84 = strTokenizer80.next();
        java.lang.String str85 = strTokenizer80.previousToken();
        java.lang.String str86 = strTokenizer80.nextToken();
        java.lang.String str87 = strTokenizer80.nextToken();
        int int88 = strTokenizer80.previousIndex();
        int int89 = strTokenizer80.nextIndex();
        boolean boolean90 = strTokenizer80.hasPrevious();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 32 + "'", int47 == 32);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\n32.0" + "'", str56, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "4#4" + "'", str84, "4#4");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "4#4" + "'", str85, "4#4");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "4#4" + "'", str86, "4#4");
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test9220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9220");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        java.io.Reader reader4 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst(' ', '4');
        java.io.Reader reader10 = strBuilder9.asReader();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.appendln('#');
        java.lang.StringBuffer stringBuffer19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.append(stringBuffer19, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder16.deleteFirst("hi!");
        char[] charArray25 = strBuilder16.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer12.reset(charArray25);
        java.lang.String str27 = strTokenizer12.next();
        java.util.List<java.lang.String> strList28 = strTokenizer12.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.append('a');
        int int37 = strBuilder30.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strBuilder30.asTokenizer();
        boolean boolean39 = strList28.remove((java.lang.Object) strBuilder30);
        boolean boolean40 = strBuilder9.equals(strBuilder30);
        int int43 = strBuilder30.indexOf("$", 201);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray46 = strTokenizer45.getTokenArray();
        java.lang.String[] strArray47 = strTokenizer45.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer45.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer45.setIgnoredChar('a');
        int int52 = strTokenizer45.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer45.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer57.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer54.setQuoteMatcher(strMatcher58);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder30.replaceFirst(strMatcher58, "java.io.IOException: ########");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "#" + "'", str27, "#");
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strBuilder61);
    }

    @Test
    public void test9221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9221");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendln('#');
        java.lang.StringBuffer stringBuffer16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.append(stringBuffer16, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder13.replaceFirst('a', '4');
        boolean boolean25 = strBuilder9.equals(strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder13.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendSeparator('4', '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.appendSeparator('#', (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.appendNewLine();
        char[] charArray36 = strBuilder26.toCharArray((int) (byte) 1, 31);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder26.appendSeparator("true\n###################################\n32.0", "{}3.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((long) '.');
        int int43 = strBuilder39.lastIndexOf("32.0");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#4\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#4\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, 4, \n]");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 45 + "'", int43 == 45);
    }

    @Test
    public void test9222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9222");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.ensureCapacity((int) (short) 10);
        boolean boolean13 = strBuilder6.equals((java.lang.Object) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.setNullText("java.io.IOException");
        java.lang.String str16 = strBuilder12.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.deleteFirst("\n\n");
        java.io.Writer writer19 = strBuilder12.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.String str24 = strBuilder20.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendln((float) 100);
        boolean boolean28 = strBuilder20.startsWith("StrTokenizer[not tokenized yet]");
        int int31 = strBuilder20.lastIndexOf("#\n", 10);
        java.io.Writer writer32 = strBuilder20.asWriter();
        java.io.Writer writer33 = writer19.append((java.lang.CharSequence) strBuilder20);
        java.io.Writer writer35 = writer19.append('\n');
        writer19.write(100);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "java.io.IOException" + "'", str16, "java.io.IOException");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(writer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(writer32);
        org.junit.Assert.assertNotNull(writer33);
        org.junit.Assert.assertNotNull(writer35);
    }

    @Test
    public void test9223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9223");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("java.io.IOException: #\n");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test9224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9224");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst("", "");
        char[] charArray22 = strBuilder18.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder15.append(charArray22, 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray33 = strTokenizer32.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder28.appendAll((java.lang.Object[]) strArray33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder28.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray43 = strTokenizer42.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder38.appendAll((java.lang.Object[]) strArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder28.appendln(strBuilder44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst("", "");
        char[] charArray57 = strBuilder53.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder52.appendln(charArray57);
        boolean boolean59 = strBuilder28.equals((java.lang.Object) strBuilder52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer62.getDelimiterMatcher();
        int int64 = strBuilder28.indexOf(strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer65.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer67.reset("#######0");
        java.lang.String str70 = strTokenizer67.nextToken();
        java.lang.String str71 = strTokenizer67.nextToken();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder5.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer67, "{");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder5.appendln((long) 2);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[]");
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[]");
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "###0" + "'", str70, "###0");
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
    }

    @Test
    public void test9225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9225");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendAll((java.lang.Object[]) strArray6);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.append((long) 'a');
        java.lang.String str10 = strBuilder9.getNullText();
        int int11 = strBuilder9.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.deleteCharAt((int) (short) 1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 32 + "'", int11 == 32);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test9226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9226");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, 'o', '$');
    }

    @Test
    public void test9227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9227");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("\ntrue\n52.0#36.032\n\n", strMatcher1);
    }

    @Test
    public void test9228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9228");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#36.0java.io.IOException: \n\n32.0java.io.IOException: hi!ttttttttttttttttttttttttttttttttt32");
        org.junit.Assert.assertNotNull(strMatcher1);
    }

    @Test
    public void test9229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9229");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Throwable throwable3 = null;
        java.io.IOException iOException4 = new java.io.IOException("\n32.0", throwable3);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException4);
        char[] charArray8 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln('#');
        java.lang.StringBuffer stringBuffer20 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append(stringBuffer20, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.deleteFirst("hi!");
        char[] charArray26 = strBuilder17.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer13.reset(charArray26);
        boolean boolean28 = properties0.replace((java.lang.Object) iOException4, (java.lang.Object) "hi!", (java.lang.Object) strTokenizer13);
        java.lang.String str29 = strTokenizer13.next();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "#" + "'", str29, "#");
    }

    @Test
    public void test9230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9230");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendAll((java.lang.Object[]) strArray6);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst("", "");
        char[] charArray15 = strBuilder11.toCharArray();
        char[] charArray16 = strBuilder8.getChars(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        char[] charArray18 = strBuilder0.getChars(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ', '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charMatcher('o');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher22, strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, 't', '4');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[]");
        org.junit.Assert.assertNotNull(strMatcher24);
    }

    @Test
    public void test9231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9231");
        java.io.IOException iOException1 = new java.io.IOException("java.io.IOException: ########");
        java.lang.Throwable[] throwableArray2 = iOException1.getSuppressed();
        java.io.IOException iOException3 = new java.io.IOException((java.lang.Throwable) iOException1);
        org.junit.Assert.assertNotNull(throwableArray2);
    }

    @Test
    public void test9232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9232");
        java.io.IOException iOException1 = new java.io.IOException("a");
        java.io.IOException iOException2 = new java.io.IOException((java.lang.Throwable) iOException1);
    }

    @Test
    public void test9233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9233");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        int int12 = strBuilder11.capacity();
        java.lang.StringBuffer stringBuffer13 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(stringBuffer13, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int18 = strBuilder16.lastIndexOf(strMatcher17);
        boolean boolean19 = strBuilder9.equalsIgnoreCase(strBuilder16);
        char[] charArray22 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray22);
        boolean boolean24 = properties0.replace((java.lang.Object) strBuilder6, (java.lang.Object) strBuilder9, (java.lang.Object) strTokenizer23);
        java.lang.String str26 = strBuilder6.substring(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray32 = strTokenizer31.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendAll((java.lang.Object[]) strArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder27.replaceFirst('a', 'a');
        char[] charArray41 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, ' ');
        int int44 = strTokenizer43.size();
        boolean boolean45 = strTokenizer43.hasNext();
        java.util.List<java.lang.String> strList46 = strTokenizer43.getTokenList();
        java.lang.String[] strArray50 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        boolean boolean53 = strList46.addAll((java.util.Collection<java.lang.String>) strList51);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder27.appendAll((java.lang.Iterable<java.lang.String>) strList51);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        boolean boolean56 = strBuilder27.contains(strMatcher55);
        boolean boolean57 = strBuilder6.equals(strBuilder27);
        int int59 = strBuilder6.lastIndexOf('{');
        char[] charArray60 = strBuilder6.toCharArray();
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "#\n" + "'", str26, "#\n");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[#, \n]");
    }

    @Test
    public void test9234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9234");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln((int) (byte) 0);
        java.io.Writer writer8 = strBuilder7.asWriter();
        java.io.IOException iOException9 = new java.io.IOException();
        java.lang.Throwable[] throwableArray10 = iOException9.getSuppressed();
        java.lang.Throwable[] throwableArray11 = iOException9.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendWithSeparators((java.lang.Object[]) throwableArray11, "1");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceFirst("", "");
        char[] charArray21 = strBuilder17.toCharArray();
        char[] charArray22 = strBuilder14.getChars(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        boolean boolean24 = strTokenizer23.hasNext();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder13.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer23, "\n32.0 ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer23.setIgnoreEmptyTokens(false);
        int int29 = strTokenizer28.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(writer8);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
    }

    @Test
    public void test9235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9235");
        char[] charArray5 = new char[] { ' ', '4', '#', '#', ' ' };
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder(3);
        char[] charArray9 = strBuilder8.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray5, strMatcher10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder(3);
        char[] charArray14 = strBuilder13.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.appendln(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "");
        char[] charArray31 = strBuilder27.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.appendln(charArray31);
        int int36 = strMatcher19.isMatch(charArray31, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray42 = strTokenizer41.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder37.appendAll((java.lang.Object[]) strArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder37.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray52 = strTokenizer51.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.appendAll((java.lang.Object[]) strArray52);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder37.appendln(strBuilder53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder53.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst('a', '4');
        java.io.Writer writer67 = strBuilder66.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.replaceFirst("", "");
        char[] charArray79 = strBuilder75.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder74.appendln(charArray79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray79);
        writer67.write(charArray79);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder59.append(charArray79);
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException", strMatcher19, strMatcher84);
        int int87 = strBuilder13.indexOf(strMatcher84, 5);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer11.setTrimmerMatcher(strMatcher84);
        boolean boolean89 = strTokenizer88.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer88.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = strTokenizer88.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher94 = strTokenizer93.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher95 = strTokenizer93.getIgnoredMatcher();
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), " 4## ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), " 4## ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[ , 4, #, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(writer67);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[]");
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertNotNull(strTokenizer93);
        org.junit.Assert.assertNotNull(strMatcher94);
        org.junit.Assert.assertNotNull(strMatcher95);
    }

    @Test
    public void test9236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9236");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append((double) 10L);
        java.lang.Object obj6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendFixedWidthPadLeft(obj6, (int) (byte) -1, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln("StrTokenizer[ 4#4]");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln((float) (short) 10);
        java.lang.String str14 = strBuilder13.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.appendSeparator("java.io.IOException: \n", "\na32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray23 = strTokenizer22.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.appendAll((java.lang.Object[]) strArray23);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.ensureCapacity((int) (short) 10);
        boolean boolean31 = strBuilder24.equals((java.lang.Object) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder17.appendFixedWidthPadRight((java.lang.Object) true, 15, '1');
        java.lang.String str40 = strBuilder17.substring(58, 201);
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray43 = strBuilder17.toCharArray(100, 80);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "10.0StrTokenizer[ 4#4]\n10.0\n" + "'", str14, "10.0StrTokenizer[ 4#4]\n10.0\n");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1111111" + "'", str40, "1111111");
    }

    @Test
    public void test9237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9237");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln((double) '#');
        boolean boolean26 = strBuilder16.equals(strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.ensureCapacity((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("true\n###################################");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.appendSeparator("#\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder0.appendFixedWidthPadLeft((java.lang.Object) strBuilder30, (-1), '#');
        int int37 = strBuilder30.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        int int40 = strBuilder39.capacity();
        java.lang.StringBuffer stringBuffer41 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.appendln(stringBuffer41, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder39.appendln((int) (byte) 0);
        java.io.Writer writer47 = strBuilder46.asWriter();
        java.io.IOException iOException48 = new java.io.IOException();
        java.lang.Throwable[] throwableArray49 = iOException48.getSuppressed();
        java.lang.Throwable[] throwableArray50 = iOException48.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder46.appendWithSeparators((java.lang.Object[]) throwableArray50, "1");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder46.setNullText("97\nhi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder46.appendln("32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder46.deleteAll('o');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.insert(4, (double) 't');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder38.append((java.lang.Object) strBuilder58);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder38.append((long) 57);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 32 + "'", int40 == 32);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(writer47);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
    }

    @Test
    public void test9238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9238");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder0.indexOf("");
        int int7 = strBuilder0.lastIndexOf('#', (int) (byte) 0);
        boolean boolean9 = strBuilder0.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln((int) (byte) 100);
        int int20 = strBuilder0.indexOf('$', 14);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = strBuilder0.substring(47);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    }

    @Test
    public void test9239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9239");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("a4", strMatcher1);
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer2.getDelimiterMatcher();
        java.lang.Class<?> wildcardClass4 = strTokenizer2.getClass();
        org.junit.Assert.assertNotNull(strMatcher1);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test9240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9240");
        java.lang.Throwable throwable3 = null;
        java.io.IOException iOException4 = new java.io.IOException("\n32.0", throwable3);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.util.Properties properties6 = new java.util.Properties();
        int int7 = properties6.size();
        boolean boolean9 = properties6.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties10 = new java.util.Properties();
        int int11 = properties10.size();
        boolean boolean13 = properties10.containsKey((java.lang.Object) (-1.0f));
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.lang.String str16 = properties10.getProperty("h");
        java.util.Enumeration<?> wildcardEnumeration17 = properties10.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet18 = properties10.entrySet();
        java.io.IOException iOException19 = new java.io.IOException();
        java.lang.Throwable[] throwableArray20 = iOException19.getSuppressed();
        java.lang.Throwable[] throwableArray21 = iOException19.getSuppressed();
        java.io.IOException iOException22 = new java.io.IOException((java.lang.Throwable) iOException19);
        boolean boolean23 = properties10.containsValue((java.lang.Object) iOException22);
        iOException5.addSuppressed((java.lang.Throwable) iOException22);
        java.io.IOException iOException27 = new java.io.IOException("StrTokenizer[]");
        java.io.IOException iOException28 = new java.io.IOException((java.lang.Throwable) iOException27);
        java.io.IOException iOException29 = new java.io.IOException("false", (java.lang.Throwable) iOException28);
        iOException5.addSuppressed((java.lang.Throwable) iOException29);
        java.io.IOException iOException31 = new java.io.IOException("########", (java.lang.Throwable) iOException5);
        java.io.IOException iOException32 = new java.io.IOException();
        java.io.IOException iOException33 = new java.io.IOException((java.lang.Throwable) iOException32);
        iOException5.addSuppressed((java.lang.Throwable) iOException32);
        java.io.IOException iOException35 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.io.IOException iOException36 = new java.io.IOException(" 4#4$", (java.lang.Throwable) iOException5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(wildcardEnumeration17);
        org.junit.Assert.assertNotNull(objEntrySet18);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test9241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9241");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = strTokenizer1.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setDelimiterString(" 4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setDelimiterString(" 4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer10.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer3.setIgnoredMatcher(strMatcher13);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer14);
    }

    @Test
    public void test9242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9242");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("true");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray8 = strTokenizer7.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder2.appendAll((java.lang.Object[]) strArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "");
        char[] charArray17 = strBuilder13.toCharArray();
        char[] charArray18 = strBuilder10.getChars(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray17);
        char[] charArray20 = strBuilder2.getChars(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer1.reset(charArray17);
        java.lang.String str22 = strTokenizer1.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("true\n###################################3\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer1.setDelimiterMatcher(strMatcher24);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = strTokenizer1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer25);
    }

    @Test
    public void test9243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9243");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.lang.String str10 = properties4.getProperty("h");
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray17 = strTokenizer16.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendAll((java.lang.Object[]) strArray17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder12.replaceFirst('a', 'a');
        char[] charArray26 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ');
        int int29 = strTokenizer28.size();
        boolean boolean30 = strTokenizer28.hasNext();
        java.util.List<java.lang.String> strList31 = strTokenizer28.getTokenList();
        java.lang.String[] strArray35 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        boolean boolean38 = strList31.addAll((java.util.Collection<java.lang.String>) strList36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder12.appendAll((java.lang.Iterable<java.lang.String>) strList36);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor40 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        int int42 = strBuilder41.capacity();
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendln(stringBuffer43, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln(true);
        boolean boolean53 = strSubstitutor40.replaceIn(strBuilder50, (int) '$', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder12.append((java.lang.CharSequence) strBuilder50);
        boolean boolean55 = properties4.equals((java.lang.Object) strBuilder12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer58.reset("{\ntrue\n=1.0}");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer60.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder12.replaceAll(strMatcher61, "{");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder12.appendSeparator("false0\n");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 32 + "'", int42 == 32);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
    }

    @Test
    public void test9244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9244");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((double) '#');
        boolean boolean15 = strBuilder5.equals(strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.ensureCapacity((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("true\n###################################");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.setLength(47);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln((double) '#');
        boolean boolean37 = strBuilder27.equals(strBuilder36);
        java.util.stream.IntStream intStream38 = strBuilder27.codePoints();
        java.util.Iterator<java.lang.String> strItor39 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder27.appendWithSeparators(strItor39, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst(' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceAll('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendSeparator("\n32.0-1.0", "\n32.0-1.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder17.append((java.lang.Object) "\n32.0-1.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder51.trim();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(intStream38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
    }

    @Test
    public void test9245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9245");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("true\n###################################3\nt\n", "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
    }

    @Test
    public void test9246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9246");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.keys();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.appendln('#');
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.append(stringBuffer11, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder8.deleteFirst("hi!");
        char[] charArray17 = strBuilder8.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer4.reset(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer18.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer18.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer23.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer25.setDelimiterString("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.append('a');
        int int36 = strBuilder29.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        int int38 = strBuilder37.capacity();
        java.lang.StringBuffer stringBuffer39 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder37.appendln(stringBuffer39, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder37.insert(1, (double) 32);
        boolean boolean46 = strBuilder37.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder37.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder37.clear();
        int int49 = strBuilder48.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder29.append(strBuilder48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        int int53 = strBuilder52.capacity();
        java.lang.StringBuffer stringBuffer54 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder52.appendln(stringBuffer54, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder52.insert(1, (double) 32);
        java.lang.String str62 = strBuilder52.rightString((int) ' ');
        boolean boolean64 = strBuilder52.startsWith("");
        char[] charArray65 = strBuilder52.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder50.insert((int) (short) 0, charArray65);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder50.appendSeparator('$');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.replaceFirst("", "");
        char[] charArray76 = strBuilder72.toCharArray();
        char[] charArray77 = strBuilder69.getChars(charArray76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray76);
        boolean boolean79 = strTokenizer78.hasPrevious();
        java.util.List<java.lang.String> strList80 = strTokenizer78.getTokenList();
        strList80.clear();
        strList80.clear();
        java.util.List[] listArray84 = new java.util.List[0];
        @SuppressWarnings("unchecked")
        java.util.List<java.lang.String>[] strListArray85 = (java.util.List<java.lang.String>[]) listArray84;
        java.util.List<java.lang.String>[] strListArray86 = strList80.toArray(strListArray85);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder50.appendWithSeparators((java.lang.Object[]) strListArray85, "java.io.IOException: StrTokenizer[not tokenized yet]");
        boolean boolean89 = properties1.replace((java.lang.Object) strTokenizer18, (java.lang.Object) strTokenizer25, (java.lang.Object) "java.io.IOException: StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("rue\n##############################");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = strTokenizer25.setIgnoredMatcher(strMatcher91);
        boolean boolean93 = strTokenizer92.isIgnoreEmptyTokens();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 32 + "'", int38 == 32);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 32 + "'", int49 == 32);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 32 + "'", int53 == 32);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "\n32.0" + "'", str62, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[]");
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strList80);
        org.junit.Assert.assertNotNull(listArray84);
        org.junit.Assert.assertNotNull(strListArray85);
        org.junit.Assert.assertNotNull(strListArray86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(strMatcher91);
        org.junit.Assert.assertNotNull(strTokenizer92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test9247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9247");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        java.lang.String[] strArray7 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendWithSeparators((java.lang.Object[]) strArray7, "4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.replaceFirst("[\n32.0, , , StrTokenizer[]]", "true\n###################################");
        java.lang.Object[] objArray13 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendWithSeparators(objArray13, "\n32.0a");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst('a', 't');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((float) 47);
        java.lang.String str21 = strBuilder18.toString();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "47.0\n" + "'", str21, "47.0\n");
    }

    @Test
    public void test9248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9248");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append('a');
        int int8 = strBuilder1.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strBuilder1.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setIgnoredChar('$');
        boolean boolean12 = strTokenizer11.hasPrevious();
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test9249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9249");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "");
        char[] charArray7 = strBuilder3.toCharArray();
        char[] charArray8 = strBuilder0.getChars(charArray7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray7);
        boolean boolean10 = strTokenizer9.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        char[] charArray24 = strBuilder20.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendln(charArray24);
        int int29 = strMatcher12.isMatch(charArray24, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer9.reset(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.setDelimiterString("");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst("", "");
        char[] charArray38 = strBuilder34.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer31.reset(charArray38);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[]");
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[]");
        org.junit.Assert.assertNotNull(strTokenizer44);
    }

    @Test
    public void test9250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9250");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        char[] charArray14 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, ' ');
        int int17 = strTokenizer16.size();
        boolean boolean18 = strTokenizer16.hasNext();
        java.util.List<java.lang.String> strList19 = strTokenizer16.getTokenList();
        java.lang.String[] strArray23 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        boolean boolean26 = strList19.addAll((java.util.Collection<java.lang.String>) strList24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder0.appendAll((java.lang.Iterable<java.lang.String>) strList24);
        java.lang.Object[] objArray28 = strList24.toArray();
        char[] charArray33 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, ' ');
        int int36 = strTokenizer35.size();
        boolean boolean37 = strTokenizer35.hasNext();
        java.util.List<java.lang.String> strList38 = strTokenizer35.getTokenList();
        java.lang.String[] strArray42 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        boolean boolean45 = strList38.addAll((java.util.Collection<java.lang.String>) strList43);
        java.util.Spliterator<java.lang.String> strSpliterator46 = strList43.spliterator();
        int int47 = strList43.size();
        java.lang.String str49 = strList43.remove((int) (byte) 0);
        boolean boolean51 = strList43.add("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray57 = strTokenizer56.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder52.appendAll((java.lang.Object[]) strArray57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder52.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray67 = strTokenizer66.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder62.appendAll((java.lang.Object[]) strArray67);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder52.appendln(strBuilder68);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.replaceFirst("", "");
        char[] charArray81 = strBuilder77.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder76.appendln(charArray81);
        boolean boolean83 = strBuilder52.equals((java.lang.Object) strBuilder76);
        boolean boolean84 = strList43.remove((java.lang.Object) strBuilder52);
        boolean boolean85 = strList24.addAll((java.util.Collection<java.lang.String>) strList43);
        boolean boolean87 = strList24.add("\000\000\000\000\000\000\000\000\000\000");
        java.util.ListIterator<java.lang.String> strItor88 = strList24.listIterator();
        boolean boolean89 = strList24.isEmpty();
        boolean boolean91 = strList24.add("\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[\n32.0, , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[\n32.0, , ]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strSpliterator46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3 + "'", int47 == 3);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "\n32.0" + "'", str49, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[]");
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(strItor88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test9251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9251");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        java.lang.String[] strArray7 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendWithSeparators((java.lang.Object[]) strArray7, "4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteAll(strMatcher10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("100.0\n", "\n32");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendSeparator("true\n###################################\n32.0", 45);
        int int18 = strBuilder11.capacity();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 90 + "'", int18 == 90);
    }

    @Test
    public void test9252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9252");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[true]");
    }

    @Test
    public void test9253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9253");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.setCharAt(0, '4');
        char[] charArray20 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, ' ');
        int int23 = strTokenizer22.size();
        boolean boolean24 = strTokenizer22.hasNext();
        java.util.List<java.lang.String> strList25 = strTokenizer22.getTokenList();
        java.lang.String[] strArray29 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        boolean boolean32 = strList25.addAll((java.util.Collection<java.lang.String>) strList30);
        java.util.Properties properties33 = new java.util.Properties();
        int int34 = properties33.size();
        java.lang.Object obj35 = properties33.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder42.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder36.appendFixedWidthPadRight((java.lang.Object) strBuilder45, (int) (byte) -1, '#');
        java.lang.Object obj49 = properties33.get((java.lang.Object) strBuilder36);
        java.util.Properties properties50 = new java.util.Properties();
        int int51 = properties50.size();
        boolean boolean53 = properties50.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties54 = new java.util.Properties();
        int int55 = properties54.size();
        boolean boolean57 = properties54.containsKey((java.lang.Object) (-1.0f));
        properties50.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties54);
        char[] charArray63 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, ' ');
        int int66 = strTokenizer65.size();
        boolean boolean67 = strTokenizer65.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer65.setIgnoredMatcher(strMatcher68);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.replaceFirst("", "");
        java.lang.Object obj74 = properties50.putIfAbsent((java.lang.Object) strMatcher68, (java.lang.Object) strBuilder70);
        boolean boolean75 = strBuilder36.equals(obj74);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder36.appendln((double) 100L);
        java.util.stream.IntStream intStream78 = strBuilder36.chars();
        boolean boolean80 = strBuilder36.contains('$');
        boolean boolean81 = strList30.equals((java.lang.Object) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder15.appendAll((java.lang.Iterable<java.lang.String>) strList30);
        char[] charArray88 = new char[] { ' ', '4', '#', '#', ' ' };
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray88);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = new org.apache.commons.lang3.text.StrBuilder(3);
        char[] charArray92 = strBuilder91.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher93 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray92);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = new org.apache.commons.lang3.text.StrTokenizer(charArray88, strMatcher93);
        int int95 = strList30.indexOf((java.lang.Object) strTokenizer94);
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator96 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList30.replaceAll(strUnaryOperator96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "{}");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(intStream78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), " 4## ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), " 4## ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[ , 4, #, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(charArray92);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray92), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray92), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray92), "[]");
        org.junit.Assert.assertNotNull(strMatcher93);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
    }

    @Test
    public void test9254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9254");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        int int16 = properties0.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray22 = strTokenizer21.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.appendAll((java.lang.Object[]) strArray22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder17.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray32 = strTokenizer31.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendAll((java.lang.Object[]) strArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder17.appendln(strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.replaceFirst('4', 'a');
        boolean boolean46 = properties0.remove((java.lang.Object) strBuilder33, (java.lang.Object) '4');
        java.lang.Object obj47 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder33.appendFixedWidthPadRight(obj47, (int) 'a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.append((int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.insert((int) 'a', "\n32.0 \n");
        boolean boolean57 = strBuilder50.endsWith("\n32.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder50.appendFixedWidthPadLeft(52, 408, 'a');
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strBuilder61);
    }

    @Test
    public void test9255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9255");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        char[] charArray4 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.reset("{\ntrue\n=1.0}");
        java.lang.String str13 = strTokenizer12.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer12.getIgnoredMatcher();
        java.lang.String str15 = strTokenizer12.next();
        boolean boolean16 = strTokenizer12.hasNext();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "{" + "'", str13, "{");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "true" + "'", str15, "true");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test9256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9256");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray3 = strTokenizer2.getTokenArray();
        java.lang.String[] strArray4 = strTokenizer2.getTokenArray();
        boolean boolean5 = strTokenizer2.hasNext();
        int int6 = strTokenizer2.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer2.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("h", strMatcher7);
        java.util.List<java.lang.String> strList9 = strTokenizer8.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoreEmptyTokens(false);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
    }

    @Test
    public void test9257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9257");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.lang.String str10 = properties4.getProperty("h");
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet12 = properties4.entrySet();
        java.io.IOException iOException13 = new java.io.IOException();
        java.lang.Throwable[] throwableArray14 = iOException13.getSuppressed();
        java.lang.Throwable[] throwableArray15 = iOException13.getSuppressed();
        java.io.IOException iOException16 = new java.io.IOException((java.lang.Throwable) iOException13);
        boolean boolean17 = properties4.containsValue((java.lang.Object) iOException16);
        char[] charArray23 = new char[] { ' ', '4', '#', '#', ' ' };
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder(3);
        char[] charArray27 = strBuilder26.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray35 = strTokenizer34.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.appendAll((java.lang.Object[]) strArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.replaceFirst('a', 'a');
        java.lang.String str41 = strBuilder39.rightString((int) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.ensureCapacity(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder39.deleteFirst('$');
        java.lang.Object obj46 = properties4.put((java.lang.Object) strTokenizer29, (java.lang.Object) strBuilder45);
        int int47 = strBuilder45.size();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder45.appendln("100.0\n", 57, 34);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNotNull(objEntrySet12);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 4## ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 4## ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, #, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
    }

    @Test
    public void test9258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9258");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("{\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n=00.0\000\000\000\000\000}");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test9259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9259");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        boolean boolean9 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.append((long) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.appendln((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendln(0L);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test9260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9260");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln('#');
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.append(stringBuffer8, (int) (byte) -1, (int) (byte) 100);
        char[] charArray16 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder5.append(charArray16);
        boolean boolean20 = properties0.equals((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln((double) '#');
        boolean boolean36 = strBuilder26.equals(strBuilder35);
        java.util.stream.IntStream intStream37 = strBuilder26.codePoints();
        java.util.Iterator<java.lang.String> strItor38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder26.appendWithSeparators(strItor38, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst(' ', ' ');
        int int45 = strBuilder43.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.insert((int) '$', '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder43.insert((int) (short) 0, 53);
        boolean boolean52 = properties0.equals((java.lang.Object) (short) 0);
        int int53 = properties0.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        int int55 = strBuilder54.capacity();
        java.lang.StringBuffer stringBuffer56 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder54.appendln(stringBuffer56, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder54.insert(1, (double) 32);
        int int63 = strBuilder54.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder54.append((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder54.append((float) 5);
        char[] charArray68 = strBuilder54.toCharArray();
        boolean boolean69 = properties0.equals((java.lang.Object) charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray68);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer70.setQuoteMatcher(strMatcher71);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[ , 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(intStream37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 32 + "'", int55 == 32);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 32 + "'", int63 == 32);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "\n32.032.05.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "\n32.032.05.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[\n, 3, 2, ., 0, 3, 2, ., 0, 5, ., 0]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strTokenizer72);
    }

    @Test
    public void test9261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9261");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray19 = strTokenizer18.getTokenArray();
        java.lang.String[] strArray20 = strTokenizer18.getTokenArray();
        boolean boolean21 = strTokenizer18.hasNext();
        int int22 = strTokenizer18.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer18.getQuoteMatcher();
        java.util.List<java.lang.String> strList24 = strTokenizer18.getTokenList();
        boolean boolean25 = strList9.retainAll((java.util.Collection<java.lang.String>) strList24);
        char[] charArray30 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, ' ');
        int int33 = strTokenizer32.size();
        boolean boolean34 = strTokenizer32.hasNext();
        java.util.List<java.lang.String> strList35 = strTokenizer32.getTokenList();
        java.lang.String[] strArray39 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        boolean boolean42 = strList35.addAll((java.util.Collection<java.lang.String>) strList40);
        java.util.Spliterator<java.lang.String> strSpliterator43 = strList40.spliterator();
        int int44 = strList40.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int48 = strList40.lastIndexOf((java.lang.Object) strTokenizer47);
        boolean boolean49 = strList9.removeAll((java.util.Collection<java.lang.String>) strList40);
        int int50 = strList9.size();
        boolean boolean52 = strList9.add("\n32.0");
        java.util.stream.Stream<java.lang.String> strStream53 = strList9.stream();
        java.util.Iterator<java.lang.String> strItor54 = strList9.iterator();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strSpliterator43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 3 + "'", int44 == 3);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strStream53);
        org.junit.Assert.assertNotNull(strItor54);
    }

    @Test
    public void test9262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9262");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.util.Set<java.lang.Object> objSet2 = properties0.keySet();
        java.util.Properties properties3 = new java.util.Properties(properties0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("");
        boolean boolean6 = strTokenizer5.hasNext();
        char[] charArray11 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, ' ');
        int int14 = strTokenizer13.size();
        boolean boolean15 = strTokenizer13.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer13.setIgnoredMatcher(strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer5.setDelimiterMatcher(strMatcher16);
        boolean boolean19 = properties0.equals((java.lang.Object) strTokenizer18);
        int int20 = strTokenizer18.nextIndex();
        java.lang.String str21 = strTokenizer18.toString();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(objSet2);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "StrTokenizer[]" + "'", str21, "StrTokenizer[]");
    }

    @Test
    public void test9263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9263");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.util.Spliterator<java.lang.String> strSpliterator17 = strList14.spliterator();
        int int18 = strList14.size();
        java.lang.String str20 = strList14.remove((int) (byte) 0);
        boolean boolean22 = strList14.add("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray28 = strTokenizer27.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.appendAll((java.lang.Object[]) strArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder23.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray38 = strTokenizer37.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.appendAll((java.lang.Object[]) strArray38);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder23.appendln(strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst("", "");
        char[] charArray52 = strBuilder48.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.appendln(charArray52);
        boolean boolean54 = strBuilder23.equals((java.lang.Object) strBuilder47);
        boolean boolean55 = strList14.remove((java.lang.Object) strBuilder23);
        java.lang.Object[] objArray56 = strList14.toArray();
        java.util.stream.Stream<java.lang.String> strStream57 = strList14.parallelStream();
        int int58 = strList14.size();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strSpliterator17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\n32.0" + "'", str20, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[]");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[, , {}]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[, , {}]");
        org.junit.Assert.assertNotNull(strStream57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 3 + "'", int58 == 3);
    }

    @Test
    public void test9264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9264");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        boolean boolean9 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.clear();
        int int12 = strBuilder11.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader20 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendln(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray27 = strTokenizer26.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.appendAll((java.lang.Object[]) strArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append((double) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln('#');
        java.lang.StringBuffer stringBuffer37 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.append(stringBuffer37, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder34.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder34.appendSeparator("4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder34.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder28.append((java.lang.CharSequence) strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.setNewLineText("java.io.IOException: 100.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder11.appendln((java.lang.Object) "java.io.IOException: 100.0\n");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
    }

    @Test
    public void test9265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9265");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        java.lang.String str2 = strTokenizer1.next();
        boolean boolean3 = strTokenizer1.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer1.getIgnoredMatcher();
        int int5 = strTokenizer1.size();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "StrTokenizer[]" + "'", str2, "StrTokenizer[]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    }

    @Test
    public void test9266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9266");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        java.lang.StringBuffer stringBuffer10 = strBuilder9.toStringBuffer();
        char[] charArray15 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, ' ');
        int int18 = strTokenizer17.size();
        boolean boolean19 = strTokenizer17.hasNext();
        java.util.List<java.lang.String> strList20 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("", "");
        char[] charArray25 = strBuilder21.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray25);
        boolean boolean29 = strList20.equals((java.lang.Object) charArray25);
        char[] charArray34 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, ' ');
        int int37 = strTokenizer36.size();
        boolean boolean38 = strTokenizer36.hasNext();
        java.util.List<java.lang.String> strList39 = strTokenizer36.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        int int41 = strBuilder40.capacity();
        java.lang.StringBuffer stringBuffer42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(stringBuffer42, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder40.insert(1, (double) 32);
        java.lang.String str50 = strBuilder40.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder40.insert(1, '#');
        boolean boolean54 = strList39.equals((java.lang.Object) strBuilder40);
        boolean boolean55 = strList20.containsAll((java.util.Collection<java.lang.String>) strList39);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder9.appendAll((java.lang.Iterable<java.lang.String>) strList39);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int59 = strList39.lastIndexOf((java.lang.Object) "hi!");
        java.util.Iterator<java.lang.String> strItor60 = strList39.iterator();
        java.util.Collection<java.lang.String> strCollection61 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean62 = strList39.retainAll(strCollection61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(stringBuffer10);
        org.junit.Assert.assertEquals(stringBuffer10.toString(), "");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 32 + "'", int41 == 32);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "\n32.0" + "'", str50, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strItor60);
    }

    @Test
    public void test9267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9267");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.appendSeparator("StrTokenizer[]", "java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.append(false);
        java.lang.String str13 = strBuilder10.midString(0, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append((double) (byte) 100);
        java.lang.String str16 = strBuilder15.getNewLineText();
        java.lang.String str19 = strBuilder15.midString(34, 86);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test9268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9268");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst('a', '4');
        java.io.Writer writer30 = strBuilder29.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst("", "");
        char[] charArray42 = strBuilder38.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder37.appendln(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray42);
        writer30.write(charArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder22.append(charArray42);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charMatcher('#');
        int int50 = strBuilder22.indexOf(strMatcher48, 0);
        int int52 = strBuilder22.indexOf("1");
        java.util.Properties properties53 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder62.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        int int65 = strBuilder64.capacity();
        java.lang.StringBuffer stringBuffer66 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder64.appendln(stringBuffer66, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int71 = strBuilder69.lastIndexOf(strMatcher70);
        boolean boolean72 = strBuilder62.equalsIgnoreCase(strBuilder69);
        char[] charArray75 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray75);
        boolean boolean77 = properties53.replace((java.lang.Object) strBuilder59, (java.lang.Object) strBuilder62, (java.lang.Object) strTokenizer76);
        int int80 = strBuilder62.lastIndexOf("4#4", (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strBuilder62.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder22.appendFixedWidthPadLeft((java.lang.Object) strBuilder62, 43, 'a');
        int int86 = strBuilder84.indexOf('4');
        int int89 = strBuilder84.lastIndexOf('t', 43);
        java.util.stream.IntStream intStream90 = strBuilder84.chars();
        int int93 = strBuilder84.indexOf("-1", 15);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(writer30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[]");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 32 + "'", int65 == 32);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertNotNull(intStream90);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
    }

    @Test
    public void test9269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9269");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.util.Set<java.lang.Object> objSet25 = properties0.keySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.append('a');
        int int34 = strBuilder27.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        int int36 = strBuilder35.capacity();
        java.lang.StringBuffer stringBuffer37 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.appendln(stringBuffer37, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder35.insert(1, (double) 32);
        boolean boolean44 = strBuilder35.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder35.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder35.clear();
        int int47 = strBuilder46.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder27.append(strBuilder46);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder51.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.setNullText("");
        java.lang.Object obj55 = properties0.getOrDefault((java.lang.Object) strBuilder46, (java.lang.Object) strBuilder52);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.replaceFirst("", "");
        char[] charArray63 = strBuilder59.toCharArray();
        char[] charArray64 = strBuilder56.getChars(charArray63);
        java.io.Reader reader65 = strBuilder56.asReader();
        boolean boolean66 = strBuilder56.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteFirst("");
        int int71 = strBuilder67.indexOf("");
        int int74 = strBuilder67.lastIndexOf('#', (int) (byte) 0);
        boolean boolean76 = strBuilder67.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder67.appendAll((java.util.Iterator<java.lang.String>) strTokenizer77);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder67.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder67.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder67.appendln((int) (byte) 100);
        char[] charArray85 = strBuilder67.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray85, '#');
        char[] charArray88 = strBuilder56.getChars(charArray85);
        java.lang.Object obj89 = properties0.remove((java.lang.Object) charArray85);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer(charArray85, 'a');
        java.util.List<java.lang.String> strList92 = strTokenizer91.getTokenList();
        int int93 = strTokenizer91.nextIndex();
        int int94 = strTokenizer91.nextIndex();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 32 + "'", int36 == 32);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 32 + "'", int47 == 32);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "");
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[]");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[]");
        org.junit.Assert.assertNotNull(reader65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "0.0100\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "0.0100\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[0, ., 0, 1, 0, 0, \n]");
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "0.0100\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "0.0100\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[0, ., 0, 1, 0, 0, \n]");
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertNotNull(strList92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
    }

    @Test
    public void test9270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9270");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("org.apache.commons.lang3.text.StrLookup$MapStrLo", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setIgnoredChar('E');
        org.junit.Assert.assertNotNull(strTokenizer4);
    }

    @Test
    public void test9271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9271");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet2 = properties0.entrySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.appendln('#');
        java.lang.StringBuffer stringBuffer9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.append(stringBuffer9, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.deleteFirst("hi!");
        char[] charArray15 = strBuilder6.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder6.setNewLineText("java.io.IOException: hi!");
        java.io.Reader reader18 = strBuilder6.asReader();
        properties0.load(reader18);
        int int20 = reader18.read();
        org.junit.Assert.assertNotNull(objEntrySet2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, \n]");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    }

    @Test
    public void test9272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9272");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        java.lang.StringBuffer stringBuffer10 = strBuilder9.toStringBuffer();
        char[] charArray15 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, ' ');
        int int18 = strTokenizer17.size();
        boolean boolean19 = strTokenizer17.hasNext();
        java.util.List<java.lang.String> strList20 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("", "");
        char[] charArray25 = strBuilder21.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray25);
        boolean boolean29 = strList20.equals((java.lang.Object) charArray25);
        char[] charArray34 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, ' ');
        int int37 = strTokenizer36.size();
        boolean boolean38 = strTokenizer36.hasNext();
        java.util.List<java.lang.String> strList39 = strTokenizer36.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        int int41 = strBuilder40.capacity();
        java.lang.StringBuffer stringBuffer42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(stringBuffer42, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder40.insert(1, (double) 32);
        java.lang.String str50 = strBuilder40.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder40.insert(1, '#');
        boolean boolean54 = strList39.equals((java.lang.Object) strBuilder40);
        boolean boolean55 = strList20.containsAll((java.util.Collection<java.lang.String>) strList39);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder9.appendAll((java.lang.Iterable<java.lang.String>) strList39);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int59 = strList39.lastIndexOf((java.lang.Object) "hi!");
        java.util.Iterator<java.lang.String> strItor60 = strList39.iterator();
        java.lang.Object[] objArray61 = strList39.toArray();
        int int62 = strList39.size();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(stringBuffer10);
        org.junit.Assert.assertEquals(stringBuffer10.toString(), "");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 32 + "'", int41 == 32);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "\n32.0" + "'", str50, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strItor60);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[4#4]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[4#4]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
    }

    @Test
    public void test9273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9273");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        int int2 = strBuilder1.capacity();
        java.lang.StringBuffer stringBuffer3 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendln(stringBuffer3, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.appendln(true);
        boolean boolean13 = strSubstitutor0.replaceIn(strBuilder10, (int) '$', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        int int15 = strBuilder14.capacity();
        java.lang.StringBuffer stringBuffer16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendln(stringBuffer16, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int21 = strBuilder19.lastIndexOf(strMatcher20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.insert((int) (short) 1, 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteAll("java.io.IOException: hi!");
        boolean boolean27 = strSubstitutor0.replaceIn(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        int int29 = strBuilder28.capacity();
        java.lang.StringBuffer stringBuffer30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendln(stringBuffer30, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder28.insert(1, (double) 32);
        java.util.Properties properties37 = new java.util.Properties();
        int int38 = properties37.size();
        boolean boolean40 = properties37.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst("", "");
        char[] charArray45 = strBuilder41.toCharArray();
        boolean boolean46 = properties37.containsValue((java.lang.Object) charArray45);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder28.append(charArray45, (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder28.delete(1, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder55.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder61.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.setNullText("");
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder62.replaceAll(strMatcher66, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder58.replaceFirst(strMatcher66, "########a4\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder28.replaceAll(strMatcher66, "java.io.IOException: hi!false");
        int int73 = strBuilder24.indexOf(strMatcher66);
        boolean boolean75 = strBuilder24.contains('e');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder78.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder81.appendln('#');
        java.lang.StringBuffer stringBuffer84 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder81.append(stringBuffer84, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder81.deleteFirst("hi!");
        char[] charArray90 = strBuilder81.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer77.reset(charArray90);
        java.lang.String str92 = strTokenizer77.next();
        java.util.List<java.lang.String> strList93 = strTokenizer77.getTokenList();
        strList93.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder24.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList93, "\000");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 32 + "'", int2 == 32);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 32 + "'", int15 == 32);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 32 + "'", int29 == 32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray90), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray90), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray90), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "#" + "'", str92, "#");
        org.junit.Assert.assertNotNull(strList93);
        org.junit.Assert.assertNotNull(strBuilder96);
    }

    @Test
    public void test9274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9274");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((int) (short) 1);
        java.util.stream.IntStream intStream14 = strBuilder10.codePoints();
        java.io.Writer writer15 = strBuilder10.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder10.appendln("");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(intStream14);
        org.junit.Assert.assertNotNull(writer15);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test9275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9275");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        boolean boolean25 = properties0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst('a', '4');
        char[] charArray37 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, ' ');
        int int40 = strTokenizer39.size();
        boolean boolean41 = strTokenizer39.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer39.setIgnoredMatcher(strMatcher42);
        int int45 = strBuilder29.indexOf(strMatcher42, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder29.deleteFirst("StrTokenizer[32.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        int int49 = strBuilder48.capacity();
        java.lang.StringBuffer stringBuffer50 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.appendln(stringBuffer50, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder53.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder66.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.appendln((double) '#');
        boolean boolean70 = strBuilder60.equals(strBuilder69);
        java.util.stream.IntStream intStream71 = strBuilder60.codePoints();
        java.util.Iterator<java.lang.String> strItor72 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder60.appendWithSeparators(strItor72, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.replaceFirst(' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder54.appendln(strBuilder74, 0, (int) (byte) 1);
        java.lang.Object obj81 = properties0.putIfAbsent((java.lang.Object) strBuilder47, (java.lang.Object) strBuilder80);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder47.replaceFirst('4', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder47.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder47.appendln(true);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder47.append("#\n\n32.032.05.0", 17, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 32 + "'", int49 == 32);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(intStream71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
    }

    @Test
    public void test9276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9276");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        char[] charArray14 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, ' ');
        int int17 = strTokenizer16.size();
        boolean boolean18 = strTokenizer16.hasNext();
        java.util.List<java.lang.String> strList19 = strTokenizer16.getTokenList();
        java.lang.String[] strArray23 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        boolean boolean26 = strList19.addAll((java.util.Collection<java.lang.String>) strList24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder0.appendAll((java.lang.Iterable<java.lang.String>) strList24);
        java.lang.Object[] objArray28 = strList24.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator29 = strList24.spliterator();
        java.util.Iterator<java.lang.String> strItor30 = strList24.iterator();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[\n32.0, , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[\n32.0, , ]");
        org.junit.Assert.assertNotNull(strSpliterator29);
        org.junit.Assert.assertNotNull(strItor30);
    }

    @Test
    public void test9277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9277");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("########", "1001\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setIgnoreEmptyTokens(false);
        org.junit.Assert.assertNotNull(strTokenizer4);
    }

    @Test
    public void test9278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9278");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder0.indexOf("");
        int int7 = strBuilder0.lastIndexOf('#', (int) (byte) 0);
        java.io.Reader reader8 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.appendSeparator("java.io.IOException: java.io.IOException", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceAll('{', '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        int int19 = strBuilder18.capacity();
        java.lang.StringBuffer stringBuffer20 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.appendln(stringBuffer20, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.insert(1, (double) 32);
        boolean boolean27 = strBuilder18.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder18.appendSeparator('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray36 = strTokenizer35.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder31.appendAll((java.lang.Object[]) strArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder31.replaceFirst('a', 'a');
        java.lang.StringBuffer stringBuffer41 = strBuilder40.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder18.append(stringBuffer41);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst("", "");
        char[] charArray57 = strBuilder53.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder52.appendln(charArray57);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder43.replaceFirst(strMatcher59, "StrTokenizer[]");
        boolean boolean62 = strBuilder18.equalsIgnoreCase(strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder14.append(strBuilder43);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str66 = strBuilder14.substring(71, 104);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(reader8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(stringBuffer41);
        org.junit.Assert.assertEquals(stringBuffer41.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[]");
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strBuilder63);
    }

    @Test
    public void test9279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9279");
        char[] charArray2 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        java.lang.String str6 = strTokenizer5.next();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "a4" + "'", str6, "a4");
    }

    @Test
    public void test9280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9280");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        int int16 = properties0.size();
        java.util.Properties properties17 = new java.util.Properties();
        int int18 = properties17.size();
        boolean boolean20 = properties17.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties21 = new java.util.Properties();
        int int22 = properties21.size();
        boolean boolean24 = properties21.containsKey((java.lang.Object) (-1.0f));
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.util.Set<java.lang.Object> objSet26 = properties21.keySet();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.util.Properties properties28 = new java.util.Properties();
        int int29 = properties28.size();
        boolean boolean31 = properties28.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties32 = new java.util.Properties();
        int int33 = properties32.size();
        boolean boolean35 = properties32.containsKey((java.lang.Object) (-1.0f));
        properties28.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties32);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst("", "");
        char[] charArray44 = strBuilder40.toCharArray();
        char[] charArray45 = strBuilder37.getChars(charArray44);
        java.io.Reader reader46 = strBuilder37.asReader();
        java.lang.Object obj47 = properties28.remove((java.lang.Object) strBuilder37);
        java.io.Writer writer48 = strBuilder37.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder37.appendSeparator("[4#4]", "java.io.IOException: java.io.IOException: \n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder37.appendln((long) 35);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst("", "");
        char[] charArray58 = strBuilder54.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, "");
        boolean boolean61 = strTokenizer60.hasNext();
        int int62 = strTokenizer60.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer60.setEmptyTokenAsNull(true);
        boolean boolean65 = strTokenizer64.hasNext();
        java.lang.Object obj66 = properties0.putIfAbsent((java.lang.Object) strBuilder53, (java.lang.Object) strTokenizer64);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder53.deleteAll(' ');
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[]");
        org.junit.Assert.assertNotNull(reader46);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(writer48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(strBuilder68);
    }

    @Test
    public void test9281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9281");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        int int11 = strBuilder7.indexOf("");
        int int14 = strBuilder7.lastIndexOf('#', (int) (byte) 0);
        boolean boolean16 = strBuilder7.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder7.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        boolean boolean19 = strTokenizer17.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer17.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst("", "");
        char[] charArray35 = strBuilder31.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.appendln(charArray35);
        int int40 = strMatcher23.isMatch(charArray35, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer21.setTrimmerMatcher(strMatcher23);
        boolean boolean42 = strTokenizer41.hasNext();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray49 = strTokenizer48.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder44.appendAll((java.lang.Object[]) strArray49);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder44.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream54 = strBuilder44.codePoints();
        java.lang.String str55 = strBuilder44.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder44.appendFixedWidthPadRight((int) (short) 10, 5, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder43.appendln(strBuilder59);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.appendln('{');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder59.appendln(64);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[]");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(intStream54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
    }

    @Test
    public void test9282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9282");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.insert((int) (short) 1, (double) 0L);
        java.io.Reader reader14 = strBuilder13.asReader();
        int int15 = reader14.read();
        reader14.close();
        boolean boolean17 = reader14.ready();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test9283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9283");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.util.Set<java.lang.Object> objSet25 = properties0.keySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.append('a');
        int int34 = strBuilder27.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        int int36 = strBuilder35.capacity();
        java.lang.StringBuffer stringBuffer37 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.appendln(stringBuffer37, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder35.insert(1, (double) 32);
        boolean boolean44 = strBuilder35.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder35.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder35.clear();
        int int47 = strBuilder46.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder27.append(strBuilder46);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder51.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.setNullText("");
        java.lang.Object obj55 = properties0.getOrDefault((java.lang.Object) strBuilder46, (java.lang.Object) strBuilder52);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.replaceFirst("", "");
        char[] charArray63 = strBuilder59.toCharArray();
        char[] charArray64 = strBuilder56.getChars(charArray63);
        java.io.Reader reader65 = strBuilder56.asReader();
        boolean boolean66 = strBuilder56.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteFirst("");
        int int71 = strBuilder67.indexOf("");
        int int74 = strBuilder67.lastIndexOf('#', (int) (byte) 0);
        boolean boolean76 = strBuilder67.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder67.appendAll((java.util.Iterator<java.lang.String>) strTokenizer77);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder67.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder67.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder67.appendln((int) (byte) 100);
        char[] charArray85 = strBuilder67.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray85, '#');
        char[] charArray88 = strBuilder56.getChars(charArray85);
        java.lang.Object obj89 = properties0.remove((java.lang.Object) charArray85);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer(charArray85, 's');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 32 + "'", int36 == 32);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 32 + "'", int47 == 32);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "");
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[]");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[]");
        org.junit.Assert.assertNotNull(reader65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "0.0100\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "0.0100\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[0, ., 0, 1, 0, 0, \n]");
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "0.0100\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "0.0100\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[0, ., 0, 1, 0, 0, \n]");
        org.junit.Assert.assertNull(obj89);
    }

    @Test
    public void test9284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9284");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.appendPadding(10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer14, "h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer14.reset("\n32.0");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer14.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder8.appendFixedWidthPadRight((java.lang.Object) strTokenizer14, 4, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        int int25 = strBuilder24.capacity();
        java.lang.StringBuffer stringBuffer26 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(stringBuffer26, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder24.setLength(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder34.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.append('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray46 = strTokenizer45.getTokenArray();
        java.lang.String[] strArray47 = strTokenizer45.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.appendWithSeparators((java.lang.Object[]) strArray47, "4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteAll(strMatcher50);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.deleteAll('4');
        int int62 = strBuilder60.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst("", "");
        char[] charArray67 = strBuilder63.toCharArray();
        char[] charArray68 = strBuilder60.getChars(charArray67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray67);
        char[] charArray70 = strBuilder54.getChars(charArray67);
        char[] charArray71 = strBuilder37.getChars(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer14.reset(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, 'a', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer1.reset(charArray70);
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = strTokenizer76.getQuoteMatcher();
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 32 + "'", int25 == 32);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[]");
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "32.01#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "32.01#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[3, 2, ., 0, 1, #]");
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strMatcher77);
    }

    @Test
    public void test9285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9285");
        java.io.IOException iOException1 = new java.io.IOException();
        java.lang.Throwable[] throwableArray2 = iOException1.getSuppressed();
        java.lang.Throwable[] throwableArray3 = iOException1.getSuppressed();
        java.io.IOException iOException4 = new java.io.IOException("########", (java.lang.Throwable) iOException1);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.lang.Throwable[] throwableArray6 = iOException1.getSuppressed();
        java.util.Properties properties9 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray16 = strTokenizer15.getTokenArray();
        java.lang.String[] strArray17 = strTokenizer15.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.appendWithSeparators((java.lang.Object[]) strArray17, "4#4");
        char[] charArray22 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray22);
        java.lang.Object obj24 = properties9.getOrDefault((java.lang.Object) strBuilder13, (java.lang.Object) strTokenizer23);
        int int25 = properties9.size();
        int int26 = properties9.size();
        java.io.IOException iOException27 = new java.io.IOException();
        java.lang.Throwable[] throwableArray28 = iOException27.getSuppressed();
        boolean boolean29 = properties9.equals((java.lang.Object) iOException27);
        java.io.IOException iOException30 = new java.io.IOException((java.lang.Throwable) iOException27);
        java.io.IOException iOException31 = new java.io.IOException("h", (java.lang.Throwable) iOException27);
        java.io.IOException iOException33 = new java.io.IOException();
        java.lang.Throwable[] throwableArray34 = iOException33.getSuppressed();
        java.lang.Throwable[] throwableArray35 = iOException33.getSuppressed();
        java.io.IOException iOException36 = new java.io.IOException("########", (java.lang.Throwable) iOException33);
        java.io.IOException iOException37 = new java.io.IOException((java.lang.Throwable) iOException33);
        iOException27.addSuppressed((java.lang.Throwable) iOException37);
        java.io.IOException iOException40 = new java.io.IOException("java.io.IOException: hi!false");
        iOException37.addSuppressed((java.lang.Throwable) iOException40);
        java.io.IOException iOException42 = new java.io.IOException("rg.apache.commons.lang3.text.StrLo", (java.lang.Throwable) iOException40);
        iOException1.addSuppressed((java.lang.Throwable) iOException42);
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray35);
    }

    @Test
    public void test9286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9286");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((double) '#');
        boolean boolean15 = strBuilder5.equals(strBuilder14);
        java.util.stream.IntStream intStream16 = strBuilder5.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder5.minimizeCapacity();
        java.lang.String str19 = strBuilder17.rightString(3);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.appendFixedWidthPadRight(47, 50, '\000');
        java.lang.String str26 = strBuilder23.midString(10, 43);
        char[] charArray27 = strBuilder23.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, 't');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer29.add("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$1");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "###" + "'", str19, "###");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "##############################47\000\000\000\000\000\000\000\000\000\000\000" + "'", str26, "##############################47\000\000\000\000\000\000\000\000\000\000\000");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "true\n###################################47\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "true\n###################################47\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[t, r, u, e, \n, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, 4, 7, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000]");
    }

    @Test
    public void test9287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9287");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        int int16 = properties0.size();
        int int17 = properties0.size();
        java.util.Set<java.lang.String> strSet18 = properties0.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        int int20 = strBuilder19.capacity();
        java.lang.StringBuffer stringBuffer21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.appendln(stringBuffer21, (int) '#', (int) (byte) 0);
        java.util.stream.IntStream intStream25 = strBuilder19.codePoints();
        boolean boolean26 = properties0.containsKey((java.lang.Object) strBuilder19);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.append(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder19.replaceAll("100.0", "StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder19.appendNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strBuilder32.asTokenizer();
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 32 + "'", int20 == 32);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(intStream25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strTokenizer33);
    }

    @Test
    public void test9288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9288");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("E", 'E', 't');
    }

    @Test
    public void test9289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9289");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.lang.String str10 = properties4.getProperty("h");
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray17 = strTokenizer16.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendAll((java.lang.Object[]) strArray17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder12.replaceFirst('a', 'a');
        char[] charArray26 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ');
        int int29 = strTokenizer28.size();
        boolean boolean30 = strTokenizer28.hasNext();
        java.util.List<java.lang.String> strList31 = strTokenizer28.getTokenList();
        java.lang.String[] strArray35 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        boolean boolean38 = strList31.addAll((java.util.Collection<java.lang.String>) strList36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder12.appendAll((java.lang.Iterable<java.lang.String>) strList36);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor40 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        int int42 = strBuilder41.capacity();
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendln(stringBuffer43, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln(true);
        boolean boolean53 = strSubstitutor40.replaceIn(strBuilder50, (int) '$', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder12.append((java.lang.CharSequence) strBuilder50);
        boolean boolean55 = properties4.equals((java.lang.Object) strBuilder12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer58.reset("{\ntrue\n=1.0}");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer60.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder12.replaceAll(strMatcher61, "{");
        java.io.IOException iOException66 = new java.io.IOException();
        java.lang.Throwable[] throwableArray67 = iOException66.getSuppressed();
        java.lang.Throwable[] throwableArray68 = iOException66.getSuppressed();
        java.io.IOException iOException69 = new java.io.IOException("########", (java.lang.Throwable) iOException66);
        java.io.IOException iOException70 = new java.io.IOException((java.lang.Throwable) iOException66);
        java.lang.Throwable[] throwableArray71 = iOException66.getSuppressed();
        java.io.IOException iOException72 = new java.io.IOException(" #\n", (java.lang.Throwable) iOException66);
        java.lang.Throwable[] throwableArray73 = iOException66.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder12.appendAll((java.lang.Object[]) throwableArray73);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 32 + "'", int42 == 32);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(throwableArray67);
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertNotNull(throwableArray71);
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(strBuilder74);
    }

    @Test
    public void test9290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9290");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        int int16 = properties0.size();
        java.util.Properties properties17 = new java.util.Properties();
        int int18 = properties17.size();
        boolean boolean20 = properties17.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties21 = new java.util.Properties();
        int int22 = properties21.size();
        boolean boolean24 = properties21.containsKey((java.lang.Object) (-1.0f));
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.util.Set<java.lang.Object> objSet26 = properties21.keySet();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties21.elements();
        java.util.Collection<java.lang.Object> objCollection29 = properties21.values();
        java.io.InputStream inputStream30 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties21.load(inputStream30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNotNull(objCollection29);
    }

    @Test
    public void test9291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9291");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendln((long) 'a');
        java.lang.String str20 = strBuilder16.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendln((long) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln((float) 26);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendSeparator('1', 's');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("\n0\n", "-1");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "97\n" + "'", str20, "97\n");
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
    }

    @Test
    public void test9292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9292");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        java.util.Set<java.lang.String> strSet3 = properties1.stringPropertyNames();
        java.util.Collection<java.lang.Object> objCollection4 = properties1.values();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(objCollection4);
    }

    @Test
    public void test9293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9293");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendSeparator("{}");
        java.io.Writer writer8 = strBuilder5.asWriter();
        writer8.close();
        writer8.write("0.0true");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst("", "");
        char[] charArray23 = strBuilder19.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.appendln(charArray23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.setNewLineText("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendln((float) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.appendFixedWidthPadLeft((int) (short) -1, (int) ' ', ' ');
        java.io.Writer writer33 = writer8.append((java.lang.CharSequence) strBuilder24);
        java.io.Writer writer35 = writer33.append('\000');
        writer35.write(17);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(writer8);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(writer33);
        org.junit.Assert.assertNotNull(writer35);
    }

    @Test
    public void test9294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9294");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((double) '#');
        boolean boolean15 = strBuilder5.equals(strBuilder14);
        java.util.stream.IntStream intStream16 = strBuilder5.codePoints();
        java.util.Iterator<java.lang.String> strItor17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder5.appendWithSeparators(strItor17, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst(' ', ' ');
        java.io.Writer writer23 = strBuilder22.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln((double) '#');
        boolean boolean39 = strBuilder29.equals(strBuilder38);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.appendSeparator('4', '#');
        char[] charArray48 = new char[] { ' ', '4', '#', '#', ' ' };
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder38.append(charArray48, (int) (byte) 0, (int) (byte) 0);
        writer23.write(charArray48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, ' ', '$');
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer56.getIgnoredMatcher();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(writer23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), " 4## ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), " 4## ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[ , 4, #, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher57);
    }

    @Test
    public void test9295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9295");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray3 = strTokenizer2.getTokenArray();
        java.lang.String[] strArray4 = strTokenizer2.getTokenArray();
        boolean boolean5 = strTokenizer2.hasNext();
        int int6 = strTokenizer2.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer2.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("h", strMatcher7);
        java.util.List<java.lang.String> strList9 = strTokenizer8.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer8.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer8.setIgnoredChar('4');
        java.lang.String str13 = strTokenizer8.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer8.getQuoteMatcher();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "h" + "'", str13, "h");
        org.junit.Assert.assertNotNull(strMatcher14);
    }

    @Test
    public void test9296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9296");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.util.Spliterator<java.lang.String> strSpliterator17 = strList14.spliterator();
        int int18 = strList14.size();
        java.lang.String str20 = strList14.remove((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray26 = strTokenizer25.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder21.appendAll((java.lang.Object[]) strArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder21.replaceFirst('a', 'a');
        char[] charArray35 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        int int38 = strTokenizer37.size();
        boolean boolean39 = strTokenizer37.hasNext();
        java.util.List<java.lang.String> strList40 = strTokenizer37.getTokenList();
        java.lang.String[] strArray44 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        boolean boolean47 = strList40.addAll((java.util.Collection<java.lang.String>) strList45);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder21.appendAll((java.lang.Iterable<java.lang.String>) strList45);
        boolean boolean49 = strList14.containsAll((java.util.Collection<java.lang.String>) strList45);
        java.util.ListIterator<java.lang.String> strItor50 = strList45.listIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str53 = strList45.set(39, "eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 39, Size: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strSpliterator17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\n32.0" + "'", str20, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strItor50);
    }

    @Test
    public void test9297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9297");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst("", "");
        boolean boolean9 = strBuilder7.endsWith("StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.appendln('#');
        java.lang.StringBuffer stringBuffer18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.append(stringBuffer18, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder15.deleteFirst("hi!");
        char[] charArray24 = strBuilder15.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer11.reset(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray24);
        char[] charArray27 = strBuilder7.getChars(charArray24);
        java.lang.Object obj28 = properties0.remove((java.lang.Object) charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, "#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, "1\n");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, \n]");
        org.junit.Assert.assertNull(obj28);
    }

    @Test
    public void test9298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9298");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet4 = properties0.entrySet();
        java.lang.Object obj5 = properties0.clone();
        java.lang.Object obj8 = properties0.setProperty("1\n #", "#\nfalse\n");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objEntrySet4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "{}");
        org.junit.Assert.assertNull(obj8);
    }

    @Test
    public void test9299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9299");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        java.lang.String[] strArray7 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendWithSeparators((java.lang.Object[]) strArray7, "4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteAll(strMatcher10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.appendSeparator("\n0\n");
        java.io.IOException iOException18 = new java.io.IOException("\n");
        java.lang.Throwable[] throwableArray19 = iOException18.getSuppressed();
        java.io.IOException iOException20 = new java.io.IOException((java.lang.Throwable) iOException18);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.appendFixedWidthPadRight((java.lang.Object) iOException18, 178, ' ');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(strBuilder23);
    }

    @Test
    public void test9300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9300");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        int int12 = strBuilder11.capacity();
        java.lang.StringBuffer stringBuffer13 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(stringBuffer13, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int18 = strBuilder16.lastIndexOf(strMatcher17);
        boolean boolean19 = strBuilder9.equalsIgnoreCase(strBuilder16);
        char[] charArray22 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray22);
        boolean boolean24 = properties0.replace((java.lang.Object) strBuilder6, (java.lang.Object) strBuilder9, (java.lang.Object) strTokenizer23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder9.deleteAll("StrTokenizer[]");
        int int28 = strBuilder26.lastIndexOf('#');
        char[] charArray33 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, ' ');
        int int36 = strTokenizer35.size();
        boolean boolean37 = strTokenizer35.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer35.setIgnoredMatcher(strMatcher38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder26.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder26.appendSeparator('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder26.appendFixedWidthPadLeft((int) 's', (int) '#', 'e');
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder47);
    }

    @Test
    public void test9301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9301");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        char[] charArray14 = strBuilder10.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        boolean boolean18 = strList9.equals((java.lang.Object) charArray14);
        char[] charArray23 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, ' ');
        int int26 = strTokenizer25.size();
        boolean boolean27 = strTokenizer25.hasNext();
        java.util.List<java.lang.String> strList28 = strTokenizer25.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        int int30 = strBuilder29.capacity();
        java.lang.StringBuffer stringBuffer31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(stringBuffer31, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder29.insert(1, (double) 32);
        java.lang.String str39 = strBuilder29.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder29.insert(1, '#');
        boolean boolean43 = strList28.equals((java.lang.Object) strBuilder29);
        boolean boolean44 = strList9.containsAll((java.util.Collection<java.lang.String>) strList28);
        java.lang.String str46 = strList9.remove((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor48 = strList9.listIterator(0);
        java.util.stream.Stream<java.lang.String> strStream49 = strList9.parallelStream();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 32 + "'", int30 == 32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\n32.0" + "'", str39, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "4#4" + "'", str46, "4#4");
        org.junit.Assert.assertNotNull(strItor48);
        org.junit.Assert.assertNotNull(strStream49);
    }

    @Test
    public void test9302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9302");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = strTokenizer1.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.reset();
        boolean boolean4 = strTokenizer1.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = strTokenizer1.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test9303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9303");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        java.lang.String[] strArray7 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendWithSeparators((java.lang.Object[]) strArray7, "4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteAll(strMatcher10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray20 = strTokenizer19.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.appendAll((java.lang.Object[]) strArray20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder15.replaceFirst('a', 'a');
        char[] charArray29 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, ' ');
        int int32 = strTokenizer31.size();
        boolean boolean33 = strTokenizer31.hasNext();
        java.util.List<java.lang.String> strList34 = strTokenizer31.getTokenList();
        java.lang.String[] strArray38 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        boolean boolean41 = strList34.addAll((java.util.Collection<java.lang.String>) strList39);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder15.appendAll((java.lang.Iterable<java.lang.String>) strList39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder9.appendAll((java.lang.Iterable<java.lang.String>) strList39);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.append(10.0d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.insert(98, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 98");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
    }

    @Test
    public void test9304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9304");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder5.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.appendln((double) '#');
        boolean boolean22 = strBuilder12.equals(strBuilder21);
        java.util.stream.IntStream intStream23 = strBuilder12.codePoints();
        java.util.Iterator<java.lang.String> strItor24 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder12.appendWithSeparators(strItor24, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder6.appendln(strBuilder26, 0, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder32.appendNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer();
        java.lang.String[] strArray35 = strTokenizer34.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.appendAll((java.lang.Object[]) strArray35);
        java.util.Properties properties37 = new java.util.Properties();
        java.util.Properties properties38 = new java.util.Properties(properties37);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst('a', '4');
        java.io.Writer writer46 = strBuilder45.asWriter();
        properties38.store(writer46, "");
        java.util.Collection<java.lang.Object> objCollection49 = properties38.values();
        java.util.Properties properties50 = new java.util.Properties(properties38);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        int int52 = strBuilder51.capacity();
        java.lang.StringBuffer stringBuffer53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder51.appendln(stringBuffer53, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder51.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder51.setLength(32);
        java.io.Writer writer62 = strBuilder61.asWriter();
        writer62.write(" 4#4", (int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        int int68 = strBuilder67.capacity();
        java.lang.StringBuffer stringBuffer69 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder67.appendln(stringBuffer69, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder67.insert(1, (double) 32);
        java.lang.String str77 = strBuilder67.rightString((int) ' ');
        boolean boolean79 = strBuilder67.startsWith("");
        char[] charArray80 = strBuilder67.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray80);
        writer62.write(charArray80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray80, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer84.setDelimiterString("10.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer84.reset();
        java.lang.Object obj88 = properties50.get((java.lang.Object) strTokenizer87);
        java.lang.String str89 = org.apache.commons.lang3.text.StrSubstitutor.replace((java.lang.Object) strArray35, properties50);
        java.io.InputStream inputStream90 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties50.load(inputStream90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(intStream23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(writer46);
        org.junit.Assert.assertNotNull(objCollection49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 32 + "'", int52 == 32);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(writer62);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 32 + "'", int68 == 32);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "\n32.0" + "'", str77, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNull(obj88);
    }

    @Test
    public void test9305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9305");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        int int16 = properties0.size();
        java.util.Set<java.lang.String> strSet17 = properties0.stringPropertyNames();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        java.lang.String str20 = strTokenizer19.next();
        boolean boolean21 = strTokenizer19.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer19.getIgnoredMatcher();
        boolean boolean23 = properties0.containsKey((java.lang.Object) strMatcher22);
        java.util.Properties properties24 = new java.util.Properties(properties0);
        java.util.Properties properties25 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray32 = strTokenizer31.getTokenArray();
        java.lang.String[] strArray33 = strTokenizer31.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder29.appendWithSeparators((java.lang.Object[]) strArray33, "4#4");
        char[] charArray38 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray38);
        java.lang.Object obj40 = properties25.getOrDefault((java.lang.Object) strBuilder29, (java.lang.Object) strTokenizer39);
        java.util.Collection<java.lang.Object> objCollection41 = properties25.values();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        int int43 = strBuilder42.capacity();
        java.lang.StringBuffer stringBuffer44 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendln(stringBuffer44, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder42.insert(1, (double) 32);
        java.lang.String str52 = strBuilder42.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder42.replaceAll("", "hi!");
        java.lang.Object obj56 = properties25.remove((java.lang.Object) "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.appendln('#');
        java.lang.StringBuffer stringBuffer63 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder60.append(stringBuffer63, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder60.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder60.appendSeparator("4#4", "\n32.0");
        java.lang.Object obj72 = properties25.remove((java.lang.Object) strBuilder71);
        java.util.Enumeration<java.lang.Object> objEnumeration73 = properties25.elements();
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        java.util.Enumeration<?> wildcardEnumeration75 = properties24.propertyNames();
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "StrTokenizer[]" + "'", str20, "StrTokenizer[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 32 + "'", int43 == 32);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "\n32.0" + "'", str52, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNotNull(objEnumeration73);
        org.junit.Assert.assertNotNull(wildcardEnumeration75);
    }

    @Test
    public void test9306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9306");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        boolean boolean2 = strTokenizer1.isIgnoreEmptyTokens();
        boolean boolean3 = strTokenizer1.isIgnoreEmptyTokens();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test9307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9307");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendAll((java.lang.Object[]) strArray6);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.ensureCapacity((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst("", "");
        java.lang.String str18 = strBuilder14.getNewLineText();
        java.util.stream.IntStream intStream19 = strBuilder14.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.append((java.lang.CharSequence) strBuilder14);
        char[] charArray23 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        int int28 = strBuilder27.capacity();
        java.lang.StringBuffer stringBuffer29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.appendln(stringBuffer29, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder27.insert(1, (double) 32);
        java.lang.String str37 = strBuilder27.rightString((int) ' ');
        boolean boolean39 = strBuilder27.startsWith("");
        char[] charArray40 = strBuilder27.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer26.setDelimiterMatcher(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder11.deleteFirst(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder0.appendln((java.lang.Object) strBuilder11);
        boolean boolean46 = strBuilder0.contains('e');
        java.lang.String str49 = strBuilder0.substring(0, (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder0.append((float) 50);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(intStream19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 32 + "'", int28 == 32);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "\n32.0" + "'", str37, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "\n" + "'", str49, "\n");
        org.junit.Assert.assertNotNull(strBuilder51);
    }

    @Test
    public void test9308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9308");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        char[] charArray4 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer7.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        int int11 = strBuilder10.capacity();
        java.lang.StringBuffer stringBuffer12 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(stringBuffer12, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder10.insert(1, (double) 32);
        java.lang.String str20 = strBuilder10.rightString((int) ' ');
        boolean boolean22 = strBuilder10.startsWith("");
        char[] charArray23 = strBuilder10.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer7.setQuoteMatcher(strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer7.setDelimiterString("100.0\n");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer7.set("\n0.032.0\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000StrTokenizer[not tokenized yet]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 32 + "'", int11 == 32);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\n32.0" + "'", str20, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer27);
    }

    @Test
    public void test9309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9309");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        properties1.clear();
        org.junit.Assert.assertNotNull(objEnumeration2);
    }

    @Test
    public void test9310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9310");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.util.Spliterator<java.lang.String> strSpliterator17 = strList14.spliterator();
        int int18 = strList14.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int22 = strList14.lastIndexOf((java.lang.Object) strTokenizer21);
        java.util.ListIterator<java.lang.String> strItor24 = strList14.listIterator((int) (short) 1);
        char[] charArray29 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, ' ');
        int int32 = strTokenizer31.size();
        boolean boolean33 = strTokenizer31.hasNext();
        java.util.List<java.lang.String> strList34 = strTokenizer31.getTokenList();
        java.lang.String[] strArray38 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        boolean boolean41 = strList34.addAll((java.util.Collection<java.lang.String>) strList39);
        java.lang.String str43 = strList39.remove(0);
        char[] charArray48 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, ' ');
        int int51 = strTokenizer50.size();
        boolean boolean52 = strTokenizer50.hasNext();
        java.util.List<java.lang.String> strList53 = strTokenizer50.getTokenList();
        java.lang.String[] strArray57 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        boolean boolean60 = strList53.addAll((java.util.Collection<java.lang.String>) strList58);
        boolean boolean61 = strList39.addAll((java.util.Collection<java.lang.String>) strList58);
        java.util.stream.Stream<java.lang.String> strStream62 = strList58.parallelStream();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder65.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.append((double) 10L);
        java.lang.Object obj69 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.appendFixedWidthPadLeft(obj69, (int) (byte) -1, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.appendln("StrTokenizer[ 4#4]");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.deleteAll("\n");
        boolean boolean77 = strList58.contains((java.lang.Object) strBuilder76);
        boolean boolean78 = strList14.removeAll((java.util.Collection<java.lang.String>) strList58);
        java.util.stream.Stream<java.lang.String> strStream79 = strList58.stream();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.String> strItor81 = strList58.listIterator(117);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 117");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strSpliterator17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strItor24);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\n32.0" + "'", str43, "\n32.0");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strStream62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(strStream79);
    }

    @Test
    public void test9311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9311");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        char[] charArray16 = strBuilder12.toCharArray();
        char[] charArray17 = strBuilder9.getChars(charArray16);
        java.io.Reader reader18 = strBuilder9.asReader();
        java.lang.Object obj19 = properties0.remove((java.lang.Object) strBuilder9);
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader29 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray35 = strTokenizer34.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.appendAll((java.lang.Object[]) strArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream40 = strBuilder30.codePoints();
        java.lang.Object obj41 = properties20.replace((java.lang.Object) reader29, (java.lang.Object) intStream40);
        reader29.reset();
        properties0.load(reader29);
        java.util.Set<java.lang.Object> objSet44 = properties0.keySet();
        java.util.Collection<java.lang.Object> objCollection45 = properties0.values();
        java.util.Set<java.lang.String> strSet46 = properties0.stringPropertyNames();
        java.util.Map<java.lang.Object, java.lang.Object> objMap47 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.putAll(objMap47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(intStream40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objSet44);
        org.junit.Assert.assertNotNull(objCollection45);
        org.junit.Assert.assertNotNull(strSet46);
    }

    @Test
    public void test9312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9312");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        java.lang.String[] strArray7 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendWithSeparators((java.lang.Object[]) strArray7, "4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteAll(strMatcher10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("100.0\n", "\n32");
        java.util.Properties properties16 = new java.util.Properties();
        int int17 = properties16.size();
        boolean boolean19 = properties16.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties20 = new java.util.Properties();
        int int21 = properties20.size();
        boolean boolean23 = properties20.containsKey((java.lang.Object) (-1.0f));
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst("", "");
        char[] charArray32 = strBuilder28.toCharArray();
        char[] charArray33 = strBuilder25.getChars(charArray32);
        java.io.Reader reader34 = strBuilder25.asReader();
        java.lang.Object obj35 = properties16.remove((java.lang.Object) strBuilder25);
        java.io.Writer writer36 = strBuilder25.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder25.appendSeparator("[4#4]", "java.io.IOException: java.io.IOException: \n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder25.appendln((long) 35);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder25.appendSeparator("1\n", 35);
        int int45 = strBuilder25.size();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder14.insert(21, (java.lang.Object) strBuilder25);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 21");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[]");
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(writer36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
    }

    @Test
    public void test9313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9313");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln((int) (byte) 0);
        java.io.Writer writer8 = strBuilder7.asWriter();
        java.io.Writer writer9 = strBuilder7.asWriter();
        java.lang.String str11 = strBuilder7.rightString((int) '1');
        boolean boolean13 = strBuilder7.startsWith("1.0");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(writer8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\n0\n" + "'", str11, "\n0\n");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test9314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9314");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst('a', '4');
        java.io.Writer writer9 = strBuilder8.asWriter();
        properties1.store(writer9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        java.io.Reader reader16 = strBuilder12.asReader();
        properties1.load(reader16);
        int int18 = reader16.read();
        boolean boolean19 = reader16.markSupported();
        reader16.mark(50);
        reader16.mark((int) 'm');
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test9315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9315");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst('a', '4');
        java.io.Writer writer9 = strBuilder8.asWriter();
        properties1.store(writer9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        java.io.Reader reader16 = strBuilder12.asReader();
        properties1.load(reader16);
        java.util.Collection<java.lang.Object> objCollection18 = properties1.values();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst('a', '4');
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Properties properties27 = new java.util.Properties(properties26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst('a', '4');
        java.io.Writer writer35 = strBuilder34.asWriter();
        properties27.store(writer35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst("", "");
        java.io.Reader reader42 = strBuilder38.asReader();
        properties27.load(reader42);
        boolean boolean44 = reader42.ready();
        int int45 = reader42.read();
        java.lang.Object obj46 = properties1.getOrDefault((java.lang.Object) 'a', (java.lang.Object) int45);
        java.lang.String str48 = properties1.getProperty("");
        boolean boolean49 = properties1.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder(3);
        char[] charArray52 = strBuilder51.toCharArray();
        java.io.Writer writer53 = strBuilder51.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder51.appendln(strBuilder54, (int) 'a', 0);
        java.lang.Object obj58 = properties1.remove((java.lang.Object) 'a');
        java.lang.String str59 = properties1.toString();
        java.util.Properties properties60 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray67 = strTokenizer66.getTokenArray();
        java.lang.String[] strArray68 = strTokenizer66.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder64.appendWithSeparators((java.lang.Object[]) strArray68, "4#4");
        char[] charArray73 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray73);
        java.lang.Object obj75 = properties60.getOrDefault((java.lang.Object) strBuilder64, (java.lang.Object) strTokenizer74);
        java.util.Collection<java.lang.Object> objCollection76 = properties60.values();
        boolean boolean77 = properties60.isEmpty();
        properties60.clear();
        java.lang.Object obj79 = properties60.clone();
        boolean boolean80 = properties60.isEmpty();
        java.io.IOException iOException84 = new java.io.IOException("hi!");
        java.io.IOException iOException86 = new java.io.IOException("hi!");
        iOException84.addSuppressed((java.lang.Throwable) iOException86);
        java.io.IOException iOException88 = new java.io.IOException("StrTokenizer[]", (java.lang.Throwable) iOException86);
        java.lang.Throwable throwable91 = null;
        java.io.IOException iOException92 = new java.io.IOException("{}", throwable91);
        java.lang.Throwable[] throwableArray93 = iOException92.getSuppressed();
        java.io.IOException iOException94 = new java.io.IOException("\n", (java.lang.Throwable) iOException92);
        iOException88.addSuppressed((java.lang.Throwable) iOException92);
        java.io.IOException iOException96 = new java.io.IOException("\n32.0a", (java.lang.Throwable) iOException88);
        java.lang.Object obj97 = null;
        java.lang.Object obj98 = properties60.getOrDefault((java.lang.Object) iOException88, obj97);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties60);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(objCollection18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(writer35);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (-1) + "'", obj46, (-1));
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[]");
        org.junit.Assert.assertNotNull(writer53);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "{}" + "'", str59, "{}");
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(objCollection76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "{}");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(throwableArray93);
        org.junit.Assert.assertNull(obj98);
    }

    @Test
    public void test9316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9316");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray2 = strTokenizer1.getTokenArray();
        java.lang.String[] strArray3 = strTokenizer1.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer1.setIgnoreEmptyTokens(true);
        boolean boolean6 = strTokenizer1.hasNext();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        boolean boolean12 = strBuilder10.endsWith("StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln('#');
        java.lang.StringBuffer stringBuffer21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.append(stringBuffer21, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.deleteFirst("hi!");
        char[] charArray27 = strBuilder18.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer14.reset(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray27);
        char[] charArray30 = strBuilder10.getChars(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer1.reset(charArray27);
        boolean boolean32 = strTokenizer31.hasPrevious();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test9317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9317");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder13.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendln((double) '#');
        boolean boolean17 = strBuilder7.equals(strBuilder16);
        java.util.stream.IntStream intStream18 = strBuilder7.codePoints();
        java.util.Iterator<java.lang.String> strItor19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder7.appendWithSeparators(strItor19, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst(' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst("", "");
        char[] charArray32 = strBuilder28.toCharArray();
        char[] charArray33 = strBuilder25.getChars(charArray32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray32);
        boolean boolean35 = strTokenizer34.hasPrevious();
        java.util.List<java.lang.String> strList36 = strTokenizer34.getTokenList();
        boolean boolean37 = strTokenizer34.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer34.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder21.replaceAll(strMatcher38, "\n32.0java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray46 = strTokenizer45.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.appendAll((java.lang.Object[]) strArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder41.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray56 = strTokenizer55.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder51.appendAll((java.lang.Object[]) strArray56);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder41.appendln(strBuilder57);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.replaceFirst("", "");
        char[] charArray70 = strBuilder66.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder65.appendln(charArray70);
        boolean boolean72 = strBuilder41.equals((java.lang.Object) strBuilder65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = strTokenizer75.getDelimiterMatcher();
        int int77 = strBuilder41.indexOf(strMatcher76);
        int int79 = strBuilder40.lastIndexOf(strMatcher76, (int) (byte) -1);
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#\nfalse\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer("\n32.0", strMatcher76, strMatcher81);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray85 = strTokenizer84.getTokenArray();
        java.lang.String[] strArray86 = strTokenizer84.getTokenArray();
        boolean boolean87 = strTokenizer84.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = strTokenizer84.getTrimmerMatcher();
        java.lang.String str89 = strTokenizer84.previousToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher90 = strTokenizer84.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer("4", strMatcher76, strMatcher90);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = strTokenizer91.setDelimiterChar('\n');
        boolean boolean94 = strTokenizer93.hasPrevious();
        boolean boolean95 = strTokenizer93.hasPrevious();
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(intStream18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[]");
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNotNull(strMatcher90);
        org.junit.Assert.assertNotNull(strTokenizer93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test9318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9318");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray19 = strTokenizer18.getTokenArray();
        java.lang.String[] strArray20 = strTokenizer18.getTokenArray();
        boolean boolean21 = strTokenizer18.hasNext();
        int int22 = strTokenizer18.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer18.getQuoteMatcher();
        java.util.List<java.lang.String> strList24 = strTokenizer18.getTokenList();
        boolean boolean25 = strList9.retainAll((java.util.Collection<java.lang.String>) strList24);
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader36 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray42 = strTokenizer41.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder37.appendAll((java.lang.Object[]) strArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder37.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream47 = strBuilder37.codePoints();
        java.lang.Object obj48 = properties27.replace((java.lang.Object) reader36, (java.lang.Object) intStream47);
        reader36.reset();
        properties26.load(reader36);
        int int51 = strList9.indexOf((java.lang.Object) properties26);
        java.util.Collection<java.lang.Object> objCollection52 = properties26.values();
        java.lang.String str54 = properties26.getProperty("###0");
        java.util.Collection<java.lang.Object> objCollection55 = properties26.values();
        java.util.Collection<java.lang.Object> objCollection56 = properties26.values();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(intStream47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(objCollection52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(objCollection55);
        org.junit.Assert.assertNotNull(objCollection56);
    }

    @Test
    public void test9319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9319");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader9 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream20 = strBuilder10.codePoints();
        java.lang.Object obj21 = properties0.replace((java.lang.Object) reader9, (java.lang.Object) intStream20);
        reader9.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst("", "");
        char[] charArray34 = strBuilder30.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder29.appendln(charArray34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray34);
        int int37 = reader9.read(charArray34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray34);
        int int39 = strTokenizer38.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer38.getIgnoredMatcher();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer38.set("4\n32.0");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[]");
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(strMatcher40);
    }

    @Test
    public void test9320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9320");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.ensureCapacity((int) (short) 10);
        java.lang.String str14 = strBuilder11.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray21 = strTokenizer20.getTokenArray();
        java.lang.String[] strArray22 = strTokenizer20.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.appendWithSeparators((java.lang.Object[]) strArray22, "4#4");
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties25.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader34 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray40 = strTokenizer39.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder35.appendAll((java.lang.Object[]) strArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder35.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream45 = strBuilder35.codePoints();
        java.lang.Object obj46 = properties25.replace((java.lang.Object) reader34, (java.lang.Object) intStream45);
        long long48 = reader34.skip(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray54 = strTokenizer53.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.appendAll((java.lang.Object[]) strArray54);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder49.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream59 = strBuilder49.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceFirst("", "");
        char[] charArray64 = strBuilder60.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder49.appendln(charArray64);
        int int68 = reader34.read(charArray64);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder18.append(charArray64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, "java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder11.append(charArray64);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.deleteCharAt((int) '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.setNewLineText("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str78 = strBuilder74.substring(41);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + " #\n" + "'", str14, " #\n");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(intStream45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(intStream59);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[]");
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
    }

    @Test
    public void test9321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9321");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("###################################");
        java.lang.Class<?> wildcardClass2 = strTokenizer1.getClass();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test9322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9322");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Set<java.lang.String> strSet3 = properties1.stringPropertyNames();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(strSet3);
    }

    @Test
    public void test9323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9323");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        int int5 = strBuilder3.lastIndexOf('#');
        int int8 = strBuilder3.indexOf("not tokenized yet]", (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.ensureCapacity(0);
        int int12 = strBuilder3.indexOf("not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder3.appendln((float) 50);
        int int16 = strBuilder3.lastIndexOf('m');
        boolean boolean18 = strBuilder3.endsWith("java.io.IOException: java.io.IOException: \n32.0");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test9324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9324");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("!", 'r', '.');
    }

    @Test
    public void test9325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9325");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        char[] charArray16 = strBuilder12.toCharArray();
        char[] charArray17 = strBuilder9.getChars(charArray16);
        java.io.Reader reader18 = strBuilder9.asReader();
        java.lang.Object obj19 = properties0.remove((java.lang.Object) strBuilder9);
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader29 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray35 = strTokenizer34.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.appendAll((java.lang.Object[]) strArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream40 = strBuilder30.codePoints();
        java.lang.Object obj41 = properties20.replace((java.lang.Object) reader29, (java.lang.Object) intStream40);
        reader29.reset();
        properties0.load(reader29);
        java.util.Set<java.lang.Object> objSet44 = properties0.keySet();
        java.util.Collection<java.lang.Object> objCollection45 = properties0.values();
        java.lang.Object obj46 = null;
        boolean boolean47 = properties0.equals(obj46);
        java.util.Set<java.lang.String> strSet48 = properties0.stringPropertyNames();
        java.io.PrintStream printStream49 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(intStream40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objSet44);
        org.junit.Assert.assertNotNull(objCollection45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strSet48);
    }

    @Test
    public void test9326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9326");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder0.indexOf("");
        int int7 = strBuilder0.lastIndexOf('#', (int) (byte) 0);
        boolean boolean9 = strBuilder0.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer10);
        boolean boolean12 = strTokenizer10.isIgnoreEmptyTokens();
        java.lang.String str13 = strTokenizer10.toString();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer10.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "StrTokenizer[]" + "'", str13, "StrTokenizer[]");
    }

    @Test
    public void test9327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9327");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        java.util.Enumeration<?> wildcardEnumeration16 = properties0.propertyNames();
        int int17 = properties0.size();
        java.util.Properties properties18 = new java.util.Properties(properties0);
        java.util.Properties properties19 = new java.util.Properties(properties0);
        java.lang.Object obj20 = properties0.clone();
        java.io.OutputStream outputStream21 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream21, "97\nhi!StrTokenizer[]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(wildcardEnumeration16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
    }

    @Test
    public void test9328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9328");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((double) '#');
        boolean boolean15 = strBuilder5.equals(strBuilder14);
        java.util.stream.IntStream intStream16 = strBuilder5.codePoints();
        java.util.Iterator<java.lang.String> strItor17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder5.appendWithSeparators(strItor17, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst(' ', ' ');
        java.io.Writer writer23 = strBuilder22.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer29, "h");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder24.setLength((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.insert((int) '4', (double) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder22.append(strBuilder37, 32, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.insert(35, 35);
        char[] charArray48 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, ' ');
        int int51 = strTokenizer50.size();
        boolean boolean52 = strTokenizer50.hasNext();
        java.util.List<java.lang.String> strList53 = strTokenizer50.getTokenList();
        java.lang.String[] strArray57 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        boolean boolean60 = strList53.addAll((java.util.Collection<java.lang.String>) strList58);
        java.util.Spliterator<java.lang.String> strSpliterator61 = strList58.spliterator();
        int int62 = strList58.size();
        java.lang.String str64 = strList58.remove((int) (byte) 0);
        java.util.stream.Stream<java.lang.String> strStream65 = strList58.parallelStream();
        java.lang.Object[] objArray66 = strList58.toArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder43.appendAll(objArray66);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(writer23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strSpliterator61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 3 + "'", int62 == 3);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "\n32.0" + "'", str64, "\n32.0");
        org.junit.Assert.assertNotNull(strStream65);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[, ]");
        org.junit.Assert.assertNotNull(strBuilder67);
    }

    @Test
    public void test9329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9329");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.appendSeparator("StrTokenizer[]", "java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.append(false);
        java.lang.String str13 = strBuilder10.midString(0, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append((double) (byte) 100);
        boolean boolean16 = strBuilder15.isEmpty();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("");
        boolean boolean19 = strTokenizer18.hasNext();
        char[] charArray24 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, ' ');
        int int27 = strTokenizer26.size();
        boolean boolean28 = strTokenizer26.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer26.setIgnoredMatcher(strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer18.setDelimiterMatcher(strMatcher29);
        boolean boolean32 = strTokenizer31.hasNext();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder15.appendFixedWidthPadLeft((java.lang.Object) strTokenizer31, 50, 't');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strBuilder35);
    }

    @Test
    public void test9330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9330");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        char[] charArray7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.appendln(charArray7, (int) (short) 1, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.insert(0, (int) (short) 1);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst(strMatcher14, "100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.append(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.appendSeparator('#');
        int int23 = strBuilder20.indexOf("32.0141", 29);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test9331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9331");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.util.Spliterator<java.lang.String> strSpliterator17 = strList14.spliterator();
        int int18 = strList14.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int22 = strList14.lastIndexOf((java.lang.Object) strTokenizer21);
        java.util.List<java.lang.String> strList23 = strTokenizer21.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer21.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer21.getQuoteMatcher();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strSpliterator17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strMatcher26);
    }

    @Test
    public void test9332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9332");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.lang.String str10 = strBuilder0.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst("", "");
        char[] charArray18 = strBuilder14.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, "");
        boolean boolean21 = strTokenizer20.hasNext();
        boolean boolean22 = strTokenizer20.hasPrevious();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder13.appendAll((java.util.Iterator<java.lang.String>) strTokenizer20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray32 = strTokenizer31.getTokenArray();
        java.lang.String[] strArray33 = strTokenizer31.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder29.appendWithSeparators((java.lang.Object[]) strArray33, "4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder29.delete(0, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder29.appendSeparator("1", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.appendNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strBuilder42.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.setDelimiterString("100.0\000\000\000\000\000");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder48.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.ensureCapacity((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceFirst("", "");
        java.lang.String str56 = strBuilder52.getNewLineText();
        java.util.stream.IntStream intStream57 = strBuilder52.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder49.append((java.lang.CharSequence) strBuilder52);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder49.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder63.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.ensureCapacity((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.replaceFirst("", "");
        java.lang.String str71 = strBuilder67.getNewLineText();
        java.util.stream.IntStream intStream72 = strBuilder67.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder64.append((java.lang.CharSequence) strBuilder67);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder64.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder60.append(strBuilder64, 2, (int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder82.replaceFirst("", "");
        char[] charArray86 = strBuilder82.toCharArray();
        char[] charArray87 = strBuilder79.getChars(charArray86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray86);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder64.appendln(charArray86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer43.reset(charArray86);
        boolean boolean92 = strBuilder25.equals((java.lang.Object) strTokenizer91);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder25.appendln('r');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\n32.0" + "'", str10, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(intStream57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(intStream72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[]");
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[]");
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(strBuilder94);
    }

    @Test
    public void test9333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9333");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Properties properties26 = new java.util.Properties(properties25);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst('a', '4');
        java.io.Writer writer34 = strBuilder33.asWriter();
        properties26.store(writer34, "");
        java.util.Properties properties37 = new java.util.Properties();
        int int38 = properties37.size();
        boolean boolean40 = properties37.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties41 = new java.util.Properties();
        int int42 = properties41.size();
        boolean boolean44 = properties41.containsKey((java.lang.Object) (-1.0f));
        properties37.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties41);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties41.keys();
        boolean boolean47 = properties26.containsValue((java.lang.Object) objEnumeration46);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Properties properties49 = new java.util.Properties(properties0);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst("");
        int int54 = strBuilder50.indexOf("");
        int int57 = strBuilder50.lastIndexOf('#', (int) (byte) 0);
        boolean boolean59 = strBuilder50.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder50.appendAll((java.util.Iterator<java.lang.String>) strTokenizer60);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder50.appendSeparator("{}");
        char[] charArray64 = strBuilder63.toCharArray();
        boolean boolean65 = properties0.containsKey((java.lang.Object) charArray64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray64);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(writer34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strTokenizer68);
    }

    @Test
    public void test9334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9334");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray2 = strTokenizer1.getTokenArray();
        java.lang.String[] strArray3 = strTokenizer1.getTokenArray();
        boolean boolean4 = strTokenizer1.hasNext();
        int int5 = strTokenizer1.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer1.setQuoteChar('a');
        boolean boolean9 = strTokenizer1.isIgnoreEmptyTokens();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer1.add("#\n100\n");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test9335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9335");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        char[] charArray16 = strBuilder12.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder9.append(charArray16, 0, (int) (byte) 0);
        int int23 = strBuilder9.lastIndexOf('\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder9.appendln('o');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder9.append("###################3");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln((double) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray40 = strTokenizer39.getTokenArray();
        java.lang.String[] strArray41 = strTokenizer39.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder37.appendWithSeparators((java.lang.Object[]) strArray41, "4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteAll(strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray54 = strTokenizer53.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.appendAll((java.lang.Object[]) strArray54);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder49.replaceFirst('a', 'a');
        char[] charArray63 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, ' ');
        int int66 = strTokenizer65.size();
        boolean boolean67 = strTokenizer65.hasNext();
        java.util.List<java.lang.String> strList68 = strTokenizer65.getTokenList();
        java.lang.String[] strArray72 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList73 = new java.util.ArrayList<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        boolean boolean75 = strList68.addAll((java.util.Collection<java.lang.String>) strList73);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder49.appendAll((java.lang.Iterable<java.lang.String>) strList73);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder43.appendAll((java.lang.Iterable<java.lang.String>) strList73);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.append(10.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder31.append((java.lang.CharSequence) strBuilder79);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder9.appendln(strBuilder79);
        java.lang.String str82 = strBuilder79.getNullText();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNull(str82);
    }

    @Test
    public void test9336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9336");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.lang.String str10 = strBuilder0.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.insert(1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceFirst('a', '4');
        java.io.Writer writer21 = strBuilder20.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst("", "");
        char[] charArray33 = strBuilder29.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder28.appendln(charArray33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray33);
        writer21.write(charArray33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, '4', '$');
        int int40 = strTokenizer39.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer39.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder13.deleteAll(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder13.setLength(114);
        int int46 = strBuilder13.lastIndexOf('1');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\n32.0" + "'", str10, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(writer21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[]");
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
    }

    @Test
    public void test9337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9337");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        char[] charArray21 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        int int24 = strTokenizer23.size();
        boolean boolean25 = strTokenizer23.hasNext();
        java.util.List<java.lang.String> strList26 = strTokenizer23.getTokenList();
        java.lang.String[] strArray30 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        boolean boolean33 = strList26.addAll((java.util.Collection<java.lang.String>) strList31);
        java.util.Spliterator<java.lang.String> strSpliterator34 = strList31.spliterator();
        int int35 = strList31.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int39 = strList31.lastIndexOf((java.lang.Object) strTokenizer38);
        java.util.List<java.lang.String> strList40 = strTokenizer38.getTokenList();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor41 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        int int43 = strBuilder42.capacity();
        java.lang.StringBuffer stringBuffer44 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendln(stringBuffer44, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendln(true);
        boolean boolean54 = strSubstitutor41.replaceIn(strBuilder51, (int) '$', 0);
        boolean boolean55 = strList40.equals((java.lang.Object) '$');
        boolean boolean56 = strList9.retainAll((java.util.Collection<java.lang.String>) strList40);
        java.util.Spliterator<java.lang.String> strSpliterator57 = strList9.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.String> strItor59 = strList9.listIterator(73);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 73");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strSpliterator34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 3 + "'", int35 == 3);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 32 + "'", int43 == 32);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strSpliterator57);
    }

    @Test
    public void test9338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9338");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.setCharAt((int) (byte) 1, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.appendln('{');
        java.lang.String str18 = strBuilder15.toString();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "${\n" + "'", str18, "${\n");
    }

    @Test
    public void test9339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9339");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("{h={}}");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test9340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9340");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength(32);
        java.io.Writer writer11 = strBuilder10.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        int int13 = strBuilder12.capacity();
        java.lang.StringBuffer stringBuffer14 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.appendln(stringBuffer14, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder12.insert(1, (double) 32);
        java.lang.String str22 = strBuilder12.rightString((int) ' ');
        boolean boolean24 = strBuilder12.startsWith("");
        char[] charArray25 = strBuilder12.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray32 = strTokenizer31.getTokenArray();
        java.lang.String[] strArray33 = strTokenizer31.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder29.appendWithSeparators((java.lang.Object[]) strArray33, "4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteAll(strMatcher36);
        int int38 = strBuilder12.lastIndexOf(strMatcher36);
        boolean boolean40 = strBuilder12.startsWith("StrTokenizer[not tokenized yet]");
        java.io.Writer writer41 = writer11.append((java.lang.CharSequence) "StrTokenizer[not tokenized yet]");
        writer11.write(43);
        writer11.flush();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 32 + "'", int13 == 32);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\n32.0" + "'", str22, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(writer41);
    }

    @Test
    public void test9341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9341");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test9342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9342");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        char[] charArray16 = strBuilder12.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder9.append(charArray16, 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst("", "");
        char[] charArray39 = strBuilder35.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.appendln(charArray39);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteFirst("StrTokenizer[]");
        java.util.Iterator<java.lang.String> strItor43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendWithSeparators(strItor43, "StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder45.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder53.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder47.appendFixedWidthPadRight((java.lang.Object) strBuilder56, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int61 = strBuilder47.lastIndexOf(strMatcher60);
        char[] charArray66 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, ' ');
        int int69 = strTokenizer68.size();
        boolean boolean70 = strTokenizer68.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer68.setIgnoredMatcher(strMatcher71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder47.deleteFirst(strMatcher71);
        int int74 = strBuilder45.lastIndexOf(strMatcher71);
        int int75 = strBuilder22.indexOf(strMatcher71);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder78.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.setNullText("");
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder79.replaceAll(strMatcher83, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher71, strMatcher83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer86.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer88.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = strTokenizer90.setDelimiterChar('$');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer92.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[]");
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(strTokenizer92);
    }

    @Test
    public void test9343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9343");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        java.lang.String str7 = strBuilder3.getNullText();
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties8.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader17 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray23 = strTokenizer22.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.appendAll((java.lang.Object[]) strArray23);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream28 = strBuilder18.codePoints();
        java.lang.Object obj29 = properties8.replace((java.lang.Object) reader17, (java.lang.Object) intStream28);
        reader17.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst("", "");
        char[] charArray42 = strBuilder38.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder37.appendln(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray42);
        int int45 = reader17.read(charArray42);
        boolean boolean46 = reader17.ready();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst("", "");
        char[] charArray51 = strBuilder47.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray51);
        int int55 = reader17.read(charArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder3.appendln((java.lang.Object) reader17);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder3.deleteFirst("{");
        int int60 = strBuilder3.indexOf("java.io.IOException: \000");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(intStream28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[]");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
    }

    @Test
    public void test9344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9344");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = strTokenizer1.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.reset("");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strTokenizer1.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer1.setQuoteChar('m');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strTokenizer7);
    }

    @Test
    public void test9345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9345");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        int int11 = strBuilder7.indexOf("");
        int int14 = strBuilder7.lastIndexOf('#', (int) (byte) 0);
        boolean boolean16 = strBuilder7.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder7.appendAll((java.util.Iterator<java.lang.String>) strTokenizer17);
        boolean boolean19 = strTokenizer17.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer17.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst("", "");
        char[] charArray35 = strBuilder31.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.appendln(charArray35);
        int int40 = strMatcher23.isMatch(charArray35, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer21.setTrimmerMatcher(strMatcher23);
        boolean boolean42 = strTokenizer41.hasNext();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray49 = strTokenizer48.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder44.appendAll((java.lang.Object[]) strArray49);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder44.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream54 = strBuilder44.codePoints();
        java.lang.String str55 = strBuilder44.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder44.appendFixedWidthPadRight((int) (short) 10, 5, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder43.appendln(strBuilder59);
        int int63 = strBuilder59.indexOf("3100.0", (int) (byte) 10);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[]");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(intStream54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
    }

    @Test
    public void test9346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9346");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        int int9 = strBuilder0.capacity();
        char[] charArray10 = strBuilder0.toCharArray();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[\n, 3, 2, ., 0]");
    }

    @Test
    public void test9347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9347");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        char[] charArray21 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        int int24 = strTokenizer23.size();
        boolean boolean25 = strTokenizer23.hasNext();
        java.util.List<java.lang.String> strList26 = strTokenizer23.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "");
        char[] charArray31 = strBuilder27.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        boolean boolean35 = strList26.equals((java.lang.Object) charArray31);
        char[] charArray40 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        int int43 = strTokenizer42.size();
        boolean boolean44 = strTokenizer42.hasNext();
        java.util.List<java.lang.String> strList45 = strTokenizer42.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        int int47 = strBuilder46.capacity();
        java.lang.StringBuffer stringBuffer48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(stringBuffer48, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder46.insert(1, (double) 32);
        java.lang.String str56 = strBuilder46.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder46.insert(1, '#');
        boolean boolean60 = strList45.equals((java.lang.Object) strBuilder46);
        boolean boolean61 = strList26.containsAll((java.util.Collection<java.lang.String>) strList45);
        boolean boolean62 = strList9.addAll((java.util.Collection<java.lang.String>) strList45);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln('#');
        java.lang.StringBuffer stringBuffer69 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.append(stringBuffer69, (int) (byte) -1, (int) (byte) 100);
        int int73 = strList9.lastIndexOf((java.lang.Object) stringBuffer69);
        char[] charArray78 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, ' ');
        int int81 = strTokenizer80.size();
        int int82 = strTokenizer80.previousIndex();
        boolean boolean83 = strList9.equals((java.lang.Object) strTokenizer80);
        java.lang.String str84 = strTokenizer80.next();
        java.lang.String str85 = strTokenizer80.previous();
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = strTokenizer80.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer80.reset("java.io.IOException");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer80.setDelimiterString("\n");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer80.add("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 32 + "'", int47 == 32);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\n32.0" + "'", str56, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "4#4" + "'", str84, "4#4");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "4#4" + "'", str85, "4#4");
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strTokenizer90);
    }

    @Test
    public void test9348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9348");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = new org.apache.commons.lang3.text.StrTokenizer();
        boolean boolean1 = strTokenizer0.isIgnoreEmptyTokens();
        java.lang.Object obj2 = strTokenizer0.clone();
        java.lang.String str3 = strTokenizer0.nextToken();
        java.lang.String str4 = strTokenizer0.previousToken();
        java.util.List<java.lang.String> strList5 = strTokenizer0.getTokenList();
        char[] charArray10 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, ' ');
        int int13 = strTokenizer12.size();
        boolean boolean14 = strTokenizer12.hasNext();
        java.util.List<java.lang.String> strList15 = strTokenizer12.getTokenList();
        java.lang.String[] strArray19 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        boolean boolean22 = strList15.addAll((java.util.Collection<java.lang.String>) strList20);
        java.util.Spliterator<java.lang.String> strSpliterator23 = strList20.spliterator();
        int int24 = strList20.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int28 = strList20.lastIndexOf((java.lang.Object) strTokenizer27);
        java.util.List<java.lang.String> strList29 = strTokenizer27.getTokenList();
        java.lang.String str31 = strList29.remove(0);
        boolean boolean32 = strList29.isEmpty();
        strList29.clear();
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Properties properties35 = new java.util.Properties(properties34);
        boolean boolean36 = properties34.isEmpty();
        java.util.Set<java.lang.Object> objSet37 = properties34.keySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("");
        int int42 = strBuilder38.indexOf("");
        int int45 = strBuilder38.lastIndexOf('#', (int) (byte) 0);
        boolean boolean47 = strBuilder38.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder38.appendAll((java.util.Iterator<java.lang.String>) strTokenizer48);
        boolean boolean50 = strTokenizer48.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer48.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("{}");
        java.lang.Object obj54 = properties34.replace((java.lang.Object) strTokenizer48, (java.lang.Object) "{}");
        java.util.List<java.lang.String> strList55 = strTokenizer48.getTokenList();
        java.lang.String[] strArray57 = new java.lang.String[] { "true\n###################################3\n" };
        java.lang.String[] strArray59 = new java.lang.String[] { "true\n###################################3\n" };
        java.lang.String[] strArray61 = new java.lang.String[] { "true\n###################################3\n" };
        java.lang.String[] strArray63 = new java.lang.String[] { "true\n###################################3\n" };
        java.lang.String[][] strArray64 = new java.lang.String[][] { strArray57, strArray59, strArray61, strArray63 };
        java.lang.String[][] strArray65 = strList55.toArray(strArray64);
        java.lang.Object[][] objArray66 = strList29.toArray((java.lang.Object[][]) strArray65);
        java.lang.Comparable<java.lang.String>[][] strComparableArray67 = strList5.toArray((java.lang.Comparable<java.lang.String>[][]) strArray65);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strSpliterator23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 3 + "'", int24 == 3);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + " 4#4" + "'", str31, " 4#4");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertNotNull(strComparableArray67);
    }

    @Test
    public void test9349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9349");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.lang.String str18 = strList14.remove(0);
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties(properties19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst('a', '4');
        java.io.Writer writer28 = strBuilder27.asWriter();
        properties20.store(writer28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst("", "");
        java.io.Reader reader35 = strBuilder31.asReader();
        properties20.load(reader35);
        java.util.Collection<java.lang.Object> objCollection37 = properties20.values();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst('a', '4');
        java.util.Properties properties45 = new java.util.Properties();
        java.util.Properties properties46 = new java.util.Properties(properties45);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceFirst('a', '4');
        java.io.Writer writer54 = strBuilder53.asWriter();
        properties46.store(writer54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst("", "");
        java.io.Reader reader61 = strBuilder57.asReader();
        properties46.load(reader61);
        boolean boolean63 = reader61.ready();
        int int64 = reader61.read();
        java.lang.Object obj65 = properties20.getOrDefault((java.lang.Object) 'a', (java.lang.Object) int64);
        java.lang.String str67 = properties20.getProperty("");
        boolean boolean68 = properties20.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder(3);
        char[] charArray71 = strBuilder70.toCharArray();
        java.io.Writer writer72 = strBuilder70.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder70.appendln(strBuilder73, (int) 'a', 0);
        java.lang.Object obj77 = properties20.remove((java.lang.Object) 'a');
        boolean boolean78 = strList14.equals((java.lang.Object) 'a');
        strList14.clear();
        java.util.stream.Stream<java.lang.String> strStream80 = strList14.parallelStream();
        java.util.Iterator<java.lang.String> strItor81 = strList14.iterator();
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator82 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList14.replaceAll(strUnaryOperator82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\n32.0" + "'", str18, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(writer28);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(reader35);
        org.junit.Assert.assertNotNull(objCollection37);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(writer54);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(reader61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (-1) + "'", obj65, (-1));
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[]");
        org.junit.Assert.assertNotNull(writer72);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strStream80);
        org.junit.Assert.assertNotNull(strItor81);
    }

    @Test
    public void test9350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9350");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendSeparator('#', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.append((float) '$');
        java.lang.String str9 = strBuilder6.getNewLineText();
        // The following exception was thrown during execution in test generation
        try {
            char char11 = strBuilder6.charAt((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test9351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9351");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("1\ne\n\n55\n");
    }

    @Test
    public void test9352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9352");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln('#');
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.append(stringBuffer8, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder5.deleteFirst("hi!");
        char[] charArray14 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer1.reset(charArray14);
        java.lang.String str16 = strTokenizer1.next();
        java.util.List<java.lang.String> strList17 = strTokenizer1.getTokenList();
        strList17.clear();
        java.util.ListIterator<java.lang.String> strItor19 = strList17.listIterator();
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator20 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList17.replaceAll(strUnaryOperator20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "#" + "'", str16, "#");
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strItor19);
    }

    @Test
    public void test9353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9353");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendAll((java.lang.Object[]) strArray6);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst("", "");
        char[] charArray15 = strBuilder11.toCharArray();
        char[] charArray16 = strBuilder8.getChars(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        char[] charArray18 = strBuilder0.getChars(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("");
        boolean boolean21 = strTokenizer20.hasNext();
        java.lang.String[] strArray22 = strTokenizer20.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder0.appendWithSeparators((java.lang.Object[]) strArray22, "\n-1.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder31.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder25.appendFixedWidthPadRight((java.lang.Object) strBuilder34, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.append("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln("\n");
        boolean boolean42 = strBuilder24.equalsIgnoreCase(strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder24.replaceFirst("\n36.0\n\n", "#\n");
        java.util.stream.IntStream intStream46 = strBuilder24.chars();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(intStream46);
    }

    @Test
    public void test9354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9354");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.ensureCapacity((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendSeparator('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln((float) 3);
        boolean boolean11 = strBuilder7.endsWith("#36.0\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test9355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9355");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        int int3 = strBuilder1.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.appendln("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000", 5, (int) ' ');
        java.io.Reader reader8 = strBuilder1.asReader();
        reader8.reset();
        reader8.reset();
        boolean boolean11 = reader8.ready();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(reader8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test9356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9356");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        int int24 = strBuilder23.capacity();
        java.lang.StringBuffer stringBuffer25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.appendln(stringBuffer25, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.insert(1, (double) 32);
        java.lang.String str33 = strBuilder23.rightString((int) ' ');
        boolean boolean35 = strBuilder23.startsWith("");
        char[] charArray36 = strBuilder23.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray36);
        boolean boolean38 = strBuilder22.contains(strMatcher37);
        int int41 = strBuilder22.indexOf('t', (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder22.appendSeparator('$');
        java.io.Reader reader44 = strBuilder22.asReader();
        int int46 = strBuilder22.lastIndexOf("100.0\n100");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder22.appendln("\njava.io.IOException: \n32.0\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 32 + "'", int24 == 32);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\n32.0" + "'", str33, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(reader44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test9357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9357");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        boolean boolean9 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceAll("#", "true\n###################################3\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        int int15 = strBuilder14.capacity();
        java.lang.StringBuffer stringBuffer16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendln(stringBuffer16, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((float) '4');
        int int28 = strBuilder23.indexOf("", (int) (short) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("");
        boolean boolean31 = strTokenizer30.hasNext();
        java.lang.String[] strArray32 = strTokenizer30.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder23.appendWithSeparators((java.lang.Object[]) strArray32, "4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder13.appendWithSeparators((java.lang.Object[]) strArray32, "StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder13.replaceAll('\000', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strBuilder13.asTokenizer();
        boolean boolean41 = strTokenizer40.hasNext();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 32 + "'", int15 == 32);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test9358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9358");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.replaceFirst('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.append((float) 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.setLength((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder3.append("");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("\n32.0");
        int int17 = strBuilder14.indexOf(strMatcher16);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.insert(0, (double) (byte) 1);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test9359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9359");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder5.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.appendln((double) '#');
        boolean boolean22 = strBuilder12.equals(strBuilder21);
        java.util.stream.IntStream intStream23 = strBuilder12.codePoints();
        java.util.Iterator<java.lang.String> strItor24 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder12.appendWithSeparators(strItor24, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder6.appendln(strBuilder26, 0, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray38 = strTokenizer37.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.appendAll((java.lang.Object[]) strArray38);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder33.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray48 = strTokenizer47.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.appendAll((java.lang.Object[]) strArray48);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder33.appendln(strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteAll(strMatcher56);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder32.replaceAll(strMatcher56, "#\n");
        java.lang.String str60 = strBuilder59.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.appendln(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(intStream23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(strBuilder62);
    }

    @Test
    public void test9360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9360");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (byte) 1, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.minimizeCapacity();
        int int10 = strBuilder9.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.appendSeparator("1.0", 37);
        char[] charArray18 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ');
        int int21 = strTokenizer20.size();
        boolean boolean22 = strTokenizer20.hasNext();
        java.util.List<java.lang.String> strList23 = strTokenizer20.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst("", "");
        char[] charArray28 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        boolean boolean32 = strList23.equals((java.lang.Object) charArray28);
        char[] charArray37 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, ' ');
        int int40 = strTokenizer39.size();
        boolean boolean41 = strTokenizer39.hasNext();
        java.util.List<java.lang.String> strList42 = strTokenizer39.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        int int44 = strBuilder43.capacity();
        java.lang.StringBuffer stringBuffer45 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.appendln(stringBuffer45, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder43.insert(1, (double) 32);
        java.lang.String str53 = strBuilder43.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder43.insert(1, '#');
        boolean boolean57 = strList42.equals((java.lang.Object) strBuilder43);
        boolean boolean58 = strList23.containsAll((java.util.Collection<java.lang.String>) strList42);
        java.lang.String str60 = strList23.remove((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor62 = strList23.listIterator(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder9.appendAll((java.lang.Iterable<java.lang.String>) strList23);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.appendln(0);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 32 + "'", int44 == 32);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\n32.0" + "'", str53, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "4#4" + "'", str60, "4#4");
        org.junit.Assert.assertNotNull(strItor62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
    }

    @Test
    public void test9361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9361");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.append((double) '4');
        java.lang.String str4 = strBuilder1.getNullText();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test9362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9362");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader9 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream20 = strBuilder10.codePoints();
        java.lang.Object obj21 = properties0.replace((java.lang.Object) reader9, (java.lang.Object) intStream20);
        reader9.reset();
        long long24 = reader9.skip((long) (short) 0);
        reader9.mark(8);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray32 = strTokenizer31.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendAll((java.lang.Object[]) strArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder27.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream37 = strBuilder27.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst("", "");
        char[] charArray42 = strBuilder38.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder27.appendln(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, "\n");
        int int48 = reader9.read(charArray42);
        boolean boolean49 = reader9.ready();
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(intStream37);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[]");
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test9363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9363");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        java.io.Writer writer7 = strBuilder6.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst("", "");
        char[] charArray19 = strBuilder15.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.appendln(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray19);
        writer7.write(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, '4', '$');
        int int26 = strTokenizer25.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer25.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer25.reset("StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer25.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.reset("StrTokenizer[4#4]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.setQuoteChar('t');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(writer7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer34);
    }

    @Test
    public void test9364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9364");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder6.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder9, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int14 = strBuilder0.lastIndexOf(strMatcher13);
        java.io.Reader reader15 = strBuilder0.asReader();
        boolean boolean16 = reader15.markSupported();
        boolean boolean17 = reader15.markSupported();
        reader15.reset();
        reader15.reset();
        reader15.mark((int) (byte) 10);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test9365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9365");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        boolean boolean9 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.appendSeparator('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray18 = strTokenizer17.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.appendAll((java.lang.Object[]) strArray18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder13.replaceFirst('a', 'a');
        java.lang.StringBuffer stringBuffer23 = strBuilder22.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder0.append(stringBuffer23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln((float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendNull();
        java.lang.String str32 = strBuilder27.midString(41, 32);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(stringBuffer23);
        org.junit.Assert.assertEquals(stringBuffer23.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
    }

    @Test
    public void test9366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9366");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("0", "tue");
        java.util.List<java.lang.String> strList3 = strTokenizer2.getTokenList();
        org.junit.Assert.assertNotNull(strList3);
    }

    @Test
    public void test9367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9367");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.util.Spliterator<java.lang.String> strSpliterator17 = strList14.spliterator();
        int int18 = strList14.size();
        java.lang.String str20 = strList14.remove((int) (byte) 0);
        boolean boolean22 = strList14.add("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray28 = strTokenizer27.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.appendAll((java.lang.Object[]) strArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder23.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray38 = strTokenizer37.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.appendAll((java.lang.Object[]) strArray38);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder23.appendln(strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst("", "");
        char[] charArray52 = strBuilder48.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.appendln(charArray52);
        boolean boolean54 = strBuilder23.equals((java.lang.Object) strBuilder47);
        boolean boolean55 = strList14.remove((java.lang.Object) strBuilder23);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder23.replaceAll("{}", "h");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder23.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.append('a');
        int int68 = strBuilder61.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        int int70 = strBuilder69.capacity();
        java.lang.StringBuffer stringBuffer71 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder69.appendln(stringBuffer71, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder69.insert(1, (double) 32);
        boolean boolean78 = strBuilder69.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder69.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder69.clear();
        int int81 = strBuilder80.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder61.append(strBuilder80);
        boolean boolean83 = strBuilder59.equals(strBuilder80);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder80.ensureCapacity((int) (byte) 10);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strSpliterator17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\n32.0" + "'", str20, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[]");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 32 + "'", int70 == 32);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 32 + "'", int81 == 32);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strBuilder85);
    }

    @Test
    public void test9368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9368");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteAll('4');
        boolean boolean7 = strBuilder0.contains(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.clear();
        boolean boolean10 = strBuilder0.contains("3a");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test9369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9369");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("true", ' ', '$');
        java.util.List<java.lang.String> strList4 = strTokenizer3.getTokenList();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList7 = strList4.subList(73, 117);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 117");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList4);
    }

    @Test
    public void test9370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9370");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln('#');
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.append(stringBuffer8, (int) (byte) -1, (int) (byte) 100);
        char[] charArray16 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder5.append(charArray16);
        boolean boolean20 = properties0.equals((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((int) (byte) 0);
        boolean boolean28 = properties0.equals((java.lang.Object) strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append((long) 96);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.ensureCapacity((int) 's');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str34 = strBuilder30.substring(33);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[ , 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
    }

    @Test
    public void test9371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9371");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        int int12 = strBuilder11.capacity();
        java.lang.StringBuffer stringBuffer13 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(stringBuffer13, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int18 = strBuilder16.lastIndexOf(strMatcher17);
        boolean boolean19 = strBuilder9.equalsIgnoreCase(strBuilder16);
        char[] charArray22 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray22);
        boolean boolean24 = properties0.replace((java.lang.Object) strBuilder6, (java.lang.Object) strBuilder9, (java.lang.Object) strTokenizer23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder9.deleteAll("StrTokenizer[]");
        int int28 = strBuilder26.lastIndexOf('#');
        char[] charArray33 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, ' ');
        int int36 = strTokenizer35.size();
        boolean boolean37 = strTokenizer35.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer35.setIgnoredMatcher(strMatcher38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder26.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer39, "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str42 = strTokenizer39.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strBuilder41);
    }

    @Test
    public void test9372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9372");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendPadding(10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer12.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder7.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer12, "h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer12.reset("\n32.0");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer12.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder6.appendFixedWidthPadRight((java.lang.Object) strTokenizer12, 4, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.appendSeparator(' ', 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.insert(0, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.minimizeCapacity();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
    }

    @Test
    public void test9373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9373");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        char[] charArray14 = strBuilder10.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        boolean boolean18 = strList9.equals((java.lang.Object) charArray14);
        java.util.Spliterator<java.lang.String> strSpliterator19 = strList9.spliterator();
        java.lang.Object obj20 = null;
        int int21 = strList9.lastIndexOf(obj20);
        java.util.Spliterator<java.lang.String> strSpliterator22 = strList9.spliterator();
        java.lang.Object[] objArray23 = strList9.toArray();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strSpliterator19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strSpliterator22);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[4#4]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[4#4]");
    }

    @Test
    public void test9374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9374");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst('a', '4');
        java.io.Writer writer9 = strBuilder8.asWriter();
        properties1.store(writer9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        java.io.Reader reader16 = strBuilder12.asReader();
        properties1.load(reader16);
        boolean boolean18 = reader16.markSupported();
        boolean boolean19 = reader16.ready();
        reader16.reset();
        reader16.mark(69);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test9375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9375");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.setCharAt(0, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("");
        int int20 = strBuilder16.indexOf("");
        int int23 = strBuilder16.lastIndexOf('#', (int) (byte) 0);
        boolean boolean25 = strBuilder16.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder16.appendAll((java.util.Iterator<java.lang.String>) strTokenizer26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder16.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder16.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder16.appendln((int) (byte) 100);
        char[] charArray34 = strBuilder16.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, 'a');
        java.util.List<java.lang.String> strList37 = strTokenizer36.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder15.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList37, "ttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder15.deleteAll('r');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "0.0100\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "0.0100\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[0, ., 0, 1, 0, 0, \n]");
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
    }

    @Test
    public void test9376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9376");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties4.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties4.keys();
        java.util.Properties properties11 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader20 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray26 = strTokenizer25.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder21.appendAll((java.lang.Object[]) strArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder21.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream31 = strBuilder21.codePoints();
        java.lang.Object obj32 = properties11.replace((java.lang.Object) reader20, (java.lang.Object) intStream31);
        boolean boolean33 = reader20.ready();
        boolean boolean34 = properties4.containsValue((java.lang.Object) reader20);
        boolean boolean35 = reader20.markSupported();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.appendSeparator('#', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.append((float) '$');
        char char46 = strBuilder44.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.setNewLineText("\n32.0java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceFirst("", "");
        char[] charArray56 = strBuilder52.toCharArray();
        char[] charArray57 = strBuilder49.getChars(charArray56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray56);
        char[] charArray59 = strBuilder48.getChars(charArray56);
        int int60 = reader20.read(charArray56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, 't');
        boolean boolean63 = strTokenizer62.hasNext();
        boolean boolean64 = strTokenizer62.isEmptyTokenAsNull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objEntrySet9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(intStream31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + char46 + "' != '" + '#' + "'", char46 == '#');
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "#36.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "#36.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#, 3, 6, ., 0]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test9377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9377");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder6.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder9, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.replaceFirst("StrTokenizer[not tokenized yet]", "{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.insert((int) (short) 1, (float) (-1));
        java.lang.StringBuffer stringBuffer21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.append(stringBuffer21, (-1), 10);
        char[] charArray28 = new char[] { '\000', 'a', 'e' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder17.append(charArray28);
        java.lang.StringBuffer stringBuffer31 = strBuilder30.toStringBuffer();
        int int34 = strBuilder30.lastIndexOf('s', 114);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "\000ae");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "\000ae");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[\000, a, e]");
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(stringBuffer31);
        org.junit.Assert.assertEquals(stringBuffer31.toString(), "\n-1.0\000ae");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
    }

    @Test
    public void test9378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9378");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("1.0", "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.appendFixedWidthPadLeft((int) '$', 4, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder1.setLength(105);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strBuilder10.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setDelimiterChar('T');
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
    }

    @Test
    public void test9379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9379");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        int int12 = strBuilder11.capacity();
        java.lang.StringBuffer stringBuffer13 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(stringBuffer13, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int18 = strBuilder16.lastIndexOf(strMatcher17);
        boolean boolean19 = strBuilder9.equalsIgnoreCase(strBuilder16);
        char[] charArray22 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray22);
        boolean boolean24 = properties0.replace((java.lang.Object) strBuilder6, (java.lang.Object) strBuilder9, (java.lang.Object) strTokenizer23);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        int int26 = strBuilder25.capacity();
        java.lang.StringBuffer stringBuffer27 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.appendln(stringBuffer27, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder25.setNullText("");
        java.lang.Object obj33 = properties0.get((java.lang.Object) strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((long) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteAll('#');
        int int40 = strBuilder35.indexOf(' ', 43);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder35.append("########a4\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst('a', '4');
        char[] charArray54 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, ' ');
        int int57 = strTokenizer56.size();
        boolean boolean58 = strTokenizer56.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer56.setIgnoredMatcher(strMatcher59);
        int int62 = strBuilder46.indexOf(strMatcher59, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder46.deleteFirst("StrTokenizer[32.0]");
        char[] charArray69 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, ' ');
        int int72 = strTokenizer71.size();
        boolean boolean73 = strTokenizer71.hasNext();
        java.util.List<java.lang.String> strList74 = strTokenizer71.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.replaceFirst("", "");
        char[] charArray79 = strBuilder75.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray79);
        boolean boolean83 = strList74.equals((java.lang.Object) charArray79);
        boolean boolean85 = strList74.add("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder64.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList74, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder42.appendAll((java.lang.Iterable<java.lang.String>) strList74);
        int int90 = strBuilder88.lastIndexOf("53true\n###############################$####");
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 32 + "'", int26 == 32);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
    }

    @Test
    public void test9380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9380");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.util.Properties properties9 = new java.util.Properties();
        int int10 = properties9.size();
        boolean boolean12 = properties9.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "");
        char[] charArray17 = strBuilder13.toCharArray();
        boolean boolean18 = properties9.containsValue((java.lang.Object) charArray17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder0.append(charArray17, (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder0.delete(1, (int) (byte) 1);
        int int25 = strBuilder0.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder0.append("StrTokenizer[ 4#4]", (int) (byte) 0, 5);
        java.lang.StringBuffer stringBuffer30 = strBuilder0.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder0.appendln(true);
        int int33 = strBuilder0.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.replaceFirst("StrTokenizer[java.io.IOException]", "java.io.IOException: 4");
        java.lang.StringBuffer stringBuffer37 = strBuilder0.toStringBuffer();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 5 + "'", int25 == 5);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(stringBuffer30);
        org.junit.Assert.assertEquals(stringBuffer30.toString(), "\n32.0StrTo");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 15 + "'", int33 == 15);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(stringBuffer37);
        org.junit.Assert.assertEquals(stringBuffer37.toString(), "\n32.0StrTotrue\n");
    }

    @Test
    public void test9381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9381");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.appendln((double) '$');
        char[] charArray19 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, ' ');
        int int22 = strTokenizer21.size();
        boolean boolean23 = strTokenizer21.hasNext();
        java.util.List<java.lang.String> strList24 = strTokenizer21.getTokenList();
        java.lang.String[] strArray28 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        boolean boolean31 = strList24.addAll((java.util.Collection<java.lang.String>) strList29);
        java.lang.String str33 = strList29.remove(0);
        char[] charArray38 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ');
        int int41 = strTokenizer40.size();
        boolean boolean42 = strTokenizer40.hasNext();
        java.util.List<java.lang.String> strList43 = strTokenizer40.getTokenList();
        java.lang.String[] strArray47 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        boolean boolean50 = strList43.addAll((java.util.Collection<java.lang.String>) strList48);
        boolean boolean51 = strList29.addAll((java.util.Collection<java.lang.String>) strList48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder6.appendAll((java.lang.Iterable<java.lang.String>) strList29);
        java.lang.String str54 = strList29.remove(0);
        java.util.Properties properties55 = new java.util.Properties();
        int int56 = properties55.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.appendln('#');
        java.lang.StringBuffer stringBuffer63 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder60.append(stringBuffer63, (int) (byte) -1, (int) (byte) 100);
        char[] charArray71 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray71, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder60.append(charArray71);
        boolean boolean75 = properties55.equals((java.lang.Object) strBuilder60);
        java.util.Properties properties76 = new java.util.Properties();
        int int77 = properties76.size();
        boolean boolean79 = properties76.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties80 = new java.util.Properties();
        int int81 = properties80.size();
        boolean boolean83 = properties80.containsKey((java.lang.Object) (-1.0f));
        properties76.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties80);
        java.util.Collection<java.lang.Object> objCollection85 = properties76.values();
        java.util.Set<java.lang.Object> objSet86 = properties76.keySet();
        boolean boolean87 = properties55.containsValue((java.lang.Object) objSet86);
        boolean boolean88 = strList29.contains((java.lang.Object) objSet86);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\n32.0" + "'", str33, "\n32.0");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[ , 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(objCollection85);
        org.junit.Assert.assertNotNull(objSet86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test9382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9382");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        int int11 = strBuilder10.capacity();
        java.lang.StringBuffer stringBuffer12 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(stringBuffer12, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder10.insert(1, (double) 32);
        java.lang.String str20 = strBuilder10.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder10.insert(1, '#');
        boolean boolean24 = strList9.equals((java.lang.Object) strBuilder10);
        java.lang.Throwable throwable26 = null;
        java.io.IOException iOException27 = new java.io.IOException("{}", throwable26);
        java.lang.Throwable[] throwableArray28 = iOException27.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder10.appendWithSeparators((java.lang.Object[]) throwableArray28, "10.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.deleteAll("h");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst("10   \n", "false\n32.0");
        char[] charArray37 = strBuilder36.toCharArray();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 32 + "'", int11 == 32);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\n32.0" + "'", str20, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "\n#32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "\n#32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[\n, #, 3, 2, ., 0]");
    }

    @Test
    public void test9383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9383");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.append('#');
        int int16 = strBuilder13.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.append((double) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator('#', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((float) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.appendSeparator('#', 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder25.appendSeparator('#');
        java.lang.StringBuffer stringBuffer33 = strBuilder32.toStringBuffer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder18.appendln(stringBuffer33, 63, 28);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 32 + "'", int16 == 32);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(stringBuffer33);
        org.junit.Assert.assertEquals(stringBuffer33.toString(), "#36.0##");
    }

    @Test
    public void test9384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9384");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder0.indexOf("");
        int int7 = strBuilder0.lastIndexOf('#', (int) (byte) 0);
        boolean boolean9 = strBuilder0.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln((int) (byte) 100);
        char[] charArray18 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, "###");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.reset("35.0\n100.0");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer22.set("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "0.0100\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "0.0100\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[0, ., 0, 1, 0, 0, \n]");
        org.junit.Assert.assertNotNull(strTokenizer24);
    }

    @Test
    public void test9385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9385");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.append((double) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.setLength((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln((double) '#');
        boolean boolean26 = strBuilder16.equals(strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.appendSeparator('4', '#');
        boolean boolean30 = strBuilder8.equals(strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln('#');
        java.lang.StringBuffer stringBuffer37 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.append(stringBuffer37, (int) (byte) -1, (int) (byte) 100);
        char[] charArray45 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder34.append(charArray45);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.insert(5, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.insert(1, (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder51.appendln(41);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst('a', '4');
        java.io.Writer writer65 = strBuilder64.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.replaceFirst("", "");
        char[] charArray77 = strBuilder73.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder72.appendln(charArray77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray77);
        writer65.write(charArray77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray77);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder51.insert(5, charArray77);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder8.appendln(charArray77);
        // The following exception was thrown during execution in test generation
        try {
            char char85 = strBuilder8.charAt(23);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 23");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[ , 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(writer65);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[]");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
    }

    @Test
    public void test9386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9386");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("\n4\n");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test9387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9387");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray19 = strTokenizer18.getTokenArray();
        java.lang.String[] strArray20 = strTokenizer18.getTokenArray();
        boolean boolean21 = strTokenizer18.hasNext();
        int int22 = strTokenizer18.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer18.getQuoteMatcher();
        java.util.List<java.lang.String> strList24 = strTokenizer18.getTokenList();
        boolean boolean25 = strList9.retainAll((java.util.Collection<java.lang.String>) strList24);
        char[] charArray30 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, ' ');
        int int33 = strTokenizer32.size();
        boolean boolean34 = strTokenizer32.hasNext();
        java.util.List<java.lang.String> strList35 = strTokenizer32.getTokenList();
        java.lang.String[] strArray39 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        boolean boolean42 = strList35.addAll((java.util.Collection<java.lang.String>) strList40);
        java.util.Spliterator<java.lang.String> strSpliterator43 = strList40.spliterator();
        int int44 = strList40.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int48 = strList40.lastIndexOf((java.lang.Object) strTokenizer47);
        boolean boolean49 = strList9.removeAll((java.util.Collection<java.lang.String>) strList40);
        int int50 = strList40.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        int int52 = strBuilder51.capacity();
        java.lang.StringBuffer stringBuffer53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder51.appendln(stringBuffer53, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder51.appendln((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder51.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder51.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.ensureCapacity(101);
        int int64 = strList40.lastIndexOf((java.lang.Object) strBuilder61);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strSpliterator43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 3 + "'", int44 == 3);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 3 + "'", int50 == 3);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 32 + "'", int52 == 32);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
    }

    @Test
    public void test9388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9388");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        boolean boolean9 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.appendSeparator('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray18 = strTokenizer17.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.appendAll((java.lang.Object[]) strArray18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder13.replaceFirst('a', 'a');
        java.lang.StringBuffer stringBuffer23 = strBuilder22.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder0.append(stringBuffer23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln((float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray33 = strTokenizer32.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder28.appendAll((java.lang.Object[]) strArray33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder28.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray43 = strTokenizer42.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder38.appendAll((java.lang.Object[]) strArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder28.appendln(strBuilder44);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder47.appendNull();
        java.lang.StringBuffer stringBuffer49 = strBuilder47.toStringBuffer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder27.appendln(stringBuffer49, 3, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(stringBuffer23);
        org.junit.Assert.assertEquals(stringBuffer23.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(stringBuffer49);
        org.junit.Assert.assertEquals(stringBuffer49.toString(), "97\n");
    }

    @Test
    public void test9389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9389");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("", '#', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setIgnoredChar('$');
        java.lang.String[] strArray6 = strTokenizer3.getTokenArray();
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strArray6);
    }

    @Test
    public void test9390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9390");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        int int12 = strBuilder11.capacity();
        java.lang.StringBuffer stringBuffer13 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(stringBuffer13, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int18 = strBuilder16.lastIndexOf(strMatcher17);
        boolean boolean19 = strBuilder9.equalsIgnoreCase(strBuilder16);
        char[] charArray22 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray22);
        boolean boolean24 = properties0.replace((java.lang.Object) strBuilder6, (java.lang.Object) strBuilder9, (java.lang.Object) strTokenizer23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder9.deleteAll("StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer28.setIgnoredChar('$');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer31, "StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln((-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.appendSeparator('1', 'o');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln('\n');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.append("1001\n", 98, 55);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
    }

    @Test
    public void test9391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9391");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.util.Set<java.lang.Object> objSet2 = properties0.keySet();
        java.util.Properties properties5 = new java.util.Properties();
        int int6 = properties5.size();
        boolean boolean8 = properties5.containsKey((java.lang.Object) (-1.0f));
        boolean boolean9 = properties0.replace((java.lang.Object) (byte) 1, (java.lang.Object) true, (java.lang.Object) (-1.0f));
        char[] charArray14 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, ' ');
        int int17 = strTokenizer16.size();
        boolean boolean18 = strTokenizer16.hasNext();
        java.util.List<java.lang.String> strList19 = strTokenizer16.getTokenList();
        java.lang.String[] strArray23 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        boolean boolean26 = strList19.addAll((java.util.Collection<java.lang.String>) strList24);
        java.util.Spliterator<java.lang.String> strSpliterator27 = strList24.spliterator();
        int int28 = strList24.size();
        boolean boolean30 = strList24.add("StrTokenizer[]");
        java.util.stream.Stream<java.lang.String> strStream31 = strList24.stream();
        boolean boolean32 = properties0.containsKey((java.lang.Object) strList24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("\n32.0-1.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setQuoteChar('$');
        boolean boolean37 = properties0.containsValue((java.lang.Object) strTokenizer36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("h", '4', '$');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setQuoteChar('$');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer43.reset();
        boolean boolean45 = strTokenizer44.isIgnoreEmptyTokens();
        boolean boolean46 = strTokenizer44.hasNext();
        boolean boolean47 = properties0.containsValue((java.lang.Object) boolean46);
        java.util.Set<java.lang.Object> objSet48 = properties0.keySet();
        java.io.OutputStream outputStream49 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream49, "E", "false\n32.0");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(objSet2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strSpliterator27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 3 + "'", int28 == 3);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strStream31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objSet48);
    }

    @Test
    public void test9392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9392");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        int int5 = strBuilder3.lastIndexOf('#');
        int int8 = strBuilder3.indexOf("not tokenized yet]", (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.ensureCapacity(0);
        int int12 = strBuilder3.indexOf("not tokenized yet]");
        // The following exception was thrown during execution in test generation
        try {
            char char14 = strBuilder3.charAt(39);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 39");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test9393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9393");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        int int8 = strBuilder5.indexOf('4', (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.appendSeparator("StrTokenizer[StrTokenizer[]]");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder10);
    }

    @Test
    public void test9394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9394");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[StrTokenizer[]]");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test9395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9395");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("10.0StrTokenizer[ 4#4]\n10.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("java.io.IOException: \000", "\n     ");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
    }

    @Test
    public void test9396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9396");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append((double) 10L);
        java.lang.Object obj6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendFixedWidthPadLeft(obj6, (int) (byte) -1, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln("StrTokenizer[ 4#4]");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.deleteFirst("true52\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test9397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9397");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst('a', '4');
        java.io.Writer writer30 = strBuilder29.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst("", "");
        char[] charArray42 = strBuilder38.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder37.appendln(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray42);
        writer30.write(charArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder22.append(charArray42);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charMatcher('#');
        int int50 = strBuilder22.indexOf(strMatcher48, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder22.setNewLineText("rg.apache.commons.lang3.text.StrLo");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendln(false);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(writer30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[]");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
    }

    @Test
    public void test9398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9398");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("{}", '$', '4');
        int int4 = strTokenizer3.previousIndex();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test9399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9399");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        int int9 = strBuilder8.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.appendln((int) (byte) 0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertNotNull(strBuilder11);
    }

    @Test
    public void test9400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9400");
        char[] charArray2 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        java.util.List<java.lang.String> strList5 = strTokenizer4.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer4.setQuoteChar('a');
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strTokenizer7);
    }

    @Test
    public void test9401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9401");
        java.io.IOException iOException1 = new java.io.IOException("[4#4]");
        java.io.IOException iOException2 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.io.IOException iOException3 = new java.io.IOException((java.lang.Throwable) iOException2);
    }

    @Test
    public void test9402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9402");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendSeparator("{}");
        java.io.Writer writer8 = strBuilder5.asWriter();
        writer8.close();
        writer8.write("0.0true");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst("", "");
        char[] charArray23 = strBuilder19.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.appendln(charArray23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.setNewLineText("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendln((float) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.appendFixedWidthPadLeft((int) (short) -1, (int) ' ', ' ');
        java.io.Writer writer33 = writer8.append((java.lang.CharSequence) strBuilder24);
        java.io.Writer writer35 = writer8.append('\000');
        java.io.Writer writer37 = writer35.append('{');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(writer8);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(writer33);
        org.junit.Assert.assertNotNull(writer35);
        org.junit.Assert.assertNotNull(writer37);
    }

    @Test
    public void test9403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9403");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        int int3 = strBuilder2.capacity();
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.appendln(stringBuffer4, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.insert(1, (double) 32);
        java.util.Properties properties11 = new java.util.Properties();
        int int12 = properties11.size();
        boolean boolean14 = properties11.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst("", "");
        char[] charArray19 = strBuilder15.toCharArray();
        boolean boolean20 = properties11.containsValue((java.lang.Object) charArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder2.append(charArray19, (int) (byte) 0, 0);
        boolean boolean24 = properties0.equals((java.lang.Object) 0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet25 = properties0.entrySet();
        java.util.Collection<java.lang.Object> objCollection26 = properties0.values();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer28.reset("");
        java.lang.String str32 = strTokenizer31.nextToken();
        java.lang.String str33 = strTokenizer31.getContent();
        java.lang.Object obj34 = properties0.get((java.lang.Object) strTokenizer31);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties0.elements();
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 32 + "'", int3 == 32);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objEntrySet25);
        org.junit.Assert.assertNotNull(objCollection26);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
    }

    @Test
    public void test9404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9404");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((double) '#');
        boolean boolean15 = strBuilder5.equals(strBuilder14);
        java.util.stream.IntStream intStream16 = strBuilder5.codePoints();
        java.util.Iterator<java.lang.String> strItor17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder5.appendWithSeparators(strItor17, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst(' ', ' ');
        java.io.Writer writer23 = strBuilder22.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer29, "h");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder24.setLength((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.insert((int) '4', (double) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder22.append(strBuilder37, 32, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst('a', '4');
        char[] charArray52 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, ' ');
        int int55 = strTokenizer54.size();
        boolean boolean56 = strTokenizer54.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer54.setIgnoredMatcher(strMatcher57);
        int int60 = strBuilder44.indexOf(strMatcher57, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder40.deleteAll(strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder40.insert(35, 't');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.deleteFirst('1');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln('a');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(writer23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
    }

    @Test
    public void test9405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9405");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader7 = strBuilder3.asReader();
        boolean boolean8 = reader7.markSupported();
        reader7.mark((int) 'a');
        int int11 = reader7.read();
        reader7.mark(134);
        long long15 = reader7.skip((long) 46);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 35 + "'", int11 == 35);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
    }

    @Test
    public void test9406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9406");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        boolean boolean5 = strBuilder3.endsWith("StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln('#');
        java.lang.StringBuffer stringBuffer14 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.append(stringBuffer14, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder11.deleteFirst("hi!");
        char[] charArray20 = strBuilder11.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer7.reset(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray20);
        char[] charArray23 = strBuilder3.getChars(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("[\n32.0, , , StrTokenizer[]]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, strMatcher26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer27.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer28.setIgnoreEmptyTokens(false);
        int int31 = strTokenizer28.nextIndex();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, \n]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test9407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9407");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendSeparator('#', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.append((float) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendln(32);
        java.io.Reader reader11 = strBuilder6.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst("", "");
        char[] charArray26 = strBuilder22.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder21.appendln(charArray26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder12.replaceFirst(strMatcher28, "StrTokenizer[]");
        int int31 = strBuilder6.lastIndexOf(strMatcher28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst("", "");
        char[] charArray43 = strBuilder39.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder38.appendln(charArray43);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray43);
        int int49 = strMatcher28.isMatch(charArray43, (int) (byte) 0, (int) (byte) 100, (int) (byte) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, "-1");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer51.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer51.getTrimmerMatcher();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[]");
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strMatcher53);
    }

    @Test
    public void test9408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9408");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteAll('4');
        int int7 = strBuilder5.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst("java.io.IOException: hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        int int13 = strBuilder12.capacity();
        java.lang.StringBuffer stringBuffer14 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.appendln(stringBuffer14, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendSeparator('#');
        int int22 = strBuilder18.lastIndexOf('t');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst("", "");
        char[] charArray30 = strBuilder26.toCharArray();
        char[] charArray31 = strBuilder23.getChars(charArray30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray39 = strTokenizer38.getTokenArray();
        java.lang.String[] strArray40 = strTokenizer38.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.appendWithSeparators((java.lang.Object[]) strArray40, "4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.deleteAll(strMatcher43);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.doubleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher43, strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray30);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder18.append(charArray30);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder18.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.setNewLineText("f4alse100.0\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder11.appendFixedWidthPadLeft((java.lang.Object) strBuilder49, 42, '4');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 32 + "'", int13 == 32);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
    }

    @Test
    public void test9409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9409");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        java.util.stream.IntStream intStream6 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.appendSeparator('a');
        java.lang.String str11 = strBuilder0.midString(46, (int) 'm');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test9410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9410");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (byte) 1, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.minimizeCapacity();
        int int10 = strBuilder9.length();
        java.lang.String str12 = strBuilder9.rightString(0);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test9411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9411");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteAll('4');
        int int7 = strBuilder5.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.deleteAll('4');
        int int15 = strBuilder13.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst("", "");
        char[] charArray20 = strBuilder16.toCharArray();
        char[] charArray21 = strBuilder13.getChars(charArray20);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder5.appendln(charArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer28, "h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer28.reset("\n32.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer35.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder5.deleteFirst(strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strBuilder5.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder5.appendln((float) ' ');
        boolean boolean42 = strBuilder5.startsWith("true\n###################################8\n");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[]");
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test9412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9412");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.util.Set<java.lang.Object> objSet2 = properties0.keySet();
        java.util.Properties properties5 = new java.util.Properties();
        int int6 = properties5.size();
        boolean boolean8 = properties5.containsKey((java.lang.Object) (-1.0f));
        boolean boolean9 = properties0.replace((java.lang.Object) (byte) 1, (java.lang.Object) true, (java.lang.Object) (-1.0f));
        char[] charArray14 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, ' ');
        int int17 = strTokenizer16.size();
        boolean boolean18 = strTokenizer16.hasNext();
        java.util.List<java.lang.String> strList19 = strTokenizer16.getTokenList();
        java.lang.String[] strArray23 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        boolean boolean26 = strList19.addAll((java.util.Collection<java.lang.String>) strList24);
        java.util.Spliterator<java.lang.String> strSpliterator27 = strList24.spliterator();
        int int28 = strList24.size();
        boolean boolean30 = strList24.add("StrTokenizer[]");
        java.util.stream.Stream<java.lang.String> strStream31 = strList24.stream();
        boolean boolean32 = properties0.containsKey((java.lang.Object) strList24);
        char[] charArray37 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, ' ');
        int int40 = strTokenizer39.size();
        boolean boolean41 = strTokenizer39.hasNext();
        java.util.List<java.lang.String> strList42 = strTokenizer39.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst("", "");
        char[] charArray47 = strBuilder43.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray47);
        boolean boolean51 = strList42.equals((java.lang.Object) charArray47);
        char[] charArray56 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, ' ');
        int int59 = strTokenizer58.size();
        boolean boolean60 = strTokenizer58.hasNext();
        java.util.List<java.lang.String> strList61 = strTokenizer58.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        int int63 = strBuilder62.capacity();
        java.lang.StringBuffer stringBuffer64 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder62.appendln(stringBuffer64, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder62.insert(1, (double) 32);
        java.lang.String str72 = strBuilder62.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder62.insert(1, '#');
        boolean boolean76 = strList61.equals((java.lang.Object) strBuilder62);
        boolean boolean77 = strList42.containsAll((java.util.Collection<java.lang.String>) strList61);
        java.lang.String str79 = strList42.remove((int) (short) 0);
        java.util.Iterator<java.lang.String> strItor80 = strList42.iterator();
        char[] charArray85 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray85, ' ');
        int int88 = strTokenizer87.size();
        boolean boolean89 = strTokenizer87.hasNext();
        java.util.List<java.lang.String> strList90 = strTokenizer87.getTokenList();
        boolean boolean91 = strList42.containsAll((java.util.Collection<java.lang.String>) strList90);
        boolean boolean92 = strList24.removeAll((java.util.Collection<java.lang.String>) strList42);
        java.util.ListIterator<java.lang.String> strItor93 = strList24.listIterator();
        boolean boolean95 = strList24.add("StrTokenizer[true]");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(objSet2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strSpliterator27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 3 + "'", int28 == 3);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strStream31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 32 + "'", int63 == 32);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "\n32.0" + "'", str72, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "4#4" + "'", str79, "4#4");
        org.junit.Assert.assertNotNull(strItor80);
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(strList90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(strItor93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test9413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9413");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        int int6 = strBuilder3.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendSeparator("\n32.0 \n", 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder3.appendln("{\n36.0\n=StrTokenizer[not tokenized yet]}");
        char[] charArray16 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        int int19 = strTokenizer18.size();
        boolean boolean20 = strTokenizer18.hasNext();
        java.util.List<java.lang.String> strList21 = strTokenizer18.getTokenList();
        java.lang.String[] strArray25 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        boolean boolean28 = strList21.addAll((java.util.Collection<java.lang.String>) strList26);
        java.lang.Object[] objArray29 = strList26.toArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder3.appendWithSeparators(objArray29, "java.io.IOException: java.io.IOException: \n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[\n32.0, , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[\n32.0, , ]");
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test9414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9414");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst('a', '4');
        java.io.Writer writer9 = strBuilder8.asWriter();
        properties1.store(writer9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        java.io.Reader reader16 = strBuilder12.asReader();
        properties1.load(reader16);
        java.util.Collection<java.lang.Object> objCollection18 = properties1.values();
        java.util.Enumeration<?> wildcardEnumeration19 = properties1.propertyNames();
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(objCollection18);
        org.junit.Assert.assertNotNull(wildcardEnumeration19);
    }

    @Test
    public void test9415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9415");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendAll((java.lang.Object[]) strArray6);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.append((int) (short) 100);
        java.util.stream.IntStream intStream10 = strBuilder9.chars();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
    }

    @Test
    public void test9416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9416");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("{#36.0=}", "true\n###################################3");
        java.lang.Object obj3 = strTokenizer2.clone();
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test9417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9417");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.lang.String str10 = strBuilder0.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst("", "");
        char[] charArray18 = strBuilder14.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, "");
        boolean boolean21 = strTokenizer20.hasNext();
        boolean boolean22 = strTokenizer20.hasPrevious();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder13.appendAll((java.util.Iterator<java.lang.String>) strTokenizer20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append(' ');
        java.lang.String str27 = strBuilder25.leftString(5);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.ensureCapacity(3);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst("\n-1.0", "\n36.0\n\n32.0");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\n32.0" + "'", str10, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\n32.0" + "'", str27, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
    }

    @Test
    public void test9418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9418");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray19 = strTokenizer18.getTokenArray();
        java.lang.String[] strArray20 = strTokenizer18.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendWithSeparators((java.lang.Object[]) strArray20, "4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteAll(strMatcher23);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder12.appendFixedWidthPadRight((java.lang.Object) strBuilder27, 0, '#');
        java.lang.String str31 = strBuilder27.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("");
        int int36 = strBuilder32.indexOf("");
        int int39 = strBuilder32.lastIndexOf('#', (int) (byte) 0);
        boolean boolean41 = strBuilder32.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder32.appendAll((java.util.Iterator<java.lang.String>) strTokenizer42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder32.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder32.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder32.appendln((int) (byte) 100);
        char[] charArray50 = strBuilder32.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, '#');
        char[] charArray53 = strBuilder27.getChars(charArray50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer55.setDelimiterString("StrTokenizer[StrTokenizer[]]");
        int int58 = strTokenizer57.previousIndex();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "false0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "false0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[f, a, l, s, e, 0, \n]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "false0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "false0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[f, a, l, s, e, 0, \n]");
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
    }

    @Test
    public void test9419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9419");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.lang.String str10 = properties4.getProperty("h");
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet12 = properties4.entrySet();
        java.io.IOException iOException13 = new java.io.IOException();
        java.lang.Throwable[] throwableArray14 = iOException13.getSuppressed();
        java.lang.Throwable[] throwableArray15 = iOException13.getSuppressed();
        java.io.IOException iOException16 = new java.io.IOException((java.lang.Throwable) iOException13);
        boolean boolean17 = properties4.containsValue((java.lang.Object) iOException16);
        char[] charArray23 = new char[] { ' ', '4', '#', '#', ' ' };
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder(3);
        char[] charArray27 = strBuilder26.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray35 = strTokenizer34.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.appendAll((java.lang.Object[]) strArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.replaceFirst('a', 'a');
        java.lang.String str41 = strBuilder39.rightString((int) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.ensureCapacity(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder39.deleteFirst('$');
        java.lang.Object obj46 = properties4.put((java.lang.Object) strTokenizer29, (java.lang.Object) strBuilder45);
        char[] charArray49 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray49);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        int int52 = strBuilder51.capacity();
        java.lang.StringBuffer stringBuffer53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder51.appendln(stringBuffer53, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder51.appendln((int) (byte) 0);
        java.io.Writer writer59 = strBuilder58.asWriter();
        java.io.IOException iOException60 = new java.io.IOException();
        java.lang.Throwable[] throwableArray61 = iOException60.getSuppressed();
        java.lang.Throwable[] throwableArray62 = iOException60.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder58.appendWithSeparators((java.lang.Object[]) throwableArray62, "1");
        java.lang.Object obj65 = properties4.getOrDefault((java.lang.Object) charArray49, (java.lang.Object) throwableArray62);
        properties4.clear();
        boolean boolean67 = properties4.isEmpty();
        java.util.Collection<java.lang.Object> objCollection68 = properties4.values();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNotNull(objEntrySet12);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 4## ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 4## ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, #, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 32 + "'", int52 == 32);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(writer59);
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(objCollection68);
    }

    @Test
    public void test9420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9420");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        char[] charArray16 = strBuilder12.toCharArray();
        char[] charArray17 = strBuilder9.getChars(charArray16);
        java.io.Reader reader18 = strBuilder9.asReader();
        java.lang.Object obj19 = properties0.remove((java.lang.Object) strBuilder9);
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader29 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray35 = strTokenizer34.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.appendAll((java.lang.Object[]) strArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream40 = strBuilder30.codePoints();
        java.lang.Object obj41 = properties20.replace((java.lang.Object) reader29, (java.lang.Object) intStream40);
        reader29.reset();
        properties0.load(reader29);
        java.util.Set<java.lang.Object> objSet44 = properties0.keySet();
        java.util.Set<java.lang.String> strSet45 = properties0.stringPropertyNames();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(intStream40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objSet44);
        org.junit.Assert.assertNotNull(strSet45);
    }

    @Test
    public void test9421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9421");
        java.io.IOException iOException1 = new java.io.IOException("true\n###################################3");
    }

    @Test
    public void test9422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9422");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader9 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream20 = strBuilder10.codePoints();
        java.lang.Object obj21 = properties0.replace((java.lang.Object) reader9, (java.lang.Object) intStream20);
        long long23 = reader9.skip(0L);
        reader9.close();
        boolean boolean25 = reader9.markSupported();
        boolean boolean26 = reader9.markSupported();
        long long28 = reader9.skip((long) '$');
        boolean boolean29 = reader9.ready();
        reader9.close();
        long long32 = reader9.skip((long) '$');
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
    }

    @Test
    public void test9423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9423");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        char[] charArray14 = strBuilder10.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        boolean boolean18 = strList9.equals((java.lang.Object) charArray14);
        char[] charArray23 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, ' ');
        int int26 = strTokenizer25.size();
        boolean boolean27 = strTokenizer25.hasNext();
        java.util.List<java.lang.String> strList28 = strTokenizer25.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        int int30 = strBuilder29.capacity();
        java.lang.StringBuffer stringBuffer31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(stringBuffer31, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder29.insert(1, (double) 32);
        java.lang.String str39 = strBuilder29.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder29.insert(1, '#');
        boolean boolean43 = strList28.equals((java.lang.Object) strBuilder29);
        boolean boolean44 = strList9.containsAll((java.util.Collection<java.lang.String>) strList28);
        java.util.stream.Stream<java.lang.String> strStream45 = strList9.stream();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 32 + "'", int30 == 32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\n32.0" + "'", str39, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strStream45);
    }

    @Test
    public void test9424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9424");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties4.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties4.keys();
        java.util.Properties properties11 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader20 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray26 = strTokenizer25.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder21.appendAll((java.lang.Object[]) strArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder21.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream31 = strBuilder21.codePoints();
        java.lang.Object obj32 = properties11.replace((java.lang.Object) reader20, (java.lang.Object) intStream31);
        boolean boolean33 = reader20.ready();
        boolean boolean34 = properties4.containsValue((java.lang.Object) reader20);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst("", "");
        char[] charArray39 = strBuilder35.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, 'a');
        boolean boolean42 = properties4.contains((java.lang.Object) strTokenizer41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer41.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer41.setDelimiterString("-1");
        boolean boolean46 = strTokenizer41.hasPrevious();
        java.lang.String str47 = strTokenizer41.getContent();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objEntrySet9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(intStream31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
    }

    @Test
    public void test9425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9425");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (byte) 1, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln((double) 100L);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.trim();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test9426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9426");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet3 = properties0.keySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteFirst("");
        int int8 = strBuilder4.indexOf("");
        int int11 = strBuilder4.lastIndexOf('#', (int) (byte) 0);
        boolean boolean13 = strBuilder4.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder4.appendAll((java.util.Iterator<java.lang.String>) strTokenizer14);
        boolean boolean16 = strTokenizer14.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer14.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("{}");
        java.lang.Object obj20 = properties0.replace((java.lang.Object) strTokenizer14, (java.lang.Object) "{}");
        java.util.Set<java.lang.Object> objSet21 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties0.elements();
        java.util.Enumeration<?> wildcardEnumeration23 = properties0.propertyNames();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objSet3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNotNull(wildcardEnumeration23);
    }

    @Test
    public void test9427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9427");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.setCharAt(0, '4');
        char[] charArray20 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, ' ');
        int int23 = strTokenizer22.size();
        boolean boolean24 = strTokenizer22.hasNext();
        java.util.List<java.lang.String> strList25 = strTokenizer22.getTokenList();
        java.lang.String[] strArray29 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        boolean boolean32 = strList25.addAll((java.util.Collection<java.lang.String>) strList30);
        java.util.Properties properties33 = new java.util.Properties();
        int int34 = properties33.size();
        java.lang.Object obj35 = properties33.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder42.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder36.appendFixedWidthPadRight((java.lang.Object) strBuilder45, (int) (byte) -1, '#');
        java.lang.Object obj49 = properties33.get((java.lang.Object) strBuilder36);
        java.util.Properties properties50 = new java.util.Properties();
        int int51 = properties50.size();
        boolean boolean53 = properties50.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties54 = new java.util.Properties();
        int int55 = properties54.size();
        boolean boolean57 = properties54.containsKey((java.lang.Object) (-1.0f));
        properties50.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties54);
        char[] charArray63 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, ' ');
        int int66 = strTokenizer65.size();
        boolean boolean67 = strTokenizer65.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer65.setIgnoredMatcher(strMatcher68);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.replaceFirst("", "");
        java.lang.Object obj74 = properties50.putIfAbsent((java.lang.Object) strMatcher68, (java.lang.Object) strBuilder70);
        boolean boolean75 = strBuilder36.equals(obj74);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder36.appendln((double) 100L);
        java.util.stream.IntStream intStream78 = strBuilder36.chars();
        boolean boolean80 = strBuilder36.contains('$');
        boolean boolean81 = strList30.equals((java.lang.Object) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder15.appendAll((java.lang.Iterable<java.lang.String>) strList30);
        java.util.Spliterator<java.lang.String> strSpliterator83 = strList30.spliterator();
        java.util.stream.Stream<java.lang.String> strStream84 = strList30.stream();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "{}");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(intStream78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strSpliterator83);
        org.junit.Assert.assertNotNull(strStream84);
    }

    @Test
    public void test9428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9428");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.deleteAll(strMatcher22);
        boolean boolean24 = strBuilder10.equalsIgnoreCase(strBuilder18);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.appendSeparator(" #\n", (-1));
        java.lang.String str29 = strBuilder18.rightString(37);
        java.io.IOException iOException31 = new java.io.IOException("\n");
        java.lang.Throwable[] throwableArray32 = iOException31.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder18.appendAll((java.lang.Object[]) throwableArray32);
        java.lang.String str34 = strBuilder18.toString();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + " " + "'", str29, " ");
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + " " + "'", str34, " ");
    }

    @Test
    public void test9429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9429");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        java.util.Collection<java.lang.Object> objCollection16 = properties0.values();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.replaceFirst('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder20.append((float) 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder20.setLength((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder20.appendFixedWidthPadLeft(0, 5, '4');
        java.io.Writer writer34 = strBuilder20.asWriter();
        java.io.Writer writer36 = writer34.append('a');
        java.util.Properties properties37 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder46.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        int int49 = strBuilder48.capacity();
        java.lang.StringBuffer stringBuffer50 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.appendln(stringBuffer50, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int55 = strBuilder53.lastIndexOf(strMatcher54);
        boolean boolean56 = strBuilder46.equalsIgnoreCase(strBuilder53);
        char[] charArray59 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray59);
        boolean boolean61 = properties37.replace((java.lang.Object) strBuilder43, (java.lang.Object) strBuilder46, (java.lang.Object) strTokenizer60);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        int int63 = strBuilder62.capacity();
        java.lang.StringBuffer stringBuffer64 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder62.appendln(stringBuffer64, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder62.setNullText("");
        java.lang.Object obj70 = properties37.get((java.lang.Object) strBuilder69);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.setLength(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.appendln("");
        java.lang.Object obj75 = properties0.getOrDefault((java.lang.Object) 'a', (java.lang.Object) strBuilder74);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.trim();
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(writer34);
        org.junit.Assert.assertNotNull(writer36);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 32 + "'", int49 == 32);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 32 + "'", int63 == 32);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "");
        org.junit.Assert.assertNotNull(strBuilder76);
    }

    @Test
    public void test9430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9430");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader9 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream20 = strBuilder10.codePoints();
        java.lang.Object obj21 = properties0.replace((java.lang.Object) reader9, (java.lang.Object) intStream20);
        java.util.Properties properties22 = new java.util.Properties();
        int int23 = properties22.size();
        boolean boolean25 = properties22.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties26 = new java.util.Properties();
        int int27 = properties26.size();
        boolean boolean29 = properties26.containsKey((java.lang.Object) (-1.0f));
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        char[] charArray35 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        int int38 = strTokenizer37.size();
        boolean boolean39 = strTokenizer37.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer37.setIgnoredMatcher(strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst("", "");
        java.lang.Object obj46 = properties22.putIfAbsent((java.lang.Object) strMatcher40, (java.lang.Object) strBuilder42);
        java.lang.Object obj49 = properties22.setProperty(" 4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        int int51 = strBuilder50.capacity();
        java.lang.StringBuffer stringBuffer52 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.appendln(stringBuffer52, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int57 = strBuilder55.lastIndexOf(strMatcher56);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.insert((int) (short) 1, 32);
        java.util.Properties properties61 = new java.util.Properties();
        int int62 = properties61.size();
        boolean boolean64 = properties61.containsKey((java.lang.Object) (-1.0f));
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet65 = properties61.entrySet();
        java.lang.Object obj66 = properties22.putIfAbsent((java.lang.Object) strBuilder60, (java.lang.Object) objEntrySet65);
        java.lang.String str67 = strBuilder60.getNewLineText();
        boolean boolean68 = properties0.equals((java.lang.Object) strBuilder60);
        java.lang.Object obj71 = properties0.setProperty("100.0", "{}3.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException", "h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer75.setIgnoreEmptyTokens(true);
        java.lang.Object obj78 = properties0.putIfAbsent((java.lang.Object) "32.0", (java.lang.Object) strTokenizer75);
        java.util.Enumeration<java.lang.Object> objEnumeration79 = properties0.keys();
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 32 + "'", int51 == 32);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(objEntrySet65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNotNull(objEnumeration79);
    }

    @Test
    public void test9431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9431");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        char[] charArray16 = strBuilder12.toCharArray();
        char[] charArray17 = strBuilder9.getChars(charArray16);
        java.io.Reader reader18 = strBuilder9.asReader();
        java.lang.Object obj19 = properties0.remove((java.lang.Object) strBuilder9);
        java.io.Writer writer20 = strBuilder9.asWriter();
        java.io.Writer writer22 = writer20.append('$');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.setNullText("");
        char[] charArray29 = strBuilder28.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, "true\n###################################3\n");
        writer20.write(charArray29);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst("", "");
        char[] charArray49 = strBuilder45.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_PREFIX;
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceFirst("", "");
        char[] charArray64 = strBuilder60.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder59.appendln(charArray64);
        int int69 = strMatcher52.isMatch(charArray64, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher50, strMatcher52);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder42.appendln(charArray49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray49);
        writer20.write(charArray49);
        writer20.flush();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(writer20);
        org.junit.Assert.assertNotNull(writer22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[]");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[]");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[]");
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strTokenizer74);
    }

    @Test
    public void test9432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9432");
        java.lang.Object obj0 = null;
        java.util.Properties properties1 = new java.util.Properties();
        int int2 = properties1.size();
        java.lang.Object obj3 = properties1.clone();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties1.keys();
        java.lang.String str5 = org.apache.commons.lang3.text.StrSubstitutor.replace(obj0, properties1);
        java.io.OutputStream outputStream6 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.storeToXML(outputStream6, "10.0StrTokenizer[ 4#4]\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test9433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9433");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst('a', '4');
        java.io.Writer writer9 = strBuilder8.asWriter();
        properties1.store(writer9, "");
        java.util.Collection<java.lang.Object> objCollection12 = properties1.values();
        java.util.Properties properties13 = new java.util.Properties(properties1);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        int int15 = strBuilder14.capacity();
        java.lang.StringBuffer stringBuffer16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendln(stringBuffer16, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder14.setLength(32);
        java.io.Writer writer25 = strBuilder24.asWriter();
        writer25.write(" 4#4", (int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        int int31 = strBuilder30.capacity();
        java.lang.StringBuffer stringBuffer32 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.appendln(stringBuffer32, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.insert(1, (double) 32);
        java.lang.String str40 = strBuilder30.rightString((int) ' ');
        boolean boolean42 = strBuilder30.startsWith("");
        char[] charArray43 = strBuilder30.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray43);
        writer25.write(charArray43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer47.setDelimiterString("10.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer47.reset();
        java.lang.Object obj51 = properties13.get((java.lang.Object) strTokenizer50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer50.setIgnoreEmptyTokens(true);
        java.lang.String str54 = strTokenizer50.previousToken();
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 32 + "'", int15 == 32);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(writer25);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 32 + "'", int31 == 32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\n32.0" + "'", str40, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNull(str54);
    }

    @Test
    public void test9434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9434");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceFirst("", "");
        char[] charArray21 = strBuilder17.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendln(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, '$', 'a');
        char[] charArray26 = strBuilder6.getChars(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        java.lang.String str28 = strTokenizer27.previousToken();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder29.appendSeparator("StrTokenizer[]", "java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder29.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst("", "");
        char[] charArray51 = strBuilder47.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder46.appendln(charArray51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray51);
        java.lang.String str54 = strTokenizer53.nextToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer53.getTrimmerMatcher();
        int int57 = strBuilder39.indexOf(strMatcher55, (int) 't');
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder39.replaceAll(strMatcher58, "\n2.0");
        java.util.Properties properties61 = new java.util.Properties();
        int int62 = properties61.size();
        boolean boolean64 = properties61.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.replaceFirst("", "");
        boolean boolean70 = strBuilder68.endsWith("StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.appendln('#');
        java.lang.StringBuffer stringBuffer79 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder76.append(stringBuffer79, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder76.deleteFirst("hi!");
        char[] charArray85 = strBuilder76.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer72.reset(charArray85);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray85);
        char[] charArray88 = strBuilder68.getChars(charArray85);
        java.lang.Object obj89 = properties61.remove((java.lang.Object) charArray88);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray88);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder60.appendln(charArray88);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = strTokenizer27.reset(charArray88);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = strTokenizer92.setDelimiterChar('o');
        boolean boolean95 = strTokenizer92.hasNext();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[]");
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[ ]");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[#, \n]");
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strTokenizer92);
        org.junit.Assert.assertNotNull(strTokenizer94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test9435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9435");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendAll((java.lang.Object[]) strArray6);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst("", "");
        char[] charArray15 = strBuilder11.toCharArray();
        char[] charArray16 = strBuilder8.getChars(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        char[] charArray18 = strBuilder0.getChars(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, 'E');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[]");
    }

    @Test
    public void test9436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9436");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        boolean boolean9 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.clear();
        boolean boolean13 = strBuilder11.startsWith(" 4#4");
        java.util.Properties properties14 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray21 = strTokenizer20.getTokenArray();
        java.lang.String[] strArray22 = strTokenizer20.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.appendWithSeparators((java.lang.Object[]) strArray22, "4#4");
        char[] charArray27 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray27);
        java.lang.Object obj29 = properties14.getOrDefault((java.lang.Object) strBuilder18, (java.lang.Object) strTokenizer28);
        java.util.Collection<java.lang.Object> objCollection30 = properties14.values();
        boolean boolean31 = properties14.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst("", "");
        char[] charArray39 = strBuilder35.toCharArray();
        char[] charArray40 = strBuilder32.getChars(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39);
        boolean boolean42 = strTokenizer41.hasPrevious();
        java.util.List<java.lang.String> strList43 = strTokenizer41.getTokenList();
        boolean boolean44 = strTokenizer41.hasNext();
        java.util.Properties properties45 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder54.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        int int57 = strBuilder56.capacity();
        java.lang.StringBuffer stringBuffer58 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.appendln(stringBuffer58, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int63 = strBuilder61.lastIndexOf(strMatcher62);
        boolean boolean64 = strBuilder54.equalsIgnoreCase(strBuilder61);
        char[] charArray67 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray67);
        boolean boolean69 = properties45.replace((java.lang.Object) strBuilder51, (java.lang.Object) strBuilder54, (java.lang.Object) strTokenizer68);
        java.lang.Object obj70 = properties14.replace((java.lang.Object) boolean44, (java.lang.Object) strTokenizer68);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder11.appendAll((java.util.Iterator<java.lang.String>) strTokenizer68);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder11.insert(2, "\n32.0a");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.appendln((double) 47);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(objCollection30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 32 + "'", int57 == 32);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
    }

    @Test
    public void test9437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9437");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder6.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder9, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int14 = strBuilder0.lastIndexOf(strMatcher13);
        char[] charArray19 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, ' ');
        int int22 = strTokenizer21.size();
        boolean boolean23 = strTokenizer21.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer21.setIgnoredMatcher(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder0.deleteFirst(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendFixedWidthPadLeft(10, (-1), 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder27.append("StrTokenizer[32.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder27.appendln(false);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
    }

    @Test
    public void test9438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9438");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.lang.String str10 = strBuilder0.rightString((int) ' ');
        boolean boolean12 = strBuilder0.startsWith("");
        char[] charArray13 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.setLength(71);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\n32.0" + "'", str10, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test9439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9439");
        char[] charArray3 = new char[] { 'a', '$', '$' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, '$');
        java.util.List<java.lang.String> strList6 = strTokenizer5.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setIgnoredChar('\000');
        int int9 = strTokenizer5.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer5.setDelimiterString("35.0\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer5.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer5.getTrimmerMatcher();
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "a$$");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "a$$");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[a, $, $]");
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strMatcher14);
    }

    @Test
    public void test9440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9440");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException", '{');
    }

    @Test
    public void test9441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9441");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "");
        char[] charArray7 = strBuilder3.toCharArray();
        char[] charArray8 = strBuilder0.getChars(charArray7);
        java.io.Reader reader9 = strBuilder0.asReader();
        boolean boolean10 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("");
        int int15 = strBuilder11.indexOf("");
        int int18 = strBuilder11.lastIndexOf('#', (int) (byte) 0);
        boolean boolean20 = strBuilder11.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder11.appendAll((java.util.Iterator<java.lang.String>) strTokenizer21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder11.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder11.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder11.appendln((int) (byte) 100);
        char[] charArray29 = strBuilder11.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, '#');
        char[] charArray32 = strBuilder0.getChars(charArray29);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray32);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray32);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[]");
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "0.0100\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "0.0100\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[0, ., 0, 1, 0, 0, \n]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "0.0100\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "0.0100\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[0, ., 0, 1, 0, 0, \n]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher34);
    }

    @Test
    public void test9442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9442");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        int int2 = strBuilder1.capacity();
        java.lang.StringBuffer stringBuffer3 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendln(stringBuffer3, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.appendln(true);
        boolean boolean13 = strSubstitutor0.replaceIn(strBuilder10, (int) '$', 0);
        int int16 = strBuilder10.indexOf(" #\n", (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder10.append(false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence21 = strBuilder10.subSequence(0, 51);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 51");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 32 + "'", int2 == 32);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test9443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9443");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray19 = strTokenizer18.getTokenArray();
        java.lang.String[] strArray20 = strTokenizer18.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendWithSeparators((java.lang.Object[]) strArray20, "4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteAll(strMatcher23);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder12.appendFixedWidthPadRight((java.lang.Object) strBuilder27, 0, '#');
        java.util.Properties properties31 = new java.util.Properties();
        int int32 = properties31.size();
        java.lang.Throwable throwable34 = null;
        java.io.IOException iOException35 = new java.io.IOException("\n32.0", throwable34);
        java.io.IOException iOException36 = new java.io.IOException((java.lang.Throwable) iOException35);
        char[] charArray39 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln('#');
        java.lang.StringBuffer stringBuffer51 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder48.append(stringBuffer51, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder48.deleteFirst("hi!");
        char[] charArray57 = strBuilder48.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer44.reset(charArray57);
        boolean boolean59 = properties31.replace((java.lang.Object) iOException35, (java.lang.Object) "hi!", (java.lang.Object) strTokenizer44);
        int int60 = properties31.size();
        int int61 = properties31.size();
        java.util.Set<java.lang.Object> objSet62 = properties31.keySet();
        java.lang.String str63 = properties31.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray69 = strTokenizer68.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder64.appendAll((java.lang.Object[]) strArray69);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder73.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.ensureCapacity((int) (short) 10);
        boolean boolean77 = strBuilder70.equals((java.lang.Object) strBuilder76);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder70.setNullText("java.io.IOException: hi!");
        boolean boolean80 = properties31.equals((java.lang.Object) strBuilder70);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder27.appendln((java.lang.Object) properties31);
        java.lang.String str82 = properties31.toString();
        java.lang.String str83 = properties31.toString();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(objSet62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "{}" + "'", str63, "{}");
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "{}" + "'", str82, "{}");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "{}" + "'", str83, "{}");
    }

    @Test
    public void test9444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9444");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        char[] charArray6 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.insert(0, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.trim();
        java.util.Properties properties11 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray18 = strTokenizer17.getTokenArray();
        java.lang.String[] strArray19 = strTokenizer17.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.appendWithSeparators((java.lang.Object[]) strArray19, "4#4");
        char[] charArray24 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray24);
        java.lang.Object obj26 = properties11.getOrDefault((java.lang.Object) strBuilder15, (java.lang.Object) strTokenizer25);
        java.util.Collection<java.lang.Object> objCollection27 = properties11.values();
        boolean boolean28 = properties11.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst("", "");
        char[] charArray40 = strBuilder36.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder35.appendln(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder35.appendln((double) '$');
        java.lang.Object obj44 = properties11.get((java.lang.Object) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder10.append((java.lang.Object) strBuilder35);
        char[] charArray46 = strBuilder35.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray46);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(objCollection27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "\n36.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "\n36.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[\n, 3, 6, ., 0, \n]");
        org.junit.Assert.assertNotNull(strMatcher47);
    }

    @Test
    public void test9445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9445");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.lang.Object obj27 = properties0.setProperty(" 4#4", "\n32.0");
        java.lang.Object obj30 = properties0.setProperty("hi!", "hi!");
        boolean boolean31 = properties0.isEmpty();
        java.io.InputStream inputStream32 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(inputStream32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test9446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9446");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("10.0StrTokenizer[ 4#4]\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strBuilder1.asTokenizer();
        org.junit.Assert.assertNotNull(strTokenizer2);
    }

    @Test
    public void test9447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9447");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray2 = strTokenizer1.getTokenArray();
        java.lang.String[] strArray3 = strTokenizer1.getTokenArray();
        boolean boolean4 = strTokenizer1.hasNext();
        int int5 = strTokenizer1.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer1.getQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        int int8 = strBuilder7.capacity();
        java.lang.StringBuffer stringBuffer9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.appendln(stringBuffer9, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder7.insert(1, (double) 32);
        int int16 = strBuilder7.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder7.append((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder7.append((float) 5);
        char[] charArray21 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer1.reset(charArray21);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getIgnoredMatcher();
        boolean boolean24 = strTokenizer22.hasNext();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 32 + "'", int8 == 32);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 32 + "'", int16 == 32);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "\n32.032.05.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "\n32.032.05.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[\n, 3, 2, ., 0, 3, 2, ., 0, 5, ., 0]");
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test9448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9448");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        char[] charArray14 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, ' ');
        int int17 = strTokenizer16.size();
        boolean boolean18 = strTokenizer16.hasNext();
        java.util.List<java.lang.String> strList19 = strTokenizer16.getTokenList();
        java.lang.String[] strArray23 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        boolean boolean26 = strList19.addAll((java.util.Collection<java.lang.String>) strList24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder0.appendAll((java.lang.Iterable<java.lang.String>) strList24);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor28 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        int int30 = strBuilder29.capacity();
        java.lang.StringBuffer stringBuffer31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(stringBuffer31, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder29.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln(true);
        boolean boolean41 = strSubstitutor28.replaceIn(strBuilder38, (int) '$', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder0.append((java.lang.CharSequence) strBuilder38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strBuilder38.asTokenizer();
        char[] charArray48 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, ' ');
        int int51 = strTokenizer50.size();
        boolean boolean52 = strTokenizer50.hasNext();
        java.util.List<java.lang.String> strList53 = strTokenizer50.getTokenList();
        java.lang.String[] strArray57 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        boolean boolean60 = strList53.addAll((java.util.Collection<java.lang.String>) strList58);
        java.util.Spliterator<java.lang.String> strSpliterator61 = strList58.spliterator();
        int int62 = strList58.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int66 = strList58.lastIndexOf((java.lang.Object) strTokenizer65);
        strList58.clear();
        java.util.Spliterator<java.lang.String> strSpliterator68 = strList58.spliterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder38.appendAll((java.lang.Iterable<java.lang.String>) strList58);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder38.deleteCharAt(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder38.appendSeparator("java.io.IOException: StrTokenizer[not tokenized yet]", (-1));
        java.io.Reader reader75 = strBuilder74.asReader();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 32 + "'", int30 == 32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strSpliterator61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 3 + "'", int62 == 3);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strSpliterator68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(reader75);
    }

    @Test
    public void test9449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9449");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln((double) '#');
        java.util.stream.IntStream intStream6 = strBuilder3.codePoints();
        boolean boolean8 = strBuilder3.endsWith("4\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray14 = strTokenizer13.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.appendAll((java.lang.Object[]) strArray14);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.ensureCapacity((int) (short) 10);
        boolean boolean22 = strBuilder15.equals((java.lang.Object) strBuilder21);
        int int25 = strBuilder15.lastIndexOf(' ', 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder15.appendln(false);
        java.util.Properties properties28 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder37.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        int int40 = strBuilder39.capacity();
        java.lang.StringBuffer stringBuffer41 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.appendln(stringBuffer41, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int46 = strBuilder44.lastIndexOf(strMatcher45);
        boolean boolean47 = strBuilder37.equalsIgnoreCase(strBuilder44);
        char[] charArray50 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray50);
        boolean boolean52 = properties28.replace((java.lang.Object) strBuilder34, (java.lang.Object) strBuilder37, (java.lang.Object) strTokenizer51);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder37.deleteAll("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder37.deleteAll("1");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder37.append((float) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder27.append(strBuilder37);
        java.lang.StringBuffer stringBuffer60 = strBuilder27.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder3.appendln(stringBuffer60);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 32 + "'", int40 == 32);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(stringBuffer60);
        org.junit.Assert.assertEquals(stringBuffer60.toString(), "false\n-1.0");
        org.junit.Assert.assertNotNull(strBuilder61);
    }

    @Test
    public void test9450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9450");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        char[] charArray7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.appendln(charArray7, (int) (short) 1, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.insert(0, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.appendPadding((int) (byte) 0, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.append(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.replaceFirst("\n32.0a", "#36.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteFirst("\n32.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.appendln('m');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test9451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9451");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Throwable throwable3 = null;
        java.io.IOException iOException4 = new java.io.IOException("\n32.0", throwable3);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException4);
        char[] charArray8 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln('#');
        java.lang.StringBuffer stringBuffer20 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append(stringBuffer20, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.deleteFirst("hi!");
        char[] charArray26 = strBuilder17.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer13.reset(charArray26);
        boolean boolean28 = properties0.replace((java.lang.Object) iOException4, (java.lang.Object) "hi!", (java.lang.Object) strTokenizer13);
        int int29 = properties0.size();
        int int30 = properties0.size();
        java.util.Set<java.lang.Object> objSet31 = properties0.keySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln('#');
        char[] charArray49 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        int int52 = strTokenizer51.size();
        boolean boolean53 = strTokenizer51.hasNext();
        java.util.List<java.lang.String> strList54 = strTokenizer51.getTokenList();
        java.lang.String[] strArray58 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        boolean boolean61 = strList54.addAll((java.util.Collection<java.lang.String>) strList59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray64 = strTokenizer63.getTokenArray();
        java.lang.String[] strArray65 = strTokenizer63.getTokenArray();
        boolean boolean66 = strTokenizer63.hasNext();
        int int67 = strTokenizer63.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = strTokenizer63.getQuoteMatcher();
        java.util.List<java.lang.String> strList69 = strTokenizer63.getTokenList();
        boolean boolean70 = strList54.retainAll((java.util.Collection<java.lang.String>) strList69);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder42.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList54, "");
        java.lang.Object obj73 = properties0.getOrDefault((java.lang.Object) (short) 0, (java.lang.Object) strList54);
        boolean boolean74 = strList54.isEmpty();
        java.util.ListIterator<java.lang.String> strItor75 = strList54.listIterator();
        boolean boolean77 = strList54.add("0.23\n10.0\n");
        java.util.stream.Stream<java.lang.String> strStream78 = strList54.stream();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "[0.23\n10.0\n]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "[0.23\n10.0\n]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "[0.23\n10.0\n]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(strItor75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strStream78);
    }

    @Test
    public void test9452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9452");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer5, "h");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst("", "");
        java.lang.String str13 = strBuilder9.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.appendln((float) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.setNullText(" ");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.appendSeparator(' ', 53);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.appendln((float) 't');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.deleteAll('4');
        int int30 = strBuilder28.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.replaceFirst("java.io.IOException: hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder28.replaceFirst("\n32.0java.io.IOException: hi!", "java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder22.append((java.lang.Object) strBuilder38);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder8.appendln((java.lang.Object) strBuilder38);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.appendSeparator("100.0", "#36.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder46.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.setNullText("");
        char[] charArray50 = strBuilder49.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder49.insert(0, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        int int56 = strBuilder55.capacity();
        java.lang.StringBuffer stringBuffer57 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.appendln(stringBuffer57, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int62 = strBuilder60.lastIndexOf(strMatcher61);
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        boolean boolean64 = strBuilder60.contains(strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher63);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder49.replaceFirst(strMatcher63, "true\n###################################");
        int int68 = strBuilder43.indexOf(strMatcher63);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[]");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 32 + "'", int56 == 32);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
    }

    @Test
    public void test9453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9453");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst('a', '4');
        java.io.Writer writer9 = strBuilder8.asWriter();
        properties1.store(writer9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        java.io.Reader reader16 = strBuilder12.asReader();
        properties1.load(reader16);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst("", "");
        char[] charArray29 = strBuilder25.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder24.appendln(charArray29);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.appendln((double) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteAll('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst("", "");
        char[] charArray39 = strBuilder35.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_PREFIX;
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceFirst("", "");
        char[] charArray54 = strBuilder50.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.appendln(charArray54);
        int int59 = strMatcher42.isMatch(charArray54, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher40, strMatcher42);
        java.lang.Object obj61 = properties1.put((java.lang.Object) strBuilder34, (java.lang.Object) strTokenizer60);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray67 = strTokenizer66.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder62.appendAll((java.lang.Object[]) strArray67);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder62.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream72 = strBuilder62.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        int int74 = strBuilder73.capacity();
        java.lang.StringBuffer stringBuffer75 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder73.appendln(stringBuffer75, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder73.insert(1, (double) 32);
        boolean boolean82 = strBuilder73.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder73.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder73.append((long) (byte) -1);
        java.lang.Object obj86 = properties1.put((java.lang.Object) strBuilder62, (java.lang.Object) strBuilder73);
        properties1.clear();
        java.io.OutputStream outputStream88 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.storeToXML(outputStream88, "tttttttttttttttttttttttttttttttttttttttttttttttttt", "\000\000\000\000\000\000\000\000\000\000\000");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[]");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[]");
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[]");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(intStream72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 32 + "'", int74 == 32);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNull(obj86);
    }

    @Test
    public void test9454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9454");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        char[] charArray4 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        int int9 = strBuilder8.capacity();
        java.lang.StringBuffer stringBuffer10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.appendln(stringBuffer10, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int15 = strBuilder13.lastIndexOf(strMatcher14);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        boolean boolean17 = strBuilder13.contains(strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test9455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9455");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.lang.String str10 = properties4.getProperty("h");
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray17 = strTokenizer16.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendAll((java.lang.Object[]) strArray17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder12.replaceFirst('a', 'a');
        char[] charArray26 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ');
        int int29 = strTokenizer28.size();
        boolean boolean30 = strTokenizer28.hasNext();
        java.util.List<java.lang.String> strList31 = strTokenizer28.getTokenList();
        java.lang.String[] strArray35 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        boolean boolean38 = strList31.addAll((java.util.Collection<java.lang.String>) strList36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder12.appendAll((java.lang.Iterable<java.lang.String>) strList36);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor40 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        int int42 = strBuilder41.capacity();
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendln(stringBuffer43, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln(true);
        boolean boolean53 = strSubstitutor40.replaceIn(strBuilder50, (int) '$', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder12.append((java.lang.CharSequence) strBuilder50);
        boolean boolean55 = properties4.equals((java.lang.Object) strBuilder12);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties4.keys();
        properties4.clear();
        java.util.Collection<java.lang.Object> objCollection58 = properties4.values();
        java.util.Properties properties59 = new java.util.Properties(properties4);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        int int61 = strBuilder60.capacity();
        java.lang.StringBuffer stringBuffer62 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder60.appendln(stringBuffer62, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder60.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder60.setLength(32);
        java.io.Writer writer71 = strBuilder70.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.appendln("{\n36.0\n=StrTokenizer[not tokenized yet]}");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder70.clear();
        java.lang.Object obj75 = properties4.remove((java.lang.Object) strBuilder70);
        java.util.Properties properties76 = new java.util.Properties();
        java.util.Properties properties77 = new java.util.Properties(properties76);
        java.lang.Object obj78 = properties77.clone();
        java.util.Properties properties79 = new java.util.Properties();
        java.util.Properties properties80 = new java.util.Properties(properties79);
        java.util.Enumeration<java.lang.Object> objEnumeration81 = properties80.keys();
        properties77.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties80);
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties77);
        int int84 = properties77.size();
        java.util.Collection<java.lang.Object> objCollection85 = properties77.values();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 32 + "'", int42 == 32);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertNotNull(objCollection58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 32 + "'", int61 == 32);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(writer71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "{}");
        org.junit.Assert.assertNotNull(objEnumeration81);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(objCollection85);
    }

    @Test
    public void test9456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9456");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        char[] charArray7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.appendln(charArray7, (int) (short) 1, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.insert(0, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.appendPadding((int) (byte) 0, '$');
        int int17 = strBuilder13.size();
        int int18 = strBuilder13.length();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
    }

    @Test
    public void test9457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9457");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("100.0", "1");
        java.lang.Object obj3 = strTokenizer2.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer2.setIgnoredChar('1');
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
    }

    @Test
    public void test9458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9458");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader9 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream20 = strBuilder10.codePoints();
        java.lang.Object obj21 = properties0.replace((java.lang.Object) reader9, (java.lang.Object) intStream20);
        long long23 = reader9.skip(0L);
        reader9.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("");
        int int29 = strBuilder25.indexOf("");
        int int32 = strBuilder25.lastIndexOf('#', (int) (byte) 0);
        java.io.Reader reader33 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder25.appendSeparator("{}");
        java.lang.StringBuffer stringBuffer36 = strBuilder35.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.appendSeparator("########");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.setNullText("");
        char[] charArray45 = strBuilder44.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, "true\n###################################3\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder35.appendln(charArray45);
        int int49 = reader9.read(charArray45);
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(reader33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(stringBuffer36);
        org.junit.Assert.assertEquals(stringBuffer36.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[]");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
    }

    @Test
    public void test9459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9459");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray11 = strTokenizer10.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendAll((java.lang.Object[]) strArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder6.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray21 = strTokenizer20.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendAll((java.lang.Object[]) strArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder6.appendln(strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst('a', '4');
        java.io.Writer writer36 = strBuilder35.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst("", "");
        char[] charArray48 = strBuilder44.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.appendln(charArray48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray48);
        writer36.write(charArray48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder28.append(charArray48);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charMatcher('#');
        int int56 = strBuilder28.indexOf(strMatcher54, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder3.deleteAll(strMatcher54);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.insert(0, (long) 10);
        java.io.Writer writer61 = strBuilder57.asWriter();
        java.io.Writer writer63 = writer61.append('$');
        char[] charArray64 = null;
        writer63.write(charArray64);
        writer63.write("l");
        java.io.Writer writer69 = writer63.append('a');
        writer69.write("java.io.IOException: \n");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(writer36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[]");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(writer61);
        org.junit.Assert.assertNotNull(writer63);
        org.junit.Assert.assertNotNull(writer69);
    }

    @Test
    public void test9460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9460");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        char[] charArray6 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.insert(0, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteAll("#\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.appendSeparator('\000', 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder14.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.deleteFirst("32.0");
        java.lang.String str18 = strBuilder17.toString();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "true" + "'", str18, "true");
    }

    @Test
    public void test9461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9461");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = strTokenizer1.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.reset("");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strTokenizer1.getIgnoredMatcher();
        java.lang.String[] strArray6 = strTokenizer1.getTokenArray();
        boolean boolean7 = strTokenizer1.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer1.reset("#\n4#44#443.0");
        boolean boolean10 = strTokenizer1.isIgnoreEmptyTokens();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test9462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9462");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.util.Set<java.lang.Object> objSet2 = properties0.keySet();
        java.util.Properties properties5 = new java.util.Properties();
        int int6 = properties5.size();
        boolean boolean8 = properties5.containsKey((java.lang.Object) (-1.0f));
        boolean boolean9 = properties0.replace((java.lang.Object) (byte) 1, (java.lang.Object) true, (java.lang.Object) (-1.0f));
        char[] charArray14 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, ' ');
        int int17 = strTokenizer16.size();
        boolean boolean18 = strTokenizer16.hasNext();
        java.util.List<java.lang.String> strList19 = strTokenizer16.getTokenList();
        java.lang.String[] strArray23 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        boolean boolean26 = strList19.addAll((java.util.Collection<java.lang.String>) strList24);
        java.util.Spliterator<java.lang.String> strSpliterator27 = strList24.spliterator();
        int int28 = strList24.size();
        boolean boolean30 = strList24.add("StrTokenizer[]");
        java.util.stream.Stream<java.lang.String> strStream31 = strList24.stream();
        boolean boolean32 = properties0.containsKey((java.lang.Object) strList24);
        java.util.stream.Stream<java.lang.String> strStream33 = strList24.parallelStream();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder34.appendFixedWidthPadRight((java.lang.Object) strBuilder43, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.append("\n");
        java.util.Iterator<java.lang.String> strItor49 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendAll(strItor49);
        int int51 = strList24.lastIndexOf((java.lang.Object) strItor49);
        java.util.Iterator<java.lang.String> strItor52 = strList24.iterator();
        char[] charArray57 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, ' ');
        int int60 = strTokenizer59.size();
        boolean boolean61 = strTokenizer59.hasNext();
        java.util.List<java.lang.String> strList62 = strTokenizer59.getTokenList();
        java.lang.String[] strArray66 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList67 = new java.util.ArrayList<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        boolean boolean69 = strList62.addAll((java.util.Collection<java.lang.String>) strList67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray72 = strTokenizer71.getTokenArray();
        java.lang.String[] strArray73 = strTokenizer71.getTokenArray();
        boolean boolean74 = strTokenizer71.hasNext();
        int int75 = strTokenizer71.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = strTokenizer71.getQuoteMatcher();
        java.util.List<java.lang.String> strList77 = strTokenizer71.getTokenList();
        boolean boolean78 = strList62.retainAll((java.util.Collection<java.lang.String>) strList77);
        java.lang.Object[] objArray79 = strList62.toArray();
        java.util.stream.Stream<java.lang.String> strStream80 = strList62.parallelStream();
        boolean boolean81 = strList24.containsAll((java.util.Collection<java.lang.String>) strList62);
        strList24.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(objSet2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strSpliterator27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 3 + "'", int28 == 3);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strStream31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strStream33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strItor52);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[]");
        org.junit.Assert.assertNotNull(strStream80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test9463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9463");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst('a', '4');
        java.io.Writer writer9 = strBuilder8.asWriter();
        properties1.store(writer9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        java.io.Reader reader16 = strBuilder12.asReader();
        properties1.load(reader16);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet18 = properties1.entrySet();
        java.io.InputStream inputStream19 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.load(inputStream19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(objEntrySet18);
    }

    @Test
    public void test9464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9464");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst('a', '4');
        java.io.Writer writer9 = strBuilder8.asWriter();
        properties1.store(writer9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        java.io.Reader reader16 = strBuilder12.asReader();
        properties1.load(reader16);
        int int18 = reader16.read();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst("", "");
        char[] charArray23 = strBuilder19.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_PREFIX;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst("", "");
        char[] charArray38 = strBuilder34.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.appendln(charArray38);
        int int43 = strMatcher26.isMatch(charArray38, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher24, strMatcher26);
        int int45 = reader16.read(charArray23);
        long long47 = reader16.skip(0L);
        boolean boolean48 = reader16.ready();
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[]");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test9465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9465");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((double) '#');
        boolean boolean15 = strBuilder5.equals(strBuilder14);
        java.util.stream.IntStream intStream16 = strBuilder5.codePoints();
        java.util.Iterator<java.lang.String> strItor17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder5.appendWithSeparators(strItor17, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst(' ', ' ');
        java.io.Writer writer23 = strBuilder22.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer29, "h");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder24.setLength((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.insert((int) '4', (double) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder22.append(strBuilder37, 32, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst('a', '4');
        char[] charArray52 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, ' ');
        int int55 = strTokenizer54.size();
        boolean boolean56 = strTokenizer54.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer54.setIgnoredMatcher(strMatcher57);
        int int60 = strBuilder44.indexOf(strMatcher57, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder40.deleteAll(strMatcher57);
        char[] charArray66 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray66);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, '1', '\n');
        // The following exception was thrown during execution in test generation
        try {
            strBuilder40.getChars((int) (short) 0, 2, charArray66, 106);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(writer23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strMatcher68);
    }

    @Test
    public void test9466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9466");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.lang.String str10 = properties4.getProperty("h");
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray17 = strTokenizer16.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendAll((java.lang.Object[]) strArray17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder12.replaceFirst('a', 'a');
        char[] charArray26 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ');
        int int29 = strTokenizer28.size();
        boolean boolean30 = strTokenizer28.hasNext();
        java.util.List<java.lang.String> strList31 = strTokenizer28.getTokenList();
        java.lang.String[] strArray35 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        boolean boolean38 = strList31.addAll((java.util.Collection<java.lang.String>) strList36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder12.appendAll((java.lang.Iterable<java.lang.String>) strList36);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor40 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        int int42 = strBuilder41.capacity();
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendln(stringBuffer43, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln(true);
        boolean boolean53 = strSubstitutor40.replaceIn(strBuilder50, (int) '$', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder12.append((java.lang.CharSequence) strBuilder50);
        boolean boolean55 = properties4.equals((java.lang.Object) strBuilder12);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties4.keys();
        properties4.clear();
        java.util.Collection<java.lang.Object> objCollection58 = properties4.values();
        java.lang.String str59 = properties4.toString();
        java.util.Properties properties60 = new java.util.Properties(properties4);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 32 + "'", int42 == 32);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertNotNull(objCollection58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "{}" + "'", str59, "{}");
    }

    @Test
    public void test9467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9467");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("#######0");
        java.util.List<java.lang.String> strList2 = strTokenizer1.getTokenList();
        java.lang.Object obj3 = null;
        int int4 = strList2.indexOf(obj3);
        java.util.ListIterator<java.lang.String> strItor5 = strList2.listIterator();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strItor5);
    }

    @Test
    public void test9468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9468");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader9 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream20 = strBuilder10.codePoints();
        java.lang.Object obj21 = properties0.replace((java.lang.Object) reader9, (java.lang.Object) intStream20);
        long long23 = reader9.skip(0L);
        long long25 = reader9.skip(0L);
        int int26 = reader9.read();
        long long28 = reader9.skip((long) 105);
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 35 + "'", int26 == 35);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
    }

    @Test
    public void test9469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9469");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet4 = properties0.entrySet();
        int int5 = properties0.size();
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.lang.String str7 = properties0.toString();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objEntrySet4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
    }

    @Test
    public void test9470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9470");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", '$');
        java.lang.String[] strArray3 = strTokenizer2.getTokenArray();
        int int4 = strTokenizer2.previousIndex();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test9471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9471");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("java.io.IOException: \n\n97\n4\n\n#32.0\n");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test9472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9472");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        java.lang.String[] strArray7 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendWithSeparators((java.lang.Object[]) strArray7, "4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteAll(strMatcher10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.deleteAll('4');
        int int22 = strBuilder20.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst("", "");
        char[] charArray27 = strBuilder23.toCharArray();
        char[] charArray28 = strBuilder20.getChars(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27);
        char[] charArray30 = strBuilder14.getChars(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, '4', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, '\000', '#');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[f, a, l, s, e]");
    }

    @Test
    public void test9473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9473");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        int int16 = properties0.size();
        java.util.Properties properties17 = new java.util.Properties();
        int int18 = properties17.size();
        boolean boolean20 = properties17.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties21 = new java.util.Properties();
        int int22 = properties21.size();
        boolean boolean24 = properties21.containsKey((java.lang.Object) (-1.0f));
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.util.Set<java.lang.Object> objSet26 = properties21.keySet();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.appendln('#');
        char[] charArray44 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, ' ');
        int int47 = strTokenizer46.size();
        boolean boolean48 = strTokenizer46.hasNext();
        java.util.List<java.lang.String> strList49 = strTokenizer46.getTokenList();
        java.lang.String[] strArray53 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        boolean boolean56 = strList49.addAll((java.util.Collection<java.lang.String>) strList54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray59 = strTokenizer58.getTokenArray();
        java.lang.String[] strArray60 = strTokenizer58.getTokenArray();
        boolean boolean61 = strTokenizer58.hasNext();
        int int62 = strTokenizer58.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer58.getQuoteMatcher();
        java.util.List<java.lang.String> strList64 = strTokenizer58.getTokenList();
        boolean boolean65 = strList49.retainAll((java.util.Collection<java.lang.String>) strList64);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder37.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList49, "");
        java.lang.Object obj68 = properties0.remove((java.lang.Object) strList49);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.appendSeparator('#', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.append((float) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder75.appendln(32);
        java.io.Reader reader80 = strBuilder75.asReader();
        properties0.load(reader80);
        java.nio.CharBuffer charBuffer82 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int83 = reader80.read(charBuffer82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(reader80);
    }

    @Test
    public void test9474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9474");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln('#');
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.append(stringBuffer8, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder5.deleteFirst("hi!");
        char[] charArray14 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer1.reset(charArray14);
        java.lang.String str16 = strTokenizer1.next();
        java.util.List<java.lang.String> strList17 = strTokenizer1.getTokenList();
        java.lang.String str18 = strTokenizer1.previous();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer1.reset();
        java.lang.String str20 = strTokenizer19.next();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "#" + "'", str16, "#");
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#" + "'", str18, "#");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "#" + "'", str20, "#");
    }

    @Test
    public void test9475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9475");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", "0");
        int int3 = strTokenizer2.nextIndex();
        java.lang.String str4 = strTokenizer2.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer2.setIgnoredChar('#');
        boolean boolean7 = strTokenizer6.isEmptyTokenAsNull();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test9476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9476");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        int int2 = strBuilder1.capacity();
        java.lang.StringBuffer stringBuffer3 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendln(stringBuffer3, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.appendln(true);
        boolean boolean13 = strSubstitutor0.replaceIn(strBuilder10, (int) '$', 0);
        strSubstitutor0.setEscapeChar('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.appendln('#');
        java.lang.StringBuffer stringBuffer22 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.append(stringBuffer22, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder19.deleteFirst("hi!");
        char[] charArray28 = strBuilder19.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray28);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor30 = strSubstitutor0.setVariablePrefixMatcher(strMatcher29);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.deleteAll('4');
        int int39 = strBuilder37.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.deleteAll('4');
        int int47 = strBuilder45.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst("", "");
        char[] charArray52 = strBuilder48.toCharArray();
        char[] charArray53 = strBuilder45.getChars(charArray52);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder37.appendln(charArray53);
        char[] charArray59 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, ' ');
        int int62 = strTokenizer61.size();
        boolean boolean63 = strTokenizer61.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer61.setIgnoredMatcher(strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer68.reset("");
        java.lang.String str72 = strTokenizer71.nextToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = strTokenizer71.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: java.io.IOException", strMatcher64, strMatcher73);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor75 = strSubstitutor30.setVariablePrefixMatcher(strMatcher73);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor77 = strSubstitutor30.setVariablePrefix('e');
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 32 + "'", int2 == 32);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, \n]");
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strSubstitutor30);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[]");
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strSubstitutor75);
        org.junit.Assert.assertNotNull(strSubstitutor77);
    }

    @Test
    public void test9477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9477");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: \n32.0", '\000');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer2.add("$");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test9478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9478");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("{}3.0\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n32.0", "100.0\000\000\000\000\000");
    }

    @Test
    public void test9479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9479");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.util.Properties properties9 = new java.util.Properties();
        int int10 = properties9.size();
        boolean boolean12 = properties9.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "");
        char[] charArray17 = strBuilder13.toCharArray();
        boolean boolean18 = properties9.containsValue((java.lang.Object) charArray17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder0.append(charArray17, (int) (byte) 0, 0);
        java.lang.String str22 = strBuilder21.toString();
        char[] charArray27 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, ' ');
        java.lang.String str30 = strTokenizer29.next();
        int int31 = strTokenizer29.previousIndex();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder21.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer29, "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder21.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer40.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder35.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer40, "h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer40.reset("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder52.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder46.appendFixedWidthPadRight((java.lang.Object) strBuilder55, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int60 = strBuilder46.lastIndexOf(strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer40.setQuoteMatcher(strMatcher59);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder21.appendFixedWidthPadLeft((java.lang.Object) strTokenizer40, (int) '$', ' ');
        java.lang.String str65 = strTokenizer40.next();
        java.lang.String str66 = strTokenizer40.previous();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\n32.0" + "'", str22, "\n32.0");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[ , 4, #, 4]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "4#4" + "'", str30, "4#4");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "32.0" + "'", str65, "32.0");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "32.0" + "'", str66, "32.0");
    }

    @Test
    public void test9480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9480");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        char[] charArray21 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        int int24 = strTokenizer23.size();
        boolean boolean25 = strTokenizer23.hasNext();
        java.util.List<java.lang.String> strList26 = strTokenizer23.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "");
        char[] charArray31 = strBuilder27.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        boolean boolean35 = strList26.equals((java.lang.Object) charArray31);
        char[] charArray40 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        int int43 = strTokenizer42.size();
        boolean boolean44 = strTokenizer42.hasNext();
        java.util.List<java.lang.String> strList45 = strTokenizer42.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        int int47 = strBuilder46.capacity();
        java.lang.StringBuffer stringBuffer48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(stringBuffer48, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder46.insert(1, (double) 32);
        java.lang.String str56 = strBuilder46.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder46.insert(1, '#');
        boolean boolean60 = strList45.equals((java.lang.Object) strBuilder46);
        boolean boolean61 = strList26.containsAll((java.util.Collection<java.lang.String>) strList45);
        boolean boolean62 = strList9.addAll((java.util.Collection<java.lang.String>) strList45);
        strList45.clear();
        strList45.clear();
        int int65 = strList45.size();
        java.util.ListIterator<java.lang.String> strItor66 = strList45.listIterator();
        java.lang.Object[] objArray67 = strList45.toArray();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 32 + "'", int47 == 32);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\n32.0" + "'", str56, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(strItor66);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
    }

    @Test
    public void test9481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9481");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("\na32", '\n');
    }

    @Test
    public void test9482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9482");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.lang.String str10 = strBuilder0.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.insert(1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.setCharAt(1, 'a');
        java.util.stream.IntStream intStream17 = strBuilder16.codePoints();
        java.lang.String str18 = strBuilder16.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln('#');
        java.lang.StringBuffer stringBuffer27 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder24.append(stringBuffer27, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.deleteFirst("hi!");
        char[] charArray33 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer20.reset(charArray33);
        java.lang.String str35 = strTokenizer20.next();
        java.util.List<java.lang.String> strList36 = strTokenizer20.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.append('a');
        int int45 = strBuilder38.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strBuilder38.asTokenizer();
        boolean boolean47 = strList36.remove((java.lang.Object) strBuilder38);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder16.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList36, "true\n");
        // The following exception was thrown during execution in test generation
        try {
            char char51 = strBuilder49.charAt(42);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 42");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\n32.0" + "'", str10, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(intStream17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\na32.0" + "'", str18, "\na32.0");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "#" + "'", str35, "#");
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strBuilder49);
    }

    @Test
    public void test9483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9483");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.util.Spliterator<java.lang.String> strSpliterator17 = strList14.spliterator();
        int int18 = strList14.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int22 = strList14.lastIndexOf((java.lang.Object) strTokenizer21);
        java.util.List<java.lang.String> strList23 = strTokenizer21.getTokenList();
        char[] charArray28 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, ' ');
        int int31 = strTokenizer30.size();
        boolean boolean32 = strTokenizer30.hasNext();
        java.util.List<java.lang.String> strList33 = strTokenizer30.getTokenList();
        java.lang.String[] strArray37 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        boolean boolean40 = strList33.addAll((java.util.Collection<java.lang.String>) strList38);
        char[] charArray45 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, ' ');
        int int48 = strTokenizer47.size();
        boolean boolean49 = strTokenizer47.hasNext();
        java.util.List<java.lang.String> strList50 = strTokenizer47.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst("", "");
        char[] charArray55 = strBuilder51.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray55);
        boolean boolean59 = strList50.equals((java.lang.Object) charArray55);
        char[] charArray64 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, ' ');
        int int67 = strTokenizer66.size();
        boolean boolean68 = strTokenizer66.hasNext();
        java.util.List<java.lang.String> strList69 = strTokenizer66.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        int int71 = strBuilder70.capacity();
        java.lang.StringBuffer stringBuffer72 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder70.appendln(stringBuffer72, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder70.insert(1, (double) 32);
        java.lang.String str80 = strBuilder70.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder70.insert(1, '#');
        boolean boolean84 = strList69.equals((java.lang.Object) strBuilder70);
        boolean boolean85 = strList50.containsAll((java.util.Collection<java.lang.String>) strList69);
        boolean boolean86 = strList33.addAll((java.util.Collection<java.lang.String>) strList69);
        boolean boolean87 = strList23.removeAll((java.util.Collection<java.lang.String>) strList33);
        java.util.stream.Stream<java.lang.String> strStream88 = strList33.stream();
        strList33.clear();
        strList33.clear();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strSpliterator17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 32 + "'", int71 == 32);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "\n32.0" + "'", str80, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(strStream88);
    }

    @Test
    public void test9484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9484");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("a4", strMatcher1);
        int int3 = strTokenizer2.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer2.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer7.setIgnoreEmptyTokens(true);
        org.junit.Assert.assertNotNull(strMatcher1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer9);
    }

    @Test
    public void test9485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9485");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        char[] charArray14 = strBuilder10.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        boolean boolean18 = strList9.equals((java.lang.Object) charArray14);
        char[] charArray23 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, ' ');
        int int26 = strTokenizer25.size();
        boolean boolean27 = strTokenizer25.hasNext();
        java.util.List<java.lang.String> strList28 = strTokenizer25.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        int int30 = strBuilder29.capacity();
        java.lang.StringBuffer stringBuffer31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(stringBuffer31, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder29.insert(1, (double) 32);
        java.lang.String str39 = strBuilder29.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder29.insert(1, '#');
        boolean boolean43 = strList28.equals((java.lang.Object) strBuilder29);
        boolean boolean44 = strList9.containsAll((java.util.Collection<java.lang.String>) strList28);
        java.lang.String str46 = strList9.remove((int) (short) 0);
        java.util.Iterator<java.lang.String> strItor47 = strList9.iterator();
        java.util.ListIterator<java.lang.String> strItor48 = strList9.listIterator();
        char[] charArray53 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, ' ');
        int int56 = strTokenizer55.size();
        boolean boolean57 = strTokenizer55.hasNext();
        java.util.List<java.lang.String> strList58 = strTokenizer55.getTokenList();
        java.lang.String[] strArray62 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        boolean boolean65 = strList58.addAll((java.util.Collection<java.lang.String>) strList63);
        java.util.Spliterator<java.lang.String> strSpliterator66 = strList63.spliterator();
        int int67 = strList63.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int71 = strList63.lastIndexOf((java.lang.Object) strTokenizer70);
        strList63.clear();
        java.util.Spliterator<java.lang.String> strSpliterator73 = strList63.spliterator();
        boolean boolean75 = strList63.add("100.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.replaceFirst('$', 'a');
        java.io.Reader reader81 = strBuilder80.asReader();
        boolean boolean82 = strList63.contains((java.lang.Object) strBuilder80);
        boolean boolean83 = strList9.retainAll((java.util.Collection<java.lang.String>) strList63);
        java.util.ListIterator<java.lang.String> strItor85 = strList9.listIterator(0);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 32 + "'", int30 == 32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\n32.0" + "'", str39, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "4#4" + "'", str46, "4#4");
        org.junit.Assert.assertNotNull(strItor47);
        org.junit.Assert.assertNotNull(strItor48);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strSpliterator66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 3 + "'", int67 == 3);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(strSpliterator73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(reader81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strItor85);
    }

    @Test
    public void test9486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9486");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        int int9 = strBuilder0.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.append((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteAll('e');
        int int16 = strBuilder11.indexOf('#', 0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test9487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9487");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        int int9 = strBuilder8.capacity();
        java.lang.StringBuffer stringBuffer10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.appendln(stringBuffer10, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder8.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder8.setLength(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 0, (long) (byte) -1);
        java.lang.StringBuffer stringBuffer23 = strBuilder19.toStringBuffer();
        boolean boolean24 = strBuilder0.equalsIgnoreCase(strBuilder19);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder19.setCharAt(22, '1');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 22");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(stringBuffer23);
        org.junit.Assert.assertEquals(stringBuffer23.toString(), "-132.0");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test9488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9488");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "");
        char[] charArray7 = strBuilder3.toCharArray();
        char[] charArray8 = strBuilder0.getChars(charArray7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray8);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[]");
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strMatcher11);
    }

    @Test
    public void test9489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9489");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.appendln((long) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append("3297\nhi!");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test9490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9490");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder0.indexOf("");
        int int7 = strBuilder0.lastIndexOf('#', (int) (byte) 0);
        java.io.Reader reader8 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.appendSeparator("java.io.IOException: java.io.IOException", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceAll('{', '\000');
        java.lang.Throwable throwable22 = null;
        java.io.IOException iOException23 = new java.io.IOException("\n32.0", throwable22);
        java.io.IOException iOException24 = new java.io.IOException((java.lang.Throwable) iOException23);
        java.util.Properties properties25 = new java.util.Properties();
        int int26 = properties25.size();
        boolean boolean28 = properties25.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties29 = new java.util.Properties();
        int int30 = properties29.size();
        boolean boolean32 = properties29.containsKey((java.lang.Object) (-1.0f));
        properties25.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.lang.String str35 = properties29.getProperty("h");
        java.util.Enumeration<?> wildcardEnumeration36 = properties29.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet37 = properties29.entrySet();
        java.io.IOException iOException38 = new java.io.IOException();
        java.lang.Throwable[] throwableArray39 = iOException38.getSuppressed();
        java.lang.Throwable[] throwableArray40 = iOException38.getSuppressed();
        java.io.IOException iOException41 = new java.io.IOException((java.lang.Throwable) iOException38);
        boolean boolean42 = properties29.containsValue((java.lang.Object) iOException41);
        iOException24.addSuppressed((java.lang.Throwable) iOException41);
        java.io.IOException iOException46 = new java.io.IOException("StrTokenizer[]");
        java.io.IOException iOException47 = new java.io.IOException((java.lang.Throwable) iOException46);
        java.io.IOException iOException48 = new java.io.IOException("false", (java.lang.Throwable) iOException47);
        iOException24.addSuppressed((java.lang.Throwable) iOException48);
        java.io.IOException iOException50 = new java.io.IOException("########", (java.lang.Throwable) iOException24);
        java.io.IOException iOException51 = new java.io.IOException("java.io.IOException:", (java.lang.Throwable) iOException24);
        java.lang.Throwable throwable55 = null;
        java.io.IOException iOException56 = new java.io.IOException("{}", throwable55);
        java.lang.Throwable[] throwableArray57 = iOException56.getSuppressed();
        java.io.IOException iOException58 = new java.io.IOException("\n", (java.lang.Throwable) iOException56);
        java.io.IOException iOException59 = new java.io.IOException("\n", (java.lang.Throwable) iOException56);
        java.io.IOException iOException61 = new java.io.IOException("hi!");
        iOException59.addSuppressed((java.lang.Throwable) iOException61);
        iOException24.addSuppressed((java.lang.Throwable) iOException59);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder14.insert(13, (java.lang.Object) iOException59);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 13");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(reader8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(wildcardEnumeration36);
        org.junit.Assert.assertNotNull(objEntrySet37);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(throwableArray57);
    }

    @Test
    public void test9491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9491");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Throwable throwable3 = null;
        java.io.IOException iOException4 = new java.io.IOException("\n32.0", throwable3);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException4);
        char[] charArray8 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln('#');
        java.lang.StringBuffer stringBuffer20 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append(stringBuffer20, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.deleteFirst("hi!");
        char[] charArray26 = strBuilder17.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer13.reset(charArray26);
        boolean boolean28 = properties0.replace((java.lang.Object) iOException4, (java.lang.Object) "hi!", (java.lang.Object) strTokenizer13);
        int int29 = properties0.size();
        int int30 = properties0.size();
        java.util.Set<java.lang.Object> objSet31 = properties0.keySet();
        java.util.Set<java.lang.Object> objSet32 = properties0.keySet();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(objSet32);
    }

    @Test
    public void test9492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9492");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties4.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties4.keys();
        java.util.Properties properties11 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader20 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray26 = strTokenizer25.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder21.appendAll((java.lang.Object[]) strArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder21.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream31 = strBuilder21.codePoints();
        java.lang.Object obj32 = properties11.replace((java.lang.Object) reader20, (java.lang.Object) intStream31);
        boolean boolean33 = reader20.ready();
        boolean boolean34 = properties4.containsValue((java.lang.Object) reader20);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst("", "");
        boolean boolean40 = strBuilder38.endsWith("StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln('#');
        java.lang.StringBuffer stringBuffer49 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder46.append(stringBuffer49, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder46.deleteFirst("hi!");
        char[] charArray55 = strBuilder46.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer42.reset(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray55);
        char[] charArray58 = strBuilder38.getChars(charArray55);
        java.util.Properties properties59 = new java.util.Properties();
        int int60 = properties59.size();
        boolean boolean62 = properties59.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties63 = new java.util.Properties();
        int int64 = properties63.size();
        boolean boolean66 = properties63.containsKey((java.lang.Object) (-1.0f));
        properties59.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties63);
        char[] charArray72 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, ' ');
        int int75 = strTokenizer74.size();
        boolean boolean76 = strTokenizer74.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer74.setIgnoredMatcher(strMatcher77);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.replaceFirst("", "");
        java.lang.Object obj83 = properties59.putIfAbsent((java.lang.Object) strMatcher77, (java.lang.Object) strBuilder79);
        java.util.stream.IntStream intStream84 = strBuilder79.codePoints();
        java.lang.Object obj85 = properties4.put((java.lang.Object) charArray58, (java.lang.Object) intStream84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, '#', '{');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str90 = strTokenizer89.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objEntrySet9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(intStream31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#, \n]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(intStream84);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(strTokenizer86);
    }

    @Test
    public void test9493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9493");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Object obj2 = properties0.clone();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor3 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        int int5 = strBuilder4.capacity();
        java.lang.StringBuffer stringBuffer6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(stringBuffer6, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln(true);
        boolean boolean16 = strSubstitutor3.replaceIn(strBuilder13, (int) '$', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendln((double) '#');
        boolean boolean32 = strBuilder22.equals(strBuilder31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder13.appendFixedWidthPadRight((java.lang.Object) boolean32, (int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst('a', '4');
        char[] charArray47 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, ' ');
        int int50 = strTokenizer49.size();
        boolean boolean51 = strTokenizer49.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer49.setIgnoredMatcher(strMatcher52);
        int int55 = strBuilder39.indexOf(strMatcher52, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder39.deleteAll("StrTokenizer[]");
        boolean boolean58 = properties0.remove((java.lang.Object) boolean32, (java.lang.Object) strBuilder39);
        java.util.Map<java.lang.Object, java.lang.Object> objMap59 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.putAll(objMap59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 32 + "'", int5 == 32);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test9494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9494");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        java.lang.String[] strArray7 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendWithSeparators((java.lang.Object[]) strArray7, "4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteAll(strMatcher10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray20 = strTokenizer19.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.appendAll((java.lang.Object[]) strArray20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder15.replaceFirst('a', 'a');
        char[] charArray29 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, ' ');
        int int32 = strTokenizer31.size();
        boolean boolean33 = strTokenizer31.hasNext();
        java.util.List<java.lang.String> strList34 = strTokenizer31.getTokenList();
        java.lang.String[] strArray38 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        boolean boolean41 = strList34.addAll((java.util.Collection<java.lang.String>) strList39);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder15.appendAll((java.lang.Iterable<java.lang.String>) strList39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder9.appendAll((java.lang.Iterable<java.lang.String>) strList39);
        java.lang.Object[] objArray44 = strList39.toArray();
        int int45 = strList39.size();
        strList39.clear();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[\n32.0, , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[\n32.0, , ]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 3 + "'", int45 == 3);
    }

    @Test
    public void test9495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9495");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.append((double) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln('#');
        java.lang.StringBuffer stringBuffer15 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.append(stringBuffer15, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder12.appendSeparator("4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder12.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder6.append((java.lang.CharSequence) strBuilder25);
        boolean boolean28 = strBuilder26.contains("32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.replaceFirst("10   ", "100");
        int int35 = strBuilder33.indexOf("}{\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
    }

    @Test
    public void test9496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9496");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        char[] charArray16 = strBuilder12.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder9.append(charArray16, 0, (int) (byte) 0);
        int int23 = strBuilder9.lastIndexOf('\000');
        java.io.Reader reader24 = strBuilder9.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder9.replaceFirst("a}3.0$", "362.01StrTokenizer[ 4#4]\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append((long) 31);
        char[] charArray32 = strBuilder27.toCharArray(0, 1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[ ]");
    }

    @Test
    public void test9497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9497");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.lang.String str10 = properties4.getProperty("h");
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet12 = properties4.entrySet();
        java.io.IOException iOException13 = new java.io.IOException();
        java.lang.Throwable[] throwableArray14 = iOException13.getSuppressed();
        java.lang.Throwable[] throwableArray15 = iOException13.getSuppressed();
        java.io.IOException iOException16 = new java.io.IOException((java.lang.Throwable) iOException13);
        boolean boolean17 = properties4.containsValue((java.lang.Object) iOException16);
        java.util.Properties properties18 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray25 = strTokenizer24.getTokenArray();
        java.lang.String[] strArray26 = strTokenizer24.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.appendWithSeparators((java.lang.Object[]) strArray26, "4#4");
        char[] charArray31 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray31);
        java.lang.Object obj33 = properties18.getOrDefault((java.lang.Object) strBuilder22, (java.lang.Object) strTokenizer32);
        int int34 = properties18.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray40 = strTokenizer39.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder35.appendAll((java.lang.Object[]) strArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder35.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray50 = strTokenizer49.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder45.appendAll((java.lang.Object[]) strArray50);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder35.appendln(strBuilder51);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder57.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder58.replaceFirst('4', 'a');
        boolean boolean64 = properties18.remove((java.lang.Object) strBuilder51, (java.lang.Object) '4');
        java.lang.Object obj65 = properties18.clone();
        java.lang.String str66 = org.apache.commons.lang3.text.StrSubstitutor.replace((java.lang.Object) properties4, properties18);
        java.lang.Object obj67 = null;
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup68 = org.apache.commons.lang3.text.StrLookup.noneLookup();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj69 = properties4.putIfAbsent(obj67, (java.lang.Object) wildcardStrLookup68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNotNull(objEntrySet12);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "{}");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "{}" + "'", str66, "{}");
        org.junit.Assert.assertNotNull(wildcardStrLookup68);
    }

    @Test
    public void test9498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9498");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        char[] charArray14 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, ' ');
        int int17 = strTokenizer16.size();
        boolean boolean18 = strTokenizer16.hasNext();
        java.util.List<java.lang.String> strList19 = strTokenizer16.getTokenList();
        java.lang.String[] strArray23 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        boolean boolean26 = strList19.addAll((java.util.Collection<java.lang.String>) strList24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder0.appendAll((java.lang.Iterable<java.lang.String>) strList24);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor28 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        int int30 = strBuilder29.capacity();
        java.lang.StringBuffer stringBuffer31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(stringBuffer31, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder29.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln(true);
        boolean boolean41 = strSubstitutor28.replaceIn(strBuilder38, (int) '$', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder0.append((java.lang.CharSequence) strBuilder38);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder38.setLength((int) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceAll("a}3.0$", "java.io.IOException: {}");
        boolean boolean49 = strBuilder44.endsWith("#");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        int int51 = strBuilder50.capacity();
        java.lang.StringBuffer stringBuffer52 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.appendln(stringBuffer52, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder50.insert(1, (double) 32);
        java.util.Properties properties59 = new java.util.Properties();
        int int60 = properties59.size();
        boolean boolean62 = properties59.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst("", "");
        char[] charArray67 = strBuilder63.toCharArray();
        boolean boolean68 = properties59.containsValue((java.lang.Object) charArray67);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder50.append(charArray67, (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray67);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder44.appendln(charArray67);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 32 + "'", int30 == 32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 32 + "'", int51 == 32);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strBuilder73);
    }

    @Test
    public void test9499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9499");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.util.Properties properties9 = new java.util.Properties();
        int int10 = properties9.size();
        boolean boolean12 = properties9.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "");
        char[] charArray17 = strBuilder13.toCharArray();
        boolean boolean18 = properties9.containsValue((java.lang.Object) charArray17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder0.append(charArray17, (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder0.appendln(' ');
        java.io.Writer writer26 = strBuilder25.asWriter();
        writer26.write("StrTokenizer[ 4#4]");
        java.io.Writer writer30 = writer26.append('t');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.appendFixedWidthPadLeft((int) (byte) 0, (int) (byte) 0, '$');
        // The following exception was thrown during execution in test generation
        try {
            java.io.Writer writer38 = writer30.append((java.lang.CharSequence) strBuilder35, (int) 's', 142);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 142");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(writer26);
        org.junit.Assert.assertNotNull(writer30);
        org.junit.Assert.assertNotNull(strBuilder35);
    }

    @Test
    public void test9500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9500");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        int int16 = properties0.size();
        java.util.Properties properties17 = new java.util.Properties();
        int int18 = properties17.size();
        boolean boolean20 = properties17.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties21 = new java.util.Properties();
        int int22 = properties21.size();
        boolean boolean24 = properties21.containsKey((java.lang.Object) (-1.0f));
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.util.Set<java.lang.Object> objSet26 = properties21.keySet();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.appendln('#');
        char[] charArray44 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, ' ');
        int int47 = strTokenizer46.size();
        boolean boolean48 = strTokenizer46.hasNext();
        java.util.List<java.lang.String> strList49 = strTokenizer46.getTokenList();
        java.lang.String[] strArray53 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        boolean boolean56 = strList49.addAll((java.util.Collection<java.lang.String>) strList54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray59 = strTokenizer58.getTokenArray();
        java.lang.String[] strArray60 = strTokenizer58.getTokenArray();
        boolean boolean61 = strTokenizer58.hasNext();
        int int62 = strTokenizer58.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer58.getQuoteMatcher();
        java.util.List<java.lang.String> strList64 = strTokenizer58.getTokenList();
        boolean boolean65 = strList49.retainAll((java.util.Collection<java.lang.String>) strList64);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder37.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList49, "");
        java.lang.Object obj68 = properties0.remove((java.lang.Object) strList49);
        java.lang.String str69 = properties0.toString();
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties0.keys();
        java.util.Set<java.lang.String> strSet71 = properties0.stringPropertyNames();
        java.util.Set<java.lang.String> strSet72 = properties0.stringPropertyNames();
        properties0.clear();
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "{}" + "'", str69, "{}");
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNotNull(strSet71);
        org.junit.Assert.assertNotNull(strSet72);
    }
}

