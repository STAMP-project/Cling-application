import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest23 {

    public static boolean debug = false;

    @Test
    public void test11501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11501");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("a");
        char[] charArray3 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher5, strMatcher6);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer7.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, strMatcher8, strMatcher9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer1.reset(charArray3);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getQuoteMatcher();
        char[] charArray22 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher25);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher27, strMatcher28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray22);
        boolean boolean32 = strTokenizer31.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer31.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer19.setDelimiterMatcher(strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setIgnoredChar('a');
        java.lang.String str37 = strTokenizer36.getContent();
        boolean boolean38 = strTokenizer36.hasPrevious();
        java.util.List<java.lang.String> strList39 = strTokenizer36.getTokenList();
        int int40 = strTokenizer36.nextIndex();
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[a]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "a" + "'", str37, "a");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
    }

    @Test
    public void test11502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11502");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        int int10 = strTokenizer9.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer9.setIgnoredMatcher(strMatcher11);
        boolean boolean13 = strTokenizer12.hasPrevious();
        java.lang.String str14 = strTokenizer12.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer12.reset();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "a" + "'", str14, "a");
        org.junit.Assert.assertNotNull(strTokenizer15);
    }

    @Test
    public void test11503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11503");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("a");
        char[] charArray19 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher21, strMatcher22);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher24, strMatcher25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer17.reset(charArray19);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer17.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer17.getTrimmerMatcher();
        char[] charArray39 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher41, strMatcher42);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer43.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher44, strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer47.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.setTrimmerMatcher(strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher37, strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer53.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer54.setDelimiterChar(' ');
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strTokenizer56);
    }

    @Test
    public void test11504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11504");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.util.List<java.lang.String> strList5 = strTokenizer3.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray8 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher10, strMatcher11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer12.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher13, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer6.setTrimmerMatcher(strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher21, strMatcher22);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getTrimmerMatcher();
        char[] charArray26 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher28, strMatcher29);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer30.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher31, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher24, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer6.setIgnoredMatcher(strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        boolean boolean38 = strTokenizer37.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray41 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher43, strMatcher44);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer45.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher46, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray41);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer49.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer39.setTrimmerMatcher(strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer37.setQuoteMatcher(strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer35.setTrimmerMatcher(strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer3.setDelimiterMatcher(strMatcher50);
        int int55 = strTokenizer3.nextIndex();
        boolean boolean56 = strTokenizer3.hasPrevious();
        char[] charArray58 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray58);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getQuoteMatcher();
        char[] charArray62 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher64, strMatcher65);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer66.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, strMatcher67, strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray62);
        boolean boolean72 = strTokenizer71.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = strTokenizer71.getQuoteMatcher();
        java.lang.String str74 = strTokenizer71.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher76, strMatcher77);
        java.lang.String str79 = strTokenizer78.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer78.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = strTokenizer78.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer78.setEmptyTokenAsNull(false);
        java.lang.String str84 = strTokenizer78.nextToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = strTokenizer78.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer71.setIgnoredMatcher(strMatcher85);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[, ]", strMatcher60, strMatcher85);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer3.setTrimmerMatcher(strMatcher85);
        java.lang.String str89 = strTokenizer3.nextToken();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a]");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a]");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a]");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[a]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "a" + "'", str74, "a");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str79, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "hi!" + "'", str84, "hi!");
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "hi!" + "'", str89, "hi!");
    }

    @Test
    public void test11505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11505");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("#a444 ", ' ');
        java.lang.String str3 = strTokenizer2.getContent();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "#a444 " + "'", str3, "#a444 ");
    }

    @Test
    public void test11506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11506");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer7.getQuoteMatcher();
        char[] charArray11 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, "hi!");
        int int26 = strMatcher9.isMatch(charArray11, (int) (short) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, ' ', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(strTokenizer31);
    }

    @Test
    public void test11507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11507");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        int int10 = strList9.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        java.lang.String str15 = strTokenizer14.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setDelimiterString("");
        java.lang.Object obj19 = strTokenizer18.clone();
        java.util.List<java.lang.String> strList20 = strTokenizer18.getTokenList();
        int int21 = strList20.size();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.stream();
        java.lang.Object[] objArray27 = strList24.toArray();
        boolean boolean28 = strList20.removeAll((java.util.Collection<java.lang.String>) strList24);
        boolean boolean29 = strList9.containsAll((java.util.Collection<java.lang.String>) strList20);
        java.util.Spliterator<java.lang.String> strSpliterator30 = strList20.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher32, strMatcher33);
        java.lang.String str35 = strTokenizer34.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setDelimiterString("");
        java.lang.Object obj39 = strTokenizer38.clone();
        java.util.List<java.lang.String> strList40 = strTokenizer38.getTokenList();
        int int41 = strList40.size();
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.util.stream.Stream<java.lang.String> strStream46 = strList44.stream();
        java.lang.Object[] objArray47 = strList44.toArray();
        boolean boolean48 = strList40.removeAll((java.util.Collection<java.lang.String>) strList44);
        int int49 = strList20.indexOf((java.lang.Object) strList44);
        java.util.Iterator<java.lang.String> strItor50 = strList20.iterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str52 = strList20.get((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str15, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strSpliterator30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str35, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strStream46);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strItor50);
    }

    @Test
    public void test11508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11508");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        java.lang.String str6 = strTokenizer5.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer5.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer5.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setIgnoreEmptyTokens(false);
        java.lang.String str15 = strTokenizer12.next();
        char[] charArray17 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher22, strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray17);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer25.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer12.setIgnoredMatcher(strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher26, strMatcher28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher34);
        java.lang.String str36 = strTokenizer35.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer35.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer35.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer35.setDelimiterMatcher(strMatcher41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer30.setIgnoredMatcher(strMatcher41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer30.setDelimiterString("StrTokenizer[not tokenized yet]");
        boolean boolean47 = strTokenizer30.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer30.setDelimiterString("StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer49.setDelimiterString("");
        boolean boolean52 = strTokenizer51.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer51.setQuoteChar('#');
        char[] charArray55 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer54.reset(charArray55);
        int int57 = strTokenizer56.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer56.setQuoteChar('a');
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str6, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str36, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer59);
    }

    @Test
    public void test11509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11509");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("not tokenized yet]", '#');
        boolean boolean3 = strTokenizer2.isEmptyTokenAsNull();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test11510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11510");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("StrTokenizer[]");
        char[] charArray3 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher5, strMatcher6);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer7.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, strMatcher8, strMatcher9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray3);
        char[] charArray16 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher18, strMatcher19);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher21, strMatcher22);
        char[] charArray25 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher30, strMatcher31);
        int int36 = strMatcher21.isMatch(charArray25, 1, 1, (int) ' ');
        char[] charArray37 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer39.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, strMatcher21, strMatcher40);
        char[] charArray43 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher45, strMatcher46);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher48, strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, strMatcher52);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray3);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher56, strMatcher57);
        java.lang.String str59 = strTokenizer58.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer58.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer58.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer58.setEmptyTokenAsNull(false);
        java.lang.String str64 = strTokenizer58.nextToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = strTokenizer58.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher67, strMatcher68);
        boolean boolean70 = strTokenizer69.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer69.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer69.setQuoteMatcher(strMatcher75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer58.setDelimiterMatcher(strMatcher75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, strMatcher75);
        int int83 = strMatcher1.isMatch(charArray3, (int) (byte) 10, 8, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, '#');
        org.junit.Assert.assertNotNull(strMatcher1);
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[a]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str59, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
    }

    @Test
    public void test11511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11511");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher2, strMatcher3);
        java.lang.String str5 = strTokenizer4.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer4.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer4.setEmptyTokenAsNull(false);
        boolean boolean10 = strTokenizer4.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.setTrimmerMatcher(strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher13);
        int int17 = strTokenizer16.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer16.setDelimiterChar('#');
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str5, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer19);
    }

    @Test
    public void test11512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11512");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("a");
        java.util.List<java.lang.String> strList2 = strTokenizer1.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        java.lang.String str7 = strTokenizer6.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer6.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer6.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setIgnoreEmptyTokens(false);
        int int16 = strList2.indexOf((java.lang.Object) strTokenizer13);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        java.lang.String str22 = strTokenizer21.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer23.setDelimiterString("");
        java.lang.Object obj26 = strTokenizer25.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer25.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher27);
        char[] charArray30 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher32, strMatcher33);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher35, strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray30);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray30);
        int int41 = strMatcher27.isMatch(charArray30, (int) (byte) 100);
        int int42 = strList2.indexOf((java.lang.Object) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.String> strItor44 = strList2.listIterator((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str7, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str22, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
    }

    @Test
    public void test11513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11513");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        boolean boolean5 = strList2.isEmpty();
        java.lang.Object[] objArray6 = strList2.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator7 = strList2.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher9, strMatcher10);
        java.lang.String str12 = strTokenizer11.toString();
        java.util.List<java.lang.String> strList13 = strTokenizer11.getTokenList();
        java.lang.Object obj14 = null;
        boolean boolean15 = strList13.remove(obj14);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher18);
        boolean boolean20 = strList13.contains((java.lang.Object) "");
        java.util.ListIterator<java.lang.String> strItor22 = strList13.listIterator(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher25);
        java.lang.String str27 = strTokenizer26.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer28.setDelimiterString("");
        java.lang.Object obj31 = strTokenizer30.clone();
        java.util.List<java.lang.String> strList32 = strTokenizer30.getTokenList();
        java.util.ListIterator<java.lang.String> strItor34 = strList32.listIterator((int) (short) 0);
        boolean boolean35 = strList32.isEmpty();
        java.util.List<java.lang.String> strList38 = strList32.subList((int) (short) 0, (int) (short) 1);
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.stream.Stream<java.lang.String> strStream43 = strList41.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher45, strMatcher46);
        java.lang.String str48 = strTokenizer47.toString();
        java.util.List<java.lang.String> strList49 = strTokenizer47.getTokenList();
        java.lang.Object obj50 = null;
        boolean boolean51 = strList49.remove(obj50);
        boolean boolean52 = strList41.removeAll((java.util.Collection<java.lang.String>) strList49);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher54, strMatcher55);
        java.lang.String str57 = strTokenizer56.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer58.setDelimiterString("");
        java.lang.Object obj61 = strTokenizer60.clone();
        java.util.List<java.lang.String> strList62 = strTokenizer60.getTokenList();
        boolean boolean63 = strList41.retainAll((java.util.Collection<java.lang.String>) strList62);
        java.util.ListIterator<java.lang.String> strItor64 = strList41.listIterator();
        java.lang.String[] strArray66 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList67 = new java.util.ArrayList<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        java.util.stream.Stream<java.lang.String> strStream69 = strList67.stream();
        boolean boolean70 = strList67.isEmpty();
        java.lang.Object[] objArray71 = strList67.toArray();
        boolean boolean72 = strList41.addAll((java.util.Collection<java.lang.String>) strList67);
        boolean boolean73 = strList38.removeAll((java.util.Collection<java.lang.String>) strList67);
        boolean boolean74 = strList13.retainAll((java.util.Collection<java.lang.String>) strList67);
        boolean boolean75 = strList2.containsAll((java.util.Collection<java.lang.String>) strList13);
        java.util.stream.Stream<java.lang.String> strStream76 = strList13.stream();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList79 = strList13.subList((int) (byte) 100, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 97");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[hi!]");
        org.junit.Assert.assertNotNull(strSpliterator7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str12, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str27, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNotNull(strItor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strStream43);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str48, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str57, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strItor64);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strStream69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(strStream76);
    }

    @Test
    public void test11514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11514");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        int int4 = strTokenizer3.nextIndex();
        java.lang.String str5 = strTokenizer3.next();
        int int6 = strTokenizer3.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getDelimiterMatcher();
        int int10 = strTokenizer8.nextIndex();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }

    @Test
    public void test11515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11515");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer3.getTrimmerMatcher();
        char[] charArray6 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher8, strMatcher9);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer10.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher11, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer3.reset(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer3.setIgnoreEmptyTokens(true);
        java.lang.String str21 = strTokenizer20.next();
        java.lang.String str22 = strTokenizer20.previousToken();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer20.add("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "a" + "'", str21, "a");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "a" + "'", str22, "a");
    }

    @Test
    public void test11516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11516");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        boolean boolean5 = strList2.isEmpty();
        char[] charArray6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher7);
        java.lang.String[] strArray9 = strTokenizer8.getTokenArray();
        boolean boolean10 = strList2.equals((java.lang.Object) strArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        java.lang.String str15 = strTokenizer14.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setDelimiterString("");
        java.lang.Object obj19 = strTokenizer18.clone();
        java.util.List<java.lang.String> strList20 = strTokenizer18.getTokenList();
        java.util.ListIterator<java.lang.String> strItor22 = strList20.listIterator((int) (short) 0);
        boolean boolean23 = strList2.removeAll((java.util.Collection<java.lang.String>) strList20);
        strList2.clear();
        java.util.stream.Stream<java.lang.String> strStream25 = strList2.parallelStream();
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.stream.Stream<java.lang.String> strStream30 = strList28.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher32, strMatcher33);
        java.lang.String str35 = strTokenizer34.toString();
        java.util.List<java.lang.String> strList36 = strTokenizer34.getTokenList();
        java.lang.Object obj37 = null;
        boolean boolean38 = strList36.remove(obj37);
        boolean boolean39 = strList28.removeAll((java.util.Collection<java.lang.String>) strList36);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher41, strMatcher42);
        java.lang.String str44 = strTokenizer43.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.setDelimiterString("");
        java.lang.Object obj48 = strTokenizer47.clone();
        java.util.List<java.lang.String> strList49 = strTokenizer47.getTokenList();
        boolean boolean50 = strList28.retainAll((java.util.Collection<java.lang.String>) strList49);
        java.util.ListIterator<java.lang.String> strItor51 = strList28.listIterator();
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.stream.Stream<java.lang.String> strStream56 = strList54.stream();
        boolean boolean57 = strList54.isEmpty();
        java.lang.Object[] objArray58 = strList54.toArray();
        boolean boolean59 = strList28.addAll((java.util.Collection<java.lang.String>) strList54);
        boolean boolean60 = strList54.isEmpty();
        boolean boolean61 = strList2.retainAll((java.util.Collection<java.lang.String>) strList54);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str15, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strStream25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strStream30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str35, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str44, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strItor51);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strStream56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test11517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11517");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoreEmptyTokens(false);
        java.lang.String str13 = strTokenizer10.next();
        char[] charArray15 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher17, strMatcher18);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer10.setIgnoredMatcher(strMatcher24);
        boolean boolean26 = strTokenizer10.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList27 = strTokenizer10.getTokenList();
        strList27.clear();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[a]");
        java.lang.String str31 = strTokenizer30.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.reset("hi!");
        java.lang.String[] strArray36 = strTokenizer35.getTokenArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher40);
        java.lang.String str42 = strTokenizer41.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.setDelimiterString("");
        java.lang.Object obj46 = strTokenizer45.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer45.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher47);
        char[] charArray50 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher52, strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher55, strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher65, strMatcher66);
        int int71 = strMatcher47.isMatch(charArray50, (int) (byte) 0, (int) (byte) 1, (int) (short) 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer35.setIgnoredMatcher(strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer30.setTrimmerMatcher(strMatcher47);
        boolean boolean74 = strTokenizer73.isEmptyTokenAsNull();
        int int75 = strList27.indexOf((java.lang.Object) boolean74);
        strList27.add((int) (short) 0, "a");
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher80, strMatcher81);
        java.lang.String str83 = strTokenizer82.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = strTokenizer82.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = strTokenizer82.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer82.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer82.setDelimiterMatcher(strMatcher88);
        int int90 = strTokenizer89.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = strTokenizer89.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = strTokenizer92.setIgnoreEmptyTokens(false);
        boolean boolean95 = strTokenizer92.hasPrevious();
        int int96 = strTokenizer92.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer98 = strTokenizer92.setIgnoreEmptyTokens(false);
        boolean boolean99 = strList27.equals((java.lang.Object) strTokenizer92);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "StrTokenizer[a]" + "'", str31, "StrTokenizer[a]");
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str42, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a]");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str83, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer92);
        org.junit.Assert.assertNotNull(strTokenizer94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 1 + "'", int96 == 1);
        org.junit.Assert.assertNotNull(strTokenizer98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test11518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11518");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        java.util.stream.Stream<java.lang.String> strStream5 = strList2.parallelStream();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher8);
        java.lang.String str10 = strTokenizer9.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setDelimiterString("");
        java.lang.Object obj14 = strTokenizer13.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer13.getQuoteMatcher();
        char[] charArray17 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher22, strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, "hi!");
        int int32 = strMatcher15.isMatch(charArray17, (int) (short) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, 'a', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.setIgnoreEmptyTokens(true);
        int int38 = strList2.indexOf((java.lang.Object) strTokenizer37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer37.setQuoteChar(' ');
        int int41 = strTokenizer40.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer40.getIgnoredMatcher();
        java.lang.String str43 = strTokenizer40.previousToken();
        boolean boolean44 = strTokenizer40.hasNext();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str10, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test11519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11519");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher14);
        boolean boolean16 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setIgnoreEmptyTokens(false);
        int int19 = strTokenizer15.previousIndex();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test11520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11520");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        boolean boolean4 = strList2.isEmpty();
        strList2.clear();
        strList2.clear();
        java.lang.Object[] objArray7 = strList2.toArray();
        java.util.ListIterator<java.lang.String> strItor8 = strList2.listIterator();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(strItor8);
    }

    @Test
    public void test11521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11521");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        boolean boolean5 = strList2.isEmpty();
        char[] charArray6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher7);
        java.lang.String[] strArray9 = strTokenizer8.getTokenArray();
        boolean boolean10 = strList2.equals((java.lang.Object) strArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        java.lang.String str15 = strTokenizer14.toString();
        java.util.List<java.lang.String> strList16 = strTokenizer14.getTokenList();
        java.lang.Object obj17 = null;
        boolean boolean18 = strList16.remove(obj17);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher21);
        boolean boolean23 = strList16.contains((java.lang.Object) "");
        java.util.ListIterator<java.lang.String> strItor25 = strList16.listIterator(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        java.lang.String str30 = strTokenizer29.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.setDelimiterString("");
        java.lang.Object obj34 = strTokenizer33.clone();
        java.util.List<java.lang.String> strList35 = strTokenizer33.getTokenList();
        java.util.ListIterator<java.lang.String> strItor37 = strList35.listIterator((int) (short) 0);
        boolean boolean38 = strList35.isEmpty();
        java.util.List<java.lang.String> strList41 = strList35.subList((int) (short) 0, (int) (short) 1);
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.util.stream.Stream<java.lang.String> strStream46 = strList44.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher48, strMatcher49);
        java.lang.String str51 = strTokenizer50.toString();
        java.util.List<java.lang.String> strList52 = strTokenizer50.getTokenList();
        java.lang.Object obj53 = null;
        boolean boolean54 = strList52.remove(obj53);
        boolean boolean55 = strList44.removeAll((java.util.Collection<java.lang.String>) strList52);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher57, strMatcher58);
        java.lang.String str60 = strTokenizer59.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer59.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer61.setDelimiterString("");
        java.lang.Object obj64 = strTokenizer63.clone();
        java.util.List<java.lang.String> strList65 = strTokenizer63.getTokenList();
        boolean boolean66 = strList44.retainAll((java.util.Collection<java.lang.String>) strList65);
        java.util.ListIterator<java.lang.String> strItor67 = strList44.listIterator();
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList70 = new java.util.ArrayList<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        java.util.stream.Stream<java.lang.String> strStream72 = strList70.stream();
        boolean boolean73 = strList70.isEmpty();
        java.lang.Object[] objArray74 = strList70.toArray();
        boolean boolean75 = strList44.addAll((java.util.Collection<java.lang.String>) strList70);
        boolean boolean76 = strList41.removeAll((java.util.Collection<java.lang.String>) strList70);
        boolean boolean77 = strList16.retainAll((java.util.Collection<java.lang.String>) strList70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        java.util.List<java.lang.String> strList82 = strTokenizer81.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher84, strMatcher85);
        java.lang.String str87 = strTokenizer86.toString();
        java.util.List<java.lang.String> strList88 = strTokenizer86.getTokenList();
        java.lang.Object obj89 = null;
        boolean boolean90 = strList88.remove(obj89);
        boolean boolean92 = strList88.add("StrTokenizer[not tokenized yet]");
        boolean boolean93 = strList82.containsAll((java.util.Collection<java.lang.String>) strList88);
        boolean boolean94 = strList16.containsAll((java.util.Collection<java.lang.String>) strList82);
        boolean boolean95 = strList2.retainAll((java.util.Collection<java.lang.String>) strList16);
        boolean boolean97 = strList16.add("");
        int int98 = strList16.size();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str15, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str30, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strItor37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strStream46);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str51, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str60, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strItor67);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strStream72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str87, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 2 + "'", int98 == 2);
    }

    @Test
    public void test11522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11522");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "StrTokenizer[not tokenized yet]");
        boolean boolean19 = strTokenizer18.hasPrevious();
        char[] charArray21 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher23, strMatcher24);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer25.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher26, strMatcher27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray21);
        char[] charArray34 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher36, strMatcher37);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher39, strMatcher40);
        char[] charArray43 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher45, strMatcher46);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher48, strMatcher49);
        int int54 = strMatcher39.isMatch(charArray43, 1, 1, (int) ' ');
        char[] charArray55 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher56);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer57.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher39, strMatcher58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray21);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, 'a', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer18.reset(charArray21);
        boolean boolean71 = strTokenizer70.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer70.getDelimiterMatcher();
        char[] charArray79 = new char[] { 'a', '4', ' ', '4', 'a', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer70.reset(charArray79);
        boolean boolean83 = strTokenizer82.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[a]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "a4 4aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "a4 4aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[a, 4,  , 4, a, a]");
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test11523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11523");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        char[] charArray10 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher15, strMatcher16);
        int int21 = strMatcher6.isMatch(charArray10, 1, 1, (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.setDelimiterString("StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer22.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer22.getQuoteMatcher();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str27 = strTokenizer22.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strMatcher26);
    }

    @Test
    public void test11524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11524");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("StrTokenizer[not tokenized yet]");
        int int2 = strTokenizer1.previousIndex();
        char[] charArray4 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, strMatcher9, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray4);
        boolean boolean14 = strTokenizer13.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        java.lang.String str19 = strTokenizer18.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer18.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer18.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer23.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer25.setIgnoreEmptyTokens(false);
        java.lang.String str28 = strTokenizer25.next();
        char[] charArray30 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher32, strMatcher33);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher35, strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray30);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer25.setIgnoredMatcher(strMatcher39);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher42, strMatcher43);
        java.lang.String str45 = strTokenizer44.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer44.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer44.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer44.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer49.setQuoteChar('4');
        char[] charArray53 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher55, strMatcher56);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer57.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, strMatcher58, strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer49.reset(charArray53);
        int int68 = strMatcher39.isMatch(charArray53, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer13.setQuoteMatcher(strMatcher39);
        char[] charArray70 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray70);
        char[] charArray73 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher75, strMatcher76);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = strTokenizer77.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, strMatcher78, strMatcher79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, "a");
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer71.reset(charArray73);
        int int90 = strMatcher39.isMatch(charArray73, (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer(charArray73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = strTokenizer1.reset(charArray73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, '4', ' ');
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[a]");
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str19, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str45, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a]");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[a]");
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertNotNull(strTokenizer92);
    }

    @Test
    public void test11525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11525");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("a");
        java.util.List<java.lang.String> strList2 = strTokenizer1.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        java.lang.String str7 = strTokenizer6.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer6.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer6.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setIgnoreEmptyTokens(false);
        int int16 = strList2.indexOf((java.lang.Object) strTokenizer13);
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.stream.Stream<java.lang.String> strStream21 = strList19.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher23, strMatcher24);
        java.lang.String str26 = strTokenizer25.toString();
        java.util.List<java.lang.String> strList27 = strTokenizer25.getTokenList();
        java.lang.Object obj28 = null;
        boolean boolean29 = strList27.remove(obj28);
        boolean boolean30 = strList19.removeAll((java.util.Collection<java.lang.String>) strList27);
        java.util.Spliterator<java.lang.String> strSpliterator31 = strList19.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher34);
        java.lang.String str36 = strTokenizer35.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer35.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer35.setEmptyTokenAsNull(false);
        java.util.List<java.lang.String> strList41 = strTokenizer40.getTokenList();
        boolean boolean42 = strList19.remove((java.lang.Object) strList41);
        java.util.Spliterator<java.lang.String> strSpliterator43 = strList41.spliterator();
        boolean boolean44 = strList2.removeAll((java.util.Collection<java.lang.String>) strList41);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher46, strMatcher47);
        java.lang.String str49 = strTokenizer48.toString();
        java.util.List<java.lang.String> strList50 = strTokenizer48.getTokenList();
        java.lang.Object obj51 = null;
        boolean boolean52 = strList50.remove(obj51);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher55);
        boolean boolean57 = strList50.contains((java.lang.Object) "");
        boolean boolean58 = strList41.removeAll((java.util.Collection<java.lang.String>) strList50);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher60, strMatcher61);
        java.lang.String str63 = strTokenizer62.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer62.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer64.setDelimiterString("");
        java.lang.Object obj67 = strTokenizer66.clone();
        java.util.List<java.lang.String> strList68 = strTokenizer66.getTokenList();
        int int69 = strTokenizer66.size();
        java.util.List<java.lang.String> strList70 = strTokenizer66.getTokenList();
        java.lang.Object obj71 = null;
        int int72 = strList70.lastIndexOf(obj71);
        boolean boolean73 = strList50.retainAll((java.util.Collection<java.lang.String>) strList70);
        char[] charArray75 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher77, strMatcher78);
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = strTokenizer79.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, strMatcher80, strMatcher81);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, '#');
        boolean boolean86 = strList50.equals((java.lang.Object) charArray75);
        boolean boolean88 = strList50.add("");
        boolean boolean89 = strList50.isEmpty();
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str7, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strStream21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str26, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strSpliterator31);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str36, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strSpliterator43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str49, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str63, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[a]");
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test11526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11526");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, "hi!");
        boolean boolean3 = strTokenizer2.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer2.getIgnoredMatcher();
        int int5 = strTokenizer2.nextIndex();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test11527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11527");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        boolean boolean5 = strList2.isEmpty();
        java.lang.Object[] objArray6 = strList2.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator7 = strList2.spliterator();
        java.util.Spliterator<java.lang.String> strSpliterator8 = strList2.spliterator();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "a", "a", "a" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        int int16 = strList14.size();
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.stream.Stream<java.lang.String> strStream21 = strList19.stream();
        boolean boolean22 = strList19.isEmpty();
        char[] charArray23 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher24);
        java.lang.String[] strArray26 = strTokenizer25.getTokenArray();
        boolean boolean27 = strList19.equals((java.lang.Object) strArray26);
        java.util.Spliterator<java.lang.String> strSpliterator28 = strList19.spliterator();
        java.util.stream.Stream<java.lang.String> strStream29 = strList19.stream();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.stream.Stream<java.lang.String> strStream34 = strList32.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher36, strMatcher37);
        java.lang.String str39 = strTokenizer38.toString();
        java.util.List<java.lang.String> strList40 = strTokenizer38.getTokenList();
        java.lang.Object obj41 = null;
        boolean boolean42 = strList40.remove(obj41);
        boolean boolean43 = strList32.removeAll((java.util.Collection<java.lang.String>) strList40);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher45, strMatcher46);
        java.lang.String str48 = strTokenizer47.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer47.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer49.setDelimiterString("");
        java.lang.Object obj52 = strTokenizer51.clone();
        java.util.List<java.lang.String> strList53 = strTokenizer51.getTokenList();
        boolean boolean54 = strList32.retainAll((java.util.Collection<java.lang.String>) strList53);
        java.util.ListIterator<java.lang.String> strItor55 = strList32.listIterator();
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        java.util.stream.Stream<java.lang.String> strStream60 = strList58.stream();
        boolean boolean61 = strList58.isEmpty();
        java.lang.Object[] objArray62 = strList58.toArray();
        boolean boolean63 = strList32.addAll((java.util.Collection<java.lang.String>) strList58);
        boolean boolean64 = strList19.removeAll((java.util.Collection<java.lang.String>) strList58);
        boolean boolean65 = strList14.removeAll((java.util.Collection<java.lang.String>) strList19);
        boolean boolean66 = strList2.addAll((java.util.Collection<java.lang.String>) strList14);
        boolean boolean67 = strList14.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher69, strMatcher70);
        java.lang.String str72 = strTokenizer71.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer71.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = strTokenizer71.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer71.setEmptyTokenAsNull(false);
        java.lang.String str77 = strTokenizer71.nextToken();
        int int78 = strList14.indexOf((java.lang.Object) strTokenizer71);
        boolean boolean80 = strList14.add("hi!");
        java.lang.String str82 = strList14.get(0);
        java.util.ListIterator<java.lang.String> strItor83 = strList14.listIterator();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[hi!]");
        org.junit.Assert.assertNotNull(strSpliterator7);
        org.junit.Assert.assertNotNull(strSpliterator8);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 4 + "'", int16 == 4);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strStream21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSpliterator28);
        org.junit.Assert.assertNotNull(strStream29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strStream34);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str39, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str48, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strItor55);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strStream60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str72, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!" + "'", str77, "hi!");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!" + "'", str82, "hi!");
        org.junit.Assert.assertNotNull(strItor83);
    }

    @Test
    public void test11528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11528");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer(charArray0);
        char[] charArray3 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher5, strMatcher6);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer7.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, strMatcher8, strMatcher9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, "a");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer1.reset(charArray3);
        char[] charArray19 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.reset(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer18.reset("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer18.setEmptyTokenAsNull(true);
        java.lang.String[] strArray25 = strTokenizer24.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        boolean boolean29 = strTokenizer28.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray32 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher34, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher37, strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray32);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer40.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer30.setTrimmerMatcher(strMatcher41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer28.setQuoteMatcher(strMatcher41);
        char[] charArray45 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher47, strMatcher48);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer49.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, strMatcher50, strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, '#', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray45);
        int int64 = strMatcher41.isMatch(charArray45, (int) (byte) 0, (int) (short) 1, (int) (byte) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[hi!]", "hi!");
        java.lang.String str68 = strTokenizer67.previousToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer67.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("a   ", strMatcher41, strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer24.setQuoteMatcher(strMatcher69);
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[a]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[a]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a]");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer71);
    }

    @Test
    public void test11529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11529");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("#", '4', ' ');
        boolean boolean4 = strTokenizer3.hasNext();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test11530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11530");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher2, strMatcher3);
        java.lang.String str5 = strTokenizer4.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer4.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer4.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setIgnoreEmptyTokens(false);
        int int14 = strTokenizer11.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer11.setDelimiterChar('a');
        char[] charArray18 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher23, strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer11.reset(charArray18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray18);
        char[] charArray40 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher42, strMatcher43);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher45, strMatcher46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray40);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("   ", strMatcher38, strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        boolean boolean53 = strTokenizer52.hasNext();
        java.lang.String str54 = strTokenizer52.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher56, strMatcher57);
        java.lang.String str59 = strTokenizer58.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer58.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer58.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer58.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer63.setQuoteChar('4');
        char[] charArray67 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher69, strMatcher70);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer71.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, strMatcher72, strMatcher73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer63.reset(charArray67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer52.reset(charArray67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray67);
        // The following exception was thrown during execution in test generation
        try {
            int int85 = strMatcher49.isMatch(charArray67, (-1), (int) (byte) 10, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str5, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[a]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str59, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a]");
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strTokenizer81);
    }

    @Test
    public void test11531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11531");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setDelimiterString(",");
        org.junit.Assert.assertNotNull(strTokenizer4);
    }

    @Test
    public void test11532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11532");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer9.reset();
        int int11 = strTokenizer9.size();
        java.lang.String str12 = strTokenizer9.next();
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, "StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer9.reset(charArray14);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray14);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "a" + "'", str12, "a");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer30);
    }

    @Test
    public void test11533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11533");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        boolean boolean9 = strTokenizer3.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer3.setTrimmerMatcher(strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer3.setIgnoredChar(' ');
        java.lang.String str17 = strTokenizer16.nextToken();
        java.util.List<java.lang.String> strList18 = strTokenizer16.getTokenList();
        java.lang.String[] strArray19 = strTokenizer16.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer16.reset();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strTokenizer20);
    }

    @Test
    public void test11534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11534");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setIgnoreEmptyTokens(false);
        java.lang.String str9 = strTokenizer3.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer3.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer3.setEmptyTokenAsNull(false);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer3.set("StrTokenizer[, ]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
    }

    @Test
    public void test11535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11535");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("a");
        java.util.List<java.lang.String> strList2 = strTokenizer1.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        java.lang.String str7 = strTokenizer6.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer6.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer6.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setIgnoreEmptyTokens(false);
        int int16 = strList2.indexOf((java.lang.Object) strTokenizer13);
        strList2.clear();
        char[] charArray18 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher19);
        int int21 = strTokenizer20.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.reset();
        java.lang.String str23 = strTokenizer20.nextToken();
        boolean boolean24 = strList2.remove((java.lang.Object) str23);
        java.util.stream.Stream<java.lang.String> strStream25 = strList2.stream();
        java.util.stream.Stream<java.lang.String> strStream26 = strList2.stream();
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str7, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strStream25);
        org.junit.Assert.assertNotNull(strStream26);
    }

    @Test
    public void test11536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11536");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher2, strMatcher3);
        java.lang.String str5 = strTokenizer4.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.setDelimiterString("");
        java.lang.Object obj9 = strTokenizer8.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher11, strMatcher12);
        boolean boolean14 = strTokenizer13.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer13.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer13.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer8.setDelimiterMatcher(strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher17);
        java.lang.String str20 = strTokenizer19.previousToken();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str5, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test11537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11537");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer5.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher8, strMatcher9);
        java.lang.String str11 = strTokenizer10.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setDelimiterString("");
        java.lang.Object obj15 = strTokenizer14.clone();
        java.util.List<java.lang.String> strList16 = strTokenizer14.getTokenList();
        java.util.ListIterator<java.lang.String> strItor18 = strList16.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor19 = strList16.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int22 = strList16.indexOf((java.lang.Object) strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer5.setDelimiterMatcher(strMatcher21);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer5.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer1.setIgnoredMatcher(strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer1.setDelimiterString("StrTokenizer[hi!]");
        int int28 = strTokenizer1.previousIndex();
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str11, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(strItor18);
        org.junit.Assert.assertNotNull(strItor19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
    }

    @Test
    public void test11538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11538");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        int int11 = strTokenizer10.previousIndex();
        boolean boolean12 = strTokenizer10.isIgnoreEmptyTokens();
        boolean boolean13 = strTokenizer10.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer10.reset();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer10.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strTokenizer14);
    }

    @Test
    public void test11539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11539");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        java.util.ListIterator<java.lang.String> strItor11 = strList9.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor12 = strList9.listIterator();
        java.util.Iterator<java.lang.String> strItor13 = strList9.iterator();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("a");
        java.util.List<java.lang.String> strList16 = strTokenizer15.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher18, strMatcher19);
        java.lang.String str21 = strTokenizer20.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer20.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer20.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer25.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setIgnoreEmptyTokens(false);
        int int30 = strList16.indexOf((java.lang.Object) strTokenizer27);
        strList16.clear();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher34);
        java.lang.String str36 = strTokenizer35.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer35.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer35.setEmptyTokenAsNull(false);
        java.lang.Object obj41 = strTokenizer40.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher43, strMatcher44);
        java.lang.String str46 = strTokenizer45.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer45.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer45.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer45.setDelimiterMatcher(strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer40.setQuoteMatcher(strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer53.setIgnoredChar('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer55.setEmptyTokenAsNull(true);
        boolean boolean59 = strList16.remove((java.lang.Object) strTokenizer55);
        boolean boolean60 = strList9.removeAll((java.util.Collection<java.lang.String>) strList16);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher62, strMatcher63);
        java.lang.String str65 = strTokenizer64.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer64.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer64.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer64.setIgnoreEmptyTokens(false);
        java.lang.String str70 = strTokenizer64.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer64.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer64.setEmptyTokenAsNull(false);
        java.lang.String str75 = strTokenizer64.getContent();
        boolean boolean76 = strList16.contains((java.lang.Object) str75);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str78 = strList16.get((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strItor11);
        org.junit.Assert.assertNotNull(strItor12);
        org.junit.Assert.assertNotNull(strItor13);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str21, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str36, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str46, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str65, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test11540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11540");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        int int5 = strList2.size();
        java.util.ListIterator<java.lang.String> strItor6 = strList2.listIterator();
        java.lang.Class<?> wildcardClass7 = strItor6.getClass();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(strItor6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test11541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11541");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher2, strMatcher3);
        java.lang.String str5 = strTokenizer4.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer4.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer4.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer4.setDelimiterMatcher(strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher10);
        boolean boolean13 = strTokenizer12.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer12.setTrimmerMatcher(strMatcher15);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer12.getDelimiterMatcher();
        java.lang.String str18 = strTokenizer12.next();
        java.lang.String str19 = strTokenizer12.previous();
        java.lang.Object obj20 = strTokenizer12.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer12.getQuoteMatcher();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str5, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str18, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str19, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher21);
    }

    @Test
    public void test11542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11542");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        char[] charArray23 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28, strMatcher29);
        int int34 = strMatcher19.isMatch(charArray23, 1, 1, (int) ' ');
        char[] charArray35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher19, strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, 'a');
        boolean boolean51 = strTokenizer50.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer50.setIgnoredChar('4');
        java.lang.String str54 = strTokenizer53.toString();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "StrTokenizer[]" + "'", str54, "StrTokenizer[]");
    }

    @Test
    public void test11543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11543");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer3.setDelimiterMatcher(strMatcher9);
        int int11 = strTokenizer10.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer10.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.setIgnoreEmptyTokens(true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer19);
    }

    @Test
    public void test11544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11544");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        java.util.List<java.lang.String> strList10 = strTokenizer8.getTokenList();
        java.lang.Object obj11 = null;
        boolean boolean12 = strList10.remove(obj11);
        boolean boolean13 = strList2.removeAll((java.util.Collection<java.lang.String>) strList10);
        java.util.Spliterator<java.lang.String> strSpliterator14 = strList2.spliterator();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        boolean boolean19 = strList17.isEmpty();
        java.lang.Object[] objArray20 = strList17.toArray();
        java.lang.Object[] objArray21 = strList2.toArray(objArray20);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.stream();
        boolean boolean27 = strList24.isEmpty();
        char[] charArray28 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher29);
        java.lang.String[] strArray31 = strTokenizer30.getTokenArray();
        boolean boolean32 = strList24.equals((java.lang.Object) strArray31);
        java.util.stream.Stream<java.lang.String> strStream33 = strList24.parallelStream();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("a");
        char[] charArray37 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher40);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher42, strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer35.reset(charArray37);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = strTokenizer35.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer35.getTrimmerMatcher();
        boolean boolean56 = strList24.equals((java.lang.Object) strTokenizer35);
        boolean boolean57 = strList2.retainAll((java.util.Collection<java.lang.String>) strList24);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher59, strMatcher60);
        java.lang.String str62 = strTokenizer61.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer61.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer63.setDelimiterString("");
        java.lang.Object obj66 = strTokenizer65.clone();
        java.util.List<java.lang.String> strList67 = strTokenizer65.getTokenList();
        int int68 = strList67.size();
        java.util.ListIterator<java.lang.String> strItor69 = strList67.listIterator();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        java.util.List<java.lang.String> strList74 = strTokenizer73.getTokenList();
        boolean boolean75 = strList67.containsAll((java.util.Collection<java.lang.String>) strList74);
        java.util.stream.Stream<java.lang.String> strStream76 = strList67.stream();
        java.lang.String[] strArray79 = new java.lang.String[] { "hi!", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList80 = new java.util.ArrayList<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList80, strArray79);
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher83, strMatcher84);
        java.lang.String str86 = strTokenizer85.toString();
        java.util.List<java.lang.String> strList87 = strTokenizer85.getTokenList();
        boolean boolean88 = strList87.isEmpty();
        boolean boolean89 = strList87.isEmpty();
        java.util.stream.Stream<java.lang.String> strStream90 = strList87.stream();
        boolean boolean91 = strList80.addAll((java.util.Collection<java.lang.String>) strList87);
        boolean boolean92 = strList80.isEmpty();
        boolean boolean93 = strList67.retainAll((java.util.Collection<java.lang.String>) strList80);
        boolean boolean94 = strList24.removeAll((java.util.Collection<java.lang.String>) strList80);
        java.util.stream.Stream<java.lang.String> strStream95 = strList24.stream();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList98 = strList24.subList((int) (byte) 0, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strSpliterator14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[null]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[null]");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strStream33);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str62, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(strItor69);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(strStream76);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str86, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(strStream90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(strStream95);
    }

    @Test
    public void test11545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11545");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("a");
        java.util.List<java.lang.String> strList2 = strTokenizer1.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        java.lang.String str7 = strTokenizer6.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer6.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer6.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setIgnoreEmptyTokens(false);
        int int16 = strList2.indexOf((java.lang.Object) strTokenizer13);
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.stream.Stream<java.lang.String> strStream21 = strList19.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher23, strMatcher24);
        java.lang.String str26 = strTokenizer25.toString();
        java.util.List<java.lang.String> strList27 = strTokenizer25.getTokenList();
        java.lang.Object obj28 = null;
        boolean boolean29 = strList27.remove(obj28);
        boolean boolean30 = strList19.removeAll((java.util.Collection<java.lang.String>) strList27);
        java.util.Spliterator<java.lang.String> strSpliterator31 = strList19.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher34);
        java.lang.String str36 = strTokenizer35.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer35.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer35.setEmptyTokenAsNull(false);
        java.util.List<java.lang.String> strList41 = strTokenizer40.getTokenList();
        boolean boolean42 = strList19.remove((java.lang.Object) strList41);
        java.util.Spliterator<java.lang.String> strSpliterator43 = strList41.spliterator();
        boolean boolean44 = strList2.removeAll((java.util.Collection<java.lang.String>) strList41);
        java.util.stream.Stream<java.lang.String> strStream45 = strList2.parallelStream();
        java.util.ListIterator<java.lang.String> strItor46 = strList2.listIterator();
        char[] charArray48 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher50, strMatcher51);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer52.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, strMatcher53, strMatcher54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray48);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher61, strMatcher62);
        java.lang.String str64 = strTokenizer63.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer63.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer63.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer63.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer68.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer68.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer59.setIgnoredMatcher(strMatcher71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer72.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = strTokenizer72.getIgnoredMatcher();
        int int76 = strList2.indexOf((java.lang.Object) strMatcher75);
        strList2.clear();
        java.lang.String[] strArray79 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList80 = new java.util.ArrayList<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList80, strArray79);
        java.util.stream.Stream<java.lang.String> strStream82 = strList80.stream();
        java.lang.Object[] objArray83 = strList80.toArray();
        java.lang.Object[] objArray84 = strList80.toArray();
        java.util.Iterator<java.lang.String> strItor85 = strList80.iterator();
        java.lang.String str88 = strList80.set(0, "StrTokenizer[");
        java.util.ListIterator<java.lang.String> strItor89 = strList80.listIterator();
        boolean boolean90 = strList2.removeAll((java.util.Collection<java.lang.String>) strList80);
        java.util.stream.Stream<java.lang.String> strStream91 = strList2.parallelStream();
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str7, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strStream21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str26, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strSpliterator31);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str36, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strSpliterator43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strStream45);
        org.junit.Assert.assertNotNull(strItor46);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str64, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(strStream82);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[hi!]");
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[hi!]");
        org.junit.Assert.assertNotNull(strItor85);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "hi!" + "'", str88, "hi!");
        org.junit.Assert.assertNotNull(strItor89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(strStream91);
    }

    @Test
    public void test11546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11546");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("a");
        char[] charArray19 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher21, strMatcher22);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher24, strMatcher25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer17.reset(charArray19);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer17.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer17.getTrimmerMatcher();
        char[] charArray39 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher41, strMatcher42);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer43.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher44, strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer47.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.setTrimmerMatcher(strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher37, strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '#', 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "StrTokenizer[h]");
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strMatcher57);
    }

    @Test
    public void test11547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11547");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        boolean boolean5 = strList2.isEmpty();
        char[] charArray6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher7);
        java.lang.String[] strArray9 = strTokenizer8.getTokenArray();
        boolean boolean10 = strList2.equals((java.lang.Object) strArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        java.lang.String str15 = strTokenizer14.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setDelimiterString("");
        java.lang.Object obj19 = strTokenizer18.clone();
        java.util.List<java.lang.String> strList20 = strTokenizer18.getTokenList();
        java.util.ListIterator<java.lang.String> strItor22 = strList20.listIterator((int) (short) 0);
        boolean boolean23 = strList2.removeAll((java.util.Collection<java.lang.String>) strList20);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.stream.Stream<java.lang.String> strStream29 = strList27.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher31, strMatcher32);
        java.lang.String str34 = strTokenizer33.toString();
        java.util.List<java.lang.String> strList35 = strTokenizer33.getTokenList();
        java.lang.Object obj36 = null;
        boolean boolean37 = strList35.remove(obj36);
        boolean boolean38 = strList27.removeAll((java.util.Collection<java.lang.String>) strList35);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher40, strMatcher41);
        java.lang.String str43 = strTokenizer42.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer42.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer44.setDelimiterString("");
        java.lang.Object obj47 = strTokenizer46.clone();
        java.util.List<java.lang.String> strList48 = strTokenizer46.getTokenList();
        boolean boolean49 = strList27.retainAll((java.util.Collection<java.lang.String>) strList48);
        java.util.ListIterator<java.lang.String> strItor50 = strList27.listIterator();
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        java.util.stream.Stream<java.lang.String> strStream55 = strList53.stream();
        boolean boolean56 = strList53.isEmpty();
        java.lang.Object[] objArray57 = strList53.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator58 = strList53.spliterator();
        java.util.Spliterator<java.lang.String> strSpliterator59 = strList53.spliterator();
        strList53.clear();
        boolean boolean61 = strList27.containsAll((java.util.Collection<java.lang.String>) strList53);
        strList27.clear();
        java.util.Iterator<java.lang.String> strItor63 = strList27.iterator();
        boolean boolean64 = strList20.addAll(1, (java.util.Collection<java.lang.String>) strList27);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str66 = strList27.remove(1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str15, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strStream29);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str34, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str43, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strItor50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strStream55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[hi!]");
        org.junit.Assert.assertNotNull(strSpliterator58);
        org.junit.Assert.assertNotNull(strSpliterator59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strItor63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test11548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11548");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        char[] charArray10 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher15, strMatcher16);
        int int21 = strMatcher6.isMatch(charArray10, 1, 1, (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher25);
        java.lang.String str27 = strTokenizer26.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer26.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher34, strMatcher35);
        java.lang.String str37 = strTokenizer36.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer36.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer36.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setQuoteChar('4');
        int int44 = strTokenizer43.previousIndex();
        boolean boolean45 = strTokenizer43.isEmptyTokenAsNull();
        java.lang.Object obj46 = strTokenizer43.clone();
        char[] charArray48 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher50, strMatcher51);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer52.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, strMatcher53, strMatcher54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer43.reset(charArray48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray48);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher61);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher65, strMatcher66);
        java.lang.String str68 = strTokenizer67.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer67.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = strTokenizer67.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer67.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer67.setDelimiterMatcher(strMatcher73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher73);
        boolean boolean76 = strTokenizer75.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer75.setTrimmerMatcher(strMatcher78);
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = strTokenizer75.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, strMatcher61, strMatcher80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer32.setIgnoredMatcher(strMatcher80);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer82.add("StrTokenizer[a]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str27, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str37, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str68, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strTokenizer82);
    }

    @Test
    public void test11549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11549");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer3.setDelimiterMatcher(strMatcher9);
        int int11 = strTokenizer10.previousIndex();
        boolean boolean12 = strTokenizer10.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer10.reset();
        boolean boolean14 = strTokenizer13.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer13.getTrimmerMatcher();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strMatcher15);
    }

    @Test
    public void test11550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11550");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        int int11 = strTokenizer10.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer10.getTrimmerMatcher();
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, '#', '4');
        int int31 = strMatcher12.isMatch(charArray14, (int) (byte) 10);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test11551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11551");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[StrTokenizer[]]", "#a444 ");
    }

    @Test
    public void test11552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11552");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher5, strMatcher6);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer7.getTrimmerMatcher();
        char[] charArray10 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher15, strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher8, strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[hi!]", strMatcher8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[hi!]", "hi!");
        java.lang.String str24 = strTokenizer23.previousToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer23.getTrimmerMatcher();
        int int26 = strTokenizer23.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer23.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher27, strMatcher28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("h", strMatcher8, strMatcher27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("#a444 ", strMatcher8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.reset("hi!");
        java.lang.String str36 = strTokenizer35.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.reset("hi!");
        int int41 = strTokenizer38.nextIndex();
        boolean boolean42 = strTokenizer38.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer38.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer38.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer35.setDelimiterMatcher(strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer31.setDelimiterMatcher(strMatcher45);
        boolean boolean48 = strTokenizer31.hasPrevious();
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test11553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11553");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher2, strMatcher3);
        boolean boolean5 = strTokenizer4.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer4.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer4.setQuoteMatcher(strMatcher10);
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray14);
        int int27 = strMatcher10.isMatch(charArray14, (int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher29, strMatcher30);
        java.lang.String str32 = strTokenizer31.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer31.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer31.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setIgnoreEmptyTokens(false);
        java.lang.String str41 = strTokenizer38.next();
        char[] charArray43 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher45, strMatcher46);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher48, strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer38.setIgnoredMatcher(strMatcher52);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher55, strMatcher56);
        java.lang.String str58 = strTokenizer57.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer57.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer57.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer57.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer62.setQuoteChar('4');
        char[] charArray66 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher68, strMatcher69);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer70.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, strMatcher71, strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer62.reset(charArray66);
        int int81 = strMatcher52.isMatch(charArray66, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher83, strMatcher84);
        boolean boolean86 = strTokenizer85.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer85.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer88.setIgnoredChar(' ');
        java.lang.String str91 = strTokenizer90.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher92 = strTokenizer90.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher52, strMatcher92);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher52);
        int int95 = strTokenizer94.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher96 = strTokenizer94.getDelimiterMatcher();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str32, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str58, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a]");
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "StrTokenizer[hi!]" + "'", str91, "StrTokenizer[hi!]");
        org.junit.Assert.assertNotNull(strMatcher92);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 0 + "'", int95 == 0);
        org.junit.Assert.assertNotNull(strMatcher96);
    }

    @Test
    public void test11554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11554");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '#', '4');
        java.lang.String str17 = strTokenizer16.getContent();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "a" + "'", str17, "a");
    }

    @Test
    public void test11555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11555");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer(charArray0);
        char[] charArray3 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher5, strMatcher6);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer7.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, strMatcher8, strMatcher9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, "a");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer1.reset(charArray3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, "#a444 ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, "#a444 ");
        int int25 = strTokenizer24.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer24.getDelimiterMatcher();
        java.lang.String[] strArray27 = strTokenizer24.getTokenArray();
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[a]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strArray27);
    }

    @Test
    public void test11556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11556");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "hi!");
        java.lang.String str24 = strTokenizer23.previousToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer23.getTrimmerMatcher();
        boolean boolean26 = strTokenizer23.hasNext();
        java.lang.String str27 = strTokenizer23.getContent();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "a" + "'", str27, "a");
    }

    @Test
    public void test11557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11557");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        boolean boolean4 = strTokenizer3.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.setIgnoredChar(' ');
        char[] charArray9 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher10);
        int int12 = strTokenizer11.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.reset();
        java.lang.String str14 = strTokenizer11.nextToken();
        char[] charArray16 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher18, strMatcher19);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher21, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray16);
        char[] charArray29 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher31, strMatcher32);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher34, strMatcher35);
        char[] charArray38 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher40, strMatcher41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher43, strMatcher44);
        int int49 = strMatcher34.isMatch(charArray38, 1, 1, (int) ' ');
        char[] charArray50 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher51);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer52.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher34, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer11.setIgnoredMatcher(strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer8.setDelimiterMatcher(strMatcher53);
        java.lang.String str57 = strTokenizer56.next();
        java.lang.String str58 = strTokenizer56.getContent();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
    }

    @Test
    public void test11558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11558");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        boolean boolean4 = strList2.isEmpty();
        java.util.Spliterator<java.lang.String> strSpliterator5 = strList2.spliterator();
        java.util.Spliterator<java.lang.String> strSpliterator6 = strList2.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher8, strMatcher9);
        java.lang.String str11 = strTokenizer10.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setDelimiterString("");
        java.lang.Object obj15 = strTokenizer14.clone();
        java.util.List<java.lang.String> strList16 = strTokenizer14.getTokenList();
        java.util.ListIterator<java.lang.String> strItor18 = strList16.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor19 = strList16.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int22 = strList16.indexOf((java.lang.Object) strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray25 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher30, strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray25);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer23.setTrimmerMatcher(strMatcher34);
        int int36 = strList16.indexOf((java.lang.Object) strTokenizer35);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher38, strMatcher39);
        java.lang.String str41 = strTokenizer40.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer42.setDelimiterString("");
        java.lang.Object obj45 = strTokenizer44.clone();
        java.util.List<java.lang.String> strList46 = strTokenizer44.getTokenList();
        int int47 = strList46.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher49, strMatcher50);
        java.lang.String str52 = strTokenizer51.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer51.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer53.setDelimiterString("");
        java.lang.Object obj56 = strTokenizer55.clone();
        java.util.List<java.lang.String> strList57 = strTokenizer55.getTokenList();
        int int58 = strList57.size();
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList61 = new java.util.ArrayList<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        java.util.stream.Stream<java.lang.String> strStream63 = strList61.stream();
        java.lang.Object[] objArray64 = strList61.toArray();
        boolean boolean65 = strList57.removeAll((java.util.Collection<java.lang.String>) strList61);
        boolean boolean66 = strList46.containsAll((java.util.Collection<java.lang.String>) strList57);
        java.util.Spliterator<java.lang.String> strSpliterator67 = strList57.spliterator();
        boolean boolean68 = strList57.isEmpty();
        boolean boolean69 = strList16.retainAll((java.util.Collection<java.lang.String>) strList57);
        boolean boolean70 = strList2.removeAll((java.util.Collection<java.lang.String>) strList57);
        java.util.Iterator<java.lang.String> strItor71 = strList57.iterator();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.String> strItor73 = strList57.listIterator((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strSpliterator5);
        org.junit.Assert.assertNotNull(strSpliterator6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str11, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(strItor18);
        org.junit.Assert.assertNotNull(strItor19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str41, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str52, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strStream63);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strSpliterator67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strItor71);
    }

    @Test
    public void test11559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11559");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        boolean boolean4 = strTokenizer3.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.setIgnoredChar(' ');
        char[] charArray9 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher10);
        int int12 = strTokenizer11.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.reset();
        java.lang.String str14 = strTokenizer11.nextToken();
        char[] charArray16 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher18, strMatcher19);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher21, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray16);
        char[] charArray29 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher31, strMatcher32);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher34, strMatcher35);
        char[] charArray38 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher40, strMatcher41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher43, strMatcher44);
        int int49 = strMatcher34.isMatch(charArray38, 1, 1, (int) ' ');
        char[] charArray50 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher51);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer52.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher34, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer11.setIgnoredMatcher(strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer8.setDelimiterMatcher(strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.setIgnoredChar('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer58.getIgnoredMatcher();
        int int60 = strTokenizer58.size();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
    }

    @Test
    public void test11560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11560");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher11, strMatcher12);
        boolean boolean14 = strTokenizer13.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer13.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setDelimiterChar('a');
        char[] charArray23 = new char[] { 'a', ' ', ' ', ' ' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        java.lang.String str28 = strTokenizer27.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer27.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer27.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.setQuoteChar('4');
        char[] charArray36 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher38, strMatcher39);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer40.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher41, strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer32.reset(charArray36);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer16.setIgnoredMatcher(strMatcher48);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer50.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer8.setTrimmerMatcher(strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer8.setEmptyTokenAsNull(true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a   ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a   ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a,  ,  ,  ]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str28, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer54);
    }

    @Test
    public void test11561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11561");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher2, strMatcher3);
        java.lang.String str5 = strTokenizer4.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer4.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer4.setEmptyTokenAsNull(false);
        java.lang.Object obj10 = strTokenizer9.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        java.lang.String str15 = strTokenizer14.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer14.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer14.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer14.setDelimiterMatcher(strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer9.setQuoteMatcher(strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.setIgnoredChar('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer24.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer24.getQuoteMatcher();
        char[] charArray28 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher30, strMatcher31);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer32.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher33, strMatcher34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray28);
        char[] charArray41 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher43, strMatcher44);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer45.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher46, strMatcher47);
        char[] charArray50 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher52, strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher55, strMatcher56);
        int int61 = strMatcher46.isMatch(charArray50, 1, 1, (int) ' ');
        char[] charArray62 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, strMatcher63);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = strTokenizer64.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher46, strMatcher65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher26, strMatcher46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer67.setDelimiterChar(' ');
        java.lang.String str70 = strTokenizer67.getContent();
        boolean boolean71 = strTokenizer67.isIgnoreEmptyTokens();
        java.lang.String str72 = strTokenizer67.getContent();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str5, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str15, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a]");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a]");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
    }

    @Test
    public void test11562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11562");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoreEmptyTokens(false);
        int int13 = strTokenizer10.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer10.setDelimiterChar('a');
        char[] charArray17 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher22, strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer10.reset(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, ' ', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher40);
        java.lang.String str42 = strTokenizer41.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.setDelimiterString("");
        java.lang.Object obj46 = strTokenizer45.clone();
        java.util.List<java.lang.String> strList47 = strTokenizer45.getTokenList();
        java.util.ListIterator<java.lang.String> strItor49 = strList47.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor50 = strList47.listIterator();
        char[] charArray52 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher54, strMatcher55);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer56.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher57, strMatcher58);
        boolean boolean60 = strList47.remove((java.lang.Object) strMatcher57);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher62, strMatcher63);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = strTokenizer64.getTrimmerMatcher();
        char[] charArray67 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher69, strMatcher70);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer71.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, strMatcher72, strMatcher73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer64.reset(charArray67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer64.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = strTokenizer81.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher57, strMatcher82);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, '#', '#');
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str42, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNotNull(strItor49);
        org.junit.Assert.assertNotNull(strItor50);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a]");
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertNotNull(strTokenizer85);
    }

    @Test
    public void test11563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11563");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        char[] charArray23 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28, strMatcher29);
        int int34 = strMatcher19.isMatch(charArray23, 1, 1, (int) ' ');
        char[] charArray35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher19, strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer49.getTrimmerMatcher();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strMatcher50);
    }

    @Test
    public void test11564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11564");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        java.lang.Object obj9 = strTokenizer8.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer8.setDelimiterChar('a');
        boolean boolean12 = strTokenizer8.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer8.setIgnoredMatcher(strMatcher15);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        java.lang.String str18 = strTokenizer16.getContent();
        java.lang.String str19 = strTokenizer16.nextToken();
        java.lang.String str20 = strTokenizer16.previous();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer16.reset();
        char[] charArray23 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, '4', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer21.reset(charArray23);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher48, strMatcher49);
        java.lang.String str51 = strTokenizer50.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer50.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer50.setEmptyTokenAsNull(false);
        java.lang.Object obj56 = strTokenizer55.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer55.setDelimiterChar('a');
        boolean boolean59 = strTokenizer55.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer55.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer55.setIgnoredMatcher(strMatcher62);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer63.getTrimmerMatcher();
        char[] charArray66 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher68, strMatcher69);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer70.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, strMatcher71, strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, '#', '#');
        int int84 = strMatcher64.isMatch(charArray66, 10, (int) 'a', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray66);
        int int86 = strTokenizer85.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.doubleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer85.setIgnoredMatcher(strMatcher87);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher87);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer(charArray23);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str51, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a]");
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strTokenizer90);
    }

    @Test
    public void test11565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11565");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        char[] charArray23 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28, strMatcher29);
        int int34 = strMatcher19.isMatch(charArray23, 1, 1, (int) ' ');
        char[] charArray35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher19, strMatcher38);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher41, strMatcher42);
        java.lang.String str44 = strTokenizer43.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer43.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer43.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.setIgnoreEmptyTokens(false);
        int int53 = strTokenizer50.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer50.setDelimiterChar('a');
        char[] charArray57 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher59, strMatcher60);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer61.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, strMatcher62, strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, strMatcher70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer50.reset(charArray57);
        int int78 = strMatcher19.isMatch(charArray57, (int) (short) 0, (int) ' ', (int) (short) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, ' ', '4');
        java.util.List<java.lang.String> strList82 = strTokenizer81.getTokenList();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str44, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a]");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(strList82);
    }

    @Test
    public void test11566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11566");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher23, strMatcher24);
        java.lang.String str26 = strTokenizer25.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer25.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer25.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer25.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.setQuoteChar('4');
        int int33 = strTokenizer32.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer32.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer32.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer21.setQuoteMatcher(strMatcher36);
        boolean boolean38 = strTokenizer21.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer21.setDelimiterChar('a');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer21.set("not tokenized yet]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str26, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strTokenizer40);
    }

    @Test
    public void test11567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11567");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        boolean boolean4 = strTokenizer3.hasPrevious();
        int int5 = strTokenizer3.nextIndex();
        char[] charArray7 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher9, strMatcher10);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher12, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer3.reset(charArray7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setDelimiterString("");
        java.util.List<java.lang.String> strList23 = strTokenizer20.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        java.lang.String str28 = strTokenizer27.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer27.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer27.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer27.setDelimiterMatcher(strMatcher33);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer20.setIgnoredMatcher(strMatcher35);
        boolean boolean37 = strTokenizer36.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer36.add("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a]");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str28, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test11568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11568");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '#', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setIgnoredChar('#');
        java.lang.String str16 = strTokenizer13.next();
        java.lang.String str17 = strTokenizer13.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer13.setDelimiterString("   ");
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "a" + "'", str16, "a");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "a" + "'", str17, "a");
        org.junit.Assert.assertNotNull(strTokenizer19);
    }

    @Test
    public void test11569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11569");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        boolean boolean5 = strList2.isEmpty();
        char[] charArray6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher7);
        java.lang.String[] strArray9 = strTokenizer8.getTokenArray();
        boolean boolean10 = strList2.equals((java.lang.Object) strArray9);
        java.util.Spliterator<java.lang.String> strSpliterator11 = strList2.spliterator();
        java.util.stream.Stream<java.lang.String> strStream12 = strList2.stream();
        java.util.ListIterator<java.lang.String> strItor13 = strList2.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher15, strMatcher16);
        java.lang.String str18 = strTokenizer17.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer17.setDelimiterChar('a');
        int int21 = strTokenizer17.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer17.setIgnoredChar('4');
        java.lang.Object obj24 = strTokenizer17.clone();
        int int25 = strList2.indexOf((java.lang.Object) strTokenizer17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        java.lang.Object obj27 = strTokenizer26.clone();
        boolean boolean28 = strTokenizer26.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer26.setQuoteChar('#');
        int int31 = strTokenizer30.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer30.setTrimmerMatcher(strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer30.setIgnoreEmptyTokens(true);
        java.lang.Object obj36 = strTokenizer30.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer30.getDelimiterMatcher();
        char[] charArray39 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher41, strMatcher42);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer43.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher44, strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer30.setIgnoredMatcher(strMatcher60);
        boolean boolean62 = strList2.equals((java.lang.Object) strTokenizer30);
        java.util.Spliterator<java.lang.String> strSpliterator63 = strList2.spliterator();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strSpliterator11);
        org.junit.Assert.assertNotNull(strStream12);
        org.junit.Assert.assertNotNull(strItor13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str18, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strSpliterator63);
    }

    @Test
    public void test11570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11570");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        int int10 = strTokenizer9.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer9.setIgnoredMatcher(strMatcher11);
        java.util.List<java.lang.String> strList13 = strTokenizer12.getTokenList();
        boolean boolean14 = strList13.isEmpty();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.stream.Stream<java.lang.String> strStream19 = strList17.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher21, strMatcher22);
        java.lang.String str24 = strTokenizer23.toString();
        java.util.List<java.lang.String> strList25 = strTokenizer23.getTokenList();
        java.lang.Object obj26 = null;
        boolean boolean27 = strList25.remove(obj26);
        boolean boolean28 = strList17.removeAll((java.util.Collection<java.lang.String>) strList25);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher30, strMatcher31);
        java.lang.String str33 = strTokenizer32.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setDelimiterString("");
        java.lang.Object obj37 = strTokenizer36.clone();
        java.util.List<java.lang.String> strList38 = strTokenizer36.getTokenList();
        boolean boolean39 = strList17.retainAll((java.util.Collection<java.lang.String>) strList38);
        java.util.ListIterator<java.lang.String> strItor40 = strList38.listIterator();
        int int41 = strList38.size();
        boolean boolean42 = strList13.containsAll((java.util.Collection<java.lang.String>) strList38);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher44, strMatcher45);
        java.lang.String str47 = strTokenizer46.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.setDelimiterString("");
        java.lang.Object obj51 = strTokenizer50.clone();
        java.util.List<java.lang.String> strList52 = strTokenizer50.getTokenList();
        int int53 = strList52.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher55, strMatcher56);
        java.lang.String str58 = strTokenizer57.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer57.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer59.setDelimiterString("");
        java.lang.Object obj62 = strTokenizer61.clone();
        java.util.List<java.lang.String> strList63 = strTokenizer61.getTokenList();
        int int64 = strList63.size();
        java.lang.String[] strArray66 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList67 = new java.util.ArrayList<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        java.util.stream.Stream<java.lang.String> strStream69 = strList67.stream();
        java.lang.Object[] objArray70 = strList67.toArray();
        boolean boolean71 = strList63.removeAll((java.util.Collection<java.lang.String>) strList67);
        boolean boolean72 = strList52.containsAll((java.util.Collection<java.lang.String>) strList63);
        java.util.Spliterator<java.lang.String> strSpliterator73 = strList63.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher75, strMatcher76);
        java.lang.String str78 = strTokenizer77.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer77.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer79.setDelimiterString("");
        java.lang.Object obj82 = strTokenizer81.clone();
        java.util.List<java.lang.String> strList83 = strTokenizer81.getTokenList();
        int int84 = strList83.size();
        java.lang.String[] strArray86 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList87 = new java.util.ArrayList<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        java.util.stream.Stream<java.lang.String> strStream89 = strList87.stream();
        java.lang.Object[] objArray90 = strList87.toArray();
        boolean boolean91 = strList83.removeAll((java.util.Collection<java.lang.String>) strList87);
        int int92 = strList63.indexOf((java.lang.Object) strList87);
        boolean boolean93 = strList13.containsAll((java.util.Collection<java.lang.String>) strList63);
        java.util.Iterator<java.lang.String> strItor94 = strList63.iterator();
        java.util.stream.Stream<java.lang.String> strStream95 = strList63.stream();
        java.util.stream.Stream<java.lang.String> strStream96 = strList63.parallelStream();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strStream19);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str24, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str33, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strItor40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str47, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str58, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strStream69);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(strSpliterator73);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str78, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(strStream89);
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray90), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray90), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(strItor94);
        org.junit.Assert.assertNotNull(strStream95);
        org.junit.Assert.assertNotNull(strStream96);
    }

    @Test
    public void test11571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11571");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray2 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7, strMatcher8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer10.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer0.setTrimmerMatcher(strMatcher11);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher15, strMatcher16);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        char[] charArray20 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher22, strMatcher23);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer24.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher18, strMatcher26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer0.setIgnoredMatcher(strMatcher26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer0.setIgnoreEmptyTokens(true);
        java.lang.String str32 = strTokenizer31.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer31.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer34.setDelimiterString("StrTokenizer[, ]");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer34.getTrimmerMatcher();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a]");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str32, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strMatcher39);
    }

    @Test
    public void test11572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11572");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher7);
        boolean boolean9 = strList2.remove((java.lang.Object) strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[hi!]", '4');
        int int13 = strList2.lastIndexOf((java.lang.Object) '4');
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.stream.Stream<java.lang.String> strStream18 = strList16.stream();
        boolean boolean19 = strList16.isEmpty();
        java.lang.Object[] objArray20 = strList16.toArray();
        java.lang.String[] strArray26 = new java.lang.String[] { "StrTokenizer[not tokenized yet]", "hi!", "", "StrTokenizer[not tokenized yet]", "hi!" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        boolean boolean29 = strList16.removeAll((java.util.Collection<java.lang.String>) strList27);
        java.util.stream.Stream<java.lang.String> strStream30 = strList27.parallelStream();
        boolean boolean31 = strList2.removeAll((java.util.Collection<java.lang.String>) strList27);
        java.lang.String str33 = strList27.get((int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher35, strMatcher36);
        java.lang.String str38 = strTokenizer37.toString();
        java.util.List<java.lang.String> strList39 = strTokenizer37.getTokenList();
        java.lang.Object obj40 = null;
        boolean boolean41 = strList39.remove(obj40);
        strList39.clear();
        java.util.Spliterator<java.lang.String> strSpliterator43 = strList39.spliterator();
        int int44 = strList27.lastIndexOf((java.lang.Object) strList39);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strStream18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[hi!]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strStream30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str33, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str38, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strSpliterator43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
    }

    @Test
    public void test11573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11573");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        boolean boolean4 = strTokenizer3.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer3.setQuoteMatcher(strMatcher9);
        char[] charArray13 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher15, strMatcher16);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher18, strMatcher19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray13);
        int int26 = strMatcher9.isMatch(charArray13, (int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher28, strMatcher29);
        java.lang.String str31 = strTokenizer30.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer30.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer30.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setIgnoreEmptyTokens(false);
        java.lang.String str40 = strTokenizer37.next();
        char[] charArray42 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher44, strMatcher45);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer46.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher47, strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray42);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer50.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer37.setIgnoredMatcher(strMatcher51);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher54, strMatcher55);
        java.lang.String str57 = strTokenizer56.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer56.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer56.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer61.setQuoteChar('4');
        char[] charArray65 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher67, strMatcher68);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = strTokenizer69.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, strMatcher70, strMatcher71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer61.reset(charArray65);
        int int80 = strMatcher51.isMatch(charArray65, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher82, strMatcher83);
        boolean boolean85 = strTokenizer84.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer84.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer87.setIgnoredChar(' ');
        java.lang.String str90 = strTokenizer89.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = strTokenizer89.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher51, strMatcher91);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a]");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str31, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a]");
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str57, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[a]");
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "StrTokenizer[hi!]" + "'", str90, "StrTokenizer[hi!]");
        org.junit.Assert.assertNotNull(strMatcher91);
        org.junit.Assert.assertNotNull(strTokenizer96);
    }

    @Test
    public void test11574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11574");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoreEmptyTokens(false);
        java.lang.String str13 = strTokenizer10.next();
        char[] charArray15 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher17, strMatcher18);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer10.setIgnoredMatcher(strMatcher24);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        java.lang.String str30 = strTokenizer29.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer29.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer29.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setQuoteChar('4');
        char[] charArray38 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher40, strMatcher41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher43, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer34.reset(charArray38);
        int int53 = strMatcher24.isMatch(charArray38, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, "StrTokenizer[StrTokenizer[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str30, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(strTokenizer59);
    }

    @Test
    public void test11575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11575");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.util.List<java.lang.String> strList5 = strTokenizer3.getTokenList();
        boolean boolean6 = strList5.isEmpty();
        boolean boolean7 = strList5.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher9, strMatcher10);
        java.lang.String str12 = strTokenizer11.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setDelimiterString("");
        java.lang.Object obj16 = strTokenizer15.clone();
        java.util.List<java.lang.String> strList17 = strTokenizer15.getTokenList();
        java.util.ListIterator<java.lang.String> strItor19 = strList17.listIterator((int) (short) 0);
        boolean boolean20 = strList5.containsAll((java.util.Collection<java.lang.String>) strList17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        java.util.List<java.lang.String> strList25 = strTokenizer24.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        java.lang.String str30 = strTokenizer29.toString();
        java.util.List<java.lang.String> strList31 = strTokenizer29.getTokenList();
        java.lang.Object obj32 = null;
        boolean boolean33 = strList31.remove(obj32);
        boolean boolean35 = strList31.add("StrTokenizer[not tokenized yet]");
        boolean boolean36 = strList25.containsAll((java.util.Collection<java.lang.String>) strList31);
        boolean boolean37 = strList5.retainAll((java.util.Collection<java.lang.String>) strList31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        boolean boolean40 = strTokenizer39.hasNext();
        java.lang.String str41 = strTokenizer39.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher43, strMatcher44);
        java.lang.String str46 = strTokenizer45.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer45.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer45.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.setQuoteChar('4');
        char[] charArray54 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher56, strMatcher57);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer58.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, strMatcher59, strMatcher60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer50.reset(charArray54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer39.reset(charArray54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray54);
        boolean boolean68 = strList31.remove((java.lang.Object) charArray54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray54);
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = strTokenizer73.getQuoteMatcher();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str12, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strItor19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str30, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str46, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a]");
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strMatcher74);
    }

    @Test
    public void test11576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11576");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.reset("hi!");
        int int9 = strTokenizer6.nextIndex();
        boolean boolean10 = strList2.equals((java.lang.Object) int9);
        strList2.clear();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.stream.Stream<java.lang.String> strStream16 = strList14.stream();
        boolean boolean17 = strList14.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.reset("hi!");
        java.util.List<java.lang.String> strList24 = strTokenizer21.getTokenList();
        char[] charArray26 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher28, strMatcher29);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer30.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher31, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, '#', '#');
        int int41 = strList24.lastIndexOf((java.lang.Object) strTokenizer40);
        int int42 = strList24.size();
        boolean boolean43 = strList14.retainAll((java.util.Collection<java.lang.String>) strList24);
        int int44 = strList2.indexOf((java.lang.Object) strList24);
        java.lang.Object[] objArray45 = strList24.toArray();
        strList24.clear();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strStream16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a]");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[hi!]");
    }

    @Test
    public void test11577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11577");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        java.util.List<java.lang.String> strList10 = strTokenizer8.getTokenList();
        java.lang.Object obj11 = null;
        boolean boolean12 = strList10.remove(obj11);
        boolean boolean13 = strList2.removeAll((java.util.Collection<java.lang.String>) strList10);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher15, strMatcher16);
        java.lang.String str18 = strTokenizer17.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setDelimiterString("");
        java.lang.Object obj22 = strTokenizer21.clone();
        java.util.List<java.lang.String> strList23 = strTokenizer21.getTokenList();
        boolean boolean24 = strList2.retainAll((java.util.Collection<java.lang.String>) strList23);
        java.util.ListIterator<java.lang.String> strItor25 = strList2.listIterator();
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.stream.Stream<java.lang.String> strStream30 = strList28.stream();
        boolean boolean31 = strList28.isEmpty();
        java.lang.Object[] objArray32 = strList28.toArray();
        boolean boolean33 = strList2.addAll((java.util.Collection<java.lang.String>) strList28);
        java.util.stream.Stream<java.lang.String> strStream34 = strList28.parallelStream();
        java.util.Spliterator<java.lang.String> strSpliterator35 = strList28.spliterator();
        java.util.stream.Stream<java.lang.String> strStream36 = strList28.stream();
        strList28.clear();
        char[] charArray39 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher41, strMatcher42);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer43.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher44, strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray39);
        int int48 = strTokenizer47.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer47.setIgnoredMatcher(strMatcher49);
        java.util.List<java.lang.String> strList51 = strTokenizer50.getTokenList();
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        boolean boolean56 = strList54.isEmpty();
        java.lang.Object[] objArray57 = strList54.toArray();
        java.lang.String[] strArray60 = new java.lang.String[] { "", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList61 = new java.util.ArrayList<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher64, strMatcher65);
        boolean boolean67 = strTokenizer66.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer66.setIgnoredChar('4');
        int int70 = strTokenizer69.nextIndex();
        boolean boolean71 = strList61.equals((java.lang.Object) int70);
        boolean boolean72 = strList54.containsAll((java.util.Collection<java.lang.String>) strList61);
        strList61.clear();
        boolean boolean74 = strList51.removeAll((java.util.Collection<java.lang.String>) strList61);
        java.util.ListIterator<java.lang.String> strItor75 = strList51.listIterator();
        int int76 = strList51.size();
        boolean boolean77 = strList28.removeAll((java.util.Collection<java.lang.String>) strList51);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str18, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strStream30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strStream34);
        org.junit.Assert.assertNotNull(strSpliterator35);
        org.junit.Assert.assertNotNull(strStream36);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[hi!]");
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strItor75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test11578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11578");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray3 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher5, strMatcher6);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer7.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, strMatcher8, strMatcher9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray3);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer1.setTrimmerMatcher(strMatcher12);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        char[] charArray21 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher23, strMatcher24);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer25.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher26, strMatcher27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19, strMatcher27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer1.setIgnoredMatcher(strMatcher27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer1.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer32.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[StrTokenizer[hi!]]", strMatcher33);
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[a]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher33);
    }

    @Test
    public void test11579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11579");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        java.lang.String str23 = strTokenizer22.toString();
        java.util.List<java.lang.String> strList24 = strTokenizer22.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer22.setDelimiterString("a");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher27);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "StrTokenizer[a]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.setEmptyTokenAsNull(false);
        boolean boolean35 = strTokenizer32.hasPrevious();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str23, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test11580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11580");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        java.util.ListIterator<java.lang.String> strItor11 = strList9.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor12 = strList9.listIterator();
        java.util.Iterator<java.lang.String> strItor13 = strList9.iterator();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("a");
        java.util.List<java.lang.String> strList16 = strTokenizer15.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher18, strMatcher19);
        java.lang.String str21 = strTokenizer20.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer20.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer20.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer25.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setIgnoreEmptyTokens(false);
        int int30 = strList16.indexOf((java.lang.Object) strTokenizer27);
        strList16.clear();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher34);
        java.lang.String str36 = strTokenizer35.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer35.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer35.setEmptyTokenAsNull(false);
        java.lang.Object obj41 = strTokenizer40.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher43, strMatcher44);
        java.lang.String str46 = strTokenizer45.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer45.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer45.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer45.setDelimiterMatcher(strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer40.setQuoteMatcher(strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer53.setIgnoredChar('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer55.setEmptyTokenAsNull(true);
        boolean boolean59 = strList16.remove((java.lang.Object) strTokenizer55);
        boolean boolean60 = strList9.removeAll((java.util.Collection<java.lang.String>) strList16);
        strList9.clear();
        boolean boolean63 = strList9.add("StrTokenizer[hi!]");
        char[] charArray65 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher67, strMatcher68);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = strTokenizer69.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, strMatcher70, strMatcher71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, '#');
        java.lang.String str76 = strTokenizer75.nextToken();
        java.lang.String str77 = strTokenizer75.getContent();
        int int78 = strList9.indexOf((java.lang.Object) strTokenizer75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer75.reset("#a444");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strItor11);
        org.junit.Assert.assertNotNull(strItor12);
        org.junit.Assert.assertNotNull(strItor13);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str21, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str36, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str46, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[a]");
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "a" + "'", str76, "a");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "a" + "'", str77, "a");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer80);
    }

    @Test
    public void test11581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11581");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        int int11 = strTokenizer10.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer10.setEmptyTokenAsNull(true);
        boolean boolean14 = strTokenizer10.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer10.getQuoteMatcher();
        char[] charArray17 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher22, strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, "a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, '4', ' ');
        int int39 = strMatcher15.isMatch(charArray17, (int) (byte) 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
    }

    @Test
    public void test11582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11582");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        char[] charArray10 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher15, strMatcher16);
        int int21 = strMatcher6.isMatch(charArray10, 1, 1, (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, "StrTokenizer[hi!]");
        java.util.List<java.lang.String> strList27 = strTokenizer26.getTokenList();
        char[] charArray28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        char[] charArray31 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher34);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer35.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher36, strMatcher37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, "a");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer29.reset(charArray31);
        java.lang.Object obj47 = strTokenizer29.clone();
        int int48 = strList27.indexOf(obj47);
        char[] charArray50 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher52, strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher55, strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer70.setDelimiterChar('#');
        int int73 = strTokenizer72.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = strTokenizer72.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer("hi!", "");
        int int78 = strTokenizer77.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = strTokenizer77.getQuoteMatcher();
        char[] charArray81 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher83, strMatcher84);
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = strTokenizer85.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray81, strMatcher86, strMatcher87);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray81);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray81);
        int int94 = strMatcher79.isMatch(charArray81, (int) (byte) 100, (int) (byte) 1, (int) (byte) 0);
        int int96 = strMatcher74.isMatch(charArray81, 8);
        int int97 = strList27.lastIndexOf((java.lang.Object) strMatcher74);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str99 = strList27.get((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a]");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a]");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[a]");
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-1) + "'", int97 == (-1));
    }

    @Test
    public void test11583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11583");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        int int10 = strTokenizer9.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer9.setEmptyTokenAsNull(false);
        java.util.List<java.lang.String> strList13 = strTokenizer9.getTokenList();
        strList13.clear();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        java.lang.String str19 = strTokenizer18.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setDelimiterString("");
        java.lang.Object obj23 = strTokenizer22.clone();
        java.util.List<java.lang.String> strList24 = strTokenizer22.getTokenList();
        java.util.ListIterator<java.lang.String> strItor26 = strList24.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor27 = strList24.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int30 = strList24.indexOf((java.lang.Object) strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray33 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher35, strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher38, strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray33);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer31.setTrimmerMatcher(strMatcher42);
        int int44 = strList24.indexOf((java.lang.Object) strTokenizer43);
        java.lang.String str46 = strList24.remove((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor47 = strList24.listIterator();
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.stream.Stream<java.lang.String> strStream52 = strList50.stream();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer54.reset("hi!");
        int int57 = strTokenizer54.nextIndex();
        boolean boolean58 = strList50.equals((java.lang.Object) int57);
        boolean boolean59 = strList24.addAll((java.util.Collection<java.lang.String>) strList50);
        strList24.clear();
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher62, strMatcher63);
        java.lang.String str65 = strTokenizer64.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer64.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer64.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer64.setEmptyTokenAsNull(false);
        java.lang.Object obj70 = strTokenizer69.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer69.setDelimiterChar('a');
        boolean boolean73 = strTokenizer69.isEmptyTokenAsNull();
        boolean boolean74 = strTokenizer69.isEmptyTokenAsNull();
        boolean boolean75 = strList24.remove((java.lang.Object) boolean74);
        java.util.ListIterator<java.lang.String> strItor76 = strList24.listIterator();
        boolean boolean77 = strList13.removeAll((java.util.Collection<java.lang.String>) strList24);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList80 = strList24.subList(0, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 97");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str19, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strItor26);
        org.junit.Assert.assertNotNull(strItor27);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(strItor47);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strStream52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str65, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strItor76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test11584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11584");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoreEmptyTokens(false);
        int int13 = strTokenizer10.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer10.setDelimiterChar('a');
        char[] charArray17 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher22, strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer10.reset(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, ' ', ' ');
        char[] charArray40 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher42, strMatcher43);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher45, strMatcher46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray40);
        int int49 = strTokenizer48.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer48.setIgnoredMatcher(strMatcher50);
        boolean boolean52 = strTokenizer51.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer51.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher55, strMatcher56);
        java.lang.String str58 = strTokenizer57.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer57.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer57.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer57.setEmptyTokenAsNull(false);
        java.lang.String str63 = strTokenizer57.nextToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer57.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher53, strMatcher64);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray17);
        char[] charArray68 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher70, strMatcher71);
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = strTokenizer72.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, strMatcher73, strMatcher74);
        char[] charArray77 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher79, strMatcher80);
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = strTokenizer81.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, strMatcher82, strMatcher83);
        int int88 = strMatcher73.isMatch(charArray77, 1, 1, (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray77);
        // The following exception was thrown during execution in test generation
        try {
            int int96 = strMatcher66.isMatch(charArray77, (int) (byte) -1, (-1), 2);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[a]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str58, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[a]");
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[a]");
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertNotNull(strTokenizer92);
    }

    @Test
    public void test11585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11585");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        java.lang.Object obj9 = strTokenizer8.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher11, strMatcher12);
        java.lang.String str14 = strTokenizer13.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer13.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer13.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer13.setDelimiterMatcher(strMatcher19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer8.setQuoteMatcher(strMatcher19);
        java.lang.String str22 = strTokenizer21.nextToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer21.getQuoteMatcher();
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!", "a", "a", "a" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        int int31 = strList29.size();
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        java.util.stream.Stream<java.lang.String> strStream36 = strList34.stream();
        boolean boolean37 = strList34.isEmpty();
        char[] charArray38 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher39);
        java.lang.String[] strArray41 = strTokenizer40.getTokenArray();
        boolean boolean42 = strList34.equals((java.lang.Object) strArray41);
        java.util.Spliterator<java.lang.String> strSpliterator43 = strList34.spliterator();
        java.util.stream.Stream<java.lang.String> strStream44 = strList34.stream();
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        java.util.stream.Stream<java.lang.String> strStream49 = strList47.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher51, strMatcher52);
        java.lang.String str54 = strTokenizer53.toString();
        java.util.List<java.lang.String> strList55 = strTokenizer53.getTokenList();
        java.lang.Object obj56 = null;
        boolean boolean57 = strList55.remove(obj56);
        boolean boolean58 = strList47.removeAll((java.util.Collection<java.lang.String>) strList55);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher60, strMatcher61);
        java.lang.String str63 = strTokenizer62.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer62.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer64.setDelimiterString("");
        java.lang.Object obj67 = strTokenizer66.clone();
        java.util.List<java.lang.String> strList68 = strTokenizer66.getTokenList();
        boolean boolean69 = strList47.retainAll((java.util.Collection<java.lang.String>) strList68);
        java.util.ListIterator<java.lang.String> strItor70 = strList47.listIterator();
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList73 = new java.util.ArrayList<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        java.util.stream.Stream<java.lang.String> strStream75 = strList73.stream();
        boolean boolean76 = strList73.isEmpty();
        java.lang.Object[] objArray77 = strList73.toArray();
        boolean boolean78 = strList47.addAll((java.util.Collection<java.lang.String>) strList73);
        boolean boolean79 = strList34.removeAll((java.util.Collection<java.lang.String>) strList73);
        boolean boolean80 = strList29.removeAll((java.util.Collection<java.lang.String>) strList34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[]");
        int int83 = strList34.indexOf((java.lang.Object) strTokenizer82);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer82.setIgnoreEmptyTokens(false);
        boolean boolean86 = strTokenizer82.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = strTokenizer82.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer21.setDelimiterMatcher(strMatcher87);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str14, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 4 + "'", int31 == 4);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strStream36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strSpliterator43);
        org.junit.Assert.assertNotNull(strStream44);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strStream49);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str54, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str63, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strItor70);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(strStream75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strTokenizer88);
    }

    @Test
    public void test11586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11586");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoreEmptyTokens(false);
        java.lang.String str13 = strTokenizer10.next();
        char[] charArray15 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher17, strMatcher18);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer10.setIgnoredMatcher(strMatcher24);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        java.lang.String str30 = strTokenizer29.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer29.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer29.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setQuoteChar('4');
        char[] charArray38 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher40, strMatcher41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher43, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer34.reset(charArray38);
        int int53 = strMatcher24.isMatch(charArray38, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", '4', 'a');
        java.lang.String[] strArray58 = strTokenizer57.getTokenArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer57.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher59, strMatcher62);
        boolean boolean65 = strTokenizer64.hasNext();
        java.lang.String str66 = strTokenizer64.next();
        java.lang.Object obj67 = strTokenizer64.clone();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str30, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "a" + "'", str66, "a");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test11587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11587");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("a", strMatcher2);
        char[] charArray5 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher8);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer9.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray5, strMatcher10, strMatcher11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray5);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray5, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray5, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray5);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer3.setTrimmerMatcher(strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[]", strMatcher20);
        java.lang.Class<?> wildcardClass23 = strTokenizer22.getClass();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test11588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11588");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        java.util.ListIterator<java.lang.String> strItor11 = strList9.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor12 = strList9.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int15 = strList9.indexOf((java.lang.Object) strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray18 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher23, strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer16.setTrimmerMatcher(strMatcher27);
        int int29 = strList9.indexOf((java.lang.Object) strTokenizer28);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher31, strMatcher32);
        java.lang.String str34 = strTokenizer33.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.setDelimiterString("");
        java.lang.Object obj38 = strTokenizer37.clone();
        java.util.List<java.lang.String> strList39 = strTokenizer37.getTokenList();
        int int40 = strList39.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher42, strMatcher43);
        java.lang.String str45 = strTokenizer44.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer44.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setDelimiterString("");
        java.lang.Object obj49 = strTokenizer48.clone();
        java.util.List<java.lang.String> strList50 = strTokenizer48.getTokenList();
        int int51 = strList50.size();
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.stream.Stream<java.lang.String> strStream56 = strList54.stream();
        java.lang.Object[] objArray57 = strList54.toArray();
        boolean boolean58 = strList50.removeAll((java.util.Collection<java.lang.String>) strList54);
        boolean boolean59 = strList39.containsAll((java.util.Collection<java.lang.String>) strList50);
        java.util.Spliterator<java.lang.String> strSpliterator60 = strList50.spliterator();
        boolean boolean61 = strList50.isEmpty();
        boolean boolean62 = strList9.retainAll((java.util.Collection<java.lang.String>) strList50);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher64, strMatcher65);
        java.lang.String str67 = strTokenizer66.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer66.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer66.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer66.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer71.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer73.setIgnoreEmptyTokens(false);
        int int76 = strTokenizer73.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer73.setDelimiterChar('a');
        int int79 = strTokenizer78.size();
        java.lang.Object obj80 = strTokenizer78.clone();
        int int81 = strList9.lastIndexOf(obj80);
        boolean boolean83 = strList9.add("StrTokenizer[not tokenized yet]");
        java.util.stream.Stream<java.lang.String> strStream84 = strList9.stream();
        strList9.clear();
        java.util.Iterator<java.lang.String> strItor86 = strList9.iterator();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strItor11);
        org.junit.Assert.assertNotNull(strItor12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str34, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str45, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strStream56);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strSpliterator60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str67, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(strStream84);
        org.junit.Assert.assertNotNull(strItor86);
    }

    @Test
    public void test11589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11589");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        boolean boolean5 = strList2.isEmpty();
        char[] charArray6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher7);
        java.lang.String[] strArray9 = strTokenizer8.getTokenArray();
        boolean boolean10 = strList2.equals((java.lang.Object) strArray9);
        java.util.Spliterator<java.lang.String> strSpliterator11 = strList2.spliterator();
        java.util.stream.Stream<java.lang.String> strStream12 = strList2.stream();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.stream.Stream<java.lang.String> strStream17 = strList15.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        java.lang.String str22 = strTokenizer21.toString();
        java.util.List<java.lang.String> strList23 = strTokenizer21.getTokenList();
        java.lang.Object obj24 = null;
        boolean boolean25 = strList23.remove(obj24);
        boolean boolean26 = strList15.removeAll((java.util.Collection<java.lang.String>) strList23);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher28, strMatcher29);
        java.lang.String str31 = strTokenizer30.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.setDelimiterString("");
        java.lang.Object obj35 = strTokenizer34.clone();
        java.util.List<java.lang.String> strList36 = strTokenizer34.getTokenList();
        boolean boolean37 = strList15.retainAll((java.util.Collection<java.lang.String>) strList36);
        java.util.ListIterator<java.lang.String> strItor38 = strList15.listIterator();
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.stream.Stream<java.lang.String> strStream43 = strList41.stream();
        boolean boolean44 = strList41.isEmpty();
        java.lang.Object[] objArray45 = strList41.toArray();
        boolean boolean46 = strList15.addAll((java.util.Collection<java.lang.String>) strList41);
        boolean boolean47 = strList2.removeAll((java.util.Collection<java.lang.String>) strList41);
        boolean boolean48 = strList41.isEmpty();
        java.util.stream.Stream<java.lang.String> strStream49 = strList41.parallelStream();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strSpliterator11);
        org.junit.Assert.assertNotNull(strStream12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strStream17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str22, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str31, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strItor38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strStream43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strStream49);
    }

    @Test
    public void test11590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11590");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        boolean boolean4 = strList2.isEmpty();
        java.lang.Object[] objArray5 = strList2.toArray();
        java.lang.String[] strArray8 = new java.lang.String[] { "", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        boolean boolean15 = strTokenizer14.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer14.setIgnoredChar('4');
        int int18 = strTokenizer17.nextIndex();
        boolean boolean19 = strList9.equals((java.lang.Object) int18);
        boolean boolean20 = strList2.containsAll((java.util.Collection<java.lang.String>) strList9);
        java.util.Spliterator<java.lang.String> strSpliterator21 = strList9.spliterator();
        java.util.stream.Stream<java.lang.String> strStream22 = strList9.stream();
        boolean boolean23 = strList9.isEmpty();
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        java.util.stream.Stream<java.lang.String> strStream28 = strList26.stream();
        java.lang.Object[] objArray29 = strList26.toArray();
        java.util.ListIterator<java.lang.String> strItor30 = strList26.listIterator();
        java.lang.String str32 = strList26.get((int) (short) 0);
        boolean boolean33 = strList26.isEmpty();
        boolean boolean34 = strList26.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher36, strMatcher37);
        java.lang.String str39 = strTokenizer38.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setDelimiterString("");
        java.lang.Object obj43 = strTokenizer42.clone();
        java.util.List<java.lang.String> strList44 = strTokenizer42.getTokenList();
        int int45 = strList44.size();
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.stream.Stream<java.lang.String> strStream50 = strList48.stream();
        java.lang.Object[] objArray51 = strList48.toArray();
        boolean boolean52 = strList44.removeAll((java.util.Collection<java.lang.String>) strList48);
        java.lang.String[] strArray55 = new java.lang.String[] { "", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher59, strMatcher60);
        boolean boolean62 = strTokenizer61.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer61.setIgnoredChar('4');
        int int65 = strTokenizer64.nextIndex();
        boolean boolean66 = strList56.equals((java.lang.Object) int65);
        int int67 = strList56.size();
        boolean boolean68 = strList44.retainAll((java.util.Collection<java.lang.String>) strList56);
        boolean boolean69 = strList44.isEmpty();
        java.util.stream.Stream<java.lang.String> strStream70 = strList44.stream();
        boolean boolean71 = strList26.removeAll((java.util.Collection<java.lang.String>) strList44);
        java.lang.Object[] objArray72 = strList44.toArray();
        boolean boolean73 = strList9.addAll((java.util.Collection<java.lang.String>) strList44);
        java.util.stream.Stream<java.lang.String> strStream74 = strList44.parallelStream();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[hi!]");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strSpliterator21);
        org.junit.Assert.assertNotNull(strStream22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strStream28);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[hi!]");
        org.junit.Assert.assertNotNull(strItor30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str39, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strStream50);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2 + "'", int67 == 2);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strStream70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strStream74);
    }

    @Test
    public void test11591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11591");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        boolean boolean4 = strTokenizer3.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.setDelimiterChar('a');
        char[] charArray13 = new char[] { 'a', ' ', ' ', ' ' };
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher15, strMatcher16);
        java.lang.String str18 = strTokenizer17.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer17.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer17.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.setQuoteChar('4');
        char[] charArray26 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher28, strMatcher29);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer30.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher31, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer22.reset(charArray26);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer6.setIgnoredMatcher(strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer40.setEmptyTokenAsNull(true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a   ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a   ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a,  ,  ,  ]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str18, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a]");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strTokenizer44);
    }

    @Test
    public void test11592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11592");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("a");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = strTokenizer1.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer1.getDelimiterMatcher();
        java.util.List<java.lang.String> strList4 = strTokenizer1.getTokenList();
        java.util.List<java.lang.String> strList5 = strTokenizer1.getTokenList();
        java.lang.Class<?> wildcardClass6 = strList5.getClass();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test11593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11593");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        boolean boolean5 = strList2.isEmpty();
        java.lang.Object[] objArray6 = strList2.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator7 = strList2.spliterator();
        java.util.Spliterator<java.lang.String> strSpliterator8 = strList2.spliterator();
        strList2.clear();
        char[] charArray11 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher25);
        java.lang.String str27 = strTokenizer26.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer26.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer26.setEmptyTokenAsNull(false);
        java.lang.Object obj32 = strTokenizer31.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer31.setDelimiterChar('a');
        boolean boolean35 = strTokenizer31.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer31.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer31.setIgnoredMatcher(strMatcher38);
        char[] charArray41 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher43, strMatcher44);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer45.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher46, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray41);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher38, strMatcher54);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher58, strMatcher59);
        java.lang.String str61 = strTokenizer60.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer60.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer60.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer60.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer65.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer67.setIgnoreEmptyTokens(false);
        java.lang.String str70 = strTokenizer67.next();
        char[] charArray72 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher74, strMatcher75);
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = strTokenizer76.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, strMatcher77, strMatcher78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray72);
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = strTokenizer80.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer67.setIgnoredMatcher(strMatcher81);
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher81, strMatcher83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer85.reset("StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer87.setIgnoreEmptyTokens(true);
        boolean boolean90 = strList2.contains((java.lang.Object) true);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[hi!]");
        org.junit.Assert.assertNotNull(strSpliterator7);
        org.junit.Assert.assertNotNull(strSpliterator8);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str27, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a]");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str61, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[a]");
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test11594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11594");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer7.setIgnoreEmptyTokens(false);
        int int10 = strTokenizer7.nextIndex();
        java.lang.String str11 = strTokenizer7.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer7.reset();
        java.lang.String str13 = strTokenizer7.next();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test11595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11595");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        java.lang.Object obj9 = strTokenizer8.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer8.setDelimiterChar('a');
        boolean boolean12 = strTokenizer8.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer8.setIgnoredMatcher(strMatcher15);
        boolean boolean17 = strTokenizer8.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer8.setQuoteChar('a');
        java.lang.Object obj20 = strTokenizer8.clone();
        java.lang.Object obj21 = strTokenizer8.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = strTokenizer8.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test11596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11596");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        boolean boolean4 = strTokenizer3.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.setIgnoredChar(' ');
        char[] charArray9 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher10);
        int int12 = strTokenizer11.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.reset();
        java.lang.String str14 = strTokenizer11.nextToken();
        char[] charArray16 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher18, strMatcher19);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher21, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray16);
        char[] charArray29 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher31, strMatcher32);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher34, strMatcher35);
        char[] charArray38 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher40, strMatcher41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher43, strMatcher44);
        int int49 = strMatcher34.isMatch(charArray38, 1, 1, (int) ' ');
        char[] charArray50 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher51);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer52.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher34, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer11.setIgnoredMatcher(strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer8.setDelimiterMatcher(strMatcher53);
        java.lang.String str57 = strTokenizer56.next();
        java.lang.Object obj58 = strTokenizer56.clone();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test11597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11597");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        int int11 = strTokenizer10.previousIndex();
        boolean boolean12 = strTokenizer10.isIgnoreEmptyTokens();
        boolean boolean13 = strTokenizer10.hasPrevious();
        char[] charArray15 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher17, strMatcher18);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher30, strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer10.reset(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer33.reset();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer34);
    }

    @Test
    public void test11598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11598");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', 'a');
        java.lang.String str21 = strTokenizer20.toString();
        boolean boolean22 = strTokenizer20.hasPrevious();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str21, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test11599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11599");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        boolean boolean5 = strList2.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.reset("hi!");
        java.util.List<java.lang.String> strList12 = strTokenizer9.getTokenList();
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, '#', '#');
        int int29 = strList12.lastIndexOf((java.lang.Object) strTokenizer28);
        int int30 = strList12.size();
        boolean boolean31 = strList2.retainAll((java.util.Collection<java.lang.String>) strList12);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher34);
        boolean boolean36 = strTokenizer35.hasPrevious();
        int int37 = strTokenizer35.nextIndex();
        char[] charArray39 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher41, strMatcher42);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer43.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher44, strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer35.reset(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer54.setIgnoredChar('#');
        int int57 = strList12.indexOf((java.lang.Object) strTokenizer56);
        java.lang.Object[] objArray58 = strList12.toArray();
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList61 = new java.util.ArrayList<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        java.util.stream.Stream<java.lang.String> strStream63 = strList61.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher65, strMatcher66);
        java.lang.String str68 = strTokenizer67.toString();
        java.util.List<java.lang.String> strList69 = strTokenizer67.getTokenList();
        java.lang.Object obj70 = null;
        boolean boolean71 = strList69.remove(obj70);
        boolean boolean72 = strList61.removeAll((java.util.Collection<java.lang.String>) strList69);
        java.util.Spliterator<java.lang.String> strSpliterator73 = strList61.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher75, strMatcher76);
        java.lang.String str78 = strTokenizer77.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer77.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = strTokenizer77.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer77.setEmptyTokenAsNull(false);
        java.util.List<java.lang.String> strList83 = strTokenizer82.getTokenList();
        boolean boolean84 = strList61.remove((java.lang.Object) strList83);
        java.util.Iterator<java.lang.String> strItor85 = strList83.iterator();
        boolean boolean86 = strList12.remove((java.lang.Object) strItor85);
        java.util.stream.Stream<java.lang.String> strStream87 = strList12.stream();
        int int88 = strList12.size();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[hi!]");
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strStream63);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str68, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(strSpliterator73);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str78, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertNotNull(strList83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strItor85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(strStream87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
    }

    @Test
    public void test11600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11600");
        char[] charArray2 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7, strMatcher8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        java.lang.String str13 = strTokenizer12.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer12.setQuoteChar('4');
        int int16 = strTokenizer15.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer15.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[a]");
        java.lang.String str20 = strTokenizer19.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher22, strMatcher23);
        java.lang.String str25 = strTokenizer24.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer24.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer24.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.setIgnoreEmptyTokens(false);
        java.lang.String str34 = strTokenizer31.next();
        char[] charArray36 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher38, strMatcher39);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer40.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher41, strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray36);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer31.setIgnoredMatcher(strMatcher45);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher48, strMatcher49);
        java.lang.String str51 = strTokenizer50.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer50.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer50.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer55.setQuoteChar('4');
        char[] charArray59 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher61, strMatcher62);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer63.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, strMatcher64, strMatcher65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer55.reset(charArray59);
        int int74 = strMatcher45.isMatch(charArray59, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer19.reset(charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray59);
        int int82 = strMatcher17.isMatch(charArray59, (int) (short) 10, 5, (int) '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher17);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a]");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "a" + "'", str13, "a");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "StrTokenizer[a]" + "'", str20, "StrTokenizer[a]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str25, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str51, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[a]");
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
    }

    @Test
    public void test11601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11601");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher2, strMatcher3);
        java.lang.String str5 = strTokenizer4.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer4.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer4.setEmptyTokenAsNull(false);
        java.lang.Object obj10 = strTokenizer9.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer9.setDelimiterChar('a');
        boolean boolean13 = strTokenizer9.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer9.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer9.setIgnoredMatcher(strMatcher16);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        char[] charArray20 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher22, strMatcher23);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer24.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, '#', '#');
        int int38 = strMatcher18.isMatch(charArray20, 10, (int) 'a', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer0.setTrimmerMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer39.getIgnoredMatcher();
        char[] charArray42 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher44, strMatcher45);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer46.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher47, strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer39.reset(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer39.reset("#a");
        java.util.List<java.lang.String> strList61 = strTokenizer39.getTokenList();
        org.junit.Assert.assertNotNull(strTokenizer0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str5, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a]");
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strList61);
    }

    @Test
    public void test11602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11602");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("a");
        char[] charArray4 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, strMatcher9, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer2.reset(charArray4);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer2.getIgnoredMatcher();
        java.util.List<java.lang.String> strList22 = strTokenizer2.getTokenList();
        java.util.List<java.lang.String> strList23 = strTokenizer2.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer2.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, strMatcher24);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[a]");
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strMatcher24);
    }

    @Test
    public void test11603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11603");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        int int10 = strList9.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        java.lang.String str15 = strTokenizer14.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setDelimiterString("");
        java.lang.Object obj19 = strTokenizer18.clone();
        java.util.List<java.lang.String> strList20 = strTokenizer18.getTokenList();
        int int21 = strList20.size();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.stream();
        java.lang.Object[] objArray27 = strList24.toArray();
        boolean boolean28 = strList20.removeAll((java.util.Collection<java.lang.String>) strList24);
        boolean boolean29 = strList9.containsAll((java.util.Collection<java.lang.String>) strList20);
        java.util.Spliterator<java.lang.String> strSpliterator30 = strList20.spliterator();
        boolean boolean31 = strList20.isEmpty();
        java.util.stream.Stream<java.lang.String> strStream32 = strList20.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher34, strMatcher35);
        java.lang.String str37 = strTokenizer36.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer36.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer36.setEmptyTokenAsNull(false);
        java.lang.Object obj42 = strTokenizer41.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer41.setDelimiterChar('a');
        boolean boolean45 = strTokenizer41.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer41.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        int int49 = strList20.indexOf((java.lang.Object) strTokenizer47);
        java.util.Spliterator<java.lang.String> strSpliterator50 = strList20.spliterator();
        boolean boolean52 = strList20.add("a");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str15, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strSpliterator30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strStream32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str37, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strSpliterator50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test11604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11604");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher7);
        boolean boolean9 = strList2.remove((java.lang.Object) strMatcher7);
        java.lang.String str11 = strList2.get(0);
        char[] charArray13 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher15, strMatcher16);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher18, strMatcher19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher29, strMatcher30);
        java.lang.String str32 = strTokenizer31.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setDelimiterString("");
        java.lang.Object obj36 = strTokenizer35.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer35.getQuoteMatcher();
        char[] charArray39 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher41, strMatcher42);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer43.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher44, strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, "hi!");
        int int54 = strMatcher37.isMatch(charArray39, (int) (short) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer27.setDelimiterMatcher(strMatcher37);
        java.lang.String str56 = strTokenizer55.nextToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer55.getTrimmerMatcher();
        boolean boolean58 = strList2.equals((java.lang.Object) strMatcher57);
        java.util.ListIterator<java.lang.String> strItor59 = strList2.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("a", strMatcher61);
        char[] charArray64 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher66, strMatcher67);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, strMatcher69, strMatcher70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer62.setTrimmerMatcher(strMatcher79);
        boolean boolean81 = strList2.equals((java.lang.Object) strTokenizer62);
        java.util.Iterator<java.lang.String> strItor82 = strList2.iterator();
        java.util.Iterator<java.lang.String> strItor83 = strList2.iterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str86 = strList2.set((int) (short) -1, "not tokenized yet]");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a]");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str32, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "a" + "'", str56, "a");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strItor59);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[a]");
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(strItor82);
        org.junit.Assert.assertNotNull(strItor83);
    }

    @Test
    public void test11605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11605");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        boolean boolean5 = strList2.isEmpty();
        java.lang.Object[] objArray6 = strList2.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator7 = strList2.spliterator();
        java.util.Spliterator<java.lang.String> strSpliterator8 = strList2.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher10, strMatcher11);
        boolean boolean13 = strTokenizer12.hasPrevious();
        int int14 = strTokenizer12.nextIndex();
        boolean boolean15 = strTokenizer12.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer12.setQuoteChar('a');
        boolean boolean18 = strTokenizer12.hasNext();
        int int19 = strList2.lastIndexOf((java.lang.Object) strTokenizer12);
        char[] charArray20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, 'a', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer23.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        java.lang.String str30 = strTokenizer29.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer29.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer25.setQuoteMatcher(strMatcher32);
        boolean boolean34 = strList2.remove((java.lang.Object) strTokenizer33);
        char[] charArray36 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher38, strMatcher39);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer40.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher41, strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.setDelimiterChar('#');
        int int51 = strList2.lastIndexOf((java.lang.Object) strTokenizer50);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[hi!]");
        org.junit.Assert.assertNotNull(strSpliterator7);
        org.junit.Assert.assertNotNull(strSpliterator8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str30, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
    }

    @Test
    public void test11606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11606");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher11, strMatcher12);
        boolean boolean14 = strTokenizer13.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer13.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setDelimiterChar('a');
        char[] charArray23 = new char[] { 'a', ' ', ' ', ' ' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        java.lang.String str28 = strTokenizer27.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer27.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer27.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.setQuoteChar('4');
        char[] charArray36 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher38, strMatcher39);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer40.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher41, strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer32.reset(charArray36);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer16.setIgnoredMatcher(strMatcher48);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer50.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer8.setTrimmerMatcher(strMatcher51);
        java.lang.String str53 = strTokenizer52.getContent();
        java.lang.String[] strArray54 = strTokenizer52.getTokenArray();
        boolean boolean55 = strTokenizer52.hasPrevious();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a   ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a   ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a,  ,  ,  ]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str28, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test11607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11607");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        boolean boolean9 = strTokenizer3.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer3.setTrimmerMatcher(strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer3.setIgnoredChar(' ');
        java.lang.String str17 = strTokenizer16.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer16.setEmptyTokenAsNull(true);
        java.lang.String[] strArray20 = strTokenizer16.getTokenArray();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strArray20);
    }

    @Test
    public void test11608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11608");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        int int10 = strList9.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        java.lang.String str15 = strTokenizer14.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setDelimiterString("");
        java.lang.Object obj19 = strTokenizer18.clone();
        java.util.List<java.lang.String> strList20 = strTokenizer18.getTokenList();
        int int21 = strList20.size();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.stream();
        java.lang.Object[] objArray27 = strList24.toArray();
        boolean boolean28 = strList20.removeAll((java.util.Collection<java.lang.String>) strList24);
        boolean boolean29 = strList9.containsAll((java.util.Collection<java.lang.String>) strList20);
        java.util.Spliterator<java.lang.String> strSpliterator30 = strList20.spliterator();
        java.util.ListIterator<java.lang.String> strItor31 = strList20.listIterator();
        java.util.stream.Stream<java.lang.String> strStream32 = strList20.parallelStream();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.stream.Stream<java.lang.String> strStream37 = strList35.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher40);
        java.lang.String str42 = strTokenizer41.toString();
        java.util.List<java.lang.String> strList43 = strTokenizer41.getTokenList();
        java.lang.Object obj44 = null;
        boolean boolean45 = strList43.remove(obj44);
        boolean boolean46 = strList35.removeAll((java.util.Collection<java.lang.String>) strList43);
        java.util.Spliterator<java.lang.String> strSpliterator47 = strList35.spliterator();
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        boolean boolean52 = strList50.isEmpty();
        java.lang.Object[] objArray53 = strList50.toArray();
        java.lang.Object[] objArray54 = strList35.toArray(objArray53);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher56, strMatcher57);
        java.lang.String str59 = strTokenizer58.toString();
        java.util.List<java.lang.String> strList60 = strTokenizer58.getTokenList();
        java.lang.Object obj61 = null;
        boolean boolean62 = strList60.remove(obj61);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher65);
        boolean boolean67 = strList60.contains((java.lang.Object) "");
        java.util.ListIterator<java.lang.String> strItor69 = strList60.listIterator(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher71, strMatcher72);
        java.lang.String str74 = strTokenizer73.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer73.reset();
        int int76 = strList60.indexOf((java.lang.Object) strTokenizer75);
        boolean boolean77 = strList35.addAll((java.util.Collection<java.lang.String>) strList60);
        boolean boolean78 = strList20.retainAll((java.util.Collection<java.lang.String>) strList35);
        boolean boolean79 = strList35.isEmpty();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str15, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strSpliterator30);
        org.junit.Assert.assertNotNull(strItor31);
        org.junit.Assert.assertNotNull(strStream32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strStream37);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str42, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strSpliterator47);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[null]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[null]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str59, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strItor69);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str74, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test11609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11609");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        int int10 = strList9.size();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.stream.Stream<java.lang.String> strStream15 = strList13.stream();
        java.lang.Object[] objArray16 = strList13.toArray();
        boolean boolean17 = strList9.removeAll((java.util.Collection<java.lang.String>) strList13);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        boolean boolean22 = strTokenizer21.hasPrevious();
        int int23 = strTokenizer21.nextIndex();
        int int24 = strTokenizer21.previousIndex();
        boolean boolean25 = strList9.remove((java.lang.Object) strTokenizer21);
        strList9.clear();
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        boolean boolean31 = strList29.isEmpty();
        strList29.clear();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher34, strMatcher35);
        java.lang.String str37 = strTokenizer36.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setDelimiterString("");
        java.lang.Object obj41 = strTokenizer40.clone();
        java.util.List<java.lang.String> strList42 = strTokenizer40.getTokenList();
        int int43 = strTokenizer40.size();
        java.util.List<java.lang.String> strList44 = strTokenizer40.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int46 = strList44.lastIndexOf((java.lang.Object) strMatcher45);
        boolean boolean47 = strList29.retainAll((java.util.Collection<java.lang.String>) strList44);
        boolean boolean48 = strList9.retainAll((java.util.Collection<java.lang.String>) strList29);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher50, strMatcher51);
        java.lang.String str53 = strTokenizer52.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer52.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer52.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer57.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer59.setIgnoreEmptyTokens(false);
        java.lang.String str62 = strTokenizer59.next();
        char[] charArray64 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher66, strMatcher67);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, strMatcher69, strMatcher70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray64);
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = strTokenizer72.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer59.setIgnoredMatcher(strMatcher73);
        boolean boolean75 = strTokenizer59.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList76 = strTokenizer59.getTokenList();
        boolean boolean77 = strList9.containsAll((java.util.Collection<java.lang.String>) strList76);
        java.util.ListIterator<java.lang.String> strItor78 = strList76.listIterator();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str37, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str53, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[a]");
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strItor78);
    }

    @Test
    public void test11610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11610");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        java.util.List<java.lang.String> strList10 = strTokenizer8.getTokenList();
        java.lang.Object obj11 = null;
        boolean boolean12 = strList10.remove(obj11);
        boolean boolean13 = strList2.removeAll((java.util.Collection<java.lang.String>) strList10);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher15, strMatcher16);
        java.lang.String str18 = strTokenizer17.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setDelimiterString("");
        java.lang.Object obj22 = strTokenizer21.clone();
        java.util.List<java.lang.String> strList23 = strTokenizer21.getTokenList();
        boolean boolean24 = strList2.retainAll((java.util.Collection<java.lang.String>) strList23);
        java.util.ListIterator<java.lang.String> strItor25 = strList2.listIterator();
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.stream.Stream<java.lang.String> strStream30 = strList28.stream();
        boolean boolean31 = strList28.isEmpty();
        java.lang.Object[] objArray32 = strList28.toArray();
        boolean boolean33 = strList2.addAll((java.util.Collection<java.lang.String>) strList28);
        java.util.ListIterator<java.lang.String> strItor35 = strList2.listIterator(0);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str18, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strStream30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strItor35);
    }

    @Test
    public void test11611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11611");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        char[] charArray12 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher14, strMatcher15);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher17, strMatcher18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer8.reset(charArray12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, '#', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray12);
        boolean boolean29 = strTokenizer28.isIgnoreEmptyTokens();
        boolean boolean30 = strTokenizer28.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer28.reset("h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer28.setEmptyTokenAsNull(true);
        int int35 = strTokenizer34.previousIndex();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
    }

    @Test
    public void test11612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11612");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setDelimiterString("");
        java.lang.Object obj13 = strTokenizer12.clone();
        java.util.List<java.lang.String> strList14 = strTokenizer12.getTokenList();
        java.util.ListIterator<java.lang.String> strItor16 = strList14.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor17 = strList14.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int20 = strList14.indexOf((java.lang.Object) strMatcher19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer3.setDelimiterMatcher(strMatcher19);
        java.util.List<java.lang.String> strList22 = strTokenizer21.getTokenList();
        strList22.clear();
        java.util.Spliterator<java.lang.String> strSpliterator24 = strList22.spliterator();
        boolean boolean25 = strList22.isEmpty();
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.stream.Stream<java.lang.String> strStream30 = strList28.stream();
        boolean boolean31 = strList28.isEmpty();
        java.lang.Object[] objArray32 = strList28.toArray();
        java.lang.String[] strArray38 = new java.lang.String[] { "StrTokenizer[not tokenized yet]", "hi!", "", "StrTokenizer[not tokenized yet]", "hi!" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        boolean boolean41 = strList28.removeAll((java.util.Collection<java.lang.String>) strList39);
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        java.util.stream.Stream<java.lang.String> strStream47 = strList45.stream();
        boolean boolean48 = strList45.isEmpty();
        char[] charArray49 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher50);
        java.lang.String[] strArray52 = strTokenizer51.getTokenArray();
        boolean boolean53 = strList45.equals((java.lang.Object) strArray52);
        java.util.Spliterator<java.lang.String> strSpliterator54 = strList45.spliterator();
        java.lang.Object[] objArray55 = strList45.toArray();
        boolean boolean56 = strList39.addAll(0, (java.util.Collection<java.lang.String>) strList45);
        boolean boolean57 = strList22.containsAll((java.util.Collection<java.lang.String>) strList45);
        java.util.Iterator<java.lang.String> strItor58 = strList22.iterator();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList61 = strList22.subList(100, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(100) > toIndex(-1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNotNull(strItor16);
        org.junit.Assert.assertNotNull(strItor17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strStream30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[hi!]");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strStream47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strSpliterator54);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strItor58);
    }

    @Test
    public void test11613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11613");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.util.List<java.lang.String> strList5 = strTokenizer3.getTokenList();
        java.lang.String[] strArray8 = new java.lang.String[] { "", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        boolean boolean15 = strTokenizer14.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer14.setIgnoredChar('4');
        int int18 = strTokenizer17.nextIndex();
        boolean boolean19 = strList9.equals((java.lang.Object) int18);
        int int20 = strList9.size();
        boolean boolean21 = strList5.containsAll((java.util.Collection<java.lang.String>) strList9);
        java.util.stream.Stream<java.lang.String> strStream22 = strList5.parallelStream();
        int int23 = strList5.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        java.lang.String str28 = strTokenizer27.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer27.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer27.setEmptyTokenAsNull(false);
        java.lang.Object obj33 = strTokenizer32.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer32.setDelimiterChar('a');
        boolean boolean36 = strTokenizer32.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer32.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer32.setIgnoredMatcher(strMatcher39);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer40.getTrimmerMatcher();
        java.lang.String str42 = strTokenizer40.getContent();
        int int43 = strTokenizer40.previousIndex();
        java.lang.String str44 = strTokenizer40.next();
        int int45 = strTokenizer40.previousIndex();
        int int46 = strList5.lastIndexOf((java.lang.Object) strTokenizer40);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strStream22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str28, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
    }

    @Test
    public void test11614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11614");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = strTokenizer1.getQuoteMatcher();
        boolean boolean3 = strTokenizer1.hasPrevious();
        boolean boolean4 = strTokenizer1.hasNext();
        java.lang.String str5 = strTokenizer1.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer1.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer7.setQuoteChar('a');
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str5, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer9);
    }

    @Test
    public void test11615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11615");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        boolean boolean4 = strTokenizer3.hasPrevious();
        int int5 = strTokenizer3.nextIndex();
        char[] charArray7 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher9, strMatcher10);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher12, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer3.reset(charArray7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setDelimiterString("");
        java.util.List<java.lang.String> strList23 = strTokenizer22.getTokenList();
        java.util.ListIterator<java.lang.String> strItor25 = strList23.listIterator(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher28, strMatcher29);
        java.lang.String str31 = strTokenizer30.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer30.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer30.setEmptyTokenAsNull(false);
        java.lang.Object obj36 = strTokenizer35.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer35.setDelimiterChar('a');
        boolean boolean39 = strTokenizer35.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer35.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer35.setIgnoredMatcher(strMatcher42);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer43.getTrimmerMatcher();
        char[] charArray46 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher48, strMatcher49);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer50.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher51, strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, '#', '#');
        int int64 = strMatcher44.isMatch(charArray46, 10, (int) 'a', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher44);
        int int66 = strList23.lastIndexOf((java.lang.Object) strTokenizer65);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a]");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str31, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a]");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
    }

    @Test
    public void test11616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11616");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setIgnoredChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer2.setIgnoredChar(' ');
        int int7 = strTokenizer2.size();
        boolean boolean8 = strTokenizer2.hasNext();
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test11617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11617");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoreEmptyTokens(false);
        java.lang.String str13 = strTokenizer10.next();
        char[] charArray15 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher17, strMatcher18);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer10.setIgnoredMatcher(strMatcher24);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        java.lang.String str30 = strTokenizer29.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer29.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer29.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setQuoteChar('4');
        char[] charArray38 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher40, strMatcher41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher43, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer34.reset(charArray38);
        int int53 = strMatcher24.isMatch(charArray38, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher55, strMatcher56);
        java.lang.String str58 = strTokenizer57.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer57.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer57.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer57.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer62.setQuoteChar('4');
        char[] charArray66 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher68, strMatcher69);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer70.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, strMatcher71, strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer62.reset(charArray66);
        int int81 = strMatcher24.isMatch(charArray66, (int) (short) 100, 0, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = strTokenizer83.getDelimiterMatcher();
        java.lang.String str85 = strTokenizer83.next();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str30, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str58, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a]");
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "a" + "'", str85, "a");
    }

    @Test
    public void test11618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11618");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        int int2 = strTokenizer1.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer1.getQuoteMatcher();
        java.lang.String[] strArray4 = strTokenizer1.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer1.reset("#");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer6.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strTokenizer6);
    }

    @Test
    public void test11619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11619");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        java.util.List<java.lang.String> strList4 = strTokenizer3.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        java.util.List<java.lang.String> strList10 = strTokenizer8.getTokenList();
        java.lang.Object obj11 = null;
        boolean boolean12 = strList10.remove(obj11);
        boolean boolean14 = strList10.add("StrTokenizer[not tokenized yet]");
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.String>) strList10);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher17, strMatcher18);
        java.lang.String str20 = strTokenizer19.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.setDelimiterString("");
        java.lang.Object obj24 = strTokenizer23.clone();
        java.util.List<java.lang.String> strList25 = strTokenizer23.getTokenList();
        int int26 = strList25.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher28, strMatcher29);
        java.lang.String str31 = strTokenizer30.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.setDelimiterString("");
        java.lang.Object obj35 = strTokenizer34.clone();
        java.util.List<java.lang.String> strList36 = strTokenizer34.getTokenList();
        int int37 = strList36.size();
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        java.util.stream.Stream<java.lang.String> strStream42 = strList40.stream();
        java.lang.Object[] objArray43 = strList40.toArray();
        boolean boolean44 = strList36.removeAll((java.util.Collection<java.lang.String>) strList40);
        boolean boolean45 = strList25.containsAll((java.util.Collection<java.lang.String>) strList36);
        java.util.Spliterator<java.lang.String> strSpliterator46 = strList36.spliterator();
        boolean boolean47 = strList4.containsAll((java.util.Collection<java.lang.String>) strList36);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher49, strMatcher50);
        java.lang.String str52 = strTokenizer51.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer51.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer53.setDelimiterString("");
        java.lang.Object obj56 = strTokenizer55.clone();
        java.util.List<java.lang.String> strList57 = strTokenizer55.getTokenList();
        int int58 = strList57.size();
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList61 = new java.util.ArrayList<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        java.util.stream.Stream<java.lang.String> strStream63 = strList61.stream();
        java.lang.Object[] objArray64 = strList61.toArray();
        boolean boolean65 = strList57.removeAll((java.util.Collection<java.lang.String>) strList61);
        java.lang.String[] strArray68 = new java.lang.String[] { "", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList69 = new java.util.ArrayList<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher72, strMatcher73);
        boolean boolean75 = strTokenizer74.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer74.setIgnoredChar('4');
        int int78 = strTokenizer77.nextIndex();
        boolean boolean79 = strList69.equals((java.lang.Object) int78);
        int int80 = strList69.size();
        boolean boolean81 = strList57.retainAll((java.util.Collection<java.lang.String>) strList69);
        boolean boolean82 = strList57.isEmpty();
        java.util.stream.Stream<java.lang.String> strStream83 = strList57.stream();
        boolean boolean84 = strList36.removeAll((java.util.Collection<java.lang.String>) strList57);
        java.lang.Object obj85 = null;
        int int86 = strList36.lastIndexOf(obj85);
        java.util.stream.Stream<java.lang.String> strStream87 = strList36.stream();
        java.util.stream.Stream<java.lang.String> strStream88 = strList36.stream();
        int int89 = strList36.size();
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str20, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str31, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strStream42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strSpliterator46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str52, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strStream63);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 2 + "'", int80 == 2);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(strStream83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNotNull(strStream87);
        org.junit.Assert.assertNotNull(strStream88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
    }

    @Test
    public void test11620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11620");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer9.reset();
        int int11 = strTokenizer9.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer9.setQuoteMatcher(strMatcher13);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        java.lang.String str16 = strTokenizer14.getContent();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer14.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "a" + "'", str16, "a");
    }

    @Test
    public void test11621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11621");
        char[] charArray2 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7, strMatcher8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        boolean boolean12 = strTokenizer11.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher14, strMatcher15);
        java.lang.String str17 = strTokenizer16.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer16.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer16.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer23.setIgnoreEmptyTokens(false);
        java.lang.String str26 = strTokenizer23.next();
        char[] charArray28 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher30, strMatcher31);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer32.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher33, strMatcher34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer23.setIgnoredMatcher(strMatcher37);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher40, strMatcher41);
        java.lang.String str43 = strTokenizer42.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer42.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer42.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer42.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer47.setQuoteChar('4');
        char[] charArray51 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher53, strMatcher54);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher56, strMatcher57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer47.reset(charArray51);
        int int66 = strMatcher37.isMatch(charArray51, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer11.setQuoteMatcher(strMatcher37);
        char[] charArray69 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher71, strMatcher72);
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = strTokenizer73.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, strMatcher74, strMatcher75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, strMatcher84, strMatcher85);
        int int88 = strMatcher37.isMatch(charArray69, 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer(charArray69);
        org.apache.commons.lang3.text.StrMatcher strMatcher93 = strTokenizer92.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = new org.apache.commons.lang3.text.StrTokenizer("#a444 ", strMatcher93);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = strTokenizer94.setIgnoredChar('a');
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a]");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str17, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str43, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[a]");
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[a]");
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertNotNull(strMatcher93);
        org.junit.Assert.assertNotNull(strTokenizer96);
    }

    @Test
    public void test11622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11622");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.lang.Object obj5 = strTokenizer3.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer3.setQuoteChar('#');
        java.lang.String str8 = strTokenizer7.next();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer7.add("#a444 ");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
    }

    @Test
    public void test11623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11623");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        java.lang.Object obj9 = strTokenizer8.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher11, strMatcher12);
        java.lang.String str14 = strTokenizer13.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer13.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer13.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer13.setDelimiterMatcher(strMatcher19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer8.setQuoteMatcher(strMatcher19);
        java.util.List<java.lang.String> strList22 = strTokenizer21.getTokenList();
        char[] charArray24 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher27);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher29, strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray24);
        char[] charArray37 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher40);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher42, strMatcher43);
        char[] charArray46 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher48, strMatcher49);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer50.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher51, strMatcher52);
        int int57 = strMatcher42.isMatch(charArray46, 1, 1, (int) ' ');
        char[] charArray58 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, strMatcher59);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer60.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher42, strMatcher61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray24);
        int int64 = strList22.indexOf((java.lang.Object) charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray24);
        int int69 = strTokenizer68.nextIndex();
        java.lang.String str70 = strTokenizer68.toString();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str14, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a]");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str70, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test11624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11624");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setDelimiterString("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.reset("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer18.setDelimiterChar('a');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer22.add("StrTokenizer[hi!]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
    }

    @Test
    public void test11625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11625");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        int int26 = strTokenizer25.nextIndex();
        java.lang.String str27 = strTokenizer25.nextToken();
        int int28 = strTokenizer25.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer25.setQuoteChar('4');
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "a" + "'", str27, "a");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(strTokenizer30);
    }

    @Test
    public void test11626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11626");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("a", "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[h]", strMatcher4);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer5.add("StrTokenizer[StrTokenizer[a]]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
    }

    @Test
    public void test11627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11627");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        boolean boolean4 = strTokenizer3.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher10, strMatcher11);
        java.lang.String str13 = strTokenizer12.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer12.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer12.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setIgnoreEmptyTokens(false);
        java.lang.String str22 = strTokenizer19.next();
        char[] charArray24 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher27);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher29, strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray24);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer32.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer19.setIgnoredMatcher(strMatcher33);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher36, strMatcher37);
        java.lang.String str39 = strTokenizer38.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer38.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer38.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.setQuoteChar('4');
        char[] charArray47 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher49, strMatcher50);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher52, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer43.reset(charArray47);
        int int62 = strMatcher33.isMatch(charArray47, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer6.setQuoteMatcher(strMatcher65);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer66.getDelimiterMatcher();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str13, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str39, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a]");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strMatcher67);
    }

    @Test
    public void test11628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11628");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        int int10 = strList9.size();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.stream.Stream<java.lang.String> strStream15 = strList13.stream();
        java.lang.Object[] objArray16 = strList13.toArray();
        boolean boolean17 = strList9.removeAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.String[] strArray20 = new java.lang.String[] { "", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher25);
        boolean boolean27 = strTokenizer26.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setIgnoredChar('4');
        int int30 = strTokenizer29.nextIndex();
        boolean boolean31 = strList21.equals((java.lang.Object) int30);
        int int32 = strList21.size();
        boolean boolean33 = strList9.retainAll((java.util.Collection<java.lang.String>) strList21);
        boolean boolean35 = strList9.equals((java.lang.Object) 100L);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        boolean boolean38 = strTokenizer37.isEmptyTokenAsNull();
        boolean boolean39 = strTokenizer37.hasNext();
        java.lang.Object obj40 = strTokenizer37.clone();
        boolean boolean41 = strTokenizer37.isEmptyTokenAsNull();
        boolean boolean42 = strList9.contains((java.lang.Object) boolean41);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher44, strMatcher45);
        java.lang.String str47 = strTokenizer46.toString();
        java.util.List<java.lang.String> strList48 = strTokenizer46.getTokenList();
        java.lang.Object obj49 = null;
        boolean boolean50 = strList48.remove(obj49);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher53);
        boolean boolean55 = strList48.contains((java.lang.Object) "");
        boolean boolean56 = strList9.removeAll((java.util.Collection<java.lang.String>) strList48);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList59 = strList9.subList((-1), (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: fromIndex = -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str47, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test11629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11629");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setDelimiterString("a");
        java.lang.Object obj12 = strTokenizer11.clone();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer11.set("a   ");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test11630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11630");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        boolean boolean11 = strTokenizer10.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        java.lang.String str16 = strTokenizer15.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer15.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer15.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.setIgnoreEmptyTokens(false);
        java.lang.String str25 = strTokenizer22.next();
        char[] charArray27 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher29, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher32, strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray27);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer35.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer22.setIgnoredMatcher(strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher40);
        java.lang.String str42 = strTokenizer41.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer41.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer41.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setQuoteChar('4');
        char[] charArray50 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher52, strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher55, strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer46.reset(charArray50);
        int int65 = strMatcher36.isMatch(charArray50, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer10.setQuoteMatcher(strMatcher36);
        char[] charArray67 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray67);
        char[] charArray70 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher72, strMatcher73);
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = strTokenizer74.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, strMatcher75, strMatcher76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, "a");
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer68.reset(charArray70);
        int int87 = strMatcher36.isMatch(charArray70, (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, "StrTokenizer[a]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray70);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str16, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str42, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a]");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[a]");
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(strTokenizer93);
    }

    @Test
    public void test11631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11631");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, ' ', 'a');
        int int4 = strTokenizer3.size();
        boolean boolean5 = strTokenizer3.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer3.setQuoteChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer7.setQuoteChar('4');
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer9);
    }

    @Test
    public void test11632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11632");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer9.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setTrimmerMatcher(strMatcher11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer10.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        char[] charArray21 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher23, strMatcher24);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer25.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher26, strMatcher27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher19, strMatcher27);
        java.util.List<java.lang.String> strList30 = strTokenizer29.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer10.setTrimmerMatcher(strMatcher31);
        boolean boolean33 = strTokenizer32.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer32.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer32.setDelimiterChar('#');
        char[] charArray38 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher40, strMatcher41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher43, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray38);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher57, strMatcher58);
        java.lang.String str60 = strTokenizer59.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer59.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer59.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer59.setEmptyTokenAsNull(false);
        java.lang.Object obj65 = strTokenizer64.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer64.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer64.setTrimmerMatcher(strMatcher69);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher72, strMatcher73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer74.reset("hi!");
        java.util.List<java.lang.String> strList77 = strTokenizer74.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher79, strMatcher80);
        java.lang.String str82 = strTokenizer81.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer81.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer83.setDelimiterString("");
        java.lang.Object obj86 = strTokenizer85.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = strTokenizer85.getQuoteMatcher();
        boolean boolean88 = strList77.contains((java.lang.Object) strMatcher87);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher69, strMatcher87);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, "StrTokenizer[StrTokenizer[not tokenized yet]]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = strTokenizer36.reset(charArray38);
        boolean boolean93 = strTokenizer92.hasNext();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str60, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str82, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(strTokenizer92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test11633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11633");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        java.lang.Object[] objArray5 = strList2.toArray();
        java.lang.Object[] objArray6 = strList2.toArray();
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.stream();
        java.lang.Object[] objArray12 = strList9.toArray();
        java.util.ListIterator<java.lang.String> strItor13 = strList9.listIterator();
        java.lang.String str15 = strList9.get((int) (short) 0);
        boolean boolean16 = strList2.removeAll((java.util.Collection<java.lang.String>) strList9);
        boolean boolean17 = strList2.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        java.lang.String str22 = strTokenizer21.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer23.setDelimiterString("");
        java.lang.Object obj26 = strTokenizer25.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer25.getQuoteMatcher();
        char[] charArray29 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher31, strMatcher32);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher34, strMatcher35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, "hi!");
        int int44 = strMatcher27.isMatch(charArray29, (int) (short) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher51, strMatcher52);
        java.lang.String str54 = strTokenizer53.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer53.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer55.setDelimiterString("");
        java.lang.Object obj58 = strTokenizer57.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer57.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher61, strMatcher62);
        java.lang.String str64 = strTokenizer63.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer63.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer63.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer63.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer68.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer70.setIgnoreEmptyTokens(false);
        java.lang.String str73 = strTokenizer70.next();
        char[] charArray75 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher77, strMatcher78);
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = strTokenizer79.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, strMatcher80, strMatcher81);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray75);
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = strTokenizer83.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer70.setIgnoredMatcher(strMatcher84);
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = strTokenizer70.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[hi!]", strMatcher59, strMatcher86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer48.setIgnoredMatcher(strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer48.setIgnoreEmptyTokens(true);
        boolean boolean91 = strList2.equals((java.lang.Object) strTokenizer48);
        org.apache.commons.lang3.text.StrMatcher strMatcher92 = strTokenizer48.getQuoteMatcher();
        java.lang.Object obj93 = strTokenizer48.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = strTokenizer48.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher95 = strTokenizer48.getDelimiterMatcher();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[hi!]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[hi!]");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[hi!]");
        org.junit.Assert.assertNotNull(strItor13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str22, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str54, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str64, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[a]");
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(strMatcher92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer94);
        org.junit.Assert.assertNotNull(strMatcher95);
    }

    @Test
    public void test11634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11634");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.util.List<java.lang.String> strList5 = strTokenizer3.getTokenList();
        boolean boolean6 = strList5.isEmpty();
        java.lang.Object[] objArray7 = strList5.toArray();
        strList5.clear();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher11, strMatcher12);
        java.lang.String str14 = strTokenizer13.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer13.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer13.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setIgnoreEmptyTokens(false);
        int int23 = strTokenizer20.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer20.setDelimiterChar('a');
        char[] charArray27 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher29, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher32, strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer20.reset(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, ' ', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher49, strMatcher50);
        java.lang.String str52 = strTokenizer51.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer51.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer53.setDelimiterString("");
        java.lang.Object obj56 = strTokenizer55.clone();
        java.util.List<java.lang.String> strList57 = strTokenizer55.getTokenList();
        java.util.ListIterator<java.lang.String> strItor59 = strList57.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor60 = strList57.listIterator();
        char[] charArray62 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher64, strMatcher65);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer66.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, strMatcher67, strMatcher68);
        boolean boolean70 = strList57.remove((java.lang.Object) strMatcher67);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher72, strMatcher73);
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = strTokenizer74.getTrimmerMatcher();
        char[] charArray77 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher79, strMatcher80);
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = strTokenizer81.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, strMatcher82, strMatcher83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer74.reset(charArray77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer74.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher92 = strTokenizer91.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher67, strMatcher92);
        boolean boolean94 = strTokenizer93.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = strTokenizer93.setQuoteChar('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher97 = strTokenizer96.getDelimiterMatcher();
        java.util.List<java.lang.String> strList98 = strTokenizer96.getTokenList();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean99 = strList5.addAll((int) (byte) -1, (java.util.Collection<java.lang.String>) strList98);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[hi!]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str14, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str52, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertNotNull(strItor59);
        org.junit.Assert.assertNotNull(strItor60);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[a]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[a]");
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertNotNull(strMatcher92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(strTokenizer96);
        org.junit.Assert.assertNotNull(strMatcher97);
        org.junit.Assert.assertNotNull(strList98);
    }

    @Test
    public void test11635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11635");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("a");
        char[] charArray3 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher5, strMatcher6);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer7.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, strMatcher8, strMatcher9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer1.reset(charArray3);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer1.getIgnoredMatcher();
        java.util.List<java.lang.String> strList21 = strTokenizer1.getTokenList();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.stream();
        java.lang.Object[] objArray27 = strList24.toArray();
        java.lang.Object[] objArray28 = strList24.toArray();
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.stream.Stream<java.lang.String> strStream33 = strList31.stream();
        java.lang.Object[] objArray34 = strList31.toArray();
        java.util.ListIterator<java.lang.String> strItor35 = strList31.listIterator();
        java.lang.String str37 = strList31.get((int) (short) 0);
        boolean boolean38 = strList24.removeAll((java.util.Collection<java.lang.String>) strList31);
        boolean boolean39 = strList21.containsAll((java.util.Collection<java.lang.String>) strList31);
        java.lang.String str41 = strList21.get(0);
        java.util.Spliterator<java.lang.String> strSpliterator42 = strList21.spliterator();
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[a]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[hi!]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[hi!]");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strStream33);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[hi!]");
        org.junit.Assert.assertNotNull(strItor35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "a" + "'", str41, "a");
        org.junit.Assert.assertNotNull(strSpliterator42);
    }

    @Test
    public void test11636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11636");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setIgnoredChar('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer12.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher17, strMatcher18);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        char[] charArray22 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher25);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher27, strMatcher28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, "a");
        int int37 = strMatcher20.isMatch(charArray22, (int) (byte) 0);
        int int41 = strMatcher15.isMatch(charArray22, (int) (byte) 0, (int) '#', (int) (byte) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer4.reset(charArray22);
        char[] charArray44 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher46, strMatcher47);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, strMatcher49, strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray44);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer4.setDelimiterMatcher(strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer54.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer56.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer56.getTrimmerMatcher();
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher58);
    }

    @Test
    public void test11637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11637");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        java.lang.String str6 = strTokenizer5.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer7.setDelimiterString("");
        java.lang.Object obj10 = strTokenizer9.clone();
        java.util.List<java.lang.String> strList11 = strTokenizer9.getTokenList();
        java.util.ListIterator<java.lang.String> strItor13 = strList11.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor14 = strList11.listIterator();
        char[] charArray16 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher18, strMatcher19);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher21, strMatcher22);
        boolean boolean24 = strList11.remove((java.lang.Object) strMatcher21);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher21, strMatcher25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer27.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer27.setIgnoredChar('#');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer32.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str6, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(strItor13);
        org.junit.Assert.assertNotNull(strItor14);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer32);
    }

    @Test
    public void test11638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11638");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer9.reset();
        int int11 = strTokenizer9.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer9.reset("a");
        boolean boolean14 = strTokenizer9.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("a");
        char[] charArray18 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher23, strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer16.reset(charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getQuoteMatcher();
        char[] charArray37 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher40);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher42, strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray37);
        boolean boolean47 = strTokenizer46.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer46.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer34.setDelimiterMatcher(strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer9.setIgnoredMatcher(strMatcher48);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher52, strMatcher53);
        java.lang.String str55 = strTokenizer54.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer54.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer54.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer54.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer54.setDelimiterMatcher(strMatcher60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer61.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer63.setIgnoredChar('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher67, strMatcher68);
        java.lang.String str70 = strTokenizer69.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer69.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer69.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer69.setEmptyTokenAsNull(false);
        java.lang.Object obj75 = strTokenizer74.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher77, strMatcher78);
        java.lang.String str80 = strTokenizer79.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer79.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = strTokenizer79.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = strTokenizer79.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer79.setDelimiterMatcher(strMatcher85);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer74.setQuoteMatcher(strMatcher85);
        java.lang.String str88 = strTokenizer87.nextToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = strTokenizer87.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer65.setIgnoredMatcher(strMatcher89);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer9.setIgnoredMatcher(strMatcher89);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = strTokenizer91.setDelimiterChar(' ');
        boolean boolean94 = strTokenizer93.hasNext();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str55, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str70, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str80, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "hi!" + "'", str88, "hi!");
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertNotNull(strTokenizer93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test11639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11639");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        boolean boolean4 = strList2.isEmpty();
        java.lang.Object[] objArray5 = strList2.toArray();
        java.util.stream.Stream<java.lang.String> strStream6 = strList2.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher8, strMatcher9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.reset("hi!");
        java.util.List<java.lang.String> strList13 = strTokenizer10.getTokenList();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.stream.Stream<java.lang.String> strStream18 = strList16.stream();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.reset("hi!");
        int int23 = strTokenizer20.nextIndex();
        boolean boolean24 = strList16.equals((java.lang.Object) int23);
        boolean boolean25 = strList13.contains((java.lang.Object) int23);
        boolean boolean26 = strList2.containsAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.String str28 = strList2.get((int) (short) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher30, strMatcher31);
        java.lang.String str33 = strTokenizer32.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer32.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer32.setIgnoreEmptyTokens(false);
        java.lang.String str38 = strTokenizer32.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer32.setTrimmerMatcher(strMatcher43);
        java.lang.Object obj45 = strTokenizer32.clone();
        int int46 = strList2.indexOf((java.lang.Object) strTokenizer32);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[hi!]");
        org.junit.Assert.assertNotNull(strStream6);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strStream18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str33, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
    }

    @Test
    public void test11640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11640");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        java.lang.Object obj9 = strTokenizer8.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer8.setDelimiterChar('a');
        boolean boolean12 = strTokenizer8.isEmptyTokenAsNull();
        java.lang.String str13 = strTokenizer8.toString();
        java.lang.Object obj14 = strTokenizer8.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer8.reset();
        int int16 = strTokenizer15.previousIndex();
        java.lang.String str17 = strTokenizer15.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer15.getIgnoredMatcher();
        int int19 = strTokenizer15.size();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str13, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
    }

    @Test
    public void test11641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11641");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        char[] charArray10 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher15, strMatcher16);
        int int21 = strMatcher6.isMatch(charArray10, 1, 1, (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher25);
        java.lang.String str27 = strTokenizer26.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer26.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray10);
        java.lang.String[] strArray34 = strTokenizer33.getTokenArray();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str27, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strArray34);
    }

    @Test
    public void test11642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11642");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoreEmptyTokens(false);
        int int13 = strTokenizer10.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer10.setDelimiterChar('a');
        char[] charArray17 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher22, strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer10.reset(charArray17);
        boolean boolean35 = strTokenizer10.hasPrevious();
        int int36 = strTokenizer10.nextIndex();
        boolean boolean37 = strTokenizer10.hasPrevious();
        java.lang.String str38 = strTokenizer10.toString();
        java.util.List<java.lang.String> strList39 = strTokenizer10.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer10.getIgnoredMatcher();
        java.lang.String str41 = strTokenizer10.next();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "StrTokenizer[, ]" + "'", str38, "StrTokenizer[, ]");
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
    }

    @Test
    public void test11643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11643");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        java.util.ListIterator<java.lang.String> strItor11 = strList9.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor12 = strList9.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int15 = strList9.indexOf((java.lang.Object) strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray18 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher23, strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer16.setTrimmerMatcher(strMatcher27);
        int int29 = strList9.indexOf((java.lang.Object) strTokenizer28);
        java.lang.String str31 = strList9.remove((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor32 = strList9.listIterator();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.stream.Stream<java.lang.String> strStream37 = strList35.stream();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer39.reset("hi!");
        int int42 = strTokenizer39.nextIndex();
        boolean boolean43 = strList35.equals((java.lang.Object) int42);
        boolean boolean44 = strList9.addAll((java.util.Collection<java.lang.String>) strList35);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher46, strMatcher47);
        boolean boolean49 = strTokenizer48.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer48.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer48.setQuoteMatcher(strMatcher54);
        char[] charArray58 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher60, strMatcher61);
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer62.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, strMatcher63, strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray58);
        int int71 = strMatcher54.isMatch(charArray58, (int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray58);
        boolean boolean73 = strList9.contains((java.lang.Object) strMatcher72);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strItor11);
        org.junit.Assert.assertNotNull(strItor12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(strItor32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strStream37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[a]");
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test11644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11644");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher2, strMatcher3);
        java.lang.String str5 = strTokenizer4.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer4.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer4.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer4.setDelimiterMatcher(strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher10);
        boolean boolean13 = strTokenizer12.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer12.setTrimmerMatcher(strMatcher15);
        boolean boolean17 = strTokenizer16.hasNext();
        boolean boolean18 = strTokenizer16.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer16.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setDelimiterString("StrTokenizer[hi!]");
        boolean boolean23 = strTokenizer22.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer22.setEmptyTokenAsNull(true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str5, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strTokenizer25);
    }

    @Test
    public void test11645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11645");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        java.lang.Object obj9 = strTokenizer8.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher11, strMatcher12);
        java.lang.String str14 = strTokenizer13.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer13.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer13.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer13.setDelimiterMatcher(strMatcher19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer8.setQuoteMatcher(strMatcher19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.setIgnoredChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer21.setDelimiterChar('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        java.lang.String str30 = strTokenizer29.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.setDelimiterString("");
        java.lang.Object obj34 = strTokenizer33.clone();
        java.util.List<java.lang.String> strList35 = strTokenizer33.getTokenList();
        int int36 = strTokenizer33.size();
        java.util.List<java.lang.String> strList37 = strTokenizer33.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int39 = strList37.lastIndexOf((java.lang.Object) strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer25.setQuoteMatcher(strMatcher38);
        java.lang.String str41 = strTokenizer40.next();
        boolean boolean42 = strTokenizer40.hasPrevious();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str14, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str30, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test11646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11646");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher7);
        boolean boolean9 = strList2.remove((java.lang.Object) strMatcher7);
        java.util.ListIterator<java.lang.String> strItor11 = strList2.listIterator((int) (short) 0);
        boolean boolean12 = strList2.isEmpty();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strItor11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test11647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11647");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        boolean boolean5 = strList2.isEmpty();
        java.lang.Object[] objArray6 = strList2.toArray();
        java.util.stream.Stream<java.lang.String> strStream7 = strList2.stream();
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.stream.Stream<java.lang.String> strStream12 = strList10.stream();
        boolean boolean13 = strList10.isEmpty();
        java.lang.Object[] objArray14 = strList10.toArray();
        char[] charArray15 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher16);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getQuoteMatcher();
        int int19 = strList10.lastIndexOf((java.lang.Object) strTokenizer17);
        boolean boolean20 = strList2.retainAll((java.util.Collection<java.lang.String>) strList10);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher22, strMatcher23);
        java.lang.String str25 = strTokenizer24.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer24.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer24.setEmptyTokenAsNull(false);
        java.lang.Object obj30 = strTokenizer29.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer29.setDelimiterChar('a');
        boolean boolean33 = strTokenizer29.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer29.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer29.setIgnoredMatcher(strMatcher36);
        java.util.List<java.lang.String> strList38 = strTokenizer29.getTokenList();
        boolean boolean39 = strList2.retainAll((java.util.Collection<java.lang.String>) strList38);
        java.util.Iterator<java.lang.String> strItor40 = strList2.iterator();
        java.util.stream.Stream<java.lang.String> strStream41 = strList2.parallelStream();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[StrTokenizer[not tokenized yet]]", "hi!");
        int int45 = strList2.indexOf((java.lang.Object) strTokenizer44);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[hi!]");
        org.junit.Assert.assertNotNull(strStream7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strStream12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str25, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strItor40);
        org.junit.Assert.assertNotNull(strStream41);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
    }

    @Test
    public void test11648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11648");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[StrTokenizer[StrTokenizer[hi!]]]");
        org.junit.Assert.assertNotNull(strMatcher1);
    }

    @Test
    public void test11649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11649");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        char[] charArray8 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher10, strMatcher11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer12.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher13, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher6, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[hi!]", strMatcher6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer17.reset();
        char[] charArray20 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher22, strMatcher23);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer24.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher34, strMatcher35);
        java.lang.String str37 = strTokenizer36.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer36.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer36.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setQuoteChar('4');
        int int44 = strTokenizer43.previousIndex();
        boolean boolean45 = strTokenizer43.isIgnoreEmptyTokens();
        boolean boolean46 = strTokenizer43.hasPrevious();
        char[] charArray48 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher50, strMatcher51);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer52.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, strMatcher53, strMatcher54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, strMatcher63, strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer43.reset(charArray48);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        char[] charArray70 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher72, strMatcher73);
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = strTokenizer74.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, strMatcher75, strMatcher76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray70);
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, strMatcher68, strMatcher83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer32.setTrimmerMatcher(strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer17.setIgnoredMatcher(strMatcher68);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer17.add("444 ");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a]");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str37, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[a]");
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNotNull(strTokenizer86);
    }

    @Test
    public void test11650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11650");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("   ", '#', ' ');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = strTokenizer3.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
    }

    @Test
    public void test11651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11651");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        char[] charArray23 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28, strMatcher29);
        int int34 = strMatcher19.isMatch(charArray23, 1, 1, (int) ' ');
        char[] charArray35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher19, strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "StrTokenizer[not tokenized yet]");
        int int48 = strTokenizer47.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher50, strMatcher51);
        java.lang.String str53 = strTokenizer52.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer54.setDelimiterString("");
        java.lang.Object obj57 = strTokenizer56.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher59, strMatcher60);
        boolean boolean62 = strTokenizer61.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer61.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = strTokenizer61.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer56.setDelimiterMatcher(strMatcher65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer47.setIgnoredMatcher(strMatcher65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer47.setIgnoreEmptyTokens(false);
        int int70 = strTokenizer47.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer47.getDelimiterMatcher();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str53, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(strMatcher71);
    }

    @Test
    public void test11652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11652");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("hi!", "");
        int int3 = strTokenizer2.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer2.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getTrimmerMatcher();
        char[] charArray11 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, "a");
        int int26 = strMatcher9.isMatch(charArray11, (int) (byte) 0);
        char[] charArray28 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher30, strMatcher31);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer32.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher33, strMatcher34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray28);
        int int48 = strMatcher9.isMatch(charArray28, 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray28);
        int int51 = strMatcher4.isMatch(charArray28, (int) (short) 1);
        char[] charArray53 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher55, strMatcher56);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer57.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, strMatcher58, strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, "StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, 'a');
        int int70 = strMatcher4.isMatch(charArray53, 2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray53);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a]");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(strTokenizer71);
    }

    @Test
    public void test11653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11653");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer7.getQuoteMatcher();
        char[] charArray11 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, "hi!");
        int int26 = strMatcher9.isMatch(charArray11, (int) (short) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'a', '4');
        boolean boolean30 = strTokenizer29.hasPrevious();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test11654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11654");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher2, strMatcher3);
        java.lang.String str5 = strTokenizer4.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer4.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[a]", strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("StrTokenizer[,");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str5, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer10);
    }

    @Test
    public void test11655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11655");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        boolean boolean5 = strList2.isEmpty();
        java.lang.Object[] objArray6 = strList2.toArray();
        java.util.stream.Stream<java.lang.String> strStream7 = strList2.stream();
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.stream.Stream<java.lang.String> strStream12 = strList10.stream();
        boolean boolean13 = strList10.isEmpty();
        java.lang.Object[] objArray14 = strList10.toArray();
        char[] charArray15 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher16);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getQuoteMatcher();
        int int19 = strList10.lastIndexOf((java.lang.Object) strTokenizer17);
        boolean boolean20 = strList2.retainAll((java.util.Collection<java.lang.String>) strList10);
        char[] charArray22 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher25);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher27, strMatcher28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray22);
        java.lang.String str33 = strTokenizer32.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer32.setQuoteChar('4');
        int int36 = strTokenizer35.size();
        boolean boolean37 = strTokenizer35.hasPrevious();
        boolean boolean38 = strList2.remove((java.lang.Object) strTokenizer35);
        strList2.add(1, "");
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[hi!]");
        org.junit.Assert.assertNotNull(strStream7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strStream12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "a" + "'", str33, "a");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test11656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11656");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        java.util.List<java.lang.String> strList10 = strTokenizer8.getTokenList();
        java.lang.Object obj11 = null;
        boolean boolean12 = strList10.remove(obj11);
        boolean boolean13 = strList2.removeAll((java.util.Collection<java.lang.String>) strList10);
        java.util.Spliterator<java.lang.String> strSpliterator14 = strList2.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        java.lang.String str19 = strTokenizer18.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer18.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer18.setEmptyTokenAsNull(false);
        java.util.List<java.lang.String> strList24 = strTokenizer23.getTokenList();
        boolean boolean25 = strList2.remove((java.lang.Object) strList24);
        java.util.Spliterator<java.lang.String> strSpliterator26 = strList2.spliterator();
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator27 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList2.replaceAll(strUnaryOperator27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strSpliterator14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str19, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strSpliterator26);
    }

    @Test
    public void test11657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11657");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        boolean boolean5 = strList2.isEmpty();
        java.lang.Object[] objArray6 = strList2.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator7 = strList2.spliterator();
        java.util.Spliterator<java.lang.String> strSpliterator8 = strList2.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher10, strMatcher11);
        boolean boolean13 = strTokenizer12.hasPrevious();
        int int14 = strTokenizer12.nextIndex();
        boolean boolean15 = strTokenizer12.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer12.setQuoteChar('a');
        boolean boolean18 = strTokenizer12.hasNext();
        int int19 = strList2.lastIndexOf((java.lang.Object) strTokenizer12);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer12.setQuoteMatcher(strMatcher20);
        boolean boolean22 = strTokenizer21.hasPrevious();
        java.lang.String str23 = strTokenizer21.next();
        boolean boolean24 = strTokenizer21.isIgnoreEmptyTokens();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[hi!]");
        org.junit.Assert.assertNotNull(strSpliterator7);
        org.junit.Assert.assertNotNull(strSpliterator8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test11658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11658");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        int int10 = strList9.size();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.stream.Stream<java.lang.String> strStream15 = strList13.stream();
        java.lang.Object[] objArray16 = strList13.toArray();
        boolean boolean17 = strList9.removeAll((java.util.Collection<java.lang.String>) strList13);
        java.util.Iterator<java.lang.String> strItor18 = strList9.iterator();
        boolean boolean20 = strList9.add("hi!");
        java.util.stream.Stream<java.lang.String> strStream21 = strList9.parallelStream();
        strList9.clear();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strItor18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strStream21);
    }

    @Test
    public void test11659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11659");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        java.lang.String str9 = strTokenizer3.nextToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        boolean boolean15 = strTokenizer14.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer14.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer14.setQuoteMatcher(strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer3.setDelimiterMatcher(strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer23.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer23.setTrimmerMatcher(strMatcher26);
        int int28 = strTokenizer27.nextIndex();
        char[] charArray30 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher32, strMatcher33);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher35, strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer38.reset();
        int int40 = strTokenizer38.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer38.setQuoteMatcher(strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer27.setIgnoredMatcher(strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer27.setDelimiterString("");
        boolean boolean47 = strTokenizer27.hasPrevious();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test11660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11660");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoreEmptyTokens(false);
        java.lang.String str13 = strTokenizer10.next();
        char[] charArray15 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher17, strMatcher18);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer10.setIgnoredMatcher(strMatcher24);
        boolean boolean26 = strTokenizer10.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList27 = strTokenizer10.getTokenList();
        java.lang.String str28 = strTokenizer10.previous();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
    }

    @Test
    public void test11661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11661");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        java.lang.Object obj9 = strTokenizer8.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer8.setDelimiterChar('a');
        boolean boolean12 = strTokenizer8.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer8.setIgnoredMatcher(strMatcher15);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        char[] charArray19 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher21, strMatcher22);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher24, strMatcher25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, '#', '#');
        int int37 = strMatcher17.isMatch(charArray19, 10, (int) 'a', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, 'a', '4');
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        java.util.stream.Stream<java.lang.String> strStream47 = strList45.stream();
        boolean boolean48 = strList45.isEmpty();
        java.lang.Object[] objArray49 = strList45.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator50 = strList45.spliterator();
        java.util.Spliterator<java.lang.String> strSpliterator51 = strList45.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher53, strMatcher54);
        boolean boolean56 = strTokenizer55.hasPrevious();
        int int57 = strTokenizer55.nextIndex();
        boolean boolean58 = strTokenizer55.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer55.setQuoteChar('a');
        boolean boolean61 = strTokenizer55.hasNext();
        int int62 = strList45.lastIndexOf((java.lang.Object) strTokenizer55);
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer55.setQuoteMatcher(strMatcher63);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = strTokenizer55.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[StrTokenizer[, ]]", strMatcher65, strMatcher66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher66);
        boolean boolean69 = strTokenizer68.hasNext();
        int int70 = strTokenizer68.nextIndex();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strStream47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[hi!]");
        org.junit.Assert.assertNotNull(strSpliterator50);
        org.junit.Assert.assertNotNull(strSpliterator51);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
    }

    @Test
    public void test11662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11662");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        int int10 = strList9.size();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.stream.Stream<java.lang.String> strStream15 = strList13.stream();
        java.lang.Object[] objArray16 = strList13.toArray();
        boolean boolean17 = strList9.removeAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.String[] strArray20 = new java.lang.String[] { "", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher25);
        boolean boolean27 = strTokenizer26.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setIgnoredChar('4');
        int int30 = strTokenizer29.nextIndex();
        boolean boolean31 = strList21.equals((java.lang.Object) int30);
        int int32 = strList21.size();
        boolean boolean33 = strList9.retainAll((java.util.Collection<java.lang.String>) strList21);
        boolean boolean35 = strList9.equals((java.lang.Object) 100L);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.stream.Stream<java.lang.String> strStream40 = strList38.stream();
        boolean boolean41 = strList38.isEmpty();
        char[] charArray42 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher43);
        java.lang.String[] strArray45 = strTokenizer44.getTokenArray();
        boolean boolean46 = strList38.equals((java.lang.Object) strArray45);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher48, strMatcher49);
        java.lang.String str51 = strTokenizer50.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.setDelimiterString("");
        java.lang.Object obj55 = strTokenizer54.clone();
        java.util.List<java.lang.String> strList56 = strTokenizer54.getTokenList();
        java.util.ListIterator<java.lang.String> strItor58 = strList56.listIterator((int) (short) 0);
        boolean boolean59 = strList38.removeAll((java.util.Collection<java.lang.String>) strList56);
        boolean boolean60 = strList9.addAll((java.util.Collection<java.lang.String>) strList38);
        int int61 = strList9.size();
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.stream.Stream<java.lang.String> strStream66 = strList64.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher68, strMatcher69);
        java.lang.String str71 = strTokenizer70.toString();
        java.util.List<java.lang.String> strList72 = strTokenizer70.getTokenList();
        java.lang.Object obj73 = null;
        boolean boolean74 = strList72.remove(obj73);
        boolean boolean75 = strList64.removeAll((java.util.Collection<java.lang.String>) strList72);
        java.util.Spliterator<java.lang.String> strSpliterator76 = strList64.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher78, strMatcher79);
        java.lang.String str81 = strTokenizer80.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer80.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = strTokenizer80.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer80.setEmptyTokenAsNull(false);
        java.util.List<java.lang.String> strList86 = strTokenizer85.getTokenList();
        boolean boolean87 = strList64.remove((java.lang.Object) strList86);
        java.util.Iterator<java.lang.String> strItor88 = strList86.iterator();
        java.util.Spliterator<java.lang.String> strSpliterator89 = strList86.spliterator();
        java.util.stream.Stream<java.lang.String> strStream90 = strList86.parallelStream();
        int int91 = strList9.lastIndexOf((java.lang.Object) strList86);
        java.util.stream.Stream<java.lang.String> strStream92 = strList86.stream();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strStream40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str51, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(strItor58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strStream66);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str71, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(strSpliterator76);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str81, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNotNull(strList86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(strItor88);
        org.junit.Assert.assertNotNull(strSpliterator89);
        org.junit.Assert.assertNotNull(strStream90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertNotNull(strStream92);
    }

    @Test
    public void test11663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11663");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.util.List<java.lang.String> strList5 = strTokenizer3.getTokenList();
        boolean boolean6 = strList5.isEmpty();
        boolean boolean8 = strList5.add("a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("a");
        java.util.List<java.lang.String> strList11 = strTokenizer10.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        java.lang.String str16 = strTokenizer15.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer15.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer15.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.setIgnoreEmptyTokens(false);
        int int25 = strList11.indexOf((java.lang.Object) strTokenizer22);
        strList11.clear();
        char[] charArray27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher28);
        int int30 = strTokenizer29.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.reset();
        java.lang.String str32 = strTokenizer29.nextToken();
        boolean boolean33 = strList11.remove((java.lang.Object) str32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.reset("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strList11.equals((java.lang.Object) "hi!");
        boolean boolean41 = strList5.addAll((java.util.Collection<java.lang.String>) strList11);
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.util.stream.Stream<java.lang.String> strStream46 = strList44.stream();
        java.lang.Object[] objArray47 = strList44.toArray();
        java.lang.Object[] objArray48 = strList44.toArray();
        char[] charArray50 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher52, strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher55, strMatcher56);
        char[] charArray59 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher61, strMatcher62);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer63.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, strMatcher64, strMatcher65);
        int int70 = strMatcher55.isMatch(charArray59, 1, 1, (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, "StrTokenizer[hi!]");
        java.util.List<java.lang.String> strList76 = strTokenizer75.getTokenList();
        strList76.clear();
        int int78 = strList44.indexOf((java.lang.Object) strList76);
        java.util.Iterator<java.lang.String> strItor79 = strList44.iterator();
        boolean boolean80 = strList11.removeAll((java.util.Collection<java.lang.String>) strList44);
        boolean boolean82 = strList44.add("StrTokenizer[hi!]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str16, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strStream46);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[hi!]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[hi!]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a]");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[a]");
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(strItor79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test11664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11664");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        java.util.ListIterator<java.lang.String> strItor11 = strList9.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor12 = strList9.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int15 = strList9.indexOf((java.lang.Object) strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray18 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher23, strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer16.setTrimmerMatcher(strMatcher27);
        int int29 = strList9.indexOf((java.lang.Object) strTokenizer28);
        java.lang.String str31 = strList9.remove((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor32 = strList9.listIterator();
        boolean boolean34 = strList9.add("");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher36, strMatcher37);
        java.lang.String str39 = strTokenizer38.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setDelimiterString("");
        java.lang.Object obj43 = strTokenizer42.clone();
        java.util.List<java.lang.String> strList44 = strTokenizer42.getTokenList();
        java.util.ListIterator<java.lang.String> strItor46 = strList44.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor47 = strList44.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int50 = strList44.indexOf((java.lang.Object) strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray53 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher55, strMatcher56);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer57.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, strMatcher58, strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray53);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer61.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer51.setTrimmerMatcher(strMatcher62);
        int int64 = strList44.indexOf((java.lang.Object) strTokenizer63);
        java.util.Spliterator<java.lang.String> strSpliterator65 = strList44.spliterator();
        int int66 = strList9.indexOf((java.lang.Object) strSpliterator65);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strItor11);
        org.junit.Assert.assertNotNull(strItor12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(strItor32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str39, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(strItor46);
        org.junit.Assert.assertNotNull(strItor47);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a]");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(strSpliterator65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
    }

    @Test
    public void test11665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11665");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        java.lang.Object[] objArray5 = strList2.toArray();
        java.util.ListIterator<java.lang.String> strItor6 = strList2.listIterator();
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        java.lang.String str16 = strTokenizer15.toString();
        java.util.List<java.lang.String> strList17 = strTokenizer15.getTokenList();
        java.lang.Object obj18 = null;
        boolean boolean19 = strList17.remove(obj18);
        boolean boolean20 = strList9.removeAll((java.util.Collection<java.lang.String>) strList17);
        java.util.Spliterator<java.lang.String> strSpliterator21 = strList9.spliterator();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        boolean boolean26 = strList24.isEmpty();
        java.lang.Object[] objArray27 = strList24.toArray();
        java.lang.Object[] objArray28 = strList9.toArray(objArray27);
        boolean boolean29 = strList2.addAll((java.util.Collection<java.lang.String>) strList9);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher31, strMatcher32);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        boolean boolean35 = strList9.contains((java.lang.Object) strMatcher34);
        java.util.stream.Stream<java.lang.String> strStream36 = strList9.stream();
        char[] charArray38 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher40, strMatcher41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher43, strMatcher44);
        char[] charArray47 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher49, strMatcher50);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher52, strMatcher53);
        int int58 = strMatcher43.isMatch(charArray47, 1, 1, (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray47);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher61, strMatcher62);
        java.lang.String str64 = strTokenizer63.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer63.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer63.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray47);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer69.setTrimmerMatcher(strMatcher71);
        boolean boolean73 = strList9.remove((java.lang.Object) strTokenizer72);
        java.util.List<java.lang.String> strList74 = strTokenizer72.getTokenList();
        int int75 = strTokenizer72.previousIndex();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[hi!]");
        org.junit.Assert.assertNotNull(strItor6);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str16, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strSpliterator21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[null]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[null]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strStream36);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a]");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str64, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
    }

    @Test
    public void test11666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11666");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        boolean boolean4 = strTokenizer3.hasPrevious();
        boolean boolean5 = strTokenizer3.isEmptyTokenAsNull();
        int int6 = strTokenizer3.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = strTokenizer3.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test11667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11667");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer7.getQuoteMatcher();
        char[] charArray11 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, "hi!");
        int int26 = strMatcher9.isMatch(charArray11, (int) (short) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher34);
        java.lang.String str36 = strTokenizer35.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("");
        java.lang.Object obj40 = strTokenizer39.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer39.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher43, strMatcher44);
        java.lang.String str46 = strTokenizer45.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer45.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer45.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.setIgnoreEmptyTokens(false);
        java.lang.String str55 = strTokenizer52.next();
        char[] charArray57 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher59, strMatcher60);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer61.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, strMatcher62, strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray57);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer65.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer52.setIgnoredMatcher(strMatcher66);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = strTokenizer52.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[hi!]", strMatcher41, strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer30.setIgnoredMatcher(strMatcher41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer30.setIgnoreEmptyTokens(true);
        boolean boolean73 = strTokenizer30.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer30.setEmptyTokenAsNull(false);
        java.lang.String str76 = strTokenizer30.next();
        java.lang.String str77 = strTokenizer30.previous();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str36, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str46, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a]");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "a" + "'", str76, "a");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "a" + "'", str77, "a");
    }

    @Test
    public void test11668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11668");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        int int11 = strTokenizer10.previousIndex();
        java.lang.String str12 = strTokenizer10.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer10.setQuoteChar(' ');
        boolean boolean15 = strTokenizer14.isIgnoreEmptyTokens();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test11669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11669");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        boolean boolean11 = strTokenizer10.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        java.lang.String str16 = strTokenizer15.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer15.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer15.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.setIgnoreEmptyTokens(false);
        java.lang.String str25 = strTokenizer22.next();
        char[] charArray27 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher29, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher32, strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray27);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer35.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer22.setIgnoredMatcher(strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher40);
        java.lang.String str42 = strTokenizer41.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer41.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer41.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setQuoteChar('4');
        char[] charArray50 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher52, strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher55, strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer46.reset(charArray50);
        int int65 = strMatcher36.isMatch(charArray50, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer10.setQuoteMatcher(strMatcher36);
        char[] charArray67 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray67);
        char[] charArray70 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher72, strMatcher73);
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = strTokenizer74.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, strMatcher75, strMatcher76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, "a");
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer68.reset(charArray70);
        int int87 = strMatcher36.isMatch(charArray70, (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, "StrTokenizer[a]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = strTokenizer91.setEmptyTokenAsNull(true);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str16, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str42, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a]");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[a]");
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertNotNull(strTokenizer93);
    }

    @Test
    public void test11670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11670");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        boolean boolean9 = strTokenizer3.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer3.setTrimmerMatcher(strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer3.setIgnoredChar(' ');
        java.lang.Object obj17 = strTokenizer3.clone();
        char[] charArray19 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher21, strMatcher22);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher24, strMatcher25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer3.setDelimiterMatcher(strMatcher30);
        java.lang.String str32 = strTokenizer3.toString();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer3.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "StrTokenizer[hi!]" + "'", str32, "StrTokenizer[hi!]");
    }

    @Test
    public void test11671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11671");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        boolean boolean4 = strList2.isEmpty();
        java.lang.Object[] objArray5 = strList2.toArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher8);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer9.getTrimmerMatcher();
        char[] charArray12 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher14, strMatcher15);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher17, strMatcher18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, "a");
        int int27 = strMatcher10.isMatch(charArray12, (int) (byte) 0);
        boolean boolean28 = strList2.contains((java.lang.Object) strMatcher10);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher30, strMatcher31);
        boolean boolean33 = strTokenizer32.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer32.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer32.setQuoteMatcher(strMatcher38);
        char[] charArray42 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher44, strMatcher45);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer46.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher47, strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray42);
        int int55 = strMatcher38.isMatch(charArray42, (int) (short) 10);
        int int57 = strMatcher10.isMatch(charArray42, (int) (short) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[hi!]", 'a', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer61.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer61.reset("StrTokenizer[]");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer61.setQuoteMatcher(strMatcher65);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer61.setDelimiterMatcher(strMatcher68);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher68, strMatcher70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray42);
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = strTokenizer72.getIgnoredMatcher();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[hi!]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a]");
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strMatcher73);
    }

    @Test
    public void test11672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11672");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("a");
        char[] charArray3 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher5, strMatcher6);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer7.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, strMatcher8, strMatcher9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer1.reset(charArray3);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer1.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer1.getTrimmerMatcher();
        char[] charArray23 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer31.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.setTrimmerMatcher(strMatcher33);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        boolean boolean39 = strList37.isEmpty();
        java.lang.Object[] objArray40 = strList37.toArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher42, strMatcher43);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        char[] charArray47 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher49, strMatcher50);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher52, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, "a");
        int int62 = strMatcher45.isMatch(charArray47, (int) (byte) 0);
        boolean boolean63 = strList37.contains((java.lang.Object) strMatcher45);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher65, strMatcher66);
        boolean boolean68 = strTokenizer67.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer67.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer67.setQuoteMatcher(strMatcher73);
        char[] charArray77 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher79, strMatcher80);
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = strTokenizer81.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, strMatcher82, strMatcher83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray77);
        int int90 = strMatcher73.isMatch(charArray77, (int) (short) 10);
        int int92 = strMatcher45.isMatch(charArray77, (int) (short) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, 'a', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = strTokenizer32.reset(charArray77);
        int int98 = strMatcher21.isMatch(charArray77, (int) (byte) 0);
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[a]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[hi!]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a]");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[a]");
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertNotNull(strTokenizer96);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 0 + "'", int98 == 0);
    }

    @Test
    public void test11673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11673");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, 'a', 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher25);
        java.lang.String str27 = strTokenizer26.toString();
        java.util.List<java.lang.String> strList28 = strTokenizer26.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer26.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher34);
        java.lang.String str36 = strTokenizer35.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer35.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer35.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer42.setIgnoreEmptyTokens(false);
        java.lang.String str45 = strTokenizer42.next();
        char[] charArray47 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher49, strMatcher50);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher52, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray47);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer42.setIgnoredMatcher(strMatcher56);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher56, strMatcher58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer26.setTrimmerMatcher(strMatcher56);
        char[] charArray61 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray61);
        char[] charArray64 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher66, strMatcher67);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, strMatcher69, strMatcher70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, "a");
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer62.reset(charArray64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, 'a');
        int int83 = strMatcher56.isMatch(charArray64, 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, "444 ");
        int int89 = strMatcher22.isMatch(charArray64, 10);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str27, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str36, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a]");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[a]");
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
    }

    @Test
    public void test11674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11674");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        boolean boolean2 = strTokenizer1.hasNext();
        java.lang.String str3 = strTokenizer1.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher5, strMatcher6);
        java.lang.String str8 = strTokenizer7.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer7.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer7.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer7.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setQuoteChar('4');
        char[] charArray16 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher18, strMatcher19);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher21, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer12.reset(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer1.reset(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, "#a");
        int int35 = strTokenizer34.nextIndex();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str8, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
    }

    @Test
    public void test11675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11675");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        java.lang.String str6 = strTokenizer5.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer5.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer5.setEmptyTokenAsNull(false);
        java.lang.Object obj11 = strTokenizer10.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        java.lang.String str16 = strTokenizer15.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer15.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer15.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer15.setDelimiterMatcher(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer10.setQuoteMatcher(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher21);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher27);
        boolean boolean29 = strTokenizer28.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer28.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer28.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("#a444", strMatcher21, strMatcher33);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer34.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str6, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str16, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher33);
    }

    @Test
    public void test11676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11676");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        java.util.List<java.lang.String> strList10 = strTokenizer8.getTokenList();
        java.lang.Object obj11 = null;
        boolean boolean12 = strList10.remove(obj11);
        boolean boolean13 = strList2.removeAll((java.util.Collection<java.lang.String>) strList10);
        java.util.Spliterator<java.lang.String> strSpliterator14 = strList2.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        java.lang.String str19 = strTokenizer18.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer18.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer18.setEmptyTokenAsNull(false);
        java.util.List<java.lang.String> strList24 = strTokenizer23.getTokenList();
        boolean boolean25 = strList2.remove((java.lang.Object) strList24);
        java.util.ListIterator<java.lang.String> strItor26 = strList2.listIterator();
        java.util.stream.Stream<java.lang.String> strStream27 = strList2.parallelStream();
        boolean boolean28 = strList2.isEmpty();
        strList2.clear();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.stream.Stream<java.lang.String> strStream34 = strList32.stream();
        boolean boolean35 = strList32.isEmpty();
        char[] charArray36 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher37);
        java.lang.String[] strArray39 = strTokenizer38.getTokenArray();
        boolean boolean40 = strList32.equals((java.lang.Object) strArray39);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher42, strMatcher43);
        java.lang.String str45 = strTokenizer44.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer44.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setDelimiterString("");
        java.lang.Object obj49 = strTokenizer48.clone();
        java.util.List<java.lang.String> strList50 = strTokenizer48.getTokenList();
        int int51 = strList50.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher53, strMatcher54);
        java.lang.String str56 = strTokenizer55.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer55.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer57.setDelimiterString("");
        java.lang.Object obj60 = strTokenizer59.clone();
        java.util.List<java.lang.String> strList61 = strTokenizer59.getTokenList();
        int int62 = strList61.size();
        java.lang.String[] strArray64 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList65 = new java.util.ArrayList<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        java.util.stream.Stream<java.lang.String> strStream67 = strList65.stream();
        java.lang.Object[] objArray68 = strList65.toArray();
        boolean boolean69 = strList61.removeAll((java.util.Collection<java.lang.String>) strList65);
        boolean boolean70 = strList50.containsAll((java.util.Collection<java.lang.String>) strList61);
        java.util.Spliterator<java.lang.String> strSpliterator71 = strList61.spliterator();
        boolean boolean72 = strList32.equals((java.lang.Object) strList61);
        boolean boolean74 = strList61.add("hi!");
        boolean boolean75 = strList2.remove((java.lang.Object) strList61);
        java.util.Iterator<java.lang.String> strItor76 = strList2.iterator();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strSpliterator14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str19, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strItor26);
        org.junit.Assert.assertNotNull(strStream27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strStream34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str45, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str56, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strStream67);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strSpliterator71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strItor76);
    }

    @Test
    public void test11677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11677");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[StrTokenizer[, ]]");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer1.add("#a444 ");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test11678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11678");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        boolean boolean4 = strList2.isEmpty();
        strList2.clear();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.reset("hi!");
        java.util.List<java.lang.String> strList12 = strTokenizer9.getTokenList();
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, '#', '#');
        int int29 = strList12.lastIndexOf((java.lang.Object) strTokenizer28);
        int int30 = strList12.size();
        boolean boolean31 = strList2.addAll((java.util.Collection<java.lang.String>) strList12);
        strList2.clear();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher34, strMatcher35);
        java.lang.String str37 = strTokenizer36.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer36.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer36.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.setIgnoreEmptyTokens(false);
        java.lang.String str46 = strTokenizer43.next();
        char[] charArray48 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher50, strMatcher51);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer52.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, strMatcher53, strMatcher54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray48);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer56.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer43.setIgnoredMatcher(strMatcher57);
        boolean boolean59 = strTokenizer43.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer43.setEmptyTokenAsNull(true);
        boolean boolean62 = strList2.equals((java.lang.Object) strTokenizer43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer43.setDelimiterString("#");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer43.set("a");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str37, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strTokenizer64);
    }

    @Test
    public void test11679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11679");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        char[] charArray26 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher27);
        java.lang.String[] strArray29 = strTokenizer28.getTokenArray();
        java.lang.String[] strArray30 = strTokenizer28.getTokenArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer28.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher31);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer32.getQuoteMatcher();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer32.set("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strMatcher33);
    }

    @Test
    public void test11680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11680");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, ' ', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strTokenizer4.getTrimmerMatcher();
        char[] charArray7 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher9, strMatcher10);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher12, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray7);
        char[] charArray20 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher22, strMatcher23);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer24.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, strMatcher25, strMatcher26);
        char[] charArray29 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher31, strMatcher32);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher34, strMatcher35);
        int int40 = strMatcher25.isMatch(charArray29, 1, 1, (int) ' ');
        char[] charArray41 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher42);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer43.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher25, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray7);
        int int51 = strMatcher5.isMatch(charArray7, 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, 'a', '#');
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a]");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
    }

    @Test
    public void test11681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11681");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setDelimiterString("");
        java.lang.Object obj13 = strTokenizer12.clone();
        java.util.List<java.lang.String> strList14 = strTokenizer12.getTokenList();
        java.util.ListIterator<java.lang.String> strItor16 = strList14.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor17 = strList14.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int20 = strList14.indexOf((java.lang.Object) strMatcher19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer3.setDelimiterMatcher(strMatcher19);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer3.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer3.setDelimiterString("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer3.setQuoteMatcher(strMatcher27);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getDelimiterMatcher();
        char[] charArray31 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher34);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer35.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher36, strMatcher37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, '4');
        int int55 = strMatcher29.isMatch(charArray31, (-1), 1, 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, '4', '4');
        java.lang.String[] strArray59 = strTokenizer58.getTokenArray();
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNotNull(strItor16);
        org.junit.Assert.assertNotNull(strItor17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a]");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(strArray59);
    }

    @Test
    public void test11682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11682");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, ' ', 'a');
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer17);
    }

    @Test
    public void test11683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11683");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer9.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setTrimmerMatcher(strMatcher11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setDelimiterString("StrTokenizer[a]");
        boolean boolean15 = strTokenizer12.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer12.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#a444 ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer12.setQuoteMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        boolean boolean22 = strTokenizer21.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray25 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher30, strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray25);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer23.setTrimmerMatcher(strMatcher34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer21.setQuoteMatcher(strMatcher34);
        char[] charArray38 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher40, strMatcher41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher43, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray38);
        int int54 = strMatcher34.isMatch(charArray38, 10, 0, (int) (short) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, "StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, "a");
        int int60 = strMatcher18.isMatch(charArray38, (int) '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray38);
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray38);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strMatcher63);
    }

    @Test
    public void test11684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11684");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", ' ');
        java.lang.String str3 = strTokenizer2.getContent();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str3, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test11685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11685");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[", "StrTokenizer[not");
    }

    @Test
    public void test11686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11686");
        char[] charArray2 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7, strMatcher8);
        char[] charArray11 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher16, strMatcher17);
        int int22 = strMatcher7.isMatch(charArray11, 1, 1, (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray11);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        java.lang.String str28 = strTokenizer27.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer27.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.setIgnoredChar(' ');
        int int34 = strTokenizer33.previousIndex();
        java.lang.String[] strArray35 = strTokenizer33.getTokenArray();
        java.lang.String str36 = strTokenizer33.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer33.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("#a", strMatcher37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setIgnoreEmptyTokens(false);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a]");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str28, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "a" + "'", str36, "a");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strTokenizer40);
    }

    @Test
    public void test11687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11687");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("", ' ', ' ');
        java.lang.String str5 = strTokenizer4.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer4.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer4.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.reset("");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer9.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("#a444 ", strMatcher12);
        java.lang.String str14 = strTokenizer13.getContent();
        int int15 = strTokenizer13.nextIndex();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "#a444 " + "'", str14, "#a444 ");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test11688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11688");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        boolean boolean5 = strList2.isEmpty();
        char[] charArray6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher7);
        java.lang.String[] strArray9 = strTokenizer8.getTokenArray();
        boolean boolean10 = strList2.equals((java.lang.Object) strArray9);
        java.util.stream.Stream<java.lang.String> strStream11 = strList2.parallelStream();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        java.lang.String str16 = strTokenizer15.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer15.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer15.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setQuoteChar('4');
        int int23 = strTokenizer22.previousIndex();
        boolean boolean24 = strTokenizer22.isEmptyTokenAsNull();
        java.lang.Object obj25 = strTokenizer22.clone();
        char[] charArray27 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher29, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher32, strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer22.reset(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray27);
        boolean boolean38 = strList2.equals((java.lang.Object) strTokenizer37);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str39 = strTokenizer37.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str16, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test11689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11689");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("#a444 ", 'a');
        java.lang.String str3 = strTokenizer2.getContent();
        int int4 = strTokenizer2.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = strTokenizer2.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "#a444 " + "'", str3, "#a444 ");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test11690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11690");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.util.List<java.lang.String> strList5 = strTokenizer3.getTokenList();
        boolean boolean6 = strList5.isEmpty();
        boolean boolean7 = strList5.isEmpty();
        java.util.stream.Stream<java.lang.String> strStream8 = strList5.stream();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        java.util.List<java.lang.String> strList13 = strTokenizer12.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher15, strMatcher16);
        java.lang.String str18 = strTokenizer17.toString();
        java.util.List<java.lang.String> strList19 = strTokenizer17.getTokenList();
        java.lang.Object obj20 = null;
        boolean boolean21 = strList19.remove(obj20);
        boolean boolean23 = strList19.add("StrTokenizer[not tokenized yet]");
        boolean boolean24 = strList13.containsAll((java.util.Collection<java.lang.String>) strList19);
        java.lang.Object[] objArray25 = strList13.toArray();
        boolean boolean26 = strList5.removeAll((java.util.Collection<java.lang.String>) strList13);
        boolean boolean27 = strList13.isEmpty();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strStream8);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str18, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test11691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11691");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        int int10 = strList9.size();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.stream.Stream<java.lang.String> strStream15 = strList13.stream();
        java.lang.Object[] objArray16 = strList13.toArray();
        boolean boolean17 = strList9.removeAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.Object obj18 = null;
        boolean boolean19 = strList13.equals(obj18);
        boolean boolean20 = strList13.isEmpty();
        java.util.Spliterator<java.lang.String> strSpliterator21 = strList13.spliterator();
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator22 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList13.replaceAll(strUnaryOperator22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strSpliterator21);
    }

    @Test
    public void test11692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11692");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.reset("hi!");
        java.util.List<java.lang.String> strList25 = strTokenizer22.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        java.lang.String str30 = strTokenizer29.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.setDelimiterString("");
        java.lang.Object obj34 = strTokenizer33.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer33.getQuoteMatcher();
        boolean boolean36 = strList25.contains((java.lang.Object) strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher38, strMatcher39);
        java.lang.String str41 = strTokenizer40.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer42.setDelimiterString("");
        java.lang.Object obj45 = strTokenizer44.clone();
        java.util.List<java.lang.String> strList46 = strTokenizer44.getTokenList();
        java.util.ListIterator<java.lang.String> strItor48 = strList46.listIterator((int) (short) 0);
        java.util.stream.Stream<java.lang.String> strStream49 = strList46.stream();
        char[] charArray51 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher53, strMatcher54);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher56, strMatcher57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = strTokenizer64.getTrimmerMatcher();
        int int66 = strList46.indexOf((java.lang.Object) strMatcher65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher35, strMatcher65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "StrTokenizer[StrTokenizer[not tokenized yet]]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "StrTokenizer[StrTokenizer[not tokenized yet]]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer71.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer72.setQuoteChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = strTokenizer72.getQuoteMatcher();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str30, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str41, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(strItor48);
        org.junit.Assert.assertNotNull(strStream49);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[a]");
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strMatcher75);
    }

    @Test
    public void test11693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11693");
        char[] charArray4 = new char[] { 'a', ' ', ' ', ' ' };
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer8.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer8.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setQuoteChar('4');
        char[] charArray17 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher22, strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer13.reset(charArray17);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, strMatcher29);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher34);
        java.lang.String str36 = strTokenizer35.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("");
        java.lang.Object obj40 = strTokenizer39.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer39.getQuoteMatcher();
        char[] charArray43 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher45, strMatcher46);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher48, strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, "hi!");
        int int58 = strMatcher41.isMatch(charArray43, (int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher60, strMatcher61);
        java.lang.String str63 = strTokenizer62.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer62.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = strTokenizer62.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer62.setEmptyTokenAsNull(false);
        java.lang.Object obj68 = strTokenizer67.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer67.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer67.setTrimmerMatcher(strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[hi!]", strMatcher41, strMatcher72);
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, strMatcher72, strMatcher77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, '4');
        int int84 = strTokenizer83.previousIndex();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "a   ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "a   ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[a,  ,  ,  ]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str36, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str63, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
    }

    @Test
    public void test11694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11694");
        char[] charArray2 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7, strMatcher8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '#', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setIgnoredChar('#');
        java.lang.String[] strArray17 = strTokenizer16.getTokenArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer16.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("a");
        char[] charArray22 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher25);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher27, strMatcher28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer20.reset(charArray22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray22);
        int int43 = strMatcher18.isMatch(charArray22, (int) (byte) 0, 10, (int) 'a');
        char[] charArray46 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher48, strMatcher49);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer50.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher51, strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, "a");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[hi!]", strMatcher60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("h", strMatcher18, strMatcher60);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a]");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a]");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strMatcher60);
    }

    @Test
    public void test11695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11695");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("");
        boolean boolean2 = strTokenizer1.isEmptyTokenAsNull();
        java.lang.String str3 = strTokenizer1.getContent();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
    }

    @Test
    public void test11696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11696");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.util.List<java.lang.String> strList5 = strTokenizer3.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher10, strMatcher11);
        java.lang.String str13 = strTokenizer12.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer12.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer12.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setIgnoreEmptyTokens(false);
        java.lang.String str22 = strTokenizer19.next();
        char[] charArray24 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher27);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher29, strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray24);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer32.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer19.setIgnoredMatcher(strMatcher33);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer3.setTrimmerMatcher(strMatcher33);
        char[] charArray38 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray38);
        char[] charArray41 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher43, strMatcher44);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer45.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher46, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, "a");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer39.reset(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, 'a');
        int int60 = strMatcher33.isMatch(charArray41, 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, "444 ");
        boolean boolean65 = strTokenizer64.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer64.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str13, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a]");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test11697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11697");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        java.util.List<java.lang.String> strList10 = strTokenizer8.getTokenList();
        java.lang.Object obj11 = null;
        boolean boolean12 = strList10.remove(obj11);
        boolean boolean13 = strList2.removeAll((java.util.Collection<java.lang.String>) strList10);
        java.util.Spliterator<java.lang.String> strSpliterator14 = strList2.spliterator();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        boolean boolean19 = strList17.isEmpty();
        java.lang.Object[] objArray20 = strList17.toArray();
        java.lang.Object[] objArray21 = strList2.toArray(objArray20);
        char[] charArray23 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28, strMatcher29);
        char[] charArray32 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher34, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher37, strMatcher38);
        int int43 = strMatcher28.isMatch(charArray32, 1, 1, (int) ' ');
        int int44 = strList2.indexOf((java.lang.Object) ' ');
        java.util.Iterator<java.lang.String> strItor45 = strList2.iterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher47, strMatcher48);
        java.lang.String str50 = strTokenizer49.toString();
        java.util.List<java.lang.String> strList51 = strTokenizer49.getTokenList();
        boolean boolean52 = strList51.isEmpty();
        boolean boolean54 = strList51.add("a");
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList57 = new java.util.ArrayList<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.stream.Stream<java.lang.String> strStream59 = strList57.stream();
        java.lang.Object[] objArray60 = strList57.toArray();
        boolean boolean61 = strList51.addAll((java.util.Collection<java.lang.String>) strList57);
        java.util.ListIterator<java.lang.String> strItor62 = strList57.listIterator();
        boolean boolean63 = strList2.contains((java.lang.Object) strList57);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher67, strMatcher68);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = strTokenizer69.getTrimmerMatcher();
        char[] charArray72 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher74, strMatcher75);
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = strTokenizer76.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, strMatcher77, strMatcher78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher70, strMatcher78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[hi!]", strMatcher70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer81.reset();
        boolean boolean83 = strTokenizer81.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = strTokenizer81.getIgnoredMatcher();
        int int85 = strList2.lastIndexOf((java.lang.Object) strMatcher84);
        boolean boolean87 = strList2.add("444 ");
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strSpliterator14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[null]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[null]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[a]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strItor45);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str50, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strStream59);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strItor62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[a]");
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test11698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11698");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        java.util.List<java.lang.String> strList10 = strTokenizer8.getTokenList();
        java.lang.Object obj11 = null;
        boolean boolean12 = strList10.remove(obj11);
        boolean boolean13 = strList2.removeAll((java.util.Collection<java.lang.String>) strList10);
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.stream.Stream<java.lang.String> strStream18 = strList16.stream();
        java.lang.Object[] objArray19 = strList16.toArray();
        java.util.ListIterator<java.lang.String> strItor20 = strList16.listIterator();
        boolean boolean21 = strList10.remove((java.lang.Object) strList16);
        char[] charArray23 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, "StrTokenizer[hi!]");
        boolean boolean42 = strList16.contains((java.lang.Object) strTokenizer41);
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        java.util.stream.Stream<java.lang.String> strStream47 = strList45.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher49, strMatcher50);
        java.lang.String str52 = strTokenizer51.toString();
        java.util.List<java.lang.String> strList53 = strTokenizer51.getTokenList();
        java.lang.Object obj54 = null;
        boolean boolean55 = strList53.remove(obj54);
        boolean boolean56 = strList45.removeAll((java.util.Collection<java.lang.String>) strList53);
        java.util.Spliterator<java.lang.String> strSpliterator57 = strList45.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher59, strMatcher60);
        java.lang.String str62 = strTokenizer61.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer61.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer61.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer61.setEmptyTokenAsNull(false);
        java.util.List<java.lang.String> strList67 = strTokenizer66.getTokenList();
        boolean boolean68 = strList45.remove((java.lang.Object) strList67);
        java.util.Iterator<java.lang.String> strItor69 = strList67.iterator();
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList72 = new java.util.ArrayList<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        java.util.stream.Stream<java.lang.String> strStream74 = strList72.stream();
        boolean boolean75 = strList72.isEmpty();
        char[] charArray76 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, strMatcher77);
        java.lang.String[] strArray79 = strTokenizer78.getTokenArray();
        boolean boolean80 = strList72.equals((java.lang.Object) strArray79);
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher82, strMatcher83);
        java.lang.String str85 = strTokenizer84.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer84.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer86.setDelimiterString("");
        java.lang.Object obj89 = strTokenizer88.clone();
        java.util.List<java.lang.String> strList90 = strTokenizer88.getTokenList();
        java.util.ListIterator<java.lang.String> strItor92 = strList90.listIterator((int) (short) 0);
        boolean boolean93 = strList72.removeAll((java.util.Collection<java.lang.String>) strList90);
        boolean boolean94 = strList67.addAll((java.util.Collection<java.lang.String>) strList72);
        boolean boolean95 = strList16.containsAll((java.util.Collection<java.lang.String>) strList67);
        java.util.Iterator<java.lang.String> strItor96 = strList67.iterator();
        int int97 = strList67.size();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strStream18);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[hi!]");
        org.junit.Assert.assertNotNull(strItor20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strStream47);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str52, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strSpliterator57);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str62, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strItor69);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(strStream74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str85, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList90);
        org.junit.Assert.assertNotNull(strItor92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(strItor96);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 1 + "'", int97 == 1);
    }

    @Test
    public void test11699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11699");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        java.lang.Object obj9 = strTokenizer8.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer8.setDelimiterChar('a');
        boolean boolean12 = strTokenizer8.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer8.setIgnoredMatcher(strMatcher15);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        char[] charArray19 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher21, strMatcher22);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher24, strMatcher25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, '#', '#');
        int int37 = strMatcher17.isMatch(charArray19, 10, (int) 'a', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, ' ');
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(strTokenizer38);
    }

    @Test
    public void test11700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11700");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "a");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.setIgnoredChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.setDelimiterString("#a");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = strTokenizer21.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer23);
    }

    @Test
    public void test11701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11701");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        boolean boolean5 = strList2.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.reset("hi!");
        java.util.List<java.lang.String> strList12 = strTokenizer9.getTokenList();
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, '#', '#');
        int int29 = strList12.lastIndexOf((java.lang.Object) strTokenizer28);
        int int30 = strList12.size();
        boolean boolean31 = strList2.retainAll((java.util.Collection<java.lang.String>) strList12);
        java.util.stream.Stream<java.lang.String> strStream32 = strList2.stream();
        java.util.Spliterator<java.lang.String> strSpliterator33 = strList2.spliterator();
        java.util.Iterator<java.lang.String> strItor34 = strList2.iterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher36, strMatcher37);
        java.lang.String str39 = strTokenizer38.toString();
        java.util.List<java.lang.String> strList40 = strTokenizer38.getTokenList();
        boolean boolean41 = strList40.isEmpty();
        java.util.stream.Stream<java.lang.String> strStream42 = strList40.parallelStream();
        strList40.clear();
        java.util.ListIterator<java.lang.String> strItor44 = strList40.listIterator();
        boolean boolean45 = strList2.retainAll((java.util.Collection<java.lang.String>) strList40);
        java.lang.Class<?> wildcardClass46 = strList2.getClass();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strStream32);
        org.junit.Assert.assertNotNull(strSpliterator33);
        org.junit.Assert.assertNotNull(strItor34);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str39, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strStream42);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test11702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11702");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        int int10 = strList9.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        java.lang.String str15 = strTokenizer14.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setDelimiterString("");
        java.lang.Object obj19 = strTokenizer18.clone();
        java.util.List<java.lang.String> strList20 = strTokenizer18.getTokenList();
        int int21 = strList20.size();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.stream();
        java.lang.Object[] objArray27 = strList24.toArray();
        boolean boolean28 = strList20.removeAll((java.util.Collection<java.lang.String>) strList24);
        boolean boolean29 = strList9.containsAll((java.util.Collection<java.lang.String>) strList20);
        java.util.stream.Stream<java.lang.String> strStream30 = strList9.stream();
        java.util.stream.Stream<java.lang.String> strStream31 = strList9.parallelStream();
        java.util.Iterator<java.lang.String> strItor32 = strList9.iterator();
        java.util.ListIterator<java.lang.String> strItor33 = strList9.listIterator();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str15, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strStream30);
        org.junit.Assert.assertNotNull(strStream31);
        org.junit.Assert.assertNotNull(strItor32);
        org.junit.Assert.assertNotNull(strItor33);
    }

    @Test
    public void test11703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11703");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer2.getQuoteMatcher();
        org.junit.Assert.assertNotNull(strMatcher3);
    }

    @Test
    public void test11704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11704");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("a");
        java.util.List<java.lang.String> strList2 = strTokenizer1.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        java.lang.String str7 = strTokenizer6.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer6.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer6.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setIgnoreEmptyTokens(false);
        int int16 = strList2.indexOf((java.lang.Object) strTokenizer13);
        strList2.clear();
        char[] charArray18 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher19);
        int int21 = strTokenizer20.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.reset();
        java.lang.String str23 = strTokenizer20.nextToken();
        boolean boolean24 = strList2.remove((java.lang.Object) str23);
        int int25 = strList2.size();
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.stream.Stream<java.lang.String> strStream30 = strList28.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher32, strMatcher33);
        java.lang.String str35 = strTokenizer34.toString();
        java.util.List<java.lang.String> strList36 = strTokenizer34.getTokenList();
        java.lang.Object obj37 = null;
        boolean boolean38 = strList36.remove(obj37);
        boolean boolean39 = strList28.removeAll((java.util.Collection<java.lang.String>) strList36);
        java.util.Spliterator<java.lang.String> strSpliterator40 = strList28.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher42, strMatcher43);
        java.lang.String str45 = strTokenizer44.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer44.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer44.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer44.setEmptyTokenAsNull(false);
        java.util.List<java.lang.String> strList50 = strTokenizer49.getTokenList();
        boolean boolean51 = strList28.remove((java.lang.Object) strList50);
        boolean boolean52 = strList2.removeAll((java.util.Collection<java.lang.String>) strList50);
        java.util.Spliterator<java.lang.String> strSpliterator53 = strList50.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList56 = strList50.subList(1, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str7, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strStream30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str35, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strSpliterator40);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str45, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strSpliterator53);
    }

    @Test
    public void test11705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11705");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', '#');
        int int26 = strTokenizer25.previousIndex();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
    }

    @Test
    public void test11706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11706");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[a]", '#', 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strTokenizer4.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[]", "StrTokenizer[a]");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not", strMatcher5, strMatcher9);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strMatcher9);
    }

    @Test
    public void test11707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11707");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer9.reset();
        int int11 = strTokenizer9.size();
        java.lang.String str12 = strTokenizer9.next();
        java.lang.Object obj13 = strTokenizer9.clone();
        boolean boolean14 = strTokenizer9.isIgnoreEmptyTokens();
        java.lang.String str15 = strTokenizer9.toString();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "a" + "'", str12, "a");
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[a]" + "'", str15, "StrTokenizer[a]");
    }

    @Test
    public void test11708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11708");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        int int10 = strList9.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        java.lang.String str15 = strTokenizer14.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setDelimiterString("");
        java.lang.Object obj19 = strTokenizer18.clone();
        java.util.List<java.lang.String> strList20 = strTokenizer18.getTokenList();
        int int21 = strList20.size();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.stream();
        java.lang.Object[] objArray27 = strList24.toArray();
        boolean boolean28 = strList20.removeAll((java.util.Collection<java.lang.String>) strList24);
        boolean boolean29 = strList9.containsAll((java.util.Collection<java.lang.String>) strList20);
        java.util.Spliterator<java.lang.String> strSpliterator30 = strList20.spliterator();
        int int31 = strList20.size();
        int int33 = strList20.lastIndexOf((java.lang.Object) 1.0f);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher35, strMatcher36);
        java.lang.String str38 = strTokenizer37.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer37.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer37.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer42.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer44.setIgnoreEmptyTokens(false);
        java.lang.String str47 = strTokenizer44.next();
        char[] charArray49 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher51, strMatcher52);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = strTokenizer53.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher54, strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray49);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer57.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer44.setIgnoredMatcher(strMatcher58);
        int int60 = strList20.lastIndexOf((java.lang.Object) strTokenizer59);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher62, strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer64.reset("hi!");
        java.util.List<java.lang.String> strList67 = strTokenizer64.getTokenList();
        char[] charArray69 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher71, strMatcher72);
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = strTokenizer73.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, strMatcher74, strMatcher75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, '#', '#');
        int int84 = strList67.lastIndexOf((java.lang.Object) strTokenizer83);
        int int85 = strList67.size();
        boolean boolean86 = strList67.isEmpty();
        boolean boolean87 = strList20.retainAll((java.util.Collection<java.lang.String>) strList67);
        java.util.Spliterator<java.lang.String> strSpliterator88 = strList67.spliterator();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str15, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strSpliterator30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str38, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a]");
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[a]");
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(strSpliterator88);
    }

    @Test
    public void test11709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11709");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setIgnoredChar(' ');
        java.util.List<java.lang.String> strList12 = strTokenizer11.getTokenList();
        java.lang.Object obj13 = strTokenizer11.clone();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test11710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11710");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer3.setDelimiterMatcher(strMatcher9);
        int int11 = strTokenizer10.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer10.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setIgnoreEmptyTokens(false);
        boolean boolean16 = strTokenizer13.hasPrevious();
        int int17 = strTokenizer13.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer13.setDelimiterMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.reset("h");
        boolean boolean22 = strTokenizer19.isIgnoreEmptyTokens();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test11711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11711");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        char[] charArray23 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28, strMatcher29);
        int int34 = strMatcher19.isMatch(charArray23, 1, 1, (int) ' ');
        char[] charArray35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher19, strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "trTokenizer[hi!]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.setIgnoredChar(' ');
        boolean boolean48 = strTokenizer45.hasPrevious();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test11712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11712");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        java.lang.String str3 = strTokenizer1.toString();
        int int4 = strTokenizer1.previousIndex();
        java.lang.String[] strArray5 = strTokenizer1.getTokenArray();
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str3, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strArray5);
    }

    @Test
    public void test11713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11713");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        java.lang.Object obj9 = strTokenizer8.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer8.setDelimiterChar('a');
        boolean boolean12 = strTokenizer8.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer8.setIgnoredMatcher(strMatcher15);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        char[] charArray19 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher21, strMatcher22);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher24, strMatcher25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, '#', '#');
        int int37 = strMatcher17.isMatch(charArray19, 10, (int) 'a', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, "StrTokenizer[not");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer40.reset();
        java.util.List<java.lang.String> strList42 = strTokenizer40.getTokenList();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strList42);
    }

    @Test
    public void test11714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11714");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '#');
        java.lang.String str12 = strTokenizer11.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer11.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer14.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setIgnoredChar('#');
        boolean boolean18 = strTokenizer17.hasPrevious();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str12, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test11715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11715");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, strMatcher1);
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer2.getTrimmerMatcher();
        int int4 = strTokenizer2.size();
        java.util.List<java.lang.String> strList5 = strTokenizer2.getTokenList();
        char[] charArray7 = null;
        char[] charArray9 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher11, strMatcher12);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher14, strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("a", strMatcher29);
        int int31 = strTokenizer30.previousIndex();
        boolean boolean32 = strTokenizer30.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer30.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[, ]", strMatcher25, strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer2.setIgnoredMatcher(strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.setDelimiterChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher40, strMatcher41);
        java.lang.String str43 = strTokenizer42.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer42.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer42.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer42.setEmptyTokenAsNull(false);
        java.lang.Object obj48 = strTokenizer47.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer47.setDelimiterChar('a');
        boolean boolean51 = strTokenizer47.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer47.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer47.setIgnoredMatcher(strMatcher54);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getTrimmerMatcher();
        char[] charArray58 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher60, strMatcher61);
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer62.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, strMatcher63, strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, '#', '#');
        int int76 = strMatcher56.isMatch(charArray58, 10, (int) 'a', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer38.setTrimmerMatcher(strMatcher56);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = strTokenizer77.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer37.setTrimmerMatcher(strMatcher78);
        boolean boolean80 = strTokenizer37.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str43, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[a]");
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test11716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11716");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher2, strMatcher3);
        java.lang.String str5 = strTokenizer4.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer4.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer4.setEmptyTokenAsNull(false);
        java.lang.Object obj10 = strTokenizer9.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        java.lang.String str15 = strTokenizer14.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer14.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer14.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer14.setDelimiterMatcher(strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer9.setQuoteMatcher(strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer9.getIgnoredMatcher();
        char[] charArray25 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher30, strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer33.reset();
        int int35 = strTokenizer33.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer33.setQuoteMatcher(strMatcher37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.reset("StrTokenizer[hi!]");
        int int41 = strTokenizer40.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher44, strMatcher45);
        java.lang.String str47 = strTokenizer46.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer46.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer46.setEmptyTokenAsNull(false);
        java.lang.Object obj52 = strTokenizer51.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher54, strMatcher55);
        java.lang.String str57 = strTokenizer56.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer56.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer56.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer56.setDelimiterMatcher(strMatcher62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer51.setQuoteMatcher(strMatcher62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer64.setIgnoredChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer64.setDelimiterChar('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getIgnoredMatcher();
        char[] charArray71 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher73, strMatcher74);
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = strTokenizer75.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray71, strMatcher76, strMatcher77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray71, '#');
        java.lang.String str82 = strTokenizer81.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = strTokenizer81.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer("a", strMatcher69, strMatcher83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer40.setIgnoredMatcher(strMatcher83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer("a", strMatcher23, strMatcher83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer86.setEmptyTokenAsNull(false);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer88.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str5, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str15, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str47, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str57, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[a]");
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str82, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNotNull(strTokenizer88);
    }

    @Test
    public void test11717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11717");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        boolean boolean12 = strTokenizer11.hasNext();
        java.lang.String str13 = strTokenizer11.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer11.reset("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer11.setDelimiterChar('a');
        int int18 = strTokenizer17.previousIndex();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "a" + "'", str13, "a");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test11718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11718");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[StrTokenizer[]", "h");
    }

    @Test
    public void test11719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11719");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset("hi!");
        int int6 = strTokenizer3.nextIndex();
        boolean boolean7 = strTokenizer3.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer3.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer9.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[StrTokenizer[not tokenized yet]]", strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[StrTokenizer[StrTokenizer[hi!]]]", strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strMatcher10);
    }

    @Test
    public void test11720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11720");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.util.List<java.lang.String> strList5 = strTokenizer3.getTokenList();
        boolean boolean6 = strList5.isEmpty();
        boolean boolean7 = strList5.isEmpty();
        java.util.stream.Stream<java.lang.String> strStream8 = strList5.stream();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        java.util.List<java.lang.String> strList13 = strTokenizer12.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher15, strMatcher16);
        java.lang.String str18 = strTokenizer17.toString();
        java.util.List<java.lang.String> strList19 = strTokenizer17.getTokenList();
        java.lang.Object obj20 = null;
        boolean boolean21 = strList19.remove(obj20);
        boolean boolean23 = strList19.add("StrTokenizer[not tokenized yet]");
        boolean boolean24 = strList13.containsAll((java.util.Collection<java.lang.String>) strList19);
        java.lang.Object[] objArray25 = strList13.toArray();
        boolean boolean26 = strList5.removeAll((java.util.Collection<java.lang.String>) strList13);
        char[] charArray28 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher30, strMatcher31);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer32.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher33, strMatcher34);
        char[] charArray37 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher40);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher42, strMatcher43);
        int int48 = strMatcher33.isMatch(charArray37, 1, 1, (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, "StrTokenizer[hi!]");
        java.lang.String[] strArray54 = strTokenizer53.getTokenArray();
        java.lang.Comparable<java.lang.String>[] strComparableArray55 = strList13.toArray((java.lang.Comparable<java.lang.String>[]) strArray54);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher57, strMatcher58);
        java.lang.String str60 = strTokenizer59.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer59.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer61.setDelimiterString("");
        java.lang.Object obj64 = strTokenizer63.clone();
        java.util.List<java.lang.String> strList65 = strTokenizer63.getTokenList();
        int int66 = strList65.size();
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList69 = new java.util.ArrayList<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.stream.Stream<java.lang.String> strStream71 = strList69.stream();
        java.lang.Object[] objArray72 = strList69.toArray();
        boolean boolean73 = strList65.removeAll((java.util.Collection<java.lang.String>) strList69);
        java.lang.String[] strArray76 = new java.lang.String[] { "", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList77 = new java.util.ArrayList<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher80, strMatcher81);
        boolean boolean83 = strTokenizer82.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer82.setIgnoredChar('4');
        int int86 = strTokenizer85.nextIndex();
        boolean boolean87 = strList77.equals((java.lang.Object) int86);
        int int88 = strList77.size();
        boolean boolean89 = strList65.retainAll((java.util.Collection<java.lang.String>) strList77);
        boolean boolean91 = strList65.equals((java.lang.Object) 100L);
        java.util.Spliterator<java.lang.String> strSpliterator92 = strList65.spliterator();
        boolean boolean93 = strList13.removeAll((java.util.Collection<java.lang.String>) strList65);
        java.util.stream.Stream<java.lang.String> strStream94 = strList13.stream();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strStream8);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str18, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strComparableArray55);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str60, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strStream71);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 2 + "'", int88 == 2);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(strSpliterator92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(strStream94);
    }

    @Test
    public void test11721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11721");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        boolean boolean4 = strTokenizer3.hasPrevious();
        int int5 = strTokenizer3.nextIndex();
        char[] charArray7 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher9, strMatcher10);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher12, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer3.reset(charArray7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setDelimiterString("");
        java.lang.String str23 = strTokenizer20.previousToken();
        java.lang.String str24 = strTokenizer20.next();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a]");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "a" + "'", str24, "a");
    }

    @Test
    public void test11722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11722");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[, ]", '4');
        char[] charArray4 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, strMatcher9, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray4);
        char[] charArray17 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher22, strMatcher23);
        char[] charArray26 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher28, strMatcher29);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer30.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher31, strMatcher32);
        int int37 = strMatcher22.isMatch(charArray26, 1, 1, (int) ' ');
        char[] charArray38 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher39);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer40.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, strMatcher22, strMatcher41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        boolean boolean45 = strTokenizer44.hasNext();
        java.lang.Object obj46 = strTokenizer44.clone();
        int int47 = strTokenizer44.previousIndex();
        boolean boolean48 = strTokenizer44.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher54, strMatcher55);
        java.lang.String str57 = strTokenizer56.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer56.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer56.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer56.setDelimiterMatcher(strMatcher62);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer63.getDelimiterMatcher();
        char[] charArray66 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher68, strMatcher69);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer70.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, strMatcher71, strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray66);
        int int75 = strTokenizer74.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer74.setIgnoredMatcher(strMatcher76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, strMatcher64, strMatcher76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer2.setDelimiterMatcher(strMatcher64);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str80 = strTokenizer79.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[a]");
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a]");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str57, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a]");
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strTokenizer79);
    }

    @Test
    public void test11723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11723");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        java.lang.String[] strArray6 = strTokenizer3.getTokenArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher8, strMatcher9);
        java.lang.String str11 = strTokenizer10.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setDelimiterString("");
        java.lang.Object obj15 = strTokenizer14.clone();
        java.util.List<java.lang.String> strList16 = strTokenizer14.getTokenList();
        java.util.ListIterator<java.lang.String> strItor18 = strList16.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor19 = strList16.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int22 = strList16.indexOf((java.lang.Object) strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray25 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher30, strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray25);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer23.setTrimmerMatcher(strMatcher34);
        int int36 = strList16.indexOf((java.lang.Object) strTokenizer35);
        java.lang.String str38 = strList16.remove((int) (short) 0);
        boolean boolean40 = strList16.add("StrTokenizer[a]");
        java.lang.String str42 = strList16.get((int) (short) 0);
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        java.util.stream.Stream<java.lang.String> strStream47 = strList45.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher49, strMatcher50);
        java.lang.String str52 = strTokenizer51.toString();
        java.util.List<java.lang.String> strList53 = strTokenizer51.getTokenList();
        java.lang.Object obj54 = null;
        boolean boolean55 = strList53.remove(obj54);
        boolean boolean56 = strList45.removeAll((java.util.Collection<java.lang.String>) strList53);
        java.util.Spliterator<java.lang.String> strSpliterator57 = strList45.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher59, strMatcher60);
        java.lang.String str62 = strTokenizer61.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer61.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer61.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer61.setEmptyTokenAsNull(false);
        java.util.List<java.lang.String> strList67 = strTokenizer66.getTokenList();
        boolean boolean68 = strList45.remove((java.lang.Object) strList67);
        java.util.stream.Stream<java.lang.String> strStream69 = strList45.parallelStream();
        boolean boolean70 = strList16.addAll((java.util.Collection<java.lang.String>) strList45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        boolean boolean73 = strTokenizer72.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray76 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher78, strMatcher79);
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = strTokenizer80.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, strMatcher81, strMatcher82);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray76);
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = strTokenizer84.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer74.setTrimmerMatcher(strMatcher85);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer72.setQuoteMatcher(strMatcher85);
        int int88 = strList45.lastIndexOf((java.lang.Object) strMatcher85);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer3.setQuoteMatcher(strMatcher85);
        java.lang.String[] strArray90 = strTokenizer89.getTokenArray();
        java.lang.String str91 = strTokenizer89.next();
        java.lang.Object obj92 = strTokenizer89.clone();
        java.lang.String str93 = strTokenizer89.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = strTokenizer89.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher96 = strTokenizer95.getTrimmerMatcher();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str11, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(strItor18);
        org.junit.Assert.assertNotNull(strItor19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "StrTokenizer[a]" + "'", str42, "StrTokenizer[a]");
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strStream47);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str52, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strSpliterator57);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str62, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strStream69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[a]");
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "hi!" + "'", str91, "hi!");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "hi!" + "'", str93, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer95);
        org.junit.Assert.assertNotNull(strMatcher96);
    }

    @Test
    public void test11724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11724");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        boolean boolean11 = strTokenizer10.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        java.lang.String str16 = strTokenizer15.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer15.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer15.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.setIgnoreEmptyTokens(false);
        java.lang.String str25 = strTokenizer22.next();
        char[] charArray27 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher29, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher32, strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray27);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer35.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer22.setIgnoredMatcher(strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher40);
        java.lang.String str42 = strTokenizer41.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer41.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer41.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setQuoteChar('4');
        char[] charArray50 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher52, strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher55, strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer46.reset(charArray50);
        int int65 = strMatcher36.isMatch(charArray50, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer10.setQuoteMatcher(strMatcher36);
        char[] charArray67 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray67);
        char[] charArray70 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher72, strMatcher73);
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = strTokenizer74.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, strMatcher75, strMatcher76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, "a");
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer68.reset(charArray70);
        int int87 = strMatcher36.isMatch(charArray70, (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer89.setIgnoreEmptyTokens(false);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str16, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str42, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a]");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[a]");
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertNotNull(strTokenizer91);
    }

    @Test
    public void test11725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11725");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        java.lang.String str6 = strTokenizer5.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer5.setIgnoredChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer5.setIgnoreEmptyTokens(false);
        boolean boolean12 = strTokenizer11.hasPrevious();
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher32, strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.reset("hi!");
        java.util.List<java.lang.String> strList37 = strTokenizer34.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher40);
        java.lang.String str42 = strTokenizer41.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.setDelimiterString("");
        java.lang.Object obj46 = strTokenizer45.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer45.getQuoteMatcher();
        boolean boolean48 = strList37.contains((java.lang.Object) strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer11.setQuoteMatcher(strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.setEmptyTokenAsNull(false);
        int int53 = strTokenizer50.size();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str6, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str42, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
    }

    @Test
    public void test11726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11726");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        boolean boolean9 = strTokenizer3.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer3.setTrimmerMatcher(strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer3.setIgnoredChar(' ');
        java.lang.Object obj17 = strTokenizer3.clone();
        int int18 = strTokenizer3.previousIndex();
        java.lang.Object obj19 = strTokenizer3.clone();
        java.lang.String str20 = strTokenizer3.next();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
    }

    @Test
    public void test11727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11727");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        java.lang.String str9 = strTokenizer3.nextToken();
        boolean boolean10 = strTokenizer3.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer3.setEmptyTokenAsNull(true);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer3.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strTokenizer12);
    }

    @Test
    public void test11728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11728");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, 'a', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher8);
        java.lang.String str10 = strTokenizer9.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer9.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer5.setQuoteMatcher(strMatcher12);
        char[] charArray15 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher17, strMatcher18);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("a");
        char[] charArray33 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher35, strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher38, strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer31.reset(charArray33);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer31.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer31.getTrimmerMatcher();
        char[] charArray53 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher55, strMatcher56);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer57.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, strMatcher58, strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer61.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer62.setTrimmerMatcher(strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher51, strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, ' ', '#');
        char[] charArray70 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher72, strMatcher73);
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = strTokenizer74.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, strMatcher75, strMatcher76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray70);
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer13.reset(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, '#', '4');
        java.lang.String str86 = strTokenizer85.previousToken();
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str10, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a]");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[a]");
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertNull(str86);
    }

    @Test
    public void test11729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11729");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("#a444 ", 'a', '4');
        java.lang.String str4 = strTokenizer3.toString();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test11730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11730");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer3.getTrimmerMatcher();
        char[] charArray6 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher8, strMatcher9);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer10.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher11, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer3.reset(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, 'a', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, '4');
        boolean boolean26 = strTokenizer25.hasPrevious();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test11731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11731");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setDelimiterString("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer16.setDelimiterString("StrTokenizer[not");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setQuoteChar('a');
        char[] charArray24 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher27);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher29, strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray24);
        int int36 = strTokenizer35.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        boolean boolean39 = strTokenizer38.hasNext();
        java.lang.String str40 = strTokenizer38.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher42, strMatcher43);
        java.lang.String str45 = strTokenizer44.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer44.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer44.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer44.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer49.setQuoteChar('4');
        char[] charArray53 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher55, strMatcher56);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer57.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, strMatcher58, strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer49.reset(charArray53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer38.reset(charArray53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer35.reset(charArray53);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher69, strMatcher70);
        java.lang.String str72 = strTokenizer71.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer71.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = strTokenizer71.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer71.setEmptyTokenAsNull(false);
        java.lang.Object obj77 = strTokenizer76.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer76.setDelimiterChar('a');
        boolean boolean80 = strTokenizer76.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer76.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = strTokenizer76.setIgnoredMatcher(strMatcher83);
        boolean boolean85 = strTokenizer76.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer76.setQuoteChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer76.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher93 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher93);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[, ]", strMatcher93);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = strTokenizer76.setQuoteMatcher(strMatcher93);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer97 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, strMatcher93);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer98 = strTokenizer20.setDelimiterMatcher(strMatcher93);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str45, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a]");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str72, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertNotNull(strMatcher93);
        org.junit.Assert.assertNotNull(strTokenizer96);
        org.junit.Assert.assertNotNull(strTokenizer98);
    }

    @Test
    public void test11732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11732");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        java.lang.Object obj9 = strTokenizer8.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer8.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer8.reset("");
        boolean boolean14 = strTokenizer13.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer13.setIgnoredChar(' ');
        java.lang.Object obj17 = strTokenizer16.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer16.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer16.setQuoteChar('a');
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
    }

    @Test
    public void test11733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11733");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        int int11 = strTokenizer10.previousIndex();
        boolean boolean12 = strTokenizer10.isIgnoreEmptyTokens();
        boolean boolean13 = strTokenizer10.hasPrevious();
        char[] charArray15 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher17, strMatcher18);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher30, strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer10.reset(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, '#');
        java.lang.String[] strArray38 = strTokenizer37.getTokenArray();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strArray38);
    }

    @Test
    public void test11734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11734");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setDelimiterString("");
        java.lang.Object obj13 = strTokenizer12.clone();
        java.util.List<java.lang.String> strList14 = strTokenizer12.getTokenList();
        java.util.ListIterator<java.lang.String> strItor16 = strList14.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor17 = strList14.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int20 = strList14.indexOf((java.lang.Object) strMatcher19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer3.setDelimiterMatcher(strMatcher19);
        java.util.List<java.lang.String> strList22 = strTokenizer21.getTokenList();
        strList22.clear();
        java.util.Spliterator<java.lang.String> strSpliterator24 = strList22.spliterator();
        boolean boolean25 = strList22.isEmpty();
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.stream.Stream<java.lang.String> strStream30 = strList28.stream();
        boolean boolean31 = strList28.isEmpty();
        java.lang.Object[] objArray32 = strList28.toArray();
        java.lang.String[] strArray38 = new java.lang.String[] { "StrTokenizer[not tokenized yet]", "hi!", "", "StrTokenizer[not tokenized yet]", "hi!" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        boolean boolean41 = strList28.removeAll((java.util.Collection<java.lang.String>) strList39);
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        java.util.stream.Stream<java.lang.String> strStream47 = strList45.stream();
        boolean boolean48 = strList45.isEmpty();
        char[] charArray49 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher50);
        java.lang.String[] strArray52 = strTokenizer51.getTokenArray();
        boolean boolean53 = strList45.equals((java.lang.Object) strArray52);
        java.util.Spliterator<java.lang.String> strSpliterator54 = strList45.spliterator();
        java.lang.Object[] objArray55 = strList45.toArray();
        boolean boolean56 = strList39.addAll(0, (java.util.Collection<java.lang.String>) strList45);
        boolean boolean57 = strList22.containsAll((java.util.Collection<java.lang.String>) strList45);
        int int58 = strList45.size();
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNotNull(strItor16);
        org.junit.Assert.assertNotNull(strItor17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strStream30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[hi!]");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strStream47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strSpliterator54);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
    }

    @Test
    public void test11735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11735");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.util.List<java.lang.String> strList5 = strTokenizer3.getTokenList();
        boolean boolean6 = strList5.isEmpty();
        java.util.stream.Stream<java.lang.String> strStream7 = strList5.parallelStream();
        strList5.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = strList5.get((int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strStream7);
    }

    @Test
    public void test11736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11736");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        java.lang.Object obj9 = strTokenizer8.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher11, strMatcher12);
        java.lang.String str14 = strTokenizer13.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer13.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer13.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer13.setDelimiterMatcher(strMatcher19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer8.setQuoteMatcher(strMatcher19);
        int int22 = strTokenizer8.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer8.setIgnoredMatcher(strMatcher23);
        java.lang.String str25 = strTokenizer8.previousToken();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str14, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test11737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11737");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        java.util.List<java.lang.String> strList4 = strTokenizer3.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        java.util.List<java.lang.String> strList10 = strTokenizer8.getTokenList();
        java.lang.Object obj11 = null;
        boolean boolean12 = strList10.remove(obj11);
        boolean boolean14 = strList10.add("StrTokenizer[not tokenized yet]");
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.String>) strList10);
        boolean boolean16 = strList4.isEmpty();
        java.lang.String str18 = strList4.get(0);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        java.util.stream.Stream<java.lang.String> strStream23 = strList21.stream();
        boolean boolean24 = strList21.isEmpty();
        char[] charArray25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher26);
        java.lang.String[] strArray28 = strTokenizer27.getTokenArray();
        boolean boolean29 = strList21.equals((java.lang.Object) strArray28);
        java.util.Spliterator<java.lang.String> strSpliterator30 = strList21.spliterator();
        java.util.stream.Stream<java.lang.String> strStream31 = strList21.stream();
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        java.util.stream.Stream<java.lang.String> strStream36 = strList34.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher38, strMatcher39);
        java.lang.String str41 = strTokenizer40.toString();
        java.util.List<java.lang.String> strList42 = strTokenizer40.getTokenList();
        java.lang.Object obj43 = null;
        boolean boolean44 = strList42.remove(obj43);
        boolean boolean45 = strList34.removeAll((java.util.Collection<java.lang.String>) strList42);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher47, strMatcher48);
        java.lang.String str50 = strTokenizer49.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer49.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer51.setDelimiterString("");
        java.lang.Object obj54 = strTokenizer53.clone();
        java.util.List<java.lang.String> strList55 = strTokenizer53.getTokenList();
        boolean boolean56 = strList34.retainAll((java.util.Collection<java.lang.String>) strList55);
        java.util.ListIterator<java.lang.String> strItor57 = strList34.listIterator();
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.util.stream.Stream<java.lang.String> strStream62 = strList60.stream();
        boolean boolean63 = strList60.isEmpty();
        java.lang.Object[] objArray64 = strList60.toArray();
        boolean boolean65 = strList34.addAll((java.util.Collection<java.lang.String>) strList60);
        boolean boolean66 = strList21.removeAll((java.util.Collection<java.lang.String>) strList60);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher68, strMatcher69);
        java.lang.String str71 = strTokenizer70.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer70.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer72.setDelimiterString("");
        java.lang.Object obj75 = strTokenizer74.clone();
        java.util.List<java.lang.String> strList76 = strTokenizer74.getTokenList();
        int int77 = strList76.size();
        java.lang.String[] strArray79 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList80 = new java.util.ArrayList<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList80, strArray79);
        java.util.stream.Stream<java.lang.String> strStream82 = strList80.stream();
        java.lang.Object[] objArray83 = strList80.toArray();
        boolean boolean84 = strList76.removeAll((java.util.Collection<java.lang.String>) strList80);
        java.lang.Object obj85 = null;
        boolean boolean86 = strList80.equals(obj85);
        boolean boolean87 = strList21.retainAll((java.util.Collection<java.lang.String>) strList80);
        java.util.stream.Stream<java.lang.String> strStream88 = strList80.parallelStream();
        boolean boolean89 = strList4.remove((java.lang.Object) strList80);
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator90 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList80.replaceAll(strUnaryOperator90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strStream23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strSpliterator30);
        org.junit.Assert.assertNotNull(strStream31);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strStream36);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str41, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str50, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strItor57);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strStream62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str71, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(strStream82);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(strStream88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test11738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11738");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher2, strMatcher3);
        boolean boolean5 = strTokenizer4.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer4.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer4.setQuoteMatcher(strMatcher10);
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray14);
        int int27 = strMatcher10.isMatch(charArray14, (int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher29, strMatcher30);
        java.lang.String str32 = strTokenizer31.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer31.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer31.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setIgnoreEmptyTokens(false);
        java.lang.String str41 = strTokenizer38.next();
        char[] charArray43 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher45, strMatcher46);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher48, strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer38.setIgnoredMatcher(strMatcher52);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher55, strMatcher56);
        java.lang.String str58 = strTokenizer57.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer57.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer57.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer57.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer62.setQuoteChar('4');
        char[] charArray66 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher68, strMatcher69);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer70.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, strMatcher71, strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer62.reset(charArray66);
        int int81 = strMatcher52.isMatch(charArray66, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher83, strMatcher84);
        boolean boolean86 = strTokenizer85.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer85.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer88.setIgnoredChar(' ');
        java.lang.String str91 = strTokenizer90.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher92 = strTokenizer90.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher52, strMatcher92);
        org.apache.commons.lang3.text.StrMatcher strMatcher94 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = new org.apache.commons.lang3.text.StrTokenizer("#a444 ", strMatcher94);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = strTokenizer95.reset();
        boolean boolean97 = strTokenizer95.hasPrevious();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str32, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str58, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a]");
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "StrTokenizer[hi!]" + "'", str91, "StrTokenizer[hi!]");
        org.junit.Assert.assertNotNull(strMatcher92);
        org.junit.Assert.assertNotNull(strMatcher94);
        org.junit.Assert.assertNotNull(strTokenizer96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test11739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11739");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        java.util.ListIterator<java.lang.String> strItor11 = strList9.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor12 = strList9.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int15 = strList9.indexOf((java.lang.Object) strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray18 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher23, strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer16.setTrimmerMatcher(strMatcher27);
        int int29 = strList9.indexOf((java.lang.Object) strTokenizer28);
        java.lang.String str31 = strList9.remove((int) (short) 0);
        boolean boolean33 = strList9.add("StrTokenizer[a]");
        boolean boolean34 = strList9.isEmpty();
        int int35 = strList9.size();
        char[] charArray37 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher40);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher42, strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer51.setQuoteChar('4');
        int int54 = strList9.lastIndexOf((java.lang.Object) strTokenizer51);
        java.lang.String str55 = strTokenizer51.getContent();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strItor11);
        org.junit.Assert.assertNotNull(strItor12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "a" + "'", str55, "a");
    }

    @Test
    public void test11740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11740");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        int int10 = strList9.size();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.stream.Stream<java.lang.String> strStream15 = strList13.stream();
        java.lang.Object[] objArray16 = strList13.toArray();
        boolean boolean17 = strList9.removeAll((java.util.Collection<java.lang.String>) strList13);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        boolean boolean22 = strTokenizer21.hasPrevious();
        int int23 = strTokenizer21.nextIndex();
        int int24 = strTokenizer21.previousIndex();
        boolean boolean25 = strList9.remove((java.lang.Object) strTokenizer21);
        strList9.clear();
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        boolean boolean31 = strList29.isEmpty();
        strList29.clear();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher34, strMatcher35);
        java.lang.String str37 = strTokenizer36.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setDelimiterString("");
        java.lang.Object obj41 = strTokenizer40.clone();
        java.util.List<java.lang.String> strList42 = strTokenizer40.getTokenList();
        int int43 = strTokenizer40.size();
        java.util.List<java.lang.String> strList44 = strTokenizer40.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int46 = strList44.lastIndexOf((java.lang.Object) strMatcher45);
        boolean boolean47 = strList29.retainAll((java.util.Collection<java.lang.String>) strList44);
        boolean boolean48 = strList9.retainAll((java.util.Collection<java.lang.String>) strList29);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher50, strMatcher51);
        java.lang.String str53 = strTokenizer52.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer52.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer52.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer57.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer59.setIgnoreEmptyTokens(false);
        java.lang.String str62 = strTokenizer59.next();
        char[] charArray64 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher66, strMatcher67);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, strMatcher69, strMatcher70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray64);
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = strTokenizer72.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer59.setIgnoredMatcher(strMatcher73);
        boolean boolean75 = strTokenizer59.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList76 = strTokenizer59.getTokenList();
        boolean boolean77 = strList9.containsAll((java.util.Collection<java.lang.String>) strList76);
        boolean boolean78 = strList76.isEmpty();
        java.util.Iterator<java.lang.String> strItor79 = strList76.iterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher81, strMatcher82);
        java.lang.String str84 = strTokenizer83.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer83.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = strTokenizer83.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer83.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer88.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = strTokenizer90.setIgnoreEmptyTokens(false);
        int int93 = strTokenizer92.size();
        boolean boolean94 = strList76.equals((java.lang.Object) strTokenizer92);
        java.lang.Class<?> wildcardClass95 = strList76.getClass();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str37, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str53, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[a]");
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strItor79);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str84, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(strTokenizer92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test11741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11741");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("", ' ', ' ');
        java.lang.String str4 = strTokenizer3.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setIgnoredChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer3.reset("StrTokenizer[a]");
        java.lang.String str11 = strTokenizer3.next();
        int int12 = strTokenizer3.nextIndex();
        java.lang.String str13 = strTokenizer3.previousToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer3.getTrimmerMatcher();
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "StrTokenizer[]" + "'", str11, "StrTokenizer[]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "StrTokenizer[]" + "'", str13, "StrTokenizer[]");
        org.junit.Assert.assertNotNull(strMatcher14);
    }

    @Test
    public void test11742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11742");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        boolean boolean4 = strTokenizer3.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher10, strMatcher11);
        java.lang.String str13 = strTokenizer12.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer12.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer12.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setIgnoreEmptyTokens(false);
        java.lang.String str22 = strTokenizer19.next();
        char[] charArray24 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher27);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher29, strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray24);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer32.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer19.setIgnoredMatcher(strMatcher33);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher36, strMatcher37);
        java.lang.String str39 = strTokenizer38.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer38.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer38.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.setQuoteChar('4');
        char[] charArray47 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher49, strMatcher50);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher52, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer43.reset(charArray47);
        int int62 = strMatcher33.isMatch(charArray47, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer6.reset(charArray47);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer67.add("StrTokenizer[h]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str13, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str39, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a]");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(strTokenizer67);
    }

    @Test
    public void test11743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11743");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher2, strMatcher3);
        java.lang.String str5 = strTokenizer4.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer4.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer4.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setQuoteChar('4');
        int int12 = strTokenizer11.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer11.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer11.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer11.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("444 ", strMatcher16);
        java.lang.Object obj18 = strTokenizer17.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer17.reset("StrTokenizer[]");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer20.add("a");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str5, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer20);
    }

    @Test
    public void test11744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11744");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        boolean boolean5 = strList2.isEmpty();
        char[] charArray6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher7);
        java.lang.String[] strArray9 = strTokenizer8.getTokenArray();
        boolean boolean10 = strList2.equals((java.lang.Object) strArray9);
        java.util.Spliterator<java.lang.String> strSpliterator11 = strList2.spliterator();
        java.util.stream.Stream<java.lang.String> strStream12 = strList2.stream();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.stream.Stream<java.lang.String> strStream17 = strList15.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        java.lang.String str22 = strTokenizer21.toString();
        java.util.List<java.lang.String> strList23 = strTokenizer21.getTokenList();
        java.lang.Object obj24 = null;
        boolean boolean25 = strList23.remove(obj24);
        boolean boolean26 = strList15.removeAll((java.util.Collection<java.lang.String>) strList23);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher28, strMatcher29);
        java.lang.String str31 = strTokenizer30.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.setDelimiterString("");
        java.lang.Object obj35 = strTokenizer34.clone();
        java.util.List<java.lang.String> strList36 = strTokenizer34.getTokenList();
        boolean boolean37 = strList15.retainAll((java.util.Collection<java.lang.String>) strList36);
        java.util.ListIterator<java.lang.String> strItor38 = strList15.listIterator();
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.stream.Stream<java.lang.String> strStream43 = strList41.stream();
        boolean boolean44 = strList41.isEmpty();
        java.lang.Object[] objArray45 = strList41.toArray();
        boolean boolean46 = strList15.addAll((java.util.Collection<java.lang.String>) strList41);
        boolean boolean47 = strList2.removeAll((java.util.Collection<java.lang.String>) strList41);
        int int48 = strList2.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray51 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher53, strMatcher54);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher56, strMatcher57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray51);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer49.setTrimmerMatcher(strMatcher60);
        boolean boolean62 = strTokenizer49.hasPrevious();
        int int63 = strList2.indexOf((java.lang.Object) strTokenizer49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer49.reset("StrTokenizer[StrTokenizer[StrTokenizer[not tokenized yet]]]");
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strSpliterator11);
        org.junit.Assert.assertNotNull(strStream12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strStream17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str22, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str31, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strItor38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strStream43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[a]");
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer65);
    }

    @Test
    public void test11745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11745");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("", ' ', ' ');
        java.lang.String str4 = strTokenizer3.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setIgnoredChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer3.reset("StrTokenizer[a]");
        boolean boolean11 = strTokenizer10.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", "");
        int int15 = strTokenizer14.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer14.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer10.setDelimiterMatcher(strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("a");
        java.util.List<java.lang.String> strList20 = strTokenizer19.getTokenList();
        boolean boolean21 = strTokenizer19.hasPrevious();
        boolean boolean22 = strTokenizer19.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer19.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer10.setQuoteMatcher(strMatcher23);
        java.lang.String str25 = strTokenizer24.nextToken();
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "StrTokenizer[]" + "'", str25, "StrTokenizer[]");
    }

    @Test
    public void test11746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11746");
        char[] charArray2 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7, strMatcher8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a');
        char[] charArray22 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher25);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher27, strMatcher28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer30.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.setTrimmerMatcher(strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setDelimiterString("StrTokenizer[a]");
        boolean boolean36 = strTokenizer33.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer33.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#a444 ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer33.setQuoteMatcher(strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        boolean boolean43 = strTokenizer42.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray46 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher48, strMatcher49);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer50.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher51, strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray46);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer44.setTrimmerMatcher(strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer42.setQuoteMatcher(strMatcher55);
        char[] charArray59 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher61, strMatcher62);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer63.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, strMatcher64, strMatcher65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray59);
        int int75 = strMatcher55.isMatch(charArray59, 10, 0, (int) (short) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, "StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, "a");
        int int81 = strMatcher39.isMatch(charArray59, (int) '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer20.setIgnoredMatcher(strMatcher82);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[", strMatcher82);
        char[] charArray85 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray85, 'a', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer88.setIgnoreEmptyTokens(true);
        boolean boolean91 = strTokenizer90.hasPrevious();
        java.lang.Object obj92 = strTokenizer90.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher93 = strTokenizer90.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = strTokenizer84.setIgnoredMatcher(strMatcher93);
        boolean boolean95 = strTokenizer84.isIgnoreEmptyTokens();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a]");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a]");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[a]");
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher93);
        org.junit.Assert.assertNotNull(strTokenizer94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test11747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11747");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.reset("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setDelimiterString("hi!");
        int int6 = strTokenizer5.nextIndex();
        boolean boolean7 = strTokenizer5.hasPrevious();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test11748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11748");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer9.reset();
        char[] charArray11 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer9.reset(charArray11);
        boolean boolean13 = strTokenizer12.hasPrevious();
        java.lang.String str14 = strTokenizer12.previousToken();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = strTokenizer12.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test11749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11749");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        java.util.List<java.lang.String> strList4 = strTokenizer3.getTokenList();
        java.lang.String str5 = strTokenizer3.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer3.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer3.setDelimiterString("StrTokenizer[StrTokenizer[]");
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer9);
    }

    @Test
    public void test11750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11750");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer3.setDelimiterMatcher(strMatcher9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setIgnoredChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer12.setDelimiterString("StrTokenizer[hi!]");
        char[] charArray18 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher23, strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer12.setDelimiterMatcher(strMatcher31);
        java.lang.String str33 = strTokenizer12.next();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
    }

    @Test
    public void test11751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11751");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        java.lang.Object obj9 = strTokenizer8.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer8.setDelimiterChar('a');
        boolean boolean12 = strTokenizer8.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer8.setIgnoredMatcher(strMatcher15);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        char[] charArray19 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher21, strMatcher22);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher24, strMatcher25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, '#', '#');
        int int37 = strMatcher17.isMatch(charArray19, 10, (int) 'a', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, 'a', '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher44, strMatcher45);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer46.getTrimmerMatcher();
        char[] charArray49 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher51, strMatcher52);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = strTokenizer53.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher54, strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher47, strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer58.setIgnoreEmptyTokens(true);
        int int61 = strTokenizer58.previousIndex();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a]");
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
    }

    @Test
    public void test11752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11752");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer3.setDelimiterMatcher(strMatcher9);
        int int11 = strTokenizer10.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer10.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer13.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer13.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("#a444 ");
        char[] charArray21 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher23, strMatcher24);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer25.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher26, strMatcher27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray21);
        char[] charArray34 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher36, strMatcher37);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher39, strMatcher40);
        char[] charArray43 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher45, strMatcher46);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher48, strMatcher49);
        int int54 = strMatcher39.isMatch(charArray43, 1, 1, (int) ' ');
        char[] charArray55 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher56);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer57.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher39, strMatcher58);
        char[] charArray61 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher63, strMatcher64);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer65.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, strMatcher66, strMatcher67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray61);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher70);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray21);
        int int76 = strMatcher19.isMatch(charArray21, (int) (short) 0, (int) ' ', (int) (byte) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer17.reset(charArray21);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[a]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[a]");
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strTokenizer78);
    }

    @Test
    public void test11753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11753");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.util.List<java.lang.String> strList5 = strTokenizer3.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher10, strMatcher11);
        java.lang.String str13 = strTokenizer12.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer12.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer12.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setIgnoreEmptyTokens(false);
        java.lang.String str22 = strTokenizer19.next();
        char[] charArray24 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher27);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher29, strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray24);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer32.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer19.setIgnoredMatcher(strMatcher33);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer3.setTrimmerMatcher(strMatcher33);
        char[] charArray38 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray38);
        char[] charArray41 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher43, strMatcher44);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer45.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher46, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, "a");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer39.reset(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, 'a');
        int int60 = strMatcher33.isMatch(charArray41, 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, "StrTokenizer[not");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer64.setEmptyTokenAsNull(true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str13, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a]");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strTokenizer66);
    }

    @Test
    public void test11754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11754");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[a]");
        java.lang.String str2 = strTokenizer1.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        java.lang.String str7 = strTokenizer6.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer6.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer6.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setIgnoreEmptyTokens(false);
        java.lang.String str16 = strTokenizer13.next();
        char[] charArray18 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher23, strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer13.setIgnoredMatcher(strMatcher27);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher30, strMatcher31);
        java.lang.String str33 = strTokenizer32.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer32.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer32.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setQuoteChar('4');
        char[] charArray41 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher43, strMatcher44);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer45.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher46, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer37.reset(charArray41);
        int int56 = strMatcher27.isMatch(charArray41, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer1.reset(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer59.setIgnoreEmptyTokens(false);
        boolean boolean62 = strTokenizer59.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer59.add("StrTokenizer[StrTokenizer[not tokenized yet]]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "StrTokenizer[a]" + "'", str2, "StrTokenizer[a]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str7, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str33, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a]");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test11755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11755");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher2, strMatcher3);
        java.lang.String str5 = strTokenizer4.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer4.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer4.setEmptyTokenAsNull(false);
        java.lang.Object obj10 = strTokenizer9.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer9.setDelimiterChar('a');
        boolean boolean13 = strTokenizer9.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer9.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer9.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        boolean boolean19 = strTokenizer18.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray22 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher25);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher27, strMatcher28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray22);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer30.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer20.setTrimmerMatcher(strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer18.setQuoteMatcher(strMatcher31);
        java.lang.String str34 = strTokenizer33.previousToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("444 ", strMatcher16, strMatcher35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setEmptyTokenAsNull(false);
        boolean boolean39 = strTokenizer38.hasNext();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str5, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test11756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11756");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.util.List<java.lang.String> strList5 = strTokenizer3.getTokenList();
        java.lang.String[] strArray8 = new java.lang.String[] { "", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        boolean boolean15 = strTokenizer14.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer14.setIgnoredChar('4');
        int int18 = strTokenizer17.nextIndex();
        boolean boolean19 = strList9.equals((java.lang.Object) int18);
        int int20 = strList9.size();
        boolean boolean21 = strList5.containsAll((java.util.Collection<java.lang.String>) strList9);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher23, strMatcher24);
        java.lang.String str26 = strTokenizer25.toString();
        java.util.List<java.lang.String> strList27 = strTokenizer25.getTokenList();
        java.lang.Object obj28 = null;
        boolean boolean29 = strList27.remove(obj28);
        strList27.clear();
        boolean boolean31 = strList9.removeAll((java.util.Collection<java.lang.String>) strList27);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher34, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getTrimmerMatcher();
        char[] charArray39 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher41, strMatcher42);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer43.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher44, strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher37, strMatcher45);
        java.util.List<java.lang.String> strList48 = strTokenizer47.getTokenList();
        java.util.stream.Stream<java.lang.String> strStream49 = strList48.stream();
        int int50 = strList9.lastIndexOf((java.lang.Object) strList48);
        boolean boolean52 = strList48.add("StrTokenizer[StrTokenizer[StrTokenizer[not tokenized yet]]]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str26, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(strStream49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test11757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11757");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        boolean boolean9 = strTokenizer3.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer3.setTrimmerMatcher(strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer3.setIgnoredChar(' ');
        java.lang.String str17 = strTokenizer16.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer16.setEmptyTokenAsNull(false);
        boolean boolean20 = strTokenizer16.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer16.setDelimiterChar('#');
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strTokenizer22);
    }

    @Test
    public void test11758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11758");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        java.util.List<java.lang.String> strList4 = strTokenizer3.getTokenList();
        strList4.clear();
        strList4.clear();
        java.lang.Cloneable[] cloneableArray7 = new java.lang.Cloneable[] {};
        java.lang.Cloneable[] cloneableArray8 = strList4.toArray(cloneableArray7);
        java.lang.Object[] objArray9 = strList4.toArray();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.stream.Stream<java.lang.String> strStream14 = strList12.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        java.lang.String str19 = strTokenizer18.toString();
        java.util.List<java.lang.String> strList20 = strTokenizer18.getTokenList();
        java.lang.Object obj21 = null;
        boolean boolean22 = strList20.remove(obj21);
        boolean boolean23 = strList12.removeAll((java.util.Collection<java.lang.String>) strList20);
        java.util.Spliterator<java.lang.String> strSpliterator24 = strList12.spliterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        boolean boolean29 = strList27.isEmpty();
        java.lang.Object[] objArray30 = strList27.toArray();
        java.lang.Object[] objArray31 = strList12.toArray(objArray30);
        int int32 = strList4.indexOf((java.lang.Object) strList12);
        java.lang.Object[] objArray33 = strList4.toArray();
        // The following exception was thrown during execution in test generation
        try {
            strList4.add(1, "h");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(cloneableArray7);
        org.junit.Assert.assertNotNull(cloneableArray8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strStream14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str19, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strSpliterator24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[null]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[null]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
    }

    @Test
    public void test11759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11759");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getQuoteMatcher();
        java.lang.String str10 = strTokenizer8.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer8.setEmptyTokenAsNull(false);
        int int13 = strTokenizer12.size();
        char[] charArray15 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray15);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getQuoteMatcher();
        char[] charArray19 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher21, strMatcher22);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher24, strMatcher25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray19);
        boolean boolean29 = strTokenizer28.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer28.getQuoteMatcher();
        java.lang.String str31 = strTokenizer28.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher34);
        java.lang.String str36 = strTokenizer35.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer35.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer35.setEmptyTokenAsNull(false);
        java.lang.String str41 = strTokenizer35.nextToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer35.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer28.setIgnoredMatcher(strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[, ]", strMatcher17, strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer12.setDelimiterMatcher(strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.setEmptyTokenAsNull(true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "a" + "'", str31, "a");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str36, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strTokenizer47);
    }

    @Test
    public void test11760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11760");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        boolean boolean15 = strTokenizer14.hasNext();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test11761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11761");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("", ' ', ' ');
        java.lang.String str5 = strTokenizer4.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer4.setIgnoredChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer4.setQuoteChar('#');
        boolean boolean10 = strTokenizer4.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer4.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        char[] charArray18 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher23, strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer15.reset(charArray18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, 'a', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("hi!");
        char[] charArray39 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher41, strMatcher42);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer43.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher44, strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, "StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray39);
        int int54 = strTokenizer53.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer53.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher37, strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher11, strMatcher55);
        char[] charArray59 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher61, strMatcher62);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer63.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, strMatcher64, strMatcher65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, "a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, strMatcher75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray59);
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, "   ");
        int int88 = strMatcher55.isMatch(charArray59, (int) (short) 10);
        java.lang.Class<?> wildcardClass89 = charArray59.getClass();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[a]");
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test11762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11762");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer(charArray0);
        char[] charArray3 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher5, strMatcher6);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer7.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, strMatcher8, strMatcher9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, "a");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer1.reset(charArray3);
        java.lang.String[] strArray19 = strTokenizer18.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer18.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.setDelimiterChar(' ');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer21.add("#a444");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[a]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer23);
    }

    @Test
    public void test11763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11763");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        java.util.ListIterator<java.lang.String> strItor11 = strList9.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor12 = strList9.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int15 = strList9.indexOf((java.lang.Object) strMatcher14);
        java.util.ListIterator<java.lang.String> strItor17 = strList9.listIterator(1);
        java.lang.String str20 = strList9.set((int) (byte) 0, "StrTokenizer[, ]");
        java.util.stream.Stream<java.lang.String> strStream21 = strList9.parallelStream();
        java.util.ListIterator<java.lang.String> strItor23 = strList9.listIterator((int) (byte) 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strItor11);
        org.junit.Assert.assertNotNull(strItor12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strItor17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(strStream21);
        org.junit.Assert.assertNotNull(strItor23);
    }

    @Test
    public void test11764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11764");
        char[] charArray4 = new char[] { 'a', ' ', ' ', ' ' };
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer8.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer8.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setQuoteChar('4');
        char[] charArray17 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher22, strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer13.reset(charArray17);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a', '#');
        char[] charArray35 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher37, strMatcher38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer39.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher40, strMatcher41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray35);
        boolean boolean45 = strTokenizer44.hasPrevious();
        java.lang.String str46 = strTokenizer44.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer44.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer44.reset("a");
        boolean boolean51 = strTokenizer44.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer44.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, strMatcher52);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "a   ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "a   ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[a,  ,  ,  ]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a]");
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strMatcher52);
    }

    @Test
    public void test11765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11765");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, 'a', '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer3.getDelimiterMatcher();
        int int5 = strTokenizer3.size();
        int int6 = strTokenizer3.nextIndex();
        boolean boolean7 = strTokenizer3.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test11766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11766");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer7.setIgnoredChar('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer7.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer7.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setIgnoreEmptyTokens(false);
        java.lang.Object obj15 = strTokenizer12.clone();
        int int16 = strTokenizer12.previousIndex();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test11767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11767");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer3.setDelimiterMatcher(strMatcher9);
        int int11 = strTokenizer10.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer10.setQuoteChar(' ');
        boolean boolean14 = strTokenizer10.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer10.setDelimiterChar('a');
        boolean boolean17 = strTokenizer10.hasPrevious();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test11768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11768");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setDelimiterString("");
        java.lang.Object obj13 = strTokenizer12.clone();
        java.util.List<java.lang.String> strList14 = strTokenizer12.getTokenList();
        java.util.ListIterator<java.lang.String> strItor16 = strList14.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor17 = strList14.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int20 = strList14.indexOf((java.lang.Object) strMatcher19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer3.setDelimiterMatcher(strMatcher19);
        java.lang.String str22 = strTokenizer3.toString();
        java.lang.Object obj23 = strTokenizer3.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer3.reset("");
        boolean boolean26 = strTokenizer3.hasPrevious();
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNotNull(strItor16);
        org.junit.Assert.assertNotNull(strItor17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str22, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test11769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11769");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer7.setIgnoredChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer9.setQuoteChar('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        java.lang.String str19 = strTokenizer18.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setDelimiterString("");
        java.lang.Object obj23 = strTokenizer22.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        boolean boolean28 = strTokenizer27.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer27.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer22.setDelimiterMatcher(strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer9.setQuoteMatcher(strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setIgnoreEmptyTokens(true);
        int int37 = strTokenizer36.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer36.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer36.getTrimmerMatcher();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str19, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher39);
    }

    @Test
    public void test11770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11770");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoreEmptyTokens(false);
        java.lang.String str13 = strTokenizer10.next();
        boolean boolean14 = strTokenizer10.hasPrevious();
        java.util.List<java.lang.String> strList15 = strTokenizer10.getTokenList();
        char[] charArray17 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher22, strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray17);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher36, strMatcher37);
        java.lang.String str39 = strTokenizer38.toString();
        java.util.List<java.lang.String> strList40 = strTokenizer38.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer38.setDelimiterString("a");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, 'a');
        boolean boolean47 = strList15.contains((java.lang.Object) charArray17);
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.stream.Stream<java.lang.String> strStream52 = strList50.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher54, strMatcher55);
        java.lang.String str57 = strTokenizer56.toString();
        java.util.List<java.lang.String> strList58 = strTokenizer56.getTokenList();
        java.lang.Object obj59 = null;
        boolean boolean60 = strList58.remove(obj59);
        boolean boolean61 = strList50.removeAll((java.util.Collection<java.lang.String>) strList58);
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher63, strMatcher64);
        java.lang.String str66 = strTokenizer65.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer65.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer67.setDelimiterString("");
        java.lang.Object obj70 = strTokenizer69.clone();
        java.util.List<java.lang.String> strList71 = strTokenizer69.getTokenList();
        boolean boolean72 = strList50.retainAll((java.util.Collection<java.lang.String>) strList71);
        boolean boolean74 = strList71.add("a");
        java.lang.Object[] objArray75 = strList71.toArray();
        boolean boolean77 = strList71.add("#a444 ");
        java.util.Spliterator<java.lang.String> strSpliterator78 = strList71.spliterator();
        strList71.add((int) (byte) 1, "StrTokenizer[StrTokenizer[not tokenized yet]]");
        boolean boolean83 = strList71.add("StrTokenizer[");
        boolean boolean84 = strList15.addAll((java.util.Collection<java.lang.String>) strList71);
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator85 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList15.replaceAll(strUnaryOperator85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str39, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strStream52);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str57, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str66, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[hi!, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[hi!, a]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strSpliterator78);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test11771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11771");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        char[] charArray23 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28, strMatcher29);
        int int34 = strMatcher19.isMatch(charArray23, 1, 1, (int) ' ');
        char[] charArray35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher19, strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        char[] charArray45 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher47, strMatcher48);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer49.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, strMatcher50, strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer60.setQuoteChar('#');
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a]");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strTokenizer62);
    }

    @Test
    public void test11772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11772");
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!", "a", "a", "a" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        int int7 = strList5.size();
        int int8 = strList5.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("a");
        java.util.List<java.lang.String> strList11 = strTokenizer10.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        java.lang.String str16 = strTokenizer15.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer15.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer15.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.setIgnoreEmptyTokens(false);
        int int25 = strList11.indexOf((java.lang.Object) strTokenizer22);
        strList11.clear();
        char[] charArray27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher28);
        int int30 = strTokenizer29.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.reset();
        java.lang.String str32 = strTokenizer29.nextToken();
        boolean boolean33 = strList11.remove((java.lang.Object) str32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.reset("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strList11.equals((java.lang.Object) "hi!");
        int int41 = strList5.indexOf((java.lang.Object) boolean40);
        strList5.clear();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 4 + "'", int8 == 4);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str16, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
    }

    @Test
    public void test11773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11773");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoreEmptyTokens(false);
        int int13 = strTokenizer10.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer10.setDelimiterChar('a');
        char[] charArray17 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher22, strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer10.reset(charArray17);
        boolean boolean35 = strTokenizer10.hasPrevious();
        int int36 = strTokenizer10.nextIndex();
        boolean boolean37 = strTokenizer10.hasPrevious();
        java.lang.String str38 = strTokenizer10.toString();
        java.lang.String str39 = strTokenizer10.toString();
        boolean boolean40 = strTokenizer10.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer10.setIgnoredChar('a');
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "StrTokenizer[, ]" + "'", str38, "StrTokenizer[, ]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "StrTokenizer[, ]" + "'", str39, "StrTokenizer[, ]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strTokenizer42);
    }

    @Test
    public void test11774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11774");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer3.getDelimiterMatcher();
        char[] charArray6 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher8, strMatcher9);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer10.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher11, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray6);
        char[] charArray19 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher21, strMatcher22);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher24, strMatcher25);
        char[] charArray28 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher30, strMatcher31);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer32.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher33, strMatcher34);
        int int39 = strMatcher24.isMatch(charArray28, 1, 1, (int) ' ');
        char[] charArray40 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher24, strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray6);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer3.reset(charArray6);
        char[] charArray51 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher53, strMatcher54);
        java.lang.String str56 = strTokenizer55.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer55.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer57.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer59.setIgnoredChar('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer59.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, strMatcher62, strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher63);
        char[] charArray67 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher69, strMatcher70);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer71.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, strMatcher72, strMatcher73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, "a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, strMatcher83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray67);
        // The following exception was thrown during execution in test generation
        try {
            int int90 = strMatcher63.isMatch(charArray67, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str56, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a]");
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strTokenizer88);
    }

    @Test
    public void test11775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11775");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        java.lang.Object obj9 = strTokenizer8.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer8.setQuoteChar('#');
        java.lang.String str12 = strTokenizer8.nextToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer8.setQuoteMatcher(strMatcher13);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer14.setDelimiterString("StrTokenizer[StrTokenizer[not tokenized yet]]");
        boolean boolean18 = strTokenizer14.hasPrevious();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test11776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11776");
        char[] charArray2 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7, strMatcher8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        boolean boolean13 = strTokenizer12.hasNext();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        boolean boolean18 = strList16.isEmpty();
        java.lang.Object[] objArray19 = strList16.toArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher21, strMatcher22);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getTrimmerMatcher();
        char[] charArray26 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher28, strMatcher29);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer30.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher31, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, "a");
        int int41 = strMatcher24.isMatch(charArray26, (int) (byte) 0);
        boolean boolean42 = strList16.contains((java.lang.Object) strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer12.setDelimiterMatcher(strMatcher24);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer43.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        boolean boolean47 = strTokenizer46.hasNext();
        java.lang.Object obj48 = strTokenizer46.clone();
        int int49 = strTokenizer46.previousIndex();
        boolean boolean50 = strTokenizer46.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer46.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher44, strMatcher51);
        boolean boolean53 = strTokenizer52.hasNext();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a]");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[hi!]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a]");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test11777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11777");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        java.util.List<java.lang.String> strList10 = strTokenizer8.getTokenList();
        java.lang.Object obj11 = null;
        boolean boolean12 = strList10.remove(obj11);
        boolean boolean13 = strList2.removeAll((java.util.Collection<java.lang.String>) strList10);
        java.util.Spliterator<java.lang.String> strSpliterator14 = strList2.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        java.lang.String str19 = strTokenizer18.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer18.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer18.setEmptyTokenAsNull(false);
        java.util.List<java.lang.String> strList24 = strTokenizer23.getTokenList();
        boolean boolean25 = strList2.remove((java.lang.Object) strList24);
        java.util.Iterator<java.lang.String> strItor26 = strList24.iterator();
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.stream.Stream<java.lang.String> strStream31 = strList29.stream();
        boolean boolean32 = strList29.isEmpty();
        char[] charArray33 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher34);
        java.lang.String[] strArray36 = strTokenizer35.getTokenArray();
        boolean boolean37 = strList29.equals((java.lang.Object) strArray36);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher40);
        java.lang.String str42 = strTokenizer41.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.setDelimiterString("");
        java.lang.Object obj46 = strTokenizer45.clone();
        java.util.List<java.lang.String> strList47 = strTokenizer45.getTokenList();
        java.util.ListIterator<java.lang.String> strItor49 = strList47.listIterator((int) (short) 0);
        boolean boolean50 = strList29.removeAll((java.util.Collection<java.lang.String>) strList47);
        boolean boolean51 = strList24.addAll((java.util.Collection<java.lang.String>) strList29);
        java.util.stream.Stream<java.lang.String> strStream52 = strList24.stream();
        boolean boolean54 = strList24.add("StrTokenizer[StrTokenizer[not tokenized yet]]");
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strSpliterator14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str19, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strItor26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strStream31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str42, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNotNull(strItor49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strStream52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test11778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11778");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher2, strMatcher3);
        boolean boolean5 = strTokenizer4.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer4.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer4.setQuoteMatcher(strMatcher10);
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray14);
        int int27 = strMatcher10.isMatch(charArray14, (int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher29, strMatcher30);
        java.lang.String str32 = strTokenizer31.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer31.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer31.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setIgnoreEmptyTokens(false);
        java.lang.String str41 = strTokenizer38.next();
        char[] charArray43 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher45, strMatcher46);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher48, strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer38.setIgnoredMatcher(strMatcher52);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher55, strMatcher56);
        java.lang.String str58 = strTokenizer57.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer57.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer57.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer57.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer62.setQuoteChar('4');
        char[] charArray66 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher68, strMatcher69);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer70.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, strMatcher71, strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer62.reset(charArray66);
        int int81 = strMatcher52.isMatch(charArray66, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher83, strMatcher84);
        boolean boolean86 = strTokenizer85.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer85.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer88.setIgnoredChar(' ');
        java.lang.String str91 = strTokenizer90.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher92 = strTokenizer90.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher52, strMatcher92);
        org.apache.commons.lang3.text.StrMatcher strMatcher94 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = new org.apache.commons.lang3.text.StrTokenizer("#a444 ", strMatcher94);
        org.apache.commons.lang3.text.StrMatcher strMatcher96 = strTokenizer95.getIgnoredMatcher();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str97 = strTokenizer95.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str32, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str58, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a]");
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "StrTokenizer[hi!]" + "'", str91, "StrTokenizer[hi!]");
        org.junit.Assert.assertNotNull(strMatcher92);
        org.junit.Assert.assertNotNull(strMatcher94);
        org.junit.Assert.assertNotNull(strMatcher96);
    }

    @Test
    public void test11779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11779");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        char[] charArray23 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28, strMatcher29);
        int int34 = strMatcher19.isMatch(charArray23, 1, 1, (int) ' ');
        char[] charArray35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher19, strMatcher38);
        int int40 = strTokenizer39.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer39.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer39.reset("");
        java.util.List<java.lang.String> strList45 = strTokenizer39.getTokenList();
        java.lang.String str46 = strTokenizer39.getContent();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
    }

    @Test
    public void test11780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11780");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        int int10 = strList9.size();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.stream.Stream<java.lang.String> strStream15 = strList13.stream();
        java.lang.Object[] objArray16 = strList13.toArray();
        boolean boolean17 = strList9.removeAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.String[] strArray20 = new java.lang.String[] { "", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher25);
        boolean boolean27 = strTokenizer26.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setIgnoredChar('4');
        int int30 = strTokenizer29.nextIndex();
        boolean boolean31 = strList21.equals((java.lang.Object) int30);
        int int32 = strList21.size();
        boolean boolean33 = strList9.retainAll((java.util.Collection<java.lang.String>) strList21);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.stream.Stream<java.lang.String> strStream38 = strList36.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher40, strMatcher41);
        java.lang.String str43 = strTokenizer42.toString();
        java.util.List<java.lang.String> strList44 = strTokenizer42.getTokenList();
        java.lang.Object obj45 = null;
        boolean boolean46 = strList44.remove(obj45);
        boolean boolean47 = strList36.removeAll((java.util.Collection<java.lang.String>) strList44);
        java.util.Spliterator<java.lang.String> strSpliterator48 = strList36.spliterator();
        boolean boolean49 = strList21.remove((java.lang.Object) strList36);
        java.util.Spliterator<java.lang.String> strSpliterator50 = strList36.spliterator();
        java.util.Spliterator<java.lang.String> strSpliterator51 = strList36.spliterator();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strStream38);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str43, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strSpliterator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strSpliterator50);
        org.junit.Assert.assertNotNull(strSpliterator51);
    }

    @Test
    public void test11781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11781");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.lang.Object obj5 = strTokenizer3.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer3.setQuoteChar('#');
        java.lang.String[] strArray8 = strTokenizer7.getTokenArray();
        boolean boolean9 = strTokenizer7.hasNext();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test11782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11782");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset("hi!");
        java.util.List<java.lang.String> strList6 = strTokenizer3.getTokenList();
        char[] charArray8 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher10, strMatcher11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer12.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher13, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, '#', '#');
        int int23 = strList6.lastIndexOf((java.lang.Object) strTokenizer22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer22.reset("StrTokenizer[a]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer25.reset("StrTokenizer[not tokenized yet]");
        boolean boolean28 = strTokenizer27.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer27.setIgnoredChar('a');
        java.lang.String[] strArray31 = strTokenizer30.getTokenArray();
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a]");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strArray31);
    }

    @Test
    public void test11783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11783");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher2, strMatcher3);
        java.lang.String str5 = strTokenizer4.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer4.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer4.setEmptyTokenAsNull(false);
        java.lang.Object obj10 = strTokenizer9.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        java.lang.String str15 = strTokenizer14.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer14.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer14.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer14.setDelimiterMatcher(strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer9.setQuoteMatcher(strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer9.getIgnoredMatcher();
        char[] charArray25 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher30, strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer33.reset();
        int int35 = strTokenizer33.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer33.setQuoteMatcher(strMatcher37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.reset("StrTokenizer[hi!]");
        int int41 = strTokenizer40.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher44, strMatcher45);
        java.lang.String str47 = strTokenizer46.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer46.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer46.setEmptyTokenAsNull(false);
        java.lang.Object obj52 = strTokenizer51.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher54, strMatcher55);
        java.lang.String str57 = strTokenizer56.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer56.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer56.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer56.setDelimiterMatcher(strMatcher62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer51.setQuoteMatcher(strMatcher62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer64.setIgnoredChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer64.setDelimiterChar('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getIgnoredMatcher();
        char[] charArray71 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher73, strMatcher74);
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = strTokenizer75.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray71, strMatcher76, strMatcher77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray71, '#');
        java.lang.String str82 = strTokenizer81.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = strTokenizer81.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer("a", strMatcher69, strMatcher83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer40.setIgnoredMatcher(strMatcher83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer("a", strMatcher23, strMatcher83);
        java.util.List<java.lang.String> strList87 = strTokenizer86.getTokenList();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str5, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str15, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str47, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str57, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[a]");
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str82, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNotNull(strList87);
    }

    @Test
    public void test11784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11784");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        char[] charArray23 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28, strMatcher29);
        int int34 = strMatcher19.isMatch(charArray23, 1, 1, (int) ' ');
        char[] charArray35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher19, strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "StrTokenizer[hi!]");
        char[] charArray48 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher50, strMatcher51);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer52.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, strMatcher53, strMatcher54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer60.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer46.setIgnoredMatcher(strMatcher61);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strTokenizer62);
    }

    @Test
    public void test11785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11785");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '#');
        char[] charArray26 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher28, strMatcher29);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer30.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher31, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        boolean boolean36 = strTokenizer35.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher38, strMatcher39);
        java.lang.String str41 = strTokenizer40.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer40.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer40.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer47.setIgnoreEmptyTokens(false);
        java.lang.String str50 = strTokenizer47.next();
        char[] charArray52 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher54, strMatcher55);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer56.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher57, strMatcher58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray52);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer60.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer47.setIgnoredMatcher(strMatcher61);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher64, strMatcher65);
        java.lang.String str67 = strTokenizer66.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer66.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer66.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer66.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer71.setQuoteChar('4');
        char[] charArray75 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher77, strMatcher78);
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = strTokenizer79.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, strMatcher80, strMatcher81);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer71.reset(charArray75);
        int int90 = strMatcher61.isMatch(charArray75, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer35.setQuoteMatcher(strMatcher61);
        org.apache.commons.lang3.text.StrMatcher strMatcher92 = strTokenizer35.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher92);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = strTokenizer23.setDelimiterMatcher(strMatcher92);
        boolean boolean95 = strTokenizer94.hasPrevious();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a]");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str41, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str67, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[a]");
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertNotNull(strMatcher92);
        org.junit.Assert.assertNotNull(strTokenizer94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test11786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11786");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher7);
        boolean boolean9 = strList2.remove((java.lang.Object) strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[hi!]", '4');
        int int13 = strList2.lastIndexOf((java.lang.Object) '4');
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.stream.Stream<java.lang.String> strStream18 = strList16.stream();
        boolean boolean19 = strList16.isEmpty();
        java.lang.Object[] objArray20 = strList16.toArray();
        java.lang.String[] strArray26 = new java.lang.String[] { "StrTokenizer[not tokenized yet]", "hi!", "", "StrTokenizer[not tokenized yet]", "hi!" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        boolean boolean29 = strList16.removeAll((java.util.Collection<java.lang.String>) strList27);
        java.util.stream.Stream<java.lang.String> strStream30 = strList27.parallelStream();
        boolean boolean31 = strList2.removeAll((java.util.Collection<java.lang.String>) strList27);
        java.util.List<java.lang.String> strList34 = strList27.subList(1, 4);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.stream.Stream<java.lang.String> strStream39 = strList37.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher41, strMatcher42);
        java.lang.String str44 = strTokenizer43.toString();
        java.util.List<java.lang.String> strList45 = strTokenizer43.getTokenList();
        java.lang.Object obj46 = null;
        boolean boolean47 = strList45.remove(obj46);
        boolean boolean48 = strList37.removeAll((java.util.Collection<java.lang.String>) strList45);
        java.util.Spliterator<java.lang.String> strSpliterator49 = strList37.spliterator();
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        boolean boolean54 = strList52.isEmpty();
        java.lang.Object[] objArray55 = strList52.toArray();
        java.lang.Object[] objArray56 = strList37.toArray(objArray55);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher58, strMatcher59);
        java.lang.String str61 = strTokenizer60.toString();
        java.util.List<java.lang.String> strList62 = strTokenizer60.getTokenList();
        java.lang.Object obj63 = null;
        boolean boolean64 = strList62.remove(obj63);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher67);
        boolean boolean69 = strList62.contains((java.lang.Object) "");
        java.util.ListIterator<java.lang.String> strItor71 = strList62.listIterator(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher73, strMatcher74);
        java.lang.String str76 = strTokenizer75.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer75.reset();
        int int78 = strList62.indexOf((java.lang.Object) strTokenizer77);
        boolean boolean79 = strList37.addAll((java.util.Collection<java.lang.String>) strList62);
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher81, strMatcher82);
        java.lang.String str84 = strTokenizer83.toString();
        java.util.List<java.lang.String> strList85 = strTokenizer83.getTokenList();
        boolean boolean86 = strList85.isEmpty();
        boolean boolean87 = strList85.isEmpty();
        int int88 = strList85.size();
        boolean boolean89 = strList37.containsAll((java.util.Collection<java.lang.String>) strList85);
        boolean boolean90 = strList34.containsAll((java.util.Collection<java.lang.String>) strList37);
        boolean boolean92 = strList37.add("StrTokenizer[StrTokenizer[StrTokenizer[hi!]]]");
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strStream18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[hi!]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strStream30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strStream39);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str44, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strSpliterator49);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[null]");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[null]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str61, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strItor71);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str76, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str84, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test11787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11787");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer(charArray0);
        char[] charArray3 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher5, strMatcher6);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer7.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, strMatcher8, strMatcher9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, "a");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer1.reset(charArray3);
        char[] charArray19 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.reset(charArray19);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher23, strMatcher24);
        java.lang.String str26 = strTokenizer25.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer25.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer25.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer25.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.setQuoteChar('4');
        int int33 = strTokenizer32.previousIndex();
        boolean boolean34 = strTokenizer32.isEmptyTokenAsNull();
        java.lang.Object obj35 = strTokenizer32.clone();
        char[] charArray37 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher40);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher42, strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer32.reset(charArray37);
        int int50 = strMatcher21.isMatch(charArray37, (int) '4', (int) '4', (int) '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray37);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray37);
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[a]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str26, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(strMatcher52);
    }

    @Test
    public void test11788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11788");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        char[] charArray10 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher15, strMatcher16);
        int int21 = strMatcher6.isMatch(charArray10, 1, 1, (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher25);
        java.lang.String str27 = strTokenizer26.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer26.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.setIgnoredChar(' ');
        int int33 = strTokenizer32.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer32.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher36, strMatcher37);
        java.lang.String str39 = strTokenizer38.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer38.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer38.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.setIgnoreEmptyTokens(false);
        java.lang.String str48 = strTokenizer45.next();
        char[] charArray50 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher52, strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher55, strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray50);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer58.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer45.setIgnoredMatcher(strMatcher59);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher62, strMatcher63);
        java.lang.String str65 = strTokenizer64.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer64.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer64.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer64.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer69.setQuoteChar('4');
        char[] charArray73 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher75, strMatcher76);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = strTokenizer77.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, strMatcher78, strMatcher79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = strTokenizer69.reset(charArray73);
        int int88 = strMatcher59.isMatch(charArray73, (-1), 0, (int) '#');
        int int90 = strMatcher34.isMatch(charArray73, (int) (byte) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, "StrTokenizer[a]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, "#a444 ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, '4');
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str27, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str39, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a]");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str65, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[a]");
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
    }

    @Test
    public void test11789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11789");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        boolean boolean9 = strTokenizer3.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer3.setTrimmerMatcher(strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer3.setIgnoredChar(' ');
        java.lang.Object obj17 = strTokenizer3.clone();
        char[] charArray19 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher21, strMatcher22);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher24, strMatcher25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer3.setDelimiterMatcher(strMatcher30);
        java.lang.String str32 = strTokenizer3.toString();
        char[] charArray34 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher36, strMatcher37);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher39, strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, '4', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray34);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer3.setIgnoredMatcher(strMatcher56);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "StrTokenizer[hi!]" + "'", str32, "StrTokenizer[hi!]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[a]");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer57);
    }

    @Test
    public void test11790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11790");
        char[] charArray4 = new char[] { 'a', ' ', ' ', ' ' };
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer8.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer8.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setQuoteChar('4');
        char[] charArray17 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher22, strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer13.reset(charArray17);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a', '#');
        boolean boolean34 = strTokenizer33.hasPrevious();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "a   ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "a   ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[a,  ,  ,  ]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test11791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11791");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        char[] charArray23 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28, strMatcher29);
        int int34 = strMatcher19.isMatch(charArray23, 1, 1, (int) ' ');
        char[] charArray35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher19, strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer45);
    }

    @Test
    public void test11792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11792");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "#a444");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, 'a', '4');
        java.lang.String str20 = strTokenizer19.nextToken();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test11793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11793");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        boolean boolean4 = strTokenizer3.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer3.setQuoteMatcher(strMatcher9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer13.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer14.reset();
        java.lang.String[] strArray16 = strTokenizer14.getTokenArray();
        int int17 = strTokenizer14.previousIndex();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test11794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11794");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        java.lang.Object[] objArray5 = strList2.toArray();
        java.lang.Object[] objArray6 = strList2.toArray();
        java.util.Iterator<java.lang.String> strItor7 = strList2.iterator();
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.stream.Stream<java.lang.String> strStream12 = strList10.stream();
        boolean boolean13 = strList10.isEmpty();
        java.lang.Object[] objArray14 = strList10.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator15 = strList10.spliterator();
        java.util.Spliterator<java.lang.String> strSpliterator16 = strList10.spliterator();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "a", "a", "a" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        int int24 = strList22.size();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.stream.Stream<java.lang.String> strStream29 = strList27.stream();
        boolean boolean30 = strList27.isEmpty();
        char[] charArray31 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher32);
        java.lang.String[] strArray34 = strTokenizer33.getTokenArray();
        boolean boolean35 = strList27.equals((java.lang.Object) strArray34);
        java.util.Spliterator<java.lang.String> strSpliterator36 = strList27.spliterator();
        java.util.stream.Stream<java.lang.String> strStream37 = strList27.stream();
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        java.util.stream.Stream<java.lang.String> strStream42 = strList40.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher44, strMatcher45);
        java.lang.String str47 = strTokenizer46.toString();
        java.util.List<java.lang.String> strList48 = strTokenizer46.getTokenList();
        java.lang.Object obj49 = null;
        boolean boolean50 = strList48.remove(obj49);
        boolean boolean51 = strList40.removeAll((java.util.Collection<java.lang.String>) strList48);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher53, strMatcher54);
        java.lang.String str56 = strTokenizer55.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer55.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer57.setDelimiterString("");
        java.lang.Object obj60 = strTokenizer59.clone();
        java.util.List<java.lang.String> strList61 = strTokenizer59.getTokenList();
        boolean boolean62 = strList40.retainAll((java.util.Collection<java.lang.String>) strList61);
        java.util.ListIterator<java.lang.String> strItor63 = strList40.listIterator();
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList66 = new java.util.ArrayList<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        java.util.stream.Stream<java.lang.String> strStream68 = strList66.stream();
        boolean boolean69 = strList66.isEmpty();
        java.lang.Object[] objArray70 = strList66.toArray();
        boolean boolean71 = strList40.addAll((java.util.Collection<java.lang.String>) strList66);
        boolean boolean72 = strList27.removeAll((java.util.Collection<java.lang.String>) strList66);
        boolean boolean73 = strList22.removeAll((java.util.Collection<java.lang.String>) strList27);
        boolean boolean74 = strList10.addAll((java.util.Collection<java.lang.String>) strList22);
        java.util.Iterator<java.lang.String> strItor75 = strList22.iterator();
        strList22.clear();
        boolean boolean77 = strList2.addAll((java.util.Collection<java.lang.String>) strList22);
        java.lang.Object[] objArray78 = strList2.toArray();
        java.util.Iterator<java.lang.String> strItor79 = strList2.iterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str81 = strList2.get((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[hi!]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[hi!]");
        org.junit.Assert.assertNotNull(strItor7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strStream12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!]");
        org.junit.Assert.assertNotNull(strSpliterator15);
        org.junit.Assert.assertNotNull(strSpliterator16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 4 + "'", int24 == 4);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strStream29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strSpliterator36);
        org.junit.Assert.assertNotNull(strStream37);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strStream42);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str47, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str56, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strItor63);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strStream68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(strItor75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[hi!]");
        org.junit.Assert.assertNotNull(strItor79);
    }

    @Test
    public void test11795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11795");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        java.lang.Object obj9 = strTokenizer8.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer8.setDelimiterChar('a');
        boolean boolean12 = strTokenizer8.isEmptyTokenAsNull();
        boolean boolean13 = strTokenizer8.isEmptyTokenAsNull();
        int int14 = strTokenizer8.nextIndex();
        java.lang.String[] strArray15 = strTokenizer8.getTokenArray();
        int int16 = strTokenizer8.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer8.setEmptyTokenAsNull(true);
        java.lang.String str19 = strTokenizer18.next();
        java.util.List<java.lang.String> strList20 = strTokenizer18.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer18.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strMatcher22);
    }

    @Test
    public void test11796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11796");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        int int10 = strList9.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        java.lang.String str15 = strTokenizer14.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setDelimiterString("");
        java.lang.Object obj19 = strTokenizer18.clone();
        java.util.List<java.lang.String> strList20 = strTokenizer18.getTokenList();
        int int21 = strList20.size();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.stream();
        java.lang.Object[] objArray27 = strList24.toArray();
        boolean boolean28 = strList20.removeAll((java.util.Collection<java.lang.String>) strList24);
        boolean boolean29 = strList9.containsAll((java.util.Collection<java.lang.String>) strList20);
        java.util.Spliterator<java.lang.String> strSpliterator30 = strList20.spliterator();
        int int31 = strList20.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher34);
        java.lang.String str36 = strTokenizer35.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer35.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer35.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer35.setDelimiterMatcher(strMatcher41);
        java.lang.Class<?> wildcardClass43 = strTokenizer42.getClass();
        int int44 = strList20.indexOf((java.lang.Object) wildcardClass43);
        java.util.stream.Stream<java.lang.String> strStream45 = strList20.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher47, strMatcher48);
        java.lang.String str50 = strTokenizer49.toString();
        java.util.List<java.lang.String> strList51 = strTokenizer49.getTokenList();
        java.lang.Object obj52 = null;
        boolean boolean53 = strList51.remove(obj52);
        strList51.clear();
        boolean boolean55 = strList20.contains((java.lang.Object) strList51);
        char[] charArray57 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher59, strMatcher60);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer61.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, strMatcher62, strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer65.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer66.setTrimmerMatcher(strMatcher67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer68.setDelimiterString("StrTokenizer[a]");
        boolean boolean71 = strTokenizer68.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer68.reset();
        boolean boolean73 = strTokenizer68.hasNext();
        int int74 = strTokenizer68.size();
        boolean boolean75 = strList51.equals((java.lang.Object) strTokenizer68);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str15, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strSpliterator30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str36, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strStream45);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str50, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a]");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test11797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11797");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoreEmptyTokens(false);
        int int13 = strTokenizer10.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer10.setDelimiterChar('a');
        char[] charArray17 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher22, strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer10.reset(charArray17);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.doubleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer10.setQuoteMatcher(strMatcher35);
        java.lang.String str37 = strTokenizer10.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer10.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer10.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer10.getIgnoredMatcher();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer10.set("StrTokenizer[not tokenized yet]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strMatcher40);
    }

    @Test
    public void test11798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11798");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("a", "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer2.getIgnoredMatcher();
        java.lang.String str4 = strTokenizer2.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.stream.Stream<java.lang.String> strStream12 = strList10.stream();
        java.lang.Object[] objArray13 = strList10.toArray();
        java.util.ListIterator<java.lang.String> strItor14 = strList10.listIterator();
        java.lang.String str16 = strList10.get((int) (short) 0);
        boolean boolean17 = strList10.isEmpty();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray20 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher22, strMatcher23);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer24.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer18.setTrimmerMatcher(strMatcher29);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher34);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer35.getTrimmerMatcher();
        char[] charArray38 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher40, strMatcher41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher43, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher36, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer18.setIgnoredMatcher(strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        boolean boolean50 = strTokenizer49.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray53 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher55, strMatcher56);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer57.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, strMatcher58, strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray53);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer61.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer51.setTrimmerMatcher(strMatcher62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer49.setQuoteMatcher(strMatcher62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer47.setTrimmerMatcher(strMatcher62);
        boolean boolean66 = strList10.remove((java.lang.Object) strMatcher62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher7, strMatcher62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer2.setDelimiterMatcher(strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer2.reset("");
        char[] charArray73 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher75, strMatcher76);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = strTokenizer77.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, strMatcher78, strMatcher79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer2.setIgnoredMatcher(strMatcher78);
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = strTokenizer2.getTrimmerMatcher();
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strStream12);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[hi!]");
        org.junit.Assert.assertNotNull(strItor14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a]");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[a]");
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertNotNull(strMatcher83);
    }

    @Test
    public void test11799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11799");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer8.getQuoteMatcher();
        boolean boolean12 = strTokenizer8.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer8.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", '4');
        boolean boolean18 = strTokenizer17.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer17.reset("444 ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer17.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher25);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        char[] charArray29 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher31, strMatcher32);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher34, strMatcher35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer26.reset(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer26.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer26.setDelimiterString("StrTokenizer[]");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer45.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer22.setIgnoredMatcher(strMatcher46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer14.setTrimmerMatcher(strMatcher46);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strTokenizer48);
    }

    @Test
    public void test11800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11800");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setDelimiterChar(' ');
        boolean boolean4 = strTokenizer3.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strTokenizer3.getQuoteMatcher();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strMatcher5);
    }

    @Test
    public void test11801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11801");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.util.List<java.lang.String> strList5 = strTokenizer3.getTokenList();
        boolean boolean6 = strList5.isEmpty();
        java.lang.Object[] objArray7 = strList5.toArray();
        char[] charArray9 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher11, strMatcher12);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher14, strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        int int18 = strTokenizer17.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer17.setIgnoredMatcher(strMatcher19);
        java.util.List<java.lang.String> strList21 = strTokenizer20.getTokenList();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        boolean boolean26 = strList24.isEmpty();
        java.lang.Object[] objArray27 = strList24.toArray();
        java.lang.String[] strArray30 = new java.lang.String[] { "", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher34, strMatcher35);
        boolean boolean37 = strTokenizer36.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer36.setIgnoredChar('4');
        int int40 = strTokenizer39.nextIndex();
        boolean boolean41 = strList31.equals((java.lang.Object) int40);
        boolean boolean42 = strList24.containsAll((java.util.Collection<java.lang.String>) strList31);
        strList31.clear();
        boolean boolean44 = strList21.removeAll((java.util.Collection<java.lang.String>) strList31);
        java.util.Spliterator<java.lang.String> strSpliterator45 = strList31.spliterator();
        char[] charArray47 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher49, strMatcher50);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher52, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray47);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher57, strMatcher58);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getTrimmerMatcher();
        char[] charArray62 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher64, strMatcher65);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer66.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, strMatcher67, strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer59.reset(charArray62);
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = strTokenizer74.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher75);
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, 'a', 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray47);
        boolean boolean82 = strList31.contains((java.lang.Object) charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = strTokenizer84.getDelimiterMatcher();
        boolean boolean86 = strList5.equals((java.lang.Object) strMatcher85);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[hi!]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[hi!]");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strSpliterator45);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a]");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[a]");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test11802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11802");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        boolean boolean4 = strList2.isEmpty();
        java.lang.Object[] objArray5 = strList2.toArray();
        java.lang.String[] strArray8 = new java.lang.String[] { "", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        boolean boolean15 = strTokenizer14.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer14.setIgnoredChar('4');
        int int18 = strTokenizer17.nextIndex();
        boolean boolean19 = strList9.equals((java.lang.Object) int18);
        boolean boolean20 = strList2.containsAll((java.util.Collection<java.lang.String>) strList9);
        java.util.Spliterator<java.lang.String> strSpliterator21 = strList9.spliterator();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.stream();
        boolean boolean27 = strList24.isEmpty();
        java.lang.Object[] objArray28 = strList24.toArray();
        java.lang.String[] strArray34 = new java.lang.String[] { "StrTokenizer[not tokenized yet]", "hi!", "", "StrTokenizer[not tokenized yet]", "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        boolean boolean37 = strList24.removeAll((java.util.Collection<java.lang.String>) strList35);
        java.lang.String str40 = strList35.set(1, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher42, strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer44.reset("hi!");
        java.util.List<java.lang.String> strList47 = strTokenizer44.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher49, strMatcher50);
        java.lang.String str52 = strTokenizer51.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer51.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer53.setDelimiterString("");
        java.lang.Object obj56 = strTokenizer55.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer55.getQuoteMatcher();
        boolean boolean58 = strList47.contains((java.lang.Object) strMatcher57);
        boolean boolean59 = strList35.addAll((java.util.Collection<java.lang.String>) strList47);
        boolean boolean60 = strList9.addAll((java.util.Collection<java.lang.String>) strList47);
        java.util.Iterator<java.lang.String> strItor61 = strList47.iterator();
        strList47.clear();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[hi!]");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strSpliterator21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[hi!]");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str52, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strItor61);
    }

    @Test
    public void test11803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11803");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer25);
    }

    @Test
    public void test11804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11804");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher11, strMatcher12);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getTrimmerMatcher();
        char[] charArray16 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher18, strMatcher19);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher21, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer13.reset(charArray16);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher29);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "StrTokenizer[, ]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "a   ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '#');
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strMatcher31);
    }

    @Test
    public void test11805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11805");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("a");
        char[] charArray19 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher21, strMatcher22);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher24, strMatcher25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer17.reset(charArray19);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer17.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer17.getTrimmerMatcher();
        char[] charArray39 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher41, strMatcher42);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer43.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher44, strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer47.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.setTrimmerMatcher(strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher37, strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, ' ', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "#a444 ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.setDelimiterString("StrTokenizer[a]");
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer58);
    }

    @Test
    public void test11806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11806");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        char[] charArray23 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28, strMatcher29);
        int int34 = strMatcher19.isMatch(charArray23, 1, 1, (int) ' ');
        char[] charArray35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher19, strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher46, strMatcher47);
        java.lang.String str49 = strTokenizer48.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.setDelimiterString("");
        java.lang.Object obj53 = strTokenizer52.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = strTokenizer52.getQuoteMatcher();
        char[] charArray56 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher58, strMatcher59);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer60.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, strMatcher61, strMatcher62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, "hi!");
        int int71 = strMatcher54.isMatch(charArray56, (int) (short) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer44.reset(charArray56);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str49, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a]");
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(strTokenizer76);
    }

    @Test
    public void test11807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11807");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("hi!", "StrTokenizer[StrTokenizer[]]");
    }

    @Test
    public void test11808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11808");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher11, strMatcher12);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getTrimmerMatcher();
        char[] charArray16 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher18, strMatcher19);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher21, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer13.reset(charArray16);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.setQuoteChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setDelimiterString("a   ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setDelimiterChar('a');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer36.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strTokenizer38);
    }

    @Test
    public void test11809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11809");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer9.reset();
        int int11 = strTokenizer9.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer9.setQuoteMatcher(strMatcher13);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer14.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer14.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher21, strMatcher22);
        java.lang.String str24 = strTokenizer23.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer23.reset();
        java.lang.String str26 = strTokenizer25.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer25.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer25.setIgnoredChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer29.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer29.setIgnoredChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer29.setDelimiterString("StrTokenizer[, ]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setIgnoredChar('a');
        char[] charArray38 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher40, strMatcher41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher43, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray38);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer34.reset(charArray38);
        int int54 = strMatcher19.isMatch(charArray38, 0, 2, (int) (short) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, '4', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer57.reset();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str24, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str26, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(strTokenizer58);
    }

    @Test
    public void test11810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11810");
        char[] charArray2 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7, strMatcher8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, ' ', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer15.reset();
        char[] charArray17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, 'a', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setIgnoreEmptyTokens(true);
        boolean boolean23 = strTokenizer22.hasPrevious();
        java.lang.Object obj24 = strTokenizer22.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer22.setQuoteChar(' ');
        java.util.List<java.lang.String> strList27 = strTokenizer26.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer26.reset("StrTokenizer[not tokenized yet]");
        char[] charArray32 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher34, strMatcher35);
        java.lang.String str37 = strTokenizer36.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer40.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher46, strMatcher47);
        java.lang.String str49 = strTokenizer48.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer48.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer48.setEmptyTokenAsNull(false);
        java.lang.Object obj54 = strTokenizer53.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher56, strMatcher57);
        java.lang.String str59 = strTokenizer58.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer58.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer58.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer58.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer58.setDelimiterMatcher(strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer53.setQuoteMatcher(strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer44.setIgnoredMatcher(strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer26.setQuoteMatcher(strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer15.setDelimiterMatcher(strMatcher64);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher72, strMatcher73);
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = strTokenizer74.getTrimmerMatcher();
        char[] charArray77 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher79, strMatcher80);
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = strTokenizer81.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, strMatcher82, strMatcher83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer74.reset(charArray77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer74.setIgnoreEmptyTokens(true);
        boolean boolean92 = strTokenizer91.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher93 = strTokenizer91.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[,", strMatcher64, strMatcher93);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a]");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str37, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str49, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str59, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[a]");
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(strMatcher93);
    }

    @Test
    public void test11811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11811");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoreEmptyTokens(false);
        java.lang.String str13 = strTokenizer10.next();
        char[] charArray15 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher17, strMatcher18);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer10.setIgnoredMatcher(strMatcher24);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        java.lang.String str30 = strTokenizer29.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer29.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer29.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setQuoteChar('4');
        char[] charArray38 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher40, strMatcher41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher43, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer34.reset(charArray38);
        int int53 = strMatcher24.isMatch(charArray38, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer58.setEmptyTokenAsNull(false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str30, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strTokenizer60);
    }

    @Test
    public void test11812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11812");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", "StrTokenizer[a]");
        char[] charArray4 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, strMatcher9, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("StrTokenizer[a]");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer2.reset(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer2.setQuoteChar('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getIgnoredMatcher();
        char[] charArray24 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher27);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher29, strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray24);
        char[] charArray37 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher40);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher42, strMatcher43);
        char[] charArray46 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher48, strMatcher49);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer50.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher51, strMatcher52);
        int int57 = strMatcher42.isMatch(charArray46, 1, 1, (int) ' ');
        char[] charArray58 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, strMatcher59);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer60.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher42, strMatcher61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer21.reset(charArray24);
        boolean boolean67 = strTokenizer66.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer66.setDelimiterString("");
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[a]");
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a]");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strTokenizer69);
    }

    @Test
    public void test11813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11813");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.util.List<java.lang.String> strList5 = strTokenizer3.getTokenList();
        boolean boolean6 = strList5.isEmpty();
        boolean boolean7 = strList5.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher9, strMatcher10);
        java.lang.String str12 = strTokenizer11.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setDelimiterString("");
        java.lang.Object obj16 = strTokenizer15.clone();
        java.util.List<java.lang.String> strList17 = strTokenizer15.getTokenList();
        java.util.ListIterator<java.lang.String> strItor19 = strList17.listIterator((int) (short) 0);
        boolean boolean20 = strList5.containsAll((java.util.Collection<java.lang.String>) strList17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        java.util.List<java.lang.String> strList25 = strTokenizer24.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        java.lang.String str30 = strTokenizer29.toString();
        java.util.List<java.lang.String> strList31 = strTokenizer29.getTokenList();
        java.lang.Object obj32 = null;
        boolean boolean33 = strList31.remove(obj32);
        boolean boolean35 = strList31.add("StrTokenizer[not tokenized yet]");
        boolean boolean36 = strList25.containsAll((java.util.Collection<java.lang.String>) strList31);
        boolean boolean37 = strList5.retainAll((java.util.Collection<java.lang.String>) strList31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        boolean boolean40 = strTokenizer39.hasNext();
        java.lang.String str41 = strTokenizer39.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher43, strMatcher44);
        java.lang.String str46 = strTokenizer45.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer45.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer45.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.setQuoteChar('4');
        char[] charArray54 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher56, strMatcher57);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer58.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, strMatcher59, strMatcher60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer50.reset(charArray54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer39.reset(charArray54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray54);
        boolean boolean68 = strList31.remove((java.lang.Object) charArray54);
        java.util.stream.Stream<java.lang.String> strStream69 = strList31.parallelStream();
        java.lang.String str71 = strList31.remove(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        int int74 = strList31.indexOf((java.lang.Object) "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str12, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strItor19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str30, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str46, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a]");
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strStream69);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
    }

    @Test
    public void test11814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11814");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, 'a', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher8);
        java.lang.String str10 = strTokenizer9.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer9.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer5.setQuoteMatcher(strMatcher12);
        java.util.List<java.lang.String> strList14 = strTokenizer5.getTokenList();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer5.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str10, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strList14);
    }

    @Test
    public void test11815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11815");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("a");
        java.util.List<java.lang.String> strList2 = strTokenizer1.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        java.lang.String str7 = strTokenizer6.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer6.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer6.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setIgnoreEmptyTokens(false);
        int int16 = strList2.indexOf((java.lang.Object) strTokenizer13);
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.stream.Stream<java.lang.String> strStream21 = strList19.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher23, strMatcher24);
        java.lang.String str26 = strTokenizer25.toString();
        java.util.List<java.lang.String> strList27 = strTokenizer25.getTokenList();
        java.lang.Object obj28 = null;
        boolean boolean29 = strList27.remove(obj28);
        boolean boolean30 = strList19.removeAll((java.util.Collection<java.lang.String>) strList27);
        java.util.Spliterator<java.lang.String> strSpliterator31 = strList19.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher34);
        java.lang.String str36 = strTokenizer35.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer35.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer35.setEmptyTokenAsNull(false);
        java.util.List<java.lang.String> strList41 = strTokenizer40.getTokenList();
        boolean boolean42 = strList19.remove((java.lang.Object) strList41);
        java.util.Spliterator<java.lang.String> strSpliterator43 = strList41.spliterator();
        boolean boolean44 = strList2.removeAll((java.util.Collection<java.lang.String>) strList41);
        java.util.stream.Stream<java.lang.String> strStream45 = strList2.parallelStream();
        java.util.ListIterator<java.lang.String> strItor46 = strList2.listIterator();
        boolean boolean48 = strList2.add("StrTokenizer[StrTokenizer[a]]");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher50, strMatcher51);
        java.lang.String str53 = strTokenizer52.toString();
        java.util.List<java.lang.String> strList54 = strTokenizer52.getTokenList();
        boolean boolean55 = strList54.isEmpty();
        boolean boolean56 = strList54.isEmpty();
        boolean boolean57 = strList2.remove((java.lang.Object) boolean56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", 'a', '4');
        java.util.List<java.lang.String> strList62 = strTokenizer61.getTokenList();
        boolean boolean63 = strList2.addAll((java.util.Collection<java.lang.String>) strList62);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str7, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strStream21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str26, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strSpliterator31);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str36, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strSpliterator43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strStream45);
        org.junit.Assert.assertNotNull(strItor46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str53, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test11816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11816");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        java.util.List<java.lang.String> strList10 = strTokenizer8.getTokenList();
        boolean boolean11 = strList10.isEmpty();
        boolean boolean12 = strList10.isEmpty();
        java.util.stream.Stream<java.lang.String> strStream13 = strList10.stream();
        boolean boolean14 = strList3.addAll((java.util.Collection<java.lang.String>) strList10);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        java.lang.String str19 = strTokenizer18.toString();
        java.util.List<java.lang.String> strList20 = strTokenizer18.getTokenList();
        java.lang.String[] strArray23 = new java.lang.String[] { "", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        boolean boolean30 = strTokenizer29.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer29.setIgnoredChar('4');
        int int33 = strTokenizer32.nextIndex();
        boolean boolean34 = strList24.equals((java.lang.Object) int33);
        int int35 = strList24.size();
        boolean boolean36 = strList20.containsAll((java.util.Collection<java.lang.String>) strList24);
        boolean boolean37 = strList3.contains((java.lang.Object) strList24);
        java.lang.Object[] objArray38 = strList24.toArray();
        java.lang.String str41 = strList24.set((int) (byte) 0, "a");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher43, strMatcher44);
        java.lang.String str46 = strTokenizer45.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer47.setDelimiterString("");
        java.lang.Object obj50 = strTokenizer49.clone();
        java.util.List<java.lang.String> strList51 = strTokenizer49.getTokenList();
        int int52 = strList51.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher54, strMatcher55);
        java.lang.String str57 = strTokenizer56.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer58.setDelimiterString("");
        java.lang.Object obj61 = strTokenizer60.clone();
        java.util.List<java.lang.String> strList62 = strTokenizer60.getTokenList();
        int int63 = strList62.size();
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList66 = new java.util.ArrayList<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        java.util.stream.Stream<java.lang.String> strStream68 = strList66.stream();
        java.lang.Object[] objArray69 = strList66.toArray();
        boolean boolean70 = strList62.removeAll((java.util.Collection<java.lang.String>) strList66);
        boolean boolean71 = strList51.containsAll((java.util.Collection<java.lang.String>) strList62);
        java.util.stream.Stream<java.lang.String> strStream72 = strList51.stream();
        java.util.stream.Stream<java.lang.String> strStream73 = strList51.parallelStream();
        strList51.clear();
        boolean boolean75 = strList24.remove((java.lang.Object) strList51);
        int int76 = strList51.size();
        strList51.clear();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str19, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[, StrTokenizer[hi!]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[, StrTokenizer[hi!]]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str46, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str57, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strStream68);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strStream72);
        org.junit.Assert.assertNotNull(strStream73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
    }

    @Test
    public void test11817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11817");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer3.getDelimiterMatcher();
        char[] charArray6 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher8, strMatcher9);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer10.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher11, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer3.setTrimmerMatcher(strMatcher19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.setIgnoreEmptyTokens(true);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer23);
    }

    @Test
    public void test11818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11818");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.util.List<java.lang.String> strList5 = strTokenizer3.getTokenList();
        boolean boolean6 = strList5.isEmpty();
        int int7 = strList5.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[a]");
        java.lang.String str10 = strTokenizer9.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        java.lang.String str15 = strTokenizer14.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer14.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer14.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.setIgnoreEmptyTokens(false);
        java.lang.String str24 = strTokenizer21.next();
        char[] charArray26 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher28, strMatcher29);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer30.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher31, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer21.setIgnoredMatcher(strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher38, strMatcher39);
        java.lang.String str41 = strTokenizer40.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer40.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer40.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.setQuoteChar('4');
        char[] charArray49 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher51, strMatcher52);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = strTokenizer53.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher54, strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer45.reset(charArray49);
        int int64 = strMatcher35.isMatch(charArray49, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer9.reset(charArray49);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = strTokenizer67.getDelimiterMatcher();
        java.lang.String str69 = strTokenizer67.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer67.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer67.setDelimiterChar('4');
        boolean boolean74 = strList5.equals((java.lang.Object) '4');
        java.lang.Object[] objArray75 = strList5.toArray();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str78 = strList5.set(5, "StrTokenizer[,");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 5, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "StrTokenizer[a]" + "'", str10, "StrTokenizer[a]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str15, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a]");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str41, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a]");
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "a" + "'", str69, "a");
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[hi!]");
    }

    @Test
    public void test11819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11819");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[]", "StrTokenizer[StrTokenizer[not tokenized yet]]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setDelimiterChar('a');
        boolean boolean5 = strTokenizer2.isEmptyTokenAsNull();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = strTokenizer2.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test11820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11820");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        char[] charArray23 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28, strMatcher29);
        int int34 = strMatcher19.isMatch(charArray23, 1, 1, (int) ' ');
        char[] charArray35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher19, strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer44.setDelimiterString("StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setDelimiterString("StrTokenizer[StrTokenizer[not tokenized yet]]");
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer48);
    }

    @Test
    public void test11821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11821");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        boolean boolean9 = strTokenizer3.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer3.setTrimmerMatcher(strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer3.setIgnoredChar(' ');
        java.lang.String str17 = strTokenizer16.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer16.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer16.getIgnoredMatcher();
        boolean boolean21 = strTokenizer16.isIgnoreEmptyTokens();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test11822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11822");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher2, strMatcher3);
        java.lang.String str5 = strTokenizer4.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer4.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer4.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer4.setDelimiterMatcher(strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher10);
        boolean boolean13 = strTokenizer12.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer12.setTrimmerMatcher(strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.reset("hi!");
        java.lang.String[] strArray21 = strTokenizer20.getTokenArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher25);
        java.lang.String str27 = strTokenizer26.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer28.setDelimiterString("");
        java.lang.Object obj31 = strTokenizer30.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer30.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher32);
        char[] charArray35 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher37, strMatcher38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer39.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher40, strMatcher41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher50, strMatcher51);
        int int56 = strMatcher32.isMatch(charArray35, (int) (byte) 0, (int) (byte) 1, (int) (short) 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer20.setIgnoredMatcher(strMatcher32);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer57.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer12.setQuoteMatcher(strMatcher58);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer59.setIgnoredChar('#');
        boolean boolean63 = strTokenizer59.hasNext();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str5, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str27, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a]");
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test11823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11823");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        java.lang.String str19 = strTokenizer18.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer18.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer18.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer18.setDelimiterMatcher(strMatcher24);
        int int26 = strTokenizer25.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer25.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer28.reset("");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher32, strMatcher33);
        java.lang.String str35 = strTokenizer34.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer34.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer34.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer39.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setIgnoreEmptyTokens(false);
        java.lang.String str44 = strTokenizer41.next();
        char[] charArray46 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher48, strMatcher49);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer50.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher51, strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray46);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer41.setIgnoredMatcher(strMatcher55);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher58, strMatcher59);
        java.lang.String str61 = strTokenizer60.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer60.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer60.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer60.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer65.setQuoteChar('4');
        char[] charArray69 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher71, strMatcher72);
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = strTokenizer73.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, strMatcher74, strMatcher75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer65.reset(charArray69);
        int int84 = strMatcher55.isMatch(charArray69, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer28.setQuoteMatcher(strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher55);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str19, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str35, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a]");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str61, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[a]");
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(strTokenizer85);
    }

    @Test
    public void test11824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11824");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        java.util.List<java.lang.String> strList10 = strTokenizer8.getTokenList();
        java.lang.Object obj11 = null;
        boolean boolean12 = strList10.remove(obj11);
        boolean boolean13 = strList2.removeAll((java.util.Collection<java.lang.String>) strList10);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher15, strMatcher16);
        java.lang.String str18 = strTokenizer17.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setDelimiterString("");
        java.lang.Object obj22 = strTokenizer21.clone();
        java.util.List<java.lang.String> strList23 = strTokenizer21.getTokenList();
        int int24 = strList23.size();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.stream.Stream<java.lang.String> strStream29 = strList27.stream();
        java.lang.Object[] objArray30 = strList27.toArray();
        boolean boolean31 = strList23.removeAll((java.util.Collection<java.lang.String>) strList27);
        boolean boolean33 = strList23.add("StrTokenizer[hi!]");
        boolean boolean34 = strList10.containsAll((java.util.Collection<java.lang.String>) strList23);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.stream.Stream<java.lang.String> strStream39 = strList37.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher41, strMatcher42);
        java.lang.String str44 = strTokenizer43.toString();
        java.util.List<java.lang.String> strList45 = strTokenizer43.getTokenList();
        java.lang.Object obj46 = null;
        boolean boolean47 = strList45.remove(obj46);
        boolean boolean48 = strList37.removeAll((java.util.Collection<java.lang.String>) strList45);
        java.util.Spliterator<java.lang.String> strSpliterator49 = strList37.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher51, strMatcher52);
        java.lang.String str54 = strTokenizer53.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer53.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer53.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer53.setEmptyTokenAsNull(false);
        java.util.List<java.lang.String> strList59 = strTokenizer58.getTokenList();
        boolean boolean60 = strList37.remove((java.lang.Object) strList59);
        java.util.stream.Stream<java.lang.String> strStream61 = strList37.parallelStream();
        int int62 = strList10.lastIndexOf((java.lang.Object) strList37);
        java.util.Spliterator<java.lang.String> strSpliterator63 = strList37.spliterator();
        java.util.Spliterator<java.lang.String> strSpliterator64 = strList37.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str66 = strList37.get((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str18, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strStream29);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strStream39);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str44, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strSpliterator49);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str54, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strStream61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(strSpliterator63);
        org.junit.Assert.assertNotNull(strSpliterator64);
    }

    @Test
    public void test11825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11825");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoreEmptyTokens(false);
        java.lang.String str13 = strTokenizer10.next();
        char[] charArray15 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher17, strMatcher18);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer10.setIgnoredMatcher(strMatcher24);
        int int26 = strTokenizer25.previousIndex();
        java.lang.String str27 = strTokenizer25.getContent();
        boolean boolean28 = strTokenizer25.hasPrevious();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test11826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11826");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        java.util.ListIterator<java.lang.String> strItor11 = strList9.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor12 = strList9.listIterator();
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        boolean boolean22 = strList9.remove((java.lang.Object) strMatcher19);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher25);
        boolean boolean27 = strTokenizer26.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setIgnoredChar('4');
        boolean boolean30 = strList9.contains((java.lang.Object) strTokenizer26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer26.setDelimiterString("a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer26.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setDelimiterChar(' ');
        java.lang.String str37 = strTokenizer34.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer34.getTrimmerMatcher();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strItor11);
        org.junit.Assert.assertNotNull(strItor12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "StrTokenizer[hi!]" + "'", str37, "StrTokenizer[hi!]");
        org.junit.Assert.assertNotNull(strMatcher38);
    }

    @Test
    public void test11827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11827");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        java.lang.Object[] objArray5 = strList2.toArray();
        java.util.ListIterator<java.lang.String> strItor6 = strList2.listIterator();
        java.lang.String str8 = strList2.get((int) (short) 0);
        strList2.clear();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher11, strMatcher12);
        java.lang.String str14 = strTokenizer13.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer13.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer13.setEmptyTokenAsNull(false);
        java.lang.Object obj19 = strTokenizer18.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer18.setDelimiterChar('a');
        boolean boolean22 = strTokenizer18.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer18.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer18.setIgnoredMatcher(strMatcher25);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        java.lang.String str28 = strTokenizer26.getContent();
        java.lang.String str29 = strTokenizer26.nextToken();
        java.lang.String str30 = strTokenizer26.previous();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer26.reset();
        int int32 = strList2.indexOf((java.lang.Object) strTokenizer26);
        java.lang.Object[] objArray33 = strList2.toArray();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[hi!]");
        org.junit.Assert.assertNotNull(strItor6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str14, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
    }

    @Test
    public void test11828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11828");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer8.getQuoteMatcher();
        boolean boolean12 = strTokenizer8.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer8.add("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test11829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11829");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[hi!]", '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        java.lang.String str7 = strTokenizer6.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoredChar('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer10.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher15, strMatcher16);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        char[] charArray20 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher22, strMatcher23);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer24.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, "a");
        int int35 = strMatcher18.isMatch(charArray20, (int) (byte) 0);
        int int39 = strMatcher13.isMatch(charArray20, (int) (byte) 0, (int) '#', (int) (byte) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer2.setQuoteMatcher(strMatcher13);
        boolean boolean41 = strTokenizer2.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher43, strMatcher44);
        java.lang.String str46 = strTokenizer45.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer45.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer45.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.setQuoteChar('4');
        int int53 = strTokenizer52.previousIndex();
        boolean boolean54 = strTokenizer52.isIgnoreEmptyTokens();
        boolean boolean55 = strTokenizer52.hasPrevious();
        char[] charArray57 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher59, strMatcher60);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer61.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, strMatcher62, strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, strMatcher72, strMatcher73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer52.reset(charArray57);
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        char[] charArray79 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher81, strMatcher82);
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = strTokenizer83.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, strMatcher84, strMatcher85);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray79);
        org.apache.commons.lang3.text.StrMatcher strMatcher92 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, strMatcher77, strMatcher92);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = strTokenizer2.setIgnoredMatcher(strMatcher92);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = strTokenizer94.setDelimiterString("#a444 ");
        java.lang.String str97 = strTokenizer94.previousToken();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str98 = strTokenizer94.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str7, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str46, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a]");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[a]");
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertNotNull(strMatcher92);
        org.junit.Assert.assertNotNull(strTokenizer94);
        org.junit.Assert.assertNotNull(strTokenizer96);
        org.junit.Assert.assertNull(str97);
    }

    @Test
    public void test11830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11830");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        java.util.List<java.lang.String> strList10 = strTokenizer8.getTokenList();
        boolean boolean11 = strList10.isEmpty();
        boolean boolean12 = strList10.isEmpty();
        java.util.stream.Stream<java.lang.String> strStream13 = strList10.stream();
        boolean boolean14 = strList3.addAll((java.util.Collection<java.lang.String>) strList10);
        java.util.Iterator<java.lang.String> strItor15 = strList3.iterator();
        int int16 = strList3.size();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strItor15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
    }

    @Test
    public void test11831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11831");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        char[] charArray10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setIgnoredMatcher(strMatcher13);
        char[] charArray16 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher18, strMatcher19);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher21, strMatcher22);
        char[] charArray25 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher30, strMatcher31);
        int int36 = strMatcher21.isMatch(charArray25, 1, 1, (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray25);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher40);
        java.lang.String str42 = strTokenizer41.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer41.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[hi!]", strMatcher13, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("", ' ', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer51.setTrimmerMatcher(strMatcher53);
        char[] charArray56 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher58, strMatcher59);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer60.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, strMatcher61, strMatcher62);
        char[] charArray65 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher67, strMatcher68);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = strTokenizer69.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, strMatcher70, strMatcher71);
        int int76 = strMatcher61.isMatch(charArray65, 1, 1, (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray65);
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher79, strMatcher80);
        java.lang.String str82 = strTokenizer81.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer81.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = strTokenizer81.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, strMatcher84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, 'a', 'a');
        int int93 = strMatcher53.isMatch(charArray65, 2, (int) ' ', 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray65);
        int int96 = strMatcher44.isMatch(charArray65, (int) (short) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher97 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray65);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str42, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a]");
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[a]");
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str82, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertNotNull(strTokenizer94);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
        org.junit.Assert.assertNotNull(strMatcher97);
    }

    @Test
    public void test11832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11832");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer9.reset();
        int int11 = strTokenizer9.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer9.setQuoteMatcher(strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset("StrTokenizer[hi!]");
        int int17 = strTokenizer16.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        java.lang.String str22 = strTokenizer21.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer21.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer21.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer28.setIgnoreEmptyTokens(false);
        java.lang.String str31 = strTokenizer28.next();
        char[] charArray33 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher35, strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher38, strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray33);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer28.setIgnoredMatcher(strMatcher42);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher45, strMatcher46);
        java.lang.String str48 = strTokenizer47.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer47.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer47.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer47.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.setQuoteChar('4');
        char[] charArray56 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher58, strMatcher59);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer60.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, strMatcher61, strMatcher62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer52.reset(charArray56);
        int int71 = strMatcher42.isMatch(charArray56, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray56);
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer16.setDelimiterMatcher(strMatcher77);
        java.lang.String str79 = strTokenizer16.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer16.reset("#a444 ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer16.reset("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = strTokenizer83.reset();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str85 = strTokenizer83.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str22, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str48, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a]");
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "StrTokenizer[hi!]" + "'", str79, "StrTokenizer[hi!]");
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strTokenizer84);
    }

    @Test
    public void test11833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11833");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        char[] charArray23 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28, strMatcher29);
        int int34 = strMatcher19.isMatch(charArray23, 1, 1, (int) ' ');
        char[] charArray35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher19, strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        boolean boolean42 = strTokenizer41.hasNext();
        java.lang.Object obj43 = strTokenizer41.clone();
        int int44 = strTokenizer41.previousIndex();
        boolean boolean45 = strTokenizer41.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer41.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        java.lang.String str50 = strTokenizer49.getContent();
        boolean boolean51 = strTokenizer49.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer49.setDelimiterString("a   ");
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "a" + "'", str50, "a");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strTokenizer53);
    }

    @Test
    public void test11834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11834");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        java.lang.String str23 = strTokenizer22.toString();
        java.util.List<java.lang.String> strList24 = strTokenizer22.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer22.setDelimiterString("a");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher27);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer31.set(",");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str23, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher29);
    }

    @Test
    public void test11835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11835");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setDelimiterString("hi!");
        java.util.List<java.lang.String> strList7 = strTokenizer6.getTokenList();
        java.lang.String[] strArray11 = new java.lang.String[] { "StrTokenizer[hi!]", "", "StrTokenizer[a]" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        strList12.clear();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher17, strMatcher18);
        java.lang.String str20 = strTokenizer19.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer19.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer19.setEmptyTokenAsNull(false);
        java.lang.Object obj25 = strTokenizer24.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        java.lang.String str30 = strTokenizer29.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer29.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer29.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer29.setDelimiterMatcher(strMatcher35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer24.setQuoteMatcher(strMatcher35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setIgnoredChar('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer39.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer39.getQuoteMatcher();
        char[] charArray43 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher45, strMatcher46);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher48, strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray43);
        char[] charArray56 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher58, strMatcher59);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer60.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, strMatcher61, strMatcher62);
        char[] charArray65 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher67, strMatcher68);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = strTokenizer69.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, strMatcher70, strMatcher71);
        int int76 = strMatcher61.isMatch(charArray65, 1, 1, (int) ' ');
        char[] charArray77 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, strMatcher78);
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = strTokenizer79.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher61, strMatcher80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher41, strMatcher61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = strTokenizer82.setDelimiterChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer84.setDelimiterString("StrTokenizer[not tokenized yet]");
        boolean boolean87 = strTokenizer84.hasPrevious();
        boolean boolean88 = strList12.equals((java.lang.Object) boolean87);
        int int89 = strList12.size();
        boolean boolean90 = strList7.contains((java.lang.Object) strList12);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList93 = strList12.subList((int) ' ', 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str20, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str30, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a]");
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[a]");
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test11836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11836");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoreEmptyTokens(false);
        java.lang.String str13 = strTokenizer10.next();
        char[] charArray15 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher17, strMatcher18);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer10.setIgnoredMatcher(strMatcher24);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        java.lang.String str30 = strTokenizer29.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer29.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer29.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setQuoteChar('4');
        char[] charArray38 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher40, strMatcher41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher43, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer34.reset(charArray38);
        int int53 = strMatcher24.isMatch(charArray38, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray38);
        java.lang.String str59 = strTokenizer58.next();
        java.lang.String str60 = strTokenizer58.previous();
        int int61 = strTokenizer58.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer58.getIgnoredMatcher();
        int int63 = strTokenizer58.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer58.setDelimiterMatcher(strMatcher64);
        java.lang.String str66 = strTokenizer65.next();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str30, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "a" + "'", str59, "a");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "a" + "'", str60, "a");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "a" + "'", str66, "a");
    }

    @Test
    public void test11837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11837");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher2, strMatcher3);
        java.lang.String str5 = strTokenizer4.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.setDelimiterString("");
        java.lang.Object obj9 = strTokenizer8.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer8.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        java.lang.String str15 = strTokenizer14.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setDelimiterString("");
        java.lang.Object obj19 = strTokenizer18.clone();
        java.util.List<java.lang.String> strList20 = strTokenizer18.getTokenList();
        int int21 = strList20.size();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.stream();
        java.lang.Object[] objArray27 = strList24.toArray();
        boolean boolean28 = strList20.removeAll((java.util.Collection<java.lang.String>) strList24);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher30, strMatcher31);
        java.lang.String str33 = strTokenizer32.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer32.setDelimiterChar('a');
        boolean boolean36 = strList20.equals((java.lang.Object) strTokenizer32);
        boolean boolean37 = strTokenizer32.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher40, strMatcher41);
        java.lang.String str43 = strTokenizer42.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer42.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer42.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer42.setEmptyTokenAsNull(false);
        boolean boolean48 = strTokenizer42.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer42.setTrimmerMatcher(strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer32.setDelimiterMatcher(strMatcher51);
        int int56 = strTokenizer32.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer32.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer("#a444 ", strMatcher10, strMatcher57);
        int int59 = strTokenizer58.previousIndex();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str5, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str15, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str33, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str43, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
    }

    @Test
    public void test11838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11838");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setIgnoreEmptyTokens(false);
        java.lang.String str9 = strTokenizer3.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer3.setIgnoreEmptyTokens(true);
        char[] charArray13 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher15, strMatcher16);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher18, strMatcher19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray13);
        char[] charArray26 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher28, strMatcher29);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer30.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher31, strMatcher32);
        char[] charArray35 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher37, strMatcher38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer39.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher40, strMatcher41);
        int int46 = strMatcher31.isMatch(charArray35, 1, 1, (int) ' ');
        char[] charArray47 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher48);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer49.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher31, strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer11.setDelimiterMatcher(strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer11.setIgnoreEmptyTokens(true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a]");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a]");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a]");
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer54);
    }

    @Test
    public void test11839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11839");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        boolean boolean4 = strList2.isEmpty();
        java.util.Spliterator<java.lang.String> strSpliterator5 = strList2.spliterator();
        java.util.ListIterator<java.lang.String> strItor6 = strList2.listIterator();
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.stream();
        java.lang.Object[] objArray12 = strList9.toArray();
        java.lang.Object[] objArray13 = strList9.toArray();
        char[] charArray15 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher17, strMatcher18);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher20, strMatcher21);
        char[] charArray24 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher27);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher29, strMatcher30);
        int int35 = strMatcher20.isMatch(charArray24, 1, 1, (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, "StrTokenizer[hi!]");
        java.util.List<java.lang.String> strList41 = strTokenizer40.getTokenList();
        strList41.clear();
        int int43 = strList9.indexOf((java.lang.Object) strList41);
        boolean boolean44 = strList2.retainAll((java.util.Collection<java.lang.String>) strList41);
        strList2.clear();
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.stream.Stream<java.lang.String> strStream50 = strList48.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher52, strMatcher53);
        java.lang.String str55 = strTokenizer54.toString();
        java.util.List<java.lang.String> strList56 = strTokenizer54.getTokenList();
        java.lang.Object obj57 = null;
        boolean boolean58 = strList56.remove(obj57);
        boolean boolean59 = strList48.removeAll((java.util.Collection<java.lang.String>) strList56);
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.stream.Stream<java.lang.String> strStream64 = strList62.stream();
        java.lang.Object[] objArray65 = strList62.toArray();
        java.util.ListIterator<java.lang.String> strItor66 = strList62.listIterator();
        boolean boolean67 = strList56.remove((java.lang.Object) strList62);
        char[] charArray69 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher71, strMatcher72);
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = strTokenizer73.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, strMatcher74, strMatcher75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, strMatcher82);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, "StrTokenizer[hi!]");
        boolean boolean88 = strList62.contains((java.lang.Object) strTokenizer87);
        boolean boolean89 = strTokenizer87.isEmptyTokenAsNull();
        java.lang.String str90 = strTokenizer87.toString();
        boolean boolean91 = strTokenizer87.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = strTokenizer87.setDelimiterString("hi!");
        int int94 = strList2.lastIndexOf((java.lang.Object) "hi!");
        java.util.stream.Stream<java.lang.String> strStream95 = strList2.stream();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strSpliterator5);
        org.junit.Assert.assertNotNull(strItor6);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[hi!]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[hi!]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strStream50);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str55, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strStream64);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[hi!]");
        org.junit.Assert.assertNotNull(strItor66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[a]");
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str90, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(strTokenizer93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertNotNull(strStream95);
    }

    @Test
    public void test11840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11840");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoreEmptyTokens(false);
        java.lang.String str13 = strTokenizer10.next();
        char[] charArray15 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher17, strMatcher18);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer10.setIgnoredMatcher(strMatcher24);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        java.lang.String str30 = strTokenizer29.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer29.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer29.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setIgnoreEmptyTokens(false);
        int int39 = strTokenizer36.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer36.setDelimiterChar('a');
        char[] charArray43 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher45, strMatcher46);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher48, strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer36.reset(charArray43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, ' ', ' ');
        int int67 = strMatcher24.isMatch(charArray43, 0, (int) (byte) 100, 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray43);
        java.lang.String str69 = strTokenizer68.getContent();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str30, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "a" + "'", str69, "a");
    }

    @Test
    public void test11841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11841");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.reset("hi!");
        int int9 = strTokenizer6.nextIndex();
        boolean boolean10 = strList2.equals((java.lang.Object) int9);
        strList2.clear();
        java.util.stream.Stream<java.lang.String> strStream12 = strList2.stream();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.stream.Stream<java.lang.String> strStream17 = strList15.stream();
        boolean boolean18 = strList15.isEmpty();
        java.lang.Object[] objArray19 = strList15.toArray();
        java.lang.String[] strArray25 = new java.lang.String[] { "StrTokenizer[not tokenized yet]", "hi!", "", "StrTokenizer[not tokenized yet]", "hi!" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        boolean boolean28 = strList15.removeAll((java.util.Collection<java.lang.String>) strList26);
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.stream.Stream<java.lang.String> strStream34 = strList32.stream();
        boolean boolean35 = strList32.isEmpty();
        char[] charArray36 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher37);
        java.lang.String[] strArray39 = strTokenizer38.getTokenArray();
        boolean boolean40 = strList32.equals((java.lang.Object) strArray39);
        java.util.Spliterator<java.lang.String> strSpliterator41 = strList32.spliterator();
        java.lang.Object[] objArray42 = strList32.toArray();
        boolean boolean43 = strList26.addAll(0, (java.util.Collection<java.lang.String>) strList32);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher45, strMatcher46);
        java.lang.String str48 = strTokenizer47.toString();
        java.util.List<java.lang.String> strList49 = strTokenizer47.getTokenList();
        boolean boolean50 = strList49.isEmpty();
        java.lang.Object[] objArray51 = strList49.toArray();
        int int52 = strList32.lastIndexOf((java.lang.Object) objArray51);
        boolean boolean53 = strList2.removeAll((java.util.Collection<java.lang.String>) strList32);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher55, strMatcher56);
        java.lang.String str58 = strTokenizer57.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer57.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer59.setDelimiterString("");
        java.lang.Object obj62 = strTokenizer61.clone();
        java.util.List<java.lang.String> strList63 = strTokenizer61.getTokenList();
        int int64 = strList63.size();
        java.util.ListIterator<java.lang.String> strItor65 = strList63.listIterator();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        java.util.List<java.lang.String> strList70 = strTokenizer69.getTokenList();
        boolean boolean71 = strList63.containsAll((java.util.Collection<java.lang.String>) strList70);
        java.util.stream.Stream<java.lang.String> strStream72 = strList63.stream();
        boolean boolean73 = strList32.removeAll((java.util.Collection<java.lang.String>) strList63);
        java.util.stream.Stream<java.lang.String> strStream74 = strList32.parallelStream();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList77 = strList32.subList((int) ' ', 3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strStream12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strStream17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[hi!]");
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strStream34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strSpliterator41);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str48, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[hi!]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str58, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(strItor65);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strStream72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(strStream74);
    }

    @Test
    public void test11842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11842");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer7.setIgnoredChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer9.setQuoteChar('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        java.lang.String str19 = strTokenizer18.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setDelimiterString("");
        java.lang.Object obj23 = strTokenizer22.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        boolean boolean28 = strTokenizer27.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer27.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer22.setDelimiterMatcher(strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer9.setQuoteMatcher(strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setIgnoreEmptyTokens(true);
        int int37 = strTokenizer36.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer36.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer39.getTrimmerMatcher();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer39.add("#a");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str19, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strMatcher40);
    }

    @Test
    public void test11843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11843");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '#', '4');
        boolean boolean20 = strTokenizer19.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer26.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher29, strMatcher30);
        java.lang.String str32 = strTokenizer31.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setDelimiterString("");
        java.lang.Object obj36 = strTokenizer35.clone();
        java.util.List<java.lang.String> strList37 = strTokenizer35.getTokenList();
        java.util.ListIterator<java.lang.String> strItor39 = strList37.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor40 = strList37.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int43 = strList37.indexOf((java.lang.Object) strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer26.setDelimiterMatcher(strMatcher42);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer26.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer22.setIgnoredMatcher(strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer19.setTrimmerMatcher(strMatcher45);
        java.util.List<java.lang.String> strList48 = strTokenizer19.getTokenList();
        boolean boolean49 = strTokenizer19.hasNext();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str32, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(strItor39);
        org.junit.Assert.assertNotNull(strItor40);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test11844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11844");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        java.lang.String str1 = strTokenizer0.getContent();
        boolean boolean2 = strTokenizer0.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        java.lang.String str7 = strTokenizer6.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer6.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer6.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setIgnoreEmptyTokens(false);
        java.lang.String str16 = strTokenizer13.next();
        char[] charArray18 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher23, strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer13.setIgnoredMatcher(strMatcher27);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher30, strMatcher31);
        java.lang.String str33 = strTokenizer32.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer32.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer32.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setQuoteChar('4');
        char[] charArray41 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher43, strMatcher44);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer45.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher46, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer37.reset(charArray41);
        int int56 = strMatcher27.isMatch(charArray41, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", '4', 'a');
        java.lang.String[] strArray61 = strTokenizer60.getTokenArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer60.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher62, strMatcher65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer0.reset(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, '4');
        java.lang.String str71 = strTokenizer70.toString();
        int int72 = strTokenizer70.previousIndex();
        java.lang.String str73 = strTokenizer70.next();
        org.junit.Assert.assertNotNull(strTokenizer0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str7, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str33, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a]");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str71, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "a" + "'", str73, "a");
    }

    @Test
    public void test11845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11845");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer9.reset();
        int int11 = strTokenizer9.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer9.setQuoteMatcher(strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer9.setQuoteChar(' ');
        java.lang.String str17 = strTokenizer16.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer16.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer16.setEmptyTokenAsNull(false);
        boolean boolean22 = strTokenizer21.isIgnoreEmptyTokens();
        java.lang.String str23 = strTokenizer21.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher27);
        java.lang.String str29 = strTokenizer28.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer28.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer28.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer28.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.setIgnoreEmptyTokens(false);
        int int38 = strTokenizer35.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer35.setDelimiterChar('a');
        char[] charArray42 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher44, strMatcher45);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer46.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher47, strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer35.reset(charArray42);
        boolean boolean60 = strTokenizer35.hasPrevious();
        int int61 = strTokenizer35.nextIndex();
        int int62 = strTokenizer35.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer35.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = strTokenizer35.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[hi!]", strMatcher68);
        char[] charArray71 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher73, strMatcher74);
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = strTokenizer75.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray71, strMatcher76, strMatcher77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray71, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray71, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = strTokenizer84.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer69.setDelimiterMatcher(strMatcher85);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer("   ", strMatcher65, strMatcher85);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer21.setTrimmerMatcher(strMatcher65);
        int int89 = strTokenizer88.previousIndex();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "StrTokenizer[a]" + "'", str17, "StrTokenizer[a]");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "a" + "'", str23, "a");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str29, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a]");
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[a]");
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
    }

    @Test
    public void test11846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11846");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("a");
        java.util.List<java.lang.String> strList2 = strTokenizer1.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        java.lang.String str7 = strTokenizer6.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer6.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer6.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setIgnoreEmptyTokens(false);
        int int16 = strList2.indexOf((java.lang.Object) strTokenizer13);
        strList2.clear();
        char[] charArray19 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher21, strMatcher22);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher24, strMatcher25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray19);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray19);
        boolean boolean33 = strList2.contains((java.lang.Object) strMatcher32);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher36, strMatcher37);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getTrimmerMatcher();
        char[] charArray41 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher43, strMatcher44);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer45.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher46, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher39, strMatcher47);
        boolean boolean50 = strList2.remove((java.lang.Object) "");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher52, strMatcher53);
        java.lang.String str55 = strTokenizer54.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer54.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.setDelimiterString("");
        java.lang.Object obj59 = strTokenizer58.clone();
        java.util.List<java.lang.String> strList60 = strTokenizer58.getTokenList();
        java.util.ListIterator<java.lang.String> strItor62 = strList60.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor63 = strList60.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int66 = strList60.indexOf((java.lang.Object) strMatcher65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray69 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher71, strMatcher72);
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = strTokenizer73.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, strMatcher74, strMatcher75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray69);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = strTokenizer77.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer67.setTrimmerMatcher(strMatcher78);
        int int80 = strList60.indexOf((java.lang.Object) strTokenizer79);
        java.lang.String str82 = strList60.remove((int) (short) 0);
        boolean boolean83 = strList2.containsAll((java.util.Collection<java.lang.String>) strList60);
        java.util.ListIterator<java.lang.String> strItor84 = strList2.listIterator();
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str7, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a]");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str55, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNotNull(strItor62);
        org.junit.Assert.assertNotNull(strItor63);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[a]");
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!" + "'", str82, "hi!");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(strItor84);
    }

    @Test
    public void test11847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11847");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("#a444 ");
        int int2 = strTokenizer1.previousIndex();
        java.lang.String str3 = strTokenizer1.nextToken();
        int int4 = strTokenizer1.previousIndex();
        int int5 = strTokenizer1.previousIndex();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "#a444" + "'", str3, "#a444");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test11848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11848");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        int int10 = strList9.size();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.stream.Stream<java.lang.String> strStream15 = strList13.stream();
        java.lang.Object[] objArray16 = strList13.toArray();
        boolean boolean17 = strList9.removeAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.String[] strArray20 = new java.lang.String[] { "", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher25);
        boolean boolean27 = strTokenizer26.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setIgnoredChar('4');
        int int30 = strTokenizer29.nextIndex();
        boolean boolean31 = strList21.equals((java.lang.Object) int30);
        int int32 = strList21.size();
        boolean boolean33 = strList9.retainAll((java.util.Collection<java.lang.String>) strList21);
        boolean boolean34 = strList9.isEmpty();
        java.util.stream.Stream<java.lang.String> strStream35 = strList9.stream();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer39.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher42, strMatcher43);
        java.lang.String str45 = strTokenizer44.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer44.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setDelimiterString("");
        java.lang.Object obj49 = strTokenizer48.clone();
        java.util.List<java.lang.String> strList50 = strTokenizer48.getTokenList();
        java.util.ListIterator<java.lang.String> strItor52 = strList50.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor53 = strList50.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int56 = strList50.indexOf((java.lang.Object) strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer39.setDelimiterMatcher(strMatcher55);
        java.util.List<java.lang.String> strList58 = strTokenizer57.getTokenList();
        strList58.clear();
        java.util.Spliterator<java.lang.String> strSpliterator60 = strList58.spliterator();
        boolean boolean61 = strList58.isEmpty();
        boolean boolean63 = strList58.add("StrTokenizer[, ]");
        boolean boolean64 = strList9.containsAll((java.util.Collection<java.lang.String>) strList58);
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator65 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList58.replaceAll(strUnaryOperator65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strStream35);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str45, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNotNull(strItor52);
        org.junit.Assert.assertNotNull(strItor53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNotNull(strSpliterator60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test11849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11849");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        char[] charArray10 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher15, strMatcher16);
        int int21 = strMatcher6.isMatch(charArray10, 1, 1, (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher25);
        java.lang.String str27 = strTokenizer26.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer26.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, 'a');
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str27, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer33);
    }

    @Test
    public void test11850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11850");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("hi!", "StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.reset("StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strTokenizer2.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher8);
        java.lang.String str10 = strTokenizer9.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer9.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer9.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setIgnoreEmptyTokens(false);
        java.lang.String str19 = strTokenizer16.next();
        char[] charArray21 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher23, strMatcher24);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer25.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher26, strMatcher27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer16.setIgnoredMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher34);
        java.lang.String str36 = strTokenizer35.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer35.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer35.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setQuoteChar('4');
        char[] charArray44 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher46, strMatcher47);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, strMatcher49, strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer40.reset(charArray44);
        int int59 = strMatcher30.isMatch(charArray44, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray44);
        int int66 = strMatcher5.isMatch(charArray44, (int) (short) 100);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str10, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str36, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
    }

    @Test
    public void test11851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11851");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        java.util.List<java.lang.String> strList10 = strTokenizer8.getTokenList();
        java.lang.Object obj11 = null;
        boolean boolean12 = strList10.remove(obj11);
        boolean boolean13 = strList2.removeAll((java.util.Collection<java.lang.String>) strList10);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher15, strMatcher16);
        java.lang.String str18 = strTokenizer17.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setDelimiterString("");
        java.lang.Object obj22 = strTokenizer21.clone();
        java.util.List<java.lang.String> strList23 = strTokenizer21.getTokenList();
        boolean boolean24 = strList2.retainAll((java.util.Collection<java.lang.String>) strList23);
        java.util.ListIterator<java.lang.String> strItor25 = strList23.listIterator();
        java.util.ListIterator<java.lang.String> strItor27 = strList23.listIterator((int) (byte) 1);
        int int28 = strList23.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher30, strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.reset("hi!");
        java.util.List<java.lang.String> strList35 = strTokenizer32.getTokenList();
        char[] charArray37 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher40);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher42, strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, '#', '#');
        int int52 = strList35.lastIndexOf((java.lang.Object) strTokenizer51);
        int int53 = strList35.size();
        java.util.Iterator<java.lang.String> strItor54 = strList35.iterator();
        int int55 = strList23.lastIndexOf((java.lang.Object) strList35);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher57, strMatcher58);
        java.lang.String str60 = strTokenizer59.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer59.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer59.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer59.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer64.setQuoteChar('4');
        int int67 = strTokenizer66.previousIndex();
        java.lang.String str68 = strTokenizer66.previousToken();
        boolean boolean69 = strTokenizer66.isEmptyTokenAsNull();
        int int70 = strList35.lastIndexOf((java.lang.Object) boolean69);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str18, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertNotNull(strItor27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(strItor54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str60, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
    }

    @Test
    public void test11852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11852");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.util.List<java.lang.String> strList5 = strTokenizer3.getTokenList();
        boolean boolean6 = strList5.isEmpty();
        boolean boolean7 = strList5.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher9, strMatcher10);
        java.lang.String str12 = strTokenizer11.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setDelimiterString("");
        java.lang.Object obj16 = strTokenizer15.clone();
        java.util.List<java.lang.String> strList17 = strTokenizer15.getTokenList();
        java.util.ListIterator<java.lang.String> strItor19 = strList17.listIterator((int) (short) 0);
        boolean boolean20 = strList5.containsAll((java.util.Collection<java.lang.String>) strList17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        java.util.List<java.lang.String> strList25 = strTokenizer24.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        java.lang.String str30 = strTokenizer29.toString();
        java.util.List<java.lang.String> strList31 = strTokenizer29.getTokenList();
        java.lang.Object obj32 = null;
        boolean boolean33 = strList31.remove(obj32);
        boolean boolean35 = strList31.add("StrTokenizer[not tokenized yet]");
        boolean boolean36 = strList25.containsAll((java.util.Collection<java.lang.String>) strList31);
        boolean boolean37 = strList5.retainAll((java.util.Collection<java.lang.String>) strList31);
        char[] charArray38 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setIgnoreEmptyTokens(true);
        boolean boolean44 = strTokenizer43.hasPrevious();
        java.lang.Object obj45 = strTokenizer43.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer43.setQuoteChar(' ');
        java.util.List<java.lang.String> strList48 = strTokenizer47.getTokenList();
        java.lang.Object[] objArray49 = strList48.toArray();
        boolean boolean50 = strList5.addAll((java.util.Collection<java.lang.String>) strList48);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher52, strMatcher53);
        java.lang.String str55 = strTokenizer54.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer54.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.setDelimiterString("");
        java.lang.Object obj59 = strTokenizer58.clone();
        java.util.List<java.lang.String> strList60 = strTokenizer58.getTokenList();
        java.util.ListIterator<java.lang.String> strItor62 = strList60.listIterator((int) (short) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher64, strMatcher65);
        java.lang.String str67 = strTokenizer66.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer66.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer66.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer66.setEmptyTokenAsNull(false);
        java.util.List<java.lang.String> strList72 = strTokenizer71.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer71.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer71.setIgnoredChar('4');
        boolean boolean77 = strTokenizer76.isEmptyTokenAsNull();
        boolean boolean78 = strTokenizer76.hasNext();
        int int79 = strList60.indexOf((java.lang.Object) strTokenizer76);
        boolean boolean80 = strList48.contains((java.lang.Object) strTokenizer76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer76.setQuoteChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer82.reset();
        int int84 = strTokenizer82.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str85 = strTokenizer82.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str12, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strItor19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str30, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str55, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNotNull(strItor62);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str67, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
    }

    @Test
    public void test11853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11853");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer9.reset();
        int int11 = strTokenizer9.size();
        java.lang.String str12 = strTokenizer9.next();
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, "StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer9.reset(charArray14);
        char[] charArray29 = new char[] {};
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, "StrTokenizer[]");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, '4');
        java.lang.String str39 = strTokenizer38.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer38.getQuoteMatcher();
        java.lang.String str41 = strTokenizer38.nextToken();
        char[] charArray42 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray42);
        char[] charArray45 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher47, strMatcher48);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer49.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, strMatcher50, strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, "a");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer43.reset(charArray45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, "#a444 ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, "#a444 ");
        int int67 = strTokenizer66.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = strTokenizer66.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer66.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer38.setQuoteMatcher(strMatcher69);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "a" + "'", str12, "a");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "a" + "'", str39, "a");
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a]");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer70);
    }

    @Test
    public void test11854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11854");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer7.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer7.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        java.lang.String str15 = strTokenizer14.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer14.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer14.setEmptyTokenAsNull(false);
        java.lang.Object obj20 = strTokenizer19.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer19.setDelimiterChar('a');
        boolean boolean23 = strTokenizer19.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer19.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer19.setIgnoredMatcher(strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        char[] charArray30 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher32, strMatcher33);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher35, strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, '#', '#');
        int int48 = strMatcher28.isMatch(charArray30, 10, (int) 'a', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, 'a', '4');
        int int54 = strMatcher10.isMatch(charArray30, (int) (short) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray30);
        int int58 = strTokenizer57.previousIndex();
        int int59 = strTokenizer57.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher61, strMatcher62);
        boolean boolean64 = strTokenizer63.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer63.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer63.setQuoteMatcher(strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer71.setIgnoreEmptyTokens(false);
        java.lang.String str74 = strTokenizer71.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = strTokenizer71.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer57.setTrimmerMatcher(strMatcher75);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str15, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strTokenizer76);
    }

    @Test
    public void test11855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11855");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset("hi!");
        java.util.List<java.lang.String> strList6 = strTokenizer3.getTokenList();
        char[] charArray8 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher10, strMatcher11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer12.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher13, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, '#', '#');
        int int23 = strList6.lastIndexOf((java.lang.Object) strTokenizer22);
        char[] charArray25 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher30, strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer33.reset();
        boolean boolean35 = strList6.contains((java.lang.Object) strTokenizer33);
        java.util.Iterator<java.lang.String> strItor36 = strList6.iterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher40);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getTrimmerMatcher();
        char[] charArray44 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher46, strMatcher47);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, strMatcher49, strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher42, strMatcher50);
        java.lang.Object obj53 = strTokenizer52.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer52.reset("hi!");
        java.util.List<java.lang.String> strList56 = strTokenizer52.getTokenList();
        int int57 = strList6.lastIndexOf((java.lang.Object) strTokenizer52);
        java.util.ListIterator<java.lang.String> strItor59 = strList6.listIterator(0);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a]");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strItor36);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strItor59);
    }

    @Test
    public void test11856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11856");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '#', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.setQuoteChar('a');
        boolean boolean20 = strTokenizer17.hasPrevious();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test11857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11857");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        java.lang.String str6 = strTokenizer5.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setQuoteChar(' ');
        boolean boolean9 = strTokenizer5.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher11, strMatcher12);
        java.lang.String str14 = strTokenizer13.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer13.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer13.setIgnoreEmptyTokens(false);
        java.lang.String str19 = strTokenizer13.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer13.setIgnoreEmptyTokens(true);
        char[] charArray23 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray23);
        char[] charArray36 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher38, strMatcher39);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer40.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher41, strMatcher42);
        char[] charArray45 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher47, strMatcher48);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer49.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, strMatcher50, strMatcher51);
        int int56 = strMatcher41.isMatch(charArray45, 1, 1, (int) ' ');
        char[] charArray57 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, strMatcher58);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher41, strMatcher60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer21.setDelimiterMatcher(strMatcher60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer5.setIgnoredMatcher(strMatcher60);
        int int64 = strTokenizer63.previousIndex();
        java.lang.Class<?> wildcardClass65 = strTokenizer63.getClass();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str6, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str14, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a]");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test11858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11858");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        java.lang.String str9 = strTokenizer3.nextToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        boolean boolean15 = strTokenizer14.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer14.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer14.setQuoteMatcher(strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer3.setDelimiterMatcher(strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer23.setDelimiterChar('4');
        int int26 = strTokenizer23.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer23.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.reset("hi!");
        java.lang.String[] strArray33 = strTokenizer32.getTokenArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher36, strMatcher37);
        java.lang.String str39 = strTokenizer38.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setDelimiterString("");
        java.lang.Object obj43 = strTokenizer42.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer42.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher44);
        char[] charArray47 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher49, strMatcher50);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher52, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher62, strMatcher63);
        int int68 = strMatcher44.isMatch(charArray47, (int) (byte) 0, (int) (byte) 1, (int) (short) 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer32.setIgnoredMatcher(strMatcher44);
        java.lang.String str70 = strTokenizer69.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer69.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer23.setDelimiterMatcher(strMatcher71);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str39, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a]");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strTokenizer72);
    }

    @Test
    public void test11859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11859");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.setIgnoredChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher22, strMatcher23);
        java.lang.String str25 = strTokenizer24.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.setDelimiterString("");
        java.lang.Object obj29 = strTokenizer28.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer28.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher32, strMatcher33);
        java.lang.String str35 = strTokenizer34.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer34.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer34.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer39.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setIgnoreEmptyTokens(false);
        java.lang.String str44 = strTokenizer41.next();
        char[] charArray46 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher48, strMatcher49);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer50.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher51, strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray46);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer41.setIgnoredMatcher(strMatcher55);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer41.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[hi!]", strMatcher30, strMatcher57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer17.setIgnoredMatcher(strMatcher30);
        boolean boolean60 = strTokenizer59.isEmptyTokenAsNull();
        boolean boolean61 = strTokenizer59.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer59.reset("StrTokenizer[");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer59.set("StrTokenizer[StrTokenizer[]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str25, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str35, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a]");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strTokenizer63);
    }

    @Test
    public void test11860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11860");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[]", "StrTokenizer[,");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer2.add("StrTokenizer[not");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test11861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11861");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        boolean boolean5 = strList2.isEmpty();
        char[] charArray6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher7);
        java.lang.String[] strArray9 = strTokenizer8.getTokenArray();
        boolean boolean10 = strList2.equals((java.lang.Object) strArray9);
        java.util.Spliterator<java.lang.String> strSpliterator11 = strList2.spliterator();
        java.util.stream.Stream<java.lang.String> strStream12 = strList2.stream();
        strList2.clear();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.stream.Stream<java.lang.String> strStream18 = strList16.stream();
        boolean boolean19 = strList16.isEmpty();
        java.lang.Object[] objArray20 = strList16.toArray();
        java.lang.String[] strArray26 = new java.lang.String[] { "StrTokenizer[not tokenized yet]", "hi!", "", "StrTokenizer[not tokenized yet]", "hi!" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        boolean boolean29 = strList16.removeAll((java.util.Collection<java.lang.String>) strList27);
        java.lang.String str32 = strList27.set(1, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher34, strMatcher35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.reset("hi!");
        java.util.List<java.lang.String> strList39 = strTokenizer36.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher41, strMatcher42);
        java.lang.String str44 = strTokenizer43.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.setDelimiterString("");
        java.lang.Object obj48 = strTokenizer47.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer47.getQuoteMatcher();
        boolean boolean50 = strList39.contains((java.lang.Object) strMatcher49);
        boolean boolean51 = strList27.addAll((java.util.Collection<java.lang.String>) strList39);
        boolean boolean52 = strList27.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher54, strMatcher55);
        java.lang.String str57 = strTokenizer56.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer56.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer56.setEmptyTokenAsNull(false);
        java.lang.Object obj62 = strTokenizer61.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer61.setQuoteChar('#');
        java.lang.String str65 = strTokenizer64.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer64.setIgnoreEmptyTokens(false);
        int int68 = strList27.lastIndexOf((java.lang.Object) strTokenizer67);
        java.util.Iterator<java.lang.String> strItor69 = strList27.iterator();
        char[] charArray71 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher73, strMatcher74);
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = strTokenizer75.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray71, strMatcher76, strMatcher77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray71, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = strTokenizer81.getQuoteMatcher();
        java.lang.String str83 = strTokenizer81.previousToken();
        boolean boolean84 = strList27.remove((java.lang.Object) strTokenizer81);
        strList27.clear();
        boolean boolean86 = strList2.removeAll((java.util.Collection<java.lang.String>) strList27);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strSpliterator11);
        org.junit.Assert.assertNotNull(strStream12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strStream18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[hi!]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str44, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str57, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(strItor69);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[a]");
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test11862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11862");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, 'a', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setIgnoreEmptyTokens(true);
        boolean boolean6 = strTokenizer5.hasPrevious();
        java.lang.Object obj7 = strTokenizer5.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer5.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setDelimiterChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setIgnoreEmptyTokens(false);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
    }

    @Test
    public void test11863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11863");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[StrTokenizer[StrTokenizer[not tokenized yet]]]", "   ");
        boolean boolean3 = strTokenizer2.hasNext();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test11864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11864");
        char[] charArray6 = new char[] { '#', 'a', '4', '4', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher10, strMatcher11);
        java.lang.String str13 = strTokenizer12.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer12.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer12.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setIgnoreEmptyTokens(false);
        java.lang.String str22 = strTokenizer19.next();
        char[] charArray24 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher27);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher29, strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray24);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer32.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer19.setIgnoredMatcher(strMatcher33);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher36, strMatcher37);
        java.lang.String str39 = strTokenizer38.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer38.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer38.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.setQuoteChar('4');
        char[] charArray47 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher49, strMatcher50);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher52, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer43.reset(charArray47);
        int int62 = strMatcher33.isMatch(charArray47, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher64, strMatcher65);
        java.lang.String str67 = strTokenizer66.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer66.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer66.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer66.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer71.setQuoteChar('4');
        char[] charArray75 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher77, strMatcher78);
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = strTokenizer79.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, strMatcher80, strMatcher81);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer71.reset(charArray75);
        int int90 = strMatcher33.isMatch(charArray75, (int) (short) 100, 0, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer8.setDelimiterMatcher(strMatcher33);
        org.apache.commons.lang3.text.StrMatcher strMatcher92 = strTokenizer8.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = strTokenizer8.setIgnoredChar(' ');
        java.lang.Object obj95 = strTokenizer94.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer97 = strTokenizer94.setQuoteChar(' ');
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#a444 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#a444 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, a, 4, 4, 4,  ]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str13, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a]");
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str39, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a]");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str67, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[a]");
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertNotNull(strMatcher92);
        org.junit.Assert.assertNotNull(strTokenizer94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals(obj95.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj95), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj95), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer97);
    }

    @Test
    public void test11865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11865");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher7);
        boolean boolean9 = strList2.remove((java.lang.Object) strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[hi!]", '4');
        int int13 = strList2.lastIndexOf((java.lang.Object) '4');
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.stream.Stream<java.lang.String> strStream18 = strList16.stream();
        boolean boolean19 = strList16.isEmpty();
        java.lang.Object[] objArray20 = strList16.toArray();
        java.lang.String[] strArray26 = new java.lang.String[] { "StrTokenizer[not tokenized yet]", "hi!", "", "StrTokenizer[not tokenized yet]", "hi!" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        boolean boolean29 = strList16.removeAll((java.util.Collection<java.lang.String>) strList27);
        java.util.stream.Stream<java.lang.String> strStream30 = strList27.parallelStream();
        boolean boolean31 = strList2.removeAll((java.util.Collection<java.lang.String>) strList27);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher34);
        java.lang.String str36 = strTokenizer35.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("");
        java.lang.Object obj40 = strTokenizer39.clone();
        java.util.List<java.lang.String> strList41 = strTokenizer39.getTokenList();
        int int42 = strList41.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher44, strMatcher45);
        java.lang.String str47 = strTokenizer46.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.setDelimiterString("");
        java.lang.Object obj51 = strTokenizer50.clone();
        java.util.List<java.lang.String> strList52 = strTokenizer50.getTokenList();
        int int53 = strList52.size();
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.stream.Stream<java.lang.String> strStream58 = strList56.stream();
        java.lang.Object[] objArray59 = strList56.toArray();
        boolean boolean60 = strList52.removeAll((java.util.Collection<java.lang.String>) strList56);
        boolean boolean61 = strList41.containsAll((java.util.Collection<java.lang.String>) strList52);
        java.util.Spliterator<java.lang.String> strSpliterator62 = strList52.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher64, strMatcher65);
        java.lang.String str67 = strTokenizer66.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer66.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer68.setDelimiterString("");
        java.lang.Object obj71 = strTokenizer70.clone();
        java.util.List<java.lang.String> strList72 = strTokenizer70.getTokenList();
        int int73 = strList72.size();
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList76 = new java.util.ArrayList<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        java.util.stream.Stream<java.lang.String> strStream78 = strList76.stream();
        java.lang.Object[] objArray79 = strList76.toArray();
        boolean boolean80 = strList72.removeAll((java.util.Collection<java.lang.String>) strList76);
        int int81 = strList52.indexOf((java.lang.Object) strList76);
        boolean boolean82 = strList2.retainAll((java.util.Collection<java.lang.String>) strList76);
        strList2.add(0, "StrTokenizer[,");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str88 = strList2.set((int) (short) 1, "#a444 ");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strStream18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[hi!]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strStream30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str36, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str47, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strStream58);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strSpliterator62);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str67, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strStream78);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test11866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11866");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        java.lang.String str9 = strTokenizer3.nextToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        boolean boolean15 = strTokenizer14.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer14.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer14.setQuoteMatcher(strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer3.setDelimiterMatcher(strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer23.reset("h");
        java.lang.String str26 = strTokenizer25.previousToken();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test11867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11867");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        int int10 = strTokenizer7.size();
        java.util.List<java.lang.String> strList11 = strTokenizer7.getTokenList();
        java.lang.Object obj12 = null;
        int int13 = strList11.lastIndexOf(obj12);
        java.util.stream.Stream<java.lang.String> strStream14 = strList11.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        java.lang.String str19 = strTokenizer18.toString();
        java.util.List<java.lang.String> strList20 = strTokenizer18.getTokenList();
        boolean boolean21 = strList20.isEmpty();
        boolean boolean22 = strList20.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher25);
        java.lang.String str27 = strTokenizer26.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer28.setDelimiterString("");
        java.lang.Object obj31 = strTokenizer30.clone();
        java.util.List<java.lang.String> strList32 = strTokenizer30.getTokenList();
        java.util.ListIterator<java.lang.String> strItor34 = strList32.listIterator((int) (short) 0);
        boolean boolean35 = strList20.containsAll((java.util.Collection<java.lang.String>) strList32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        java.util.List<java.lang.String> strList40 = strTokenizer39.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher42, strMatcher43);
        java.lang.String str45 = strTokenizer44.toString();
        java.util.List<java.lang.String> strList46 = strTokenizer44.getTokenList();
        java.lang.Object obj47 = null;
        boolean boolean48 = strList46.remove(obj47);
        boolean boolean50 = strList46.add("StrTokenizer[not tokenized yet]");
        boolean boolean51 = strList40.containsAll((java.util.Collection<java.lang.String>) strList46);
        boolean boolean52 = strList20.retainAll((java.util.Collection<java.lang.String>) strList46);
        java.util.Iterator<java.lang.String> strItor53 = strList46.iterator();
        boolean boolean54 = strList46.isEmpty();
        boolean boolean55 = strList11.addAll((java.util.Collection<java.lang.String>) strList46);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher57, strMatcher58);
        java.lang.String str60 = strTokenizer59.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer59.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer59.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer59.setEmptyTokenAsNull(false);
        boolean boolean65 = strTokenizer59.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer59.setTrimmerMatcher(strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer59.setIgnoredChar(' ');
        java.lang.String str73 = strTokenizer72.nextToken();
        java.util.List<java.lang.String> strList74 = strTokenizer72.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = strTokenizer72.getTrimmerMatcher();
        int int76 = strList46.indexOf((java.lang.Object) strTokenizer72);
        java.lang.String str78 = strList46.get((int) (short) 1);
        java.util.stream.Stream<java.lang.String> strStream79 = strList46.parallelStream();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strStream14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str19, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str27, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNotNull(strItor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str45, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strItor53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str60, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str78, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strStream79);
    }

    @Test
    public void test11868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11868");
        char[] charArray1 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, 'a', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.setIgnoreEmptyTokens(true);
        boolean boolean7 = strTokenizer6.hasPrevious();
        java.lang.Object obj8 = strTokenizer6.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer6.setQuoteChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        boolean boolean15 = strTokenizer14.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer14.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.setIgnoredChar('a');
        char[] charArray21 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher23, strMatcher24);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer25.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher26, strMatcher27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer19.setDelimiterMatcher(strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer6.setQuoteMatcher(strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[a]", strMatcher38);
        java.util.List<java.lang.String> strList42 = strTokenizer41.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer41.getIgnoredMatcher();
        java.lang.String str44 = strTokenizer41.next();
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "StrTokenizer[" + "'", str44, "StrTokenizer[");
    }

    @Test
    public void test11869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11869");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "StrTokenizer[not tokenized yet]");
        java.util.List<java.lang.String> strList15 = strTokenizer14.getTokenList();
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.stream.Stream<java.lang.String> strStream20 = strList18.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher23, strMatcher24);
        java.lang.String str26 = strTokenizer25.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer25.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setDelimiterString("");
        java.lang.Object obj30 = strTokenizer29.clone();
        java.util.List<java.lang.String> strList31 = strTokenizer29.getTokenList();
        int int32 = strList31.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher34, strMatcher35);
        java.lang.String str37 = strTokenizer36.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setDelimiterString("");
        java.lang.Object obj41 = strTokenizer40.clone();
        java.util.List<java.lang.String> strList42 = strTokenizer40.getTokenList();
        int int43 = strList42.size();
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.stream.Stream<java.lang.String> strStream48 = strList46.stream();
        java.lang.Object[] objArray49 = strList46.toArray();
        boolean boolean50 = strList42.removeAll((java.util.Collection<java.lang.String>) strList46);
        boolean boolean51 = strList31.containsAll((java.util.Collection<java.lang.String>) strList42);
        java.util.Spliterator<java.lang.String> strSpliterator52 = strList42.spliterator();
        boolean boolean53 = strList18.addAll((int) (byte) 0, (java.util.Collection<java.lang.String>) strList42);
        boolean boolean54 = strList15.addAll((java.util.Collection<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("hi!", "StrTokenizer[not tokenized yet]");
        boolean boolean58 = strList15.contains((java.lang.Object) strTokenizer57);
        java.util.Iterator<java.lang.String> strItor59 = strList15.iterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str61 = strList15.remove(5);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 5, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strStream20);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str26, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str37, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strStream48);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strSpliterator52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strItor59);
    }

    @Test
    public void test11870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11870");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer7.setIgnoredChar('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer7.getQuoteMatcher();
        boolean boolean11 = strTokenizer7.isEmptyTokenAsNull();
        java.lang.String str12 = strTokenizer7.toString();
        java.lang.String str13 = strTokenizer7.next();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str12, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test11871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11871");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("not tokenized yet]", "not tokenized yet]");
    }

    @Test
    public void test11872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11872");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[, ]", '4');
        char[] charArray4 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, strMatcher9, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray4);
        char[] charArray17 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher22, strMatcher23);
        char[] charArray26 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher28, strMatcher29);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer30.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher31, strMatcher32);
        int int37 = strMatcher22.isMatch(charArray26, 1, 1, (int) ' ');
        char[] charArray38 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher39);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer40.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, strMatcher22, strMatcher41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        boolean boolean45 = strTokenizer44.hasNext();
        java.lang.Object obj46 = strTokenizer44.clone();
        int int47 = strTokenizer44.previousIndex();
        boolean boolean48 = strTokenizer44.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher54, strMatcher55);
        java.lang.String str57 = strTokenizer56.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer56.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer56.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer56.setDelimiterMatcher(strMatcher62);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer63.getDelimiterMatcher();
        char[] charArray66 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher68, strMatcher69);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer70.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, strMatcher71, strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray66);
        int int75 = strTokenizer74.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer74.setIgnoredMatcher(strMatcher76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, strMatcher64, strMatcher76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer2.setDelimiterMatcher(strMatcher64);
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = strTokenizer2.getTrimmerMatcher();
        char[] charArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int83 = strMatcher80.isMatch(charArray81, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[a]");
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a]");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str57, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a]");
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strMatcher80);
    }

    @Test
    public void test11873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11873");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher2, strMatcher3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.reset("hi!");
        java.util.List<java.lang.String> strList7 = strTokenizer4.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher9, strMatcher10);
        java.lang.String str12 = strTokenizer11.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setDelimiterString("");
        java.lang.Object obj16 = strTokenizer15.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer15.getQuoteMatcher();
        boolean boolean18 = strList7.contains((java.lang.Object) strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer19.reset();
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str12, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strTokenizer20);
    }

    @Test
    public void test11874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11874");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        java.util.List<java.lang.String> strList10 = strTokenizer8.getTokenList();
        boolean boolean11 = strList10.isEmpty();
        boolean boolean12 = strList10.isEmpty();
        java.util.stream.Stream<java.lang.String> strStream13 = strList10.stream();
        boolean boolean14 = strList3.addAll((java.util.Collection<java.lang.String>) strList10);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        java.lang.String str19 = strTokenizer18.toString();
        java.util.List<java.lang.String> strList20 = strTokenizer18.getTokenList();
        java.lang.String[] strArray23 = new java.lang.String[] { "", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        boolean boolean30 = strTokenizer29.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer29.setIgnoredChar('4');
        int int33 = strTokenizer32.nextIndex();
        boolean boolean34 = strList24.equals((java.lang.Object) int33);
        int int35 = strList24.size();
        boolean boolean36 = strList20.containsAll((java.util.Collection<java.lang.String>) strList24);
        boolean boolean37 = strList3.contains((java.lang.Object) strList24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("a");
        java.util.List<java.lang.String> strList40 = strTokenizer39.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher42, strMatcher43);
        java.lang.String str45 = strTokenizer44.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer44.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer44.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer44.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer49.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer51.setIgnoreEmptyTokens(false);
        int int54 = strList40.indexOf((java.lang.Object) strTokenizer51);
        strList40.clear();
        char[] charArray56 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, strMatcher57);
        int int59 = strTokenizer58.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer58.reset();
        java.lang.String str61 = strTokenizer58.nextToken();
        boolean boolean62 = strList40.remove((java.lang.Object) str61);
        java.util.stream.Stream<java.lang.String> strStream63 = strList40.stream();
        java.util.ListIterator<java.lang.String> strItor64 = strList40.listIterator();
        boolean boolean65 = strList24.retainAll((java.util.Collection<java.lang.String>) strList40);
        boolean boolean66 = strList40.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str68 = strList40.remove((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str19, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str45, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strStream63);
        org.junit.Assert.assertNotNull(strItor64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test11875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11875");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        java.util.List<java.lang.String> strList4 = strTokenizer3.getTokenList();
        strList4.clear();
        strList4.clear();
        java.lang.Cloneable[] cloneableArray7 = new java.lang.Cloneable[] {};
        java.lang.Cloneable[] cloneableArray8 = strList4.toArray(cloneableArray7);
        java.lang.Object[] objArray9 = strList4.toArray();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.stream.Stream<java.lang.String> strStream14 = strList12.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        java.lang.String str19 = strTokenizer18.toString();
        java.util.List<java.lang.String> strList20 = strTokenizer18.getTokenList();
        java.lang.Object obj21 = null;
        boolean boolean22 = strList20.remove(obj21);
        boolean boolean23 = strList12.removeAll((java.util.Collection<java.lang.String>) strList20);
        java.util.Spliterator<java.lang.String> strSpliterator24 = strList12.spliterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        boolean boolean29 = strList27.isEmpty();
        java.lang.Object[] objArray30 = strList27.toArray();
        java.lang.Object[] objArray31 = strList12.toArray(objArray30);
        int int32 = strList4.indexOf((java.lang.Object) strList12);
        strList4.clear();
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.stream.Stream<java.lang.String> strStream38 = strList36.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher41);
        boolean boolean43 = strList36.remove((java.lang.Object) strMatcher41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[hi!]", '4');
        int int47 = strList36.lastIndexOf((java.lang.Object) '4');
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.stream.Stream<java.lang.String> strStream52 = strList50.stream();
        boolean boolean53 = strList50.isEmpty();
        java.lang.Object[] objArray54 = strList50.toArray();
        java.lang.String[] strArray60 = new java.lang.String[] { "StrTokenizer[not tokenized yet]", "hi!", "", "StrTokenizer[not tokenized yet]", "hi!" };
        java.util.ArrayList<java.lang.String> strList61 = new java.util.ArrayList<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        boolean boolean63 = strList50.removeAll((java.util.Collection<java.lang.String>) strList61);
        java.util.stream.Stream<java.lang.String> strStream64 = strList61.parallelStream();
        boolean boolean65 = strList36.removeAll((java.util.Collection<java.lang.String>) strList61);
        strList36.clear();
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList69 = new java.util.ArrayList<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        boolean boolean71 = strList69.isEmpty();
        java.lang.Object[] objArray72 = strList69.toArray();
        java.lang.String str74 = strList69.remove(0);
        boolean boolean75 = strList36.addAll((java.util.Collection<java.lang.String>) strList69);
        java.lang.String[] strArray77 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList78 = new java.util.ArrayList<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        java.util.stream.Stream<java.lang.String> strStream80 = strList78.stream();
        java.lang.Object[] objArray81 = strList78.toArray();
        boolean boolean82 = strList69.addAll((java.util.Collection<java.lang.String>) strList78);
        boolean boolean83 = strList4.retainAll((java.util.Collection<java.lang.String>) strList69);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str86 = strList69.set(6, "#a444 ");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 6, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(cloneableArray7);
        org.junit.Assert.assertNotNull(cloneableArray8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strStream14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str19, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strSpliterator24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[null]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[null]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strStream38);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strStream52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[hi!]");
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strStream64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[hi!]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(strStream80);
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test11876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11876");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        java.util.List<java.lang.String> strList4 = strTokenizer3.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        java.util.List<java.lang.String> strList10 = strTokenizer8.getTokenList();
        java.lang.Object obj11 = null;
        boolean boolean12 = strList10.remove(obj11);
        boolean boolean14 = strList10.add("StrTokenizer[not tokenized yet]");
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.String>) strList10);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher17, strMatcher18);
        java.lang.String str20 = strTokenizer19.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.setDelimiterString("");
        java.lang.Object obj24 = strTokenizer23.clone();
        java.util.List<java.lang.String> strList25 = strTokenizer23.getTokenList();
        int int26 = strList25.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher28, strMatcher29);
        java.lang.String str31 = strTokenizer30.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.setDelimiterString("");
        java.lang.Object obj35 = strTokenizer34.clone();
        java.util.List<java.lang.String> strList36 = strTokenizer34.getTokenList();
        int int37 = strList36.size();
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        java.util.stream.Stream<java.lang.String> strStream42 = strList40.stream();
        java.lang.Object[] objArray43 = strList40.toArray();
        boolean boolean44 = strList36.removeAll((java.util.Collection<java.lang.String>) strList40);
        boolean boolean45 = strList25.containsAll((java.util.Collection<java.lang.String>) strList36);
        java.util.Spliterator<java.lang.String> strSpliterator46 = strList36.spliterator();
        boolean boolean47 = strList4.containsAll((java.util.Collection<java.lang.String>) strList36);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher49, strMatcher50);
        java.lang.String str52 = strTokenizer51.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer51.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer53.setDelimiterString("");
        java.lang.Object obj56 = strTokenizer55.clone();
        java.util.List<java.lang.String> strList57 = strTokenizer55.getTokenList();
        int int58 = strList57.size();
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList61 = new java.util.ArrayList<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        java.util.stream.Stream<java.lang.String> strStream63 = strList61.stream();
        java.lang.Object[] objArray64 = strList61.toArray();
        boolean boolean65 = strList57.removeAll((java.util.Collection<java.lang.String>) strList61);
        java.lang.String[] strArray68 = new java.lang.String[] { "", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList69 = new java.util.ArrayList<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher72, strMatcher73);
        boolean boolean75 = strTokenizer74.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer74.setIgnoredChar('4');
        int int78 = strTokenizer77.nextIndex();
        boolean boolean79 = strList69.equals((java.lang.Object) int78);
        int int80 = strList69.size();
        boolean boolean81 = strList57.retainAll((java.util.Collection<java.lang.String>) strList69);
        boolean boolean82 = strList57.isEmpty();
        java.util.stream.Stream<java.lang.String> strStream83 = strList57.stream();
        boolean boolean84 = strList36.removeAll((java.util.Collection<java.lang.String>) strList57);
        java.lang.Object obj85 = null;
        int int86 = strList36.lastIndexOf(obj85);
        java.util.stream.Stream<java.lang.String> strStream87 = strList36.stream();
        java.lang.Object obj88 = null;
        boolean boolean89 = strList36.contains(obj88);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str20, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str31, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strStream42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strSpliterator46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str52, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strStream63);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 2 + "'", int80 == 2);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(strStream83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNotNull(strStream87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test11877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11877");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        boolean boolean5 = strList2.isEmpty();
        char[] charArray6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher7);
        java.lang.String[] strArray9 = strTokenizer8.getTokenArray();
        boolean boolean10 = strList2.equals((java.lang.Object) strArray9);
        java.util.Spliterator<java.lang.String> strSpliterator11 = strList2.spliterator();
        java.util.stream.Stream<java.lang.String> strStream12 = strList2.stream();
        strList2.clear();
        java.util.stream.Stream<java.lang.String> strStream14 = strList2.stream();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.stream.Stream<java.lang.String> strStream19 = strList17.stream();
        boolean boolean20 = strList17.isEmpty();
        java.lang.Object[] objArray21 = strList17.toArray();
        java.lang.String[] strArray27 = new java.lang.String[] { "StrTokenizer[not tokenized yet]", "hi!", "", "StrTokenizer[not tokenized yet]", "hi!" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        boolean boolean30 = strList17.removeAll((java.util.Collection<java.lang.String>) strList28);
        java.lang.String str33 = strList28.set(1, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher35, strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.reset("hi!");
        java.util.List<java.lang.String> strList40 = strTokenizer37.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher42, strMatcher43);
        java.lang.String str45 = strTokenizer44.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer44.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setDelimiterString("");
        java.lang.Object obj49 = strTokenizer48.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer48.getQuoteMatcher();
        boolean boolean51 = strList40.contains((java.lang.Object) strMatcher50);
        boolean boolean52 = strList28.addAll((java.util.Collection<java.lang.String>) strList40);
        boolean boolean53 = strList28.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher55, strMatcher56);
        java.lang.String str58 = strTokenizer57.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer57.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer57.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer57.setEmptyTokenAsNull(false);
        java.lang.Object obj63 = strTokenizer62.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer62.setQuoteChar('#');
        java.lang.String str66 = strTokenizer65.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer65.setIgnoreEmptyTokens(false);
        int int69 = strList28.lastIndexOf((java.lang.Object) strTokenizer68);
        boolean boolean70 = strList2.containsAll((java.util.Collection<java.lang.String>) strList28);
        java.util.ListIterator<java.lang.String> strItor71 = strList28.listIterator();
        int int72 = strList28.size();
        java.util.ListIterator<java.lang.String> strItor73 = strList28.listIterator();
        java.lang.CharSequence[][][] charSequenceArray74 = new java.lang.CharSequence[][][] {};
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence[][][] charSequenceArray75 = strList28.toArray(charSequenceArray74);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strSpliterator11);
        org.junit.Assert.assertNotNull(strStream12);
        org.junit.Assert.assertNotNull(strStream14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strStream19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[hi!]");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str45, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str58, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strItor71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 6 + "'", int72 == 6);
        org.junit.Assert.assertNotNull(strItor73);
        org.junit.Assert.assertNotNull(charSequenceArray74);
    }

    @Test
    public void test11878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11878");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("a   ", "   ");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer2.getIgnoredMatcher();
        org.junit.Assert.assertNotNull(strMatcher3);
    }

    @Test
    public void test11879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11879");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        boolean boolean4 = strList2.isEmpty();
        strList2.clear();
        strList2.clear();
        java.lang.Object[] objArray7 = strList2.toArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher9, strMatcher10);
        java.lang.String str12 = strTokenizer11.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setDelimiterString("");
        java.lang.Object obj16 = strTokenizer15.clone();
        java.util.List<java.lang.String> strList17 = strTokenizer15.getTokenList();
        java.util.ListIterator<java.lang.String> strItor19 = strList17.listIterator((int) (short) 0);
        boolean boolean20 = strList17.isEmpty();
        java.util.Spliterator<java.lang.String> strSpliterator21 = strList17.spliterator();
        strList17.clear();
        int int23 = strList2.indexOf((java.lang.Object) strList17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("a");
        java.util.List<java.lang.String> strList26 = strTokenizer25.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher28, strMatcher29);
        java.lang.String str31 = strTokenizer30.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer30.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer30.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setIgnoreEmptyTokens(false);
        int int40 = strList26.indexOf((java.lang.Object) strTokenizer37);
        strList26.clear();
        java.util.Iterator<java.lang.String> strItor42 = strList26.iterator();
        boolean boolean43 = strList2.addAll((java.util.Collection<java.lang.String>) strList26);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str12, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strItor19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strSpliterator21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str31, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strItor42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test11880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11880");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.util.List<java.lang.String> strList5 = strTokenizer3.getTokenList();
        java.lang.Object obj6 = null;
        boolean boolean7 = strList5.remove(obj6);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher10);
        boolean boolean12 = strList5.contains((java.lang.Object) "");
        java.util.ListIterator<java.lang.String> strItor14 = strList5.listIterator(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        java.lang.String str19 = strTokenizer18.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setDelimiterString("");
        java.lang.Object obj23 = strTokenizer22.clone();
        java.util.List<java.lang.String> strList24 = strTokenizer22.getTokenList();
        java.util.ListIterator<java.lang.String> strItor26 = strList24.listIterator((int) (short) 0);
        boolean boolean27 = strList24.isEmpty();
        java.util.List<java.lang.String> strList30 = strList24.subList((int) (short) 0, (int) (short) 1);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.stream.Stream<java.lang.String> strStream35 = strList33.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher37, strMatcher38);
        java.lang.String str40 = strTokenizer39.toString();
        java.util.List<java.lang.String> strList41 = strTokenizer39.getTokenList();
        java.lang.Object obj42 = null;
        boolean boolean43 = strList41.remove(obj42);
        boolean boolean44 = strList33.removeAll((java.util.Collection<java.lang.String>) strList41);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher46, strMatcher47);
        java.lang.String str49 = strTokenizer48.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.setDelimiterString("");
        java.lang.Object obj53 = strTokenizer52.clone();
        java.util.List<java.lang.String> strList54 = strTokenizer52.getTokenList();
        boolean boolean55 = strList33.retainAll((java.util.Collection<java.lang.String>) strList54);
        java.util.ListIterator<java.lang.String> strItor56 = strList33.listIterator();
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.stream.Stream<java.lang.String> strStream61 = strList59.stream();
        boolean boolean62 = strList59.isEmpty();
        java.lang.Object[] objArray63 = strList59.toArray();
        boolean boolean64 = strList33.addAll((java.util.Collection<java.lang.String>) strList59);
        boolean boolean65 = strList30.removeAll((java.util.Collection<java.lang.String>) strList59);
        boolean boolean66 = strList5.retainAll((java.util.Collection<java.lang.String>) strList59);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher68, strMatcher69);
        java.lang.String str71 = strTokenizer70.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer70.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer72.setDelimiterString("");
        java.lang.Object obj75 = strTokenizer74.clone();
        java.util.List<java.lang.String> strList76 = strTokenizer74.getTokenList();
        java.util.ListIterator<java.lang.String> strItor78 = strList76.listIterator((int) (short) 0);
        java.util.stream.Stream<java.lang.String> strStream79 = strList76.stream();
        boolean boolean80 = strList59.removeAll((java.util.Collection<java.lang.String>) strList76);
        java.lang.String str83 = strList76.set(0, "StrTokenizer[not tokenized yet]");
        java.util.ListIterator<java.lang.String> strItor84 = strList76.listIterator();
        java.lang.Object[] objArray85 = strList76.toArray();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str88 = strList76.set((int) '#', "StrTokenizer[StrTokenizer[, ]]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strItor14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str19, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strItor26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strStream35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str40, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str49, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strItor56);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strStream61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str71, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strItor78);
        org.junit.Assert.assertNotNull(strStream79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!" + "'", str83, "hi!");
        org.junit.Assert.assertNotNull(strItor84);
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[StrTokenizer[not tokenized yet]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[StrTokenizer[not tokenized yet]]");
    }

    @Test
    public void test11881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11881");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        int int2 = strTokenizer1.nextIndex();
        int int3 = strTokenizer1.size();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    }

    @Test
    public void test11882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11882");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        char[] charArray23 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28, strMatcher29);
        int int34 = strMatcher19.isMatch(charArray23, 1, 1, (int) ' ');
        char[] charArray35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher19, strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setIgnoredChar('#');
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer48);
    }

    @Test
    public void test11883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11883");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[hi!]");
        java.util.List<java.lang.String> strList2 = strTokenizer1.getTokenList();
        java.lang.Class<?> wildcardClass3 = strTokenizer1.getClass();
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test11884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11884");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("", ' ', ' ');
        java.lang.String str4 = strTokenizer3.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.reset("");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        java.lang.String str15 = strTokenizer14.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer14.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer14.setEmptyTokenAsNull(false);
        java.lang.Object obj20 = strTokenizer19.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer19.setDelimiterChar('a');
        boolean boolean23 = strTokenizer19.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer19.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer19.setIgnoredMatcher(strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        char[] charArray30 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher32, strMatcher33);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher35, strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, '#', '#');
        int int48 = strMatcher28.isMatch(charArray30, 10, (int) 'a', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, 'a', '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher55, strMatcher56);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer57.getTrimmerMatcher();
        char[] charArray60 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher62, strMatcher63);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = strTokenizer64.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, strMatcher65, strMatcher66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher58, strMatcher66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer10.setIgnoredMatcher(strMatcher58);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher72, strMatcher73);
        java.lang.String str75 = strTokenizer74.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer74.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = strTokenizer74.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer74.setEmptyTokenAsNull(false);
        boolean boolean80 = strTokenizer74.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer74.setTrimmerMatcher(strMatcher83);
        boolean boolean86 = strTokenizer74.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = strTokenizer74.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer10.setTrimmerMatcher(strMatcher87);
        java.lang.String str89 = strTokenizer10.toString();
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str15, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[a]");
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str75, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str89, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test11885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11885");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher11, strMatcher12);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getTrimmerMatcher();
        char[] charArray16 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher18, strMatcher19);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher21, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer13.reset(charArray16);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
    }

    @Test
    public void test11886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11886");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        boolean boolean11 = strTokenizer10.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        java.lang.String str16 = strTokenizer15.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer15.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer15.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.setIgnoreEmptyTokens(false);
        java.lang.String str25 = strTokenizer22.next();
        char[] charArray27 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher29, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher32, strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray27);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer35.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer22.setIgnoredMatcher(strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher40);
        java.lang.String str42 = strTokenizer41.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer41.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer41.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setQuoteChar('4');
        char[] charArray50 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher52, strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher55, strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer46.reset(charArray50);
        int int65 = strMatcher36.isMatch(charArray50, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer10.setQuoteMatcher(strMatcher36);
        char[] charArray68 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher70, strMatcher71);
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = strTokenizer72.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, strMatcher73, strMatcher74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, strMatcher83, strMatcher84);
        int int87 = strMatcher36.isMatch(charArray68, 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, '#');
        boolean boolean93 = strTokenizer92.isIgnoreEmptyTokens();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str16, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str42, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a]");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[a]");
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test11887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11887");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        java.lang.Object obj9 = strTokenizer8.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer8.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer8.setTrimmerMatcher(strMatcher13);
        java.lang.String str15 = strTokenizer14.getContent();
        java.lang.String str16 = strTokenizer14.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        java.lang.Object obj19 = strTokenizer18.clone();
        boolean boolean20 = strTokenizer18.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer18.setQuoteChar('#');
        int int23 = strTokenizer22.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer22.setTrimmerMatcher(strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer22.setIgnoreEmptyTokens(true);
        char[] charArray29 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher31, strMatcher32);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher34, strMatcher35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray29);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer27.setIgnoredMatcher(strMatcher48);
        boolean boolean50 = strTokenizer49.hasNext();
        char[] charArray52 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher54, strMatcher55);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer56.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher57, strMatcher58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray52);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher62, strMatcher63);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = strTokenizer64.getTrimmerMatcher();
        char[] charArray67 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher69, strMatcher70);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer71.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, strMatcher72, strMatcher73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer64.reset(charArray67);
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = strTokenizer79.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher80);
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray52);
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = strTokenizer49.reset(charArray52);
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = strTokenizer49.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[StrTokenizer[StrTokenizer[not tokenized yet]]]", strMatcher85);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer14.setTrimmerMatcher(strMatcher85);
        java.lang.String[] strArray88 = strTokenizer87.getTokenArray();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a]");
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strArray88);
    }

    @Test
    public void test11888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11888");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        java.lang.Object obj9 = strTokenizer8.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher11, strMatcher12);
        java.lang.String str14 = strTokenizer13.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer13.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer13.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer13.setDelimiterMatcher(strMatcher19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer8.setQuoteMatcher(strMatcher19);
        java.util.List<java.lang.String> strList22 = strTokenizer21.getTokenList();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        java.util.stream.Stream<java.lang.String> strStream27 = strList25.stream();
        boolean boolean28 = strList25.isEmpty();
        java.lang.Object[] objArray29 = strList25.toArray();
        java.lang.String[] strArray35 = new java.lang.String[] { "StrTokenizer[not tokenized yet]", "hi!", "", "StrTokenizer[not tokenized yet]", "hi!" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        boolean boolean38 = strList25.removeAll((java.util.Collection<java.lang.String>) strList36);
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.stream.Stream<java.lang.String> strStream44 = strList42.stream();
        boolean boolean45 = strList42.isEmpty();
        char[] charArray46 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher47);
        java.lang.String[] strArray49 = strTokenizer48.getTokenArray();
        boolean boolean50 = strList42.equals((java.lang.Object) strArray49);
        java.util.Spliterator<java.lang.String> strSpliterator51 = strList42.spliterator();
        java.lang.Object[] objArray52 = strList42.toArray();
        boolean boolean53 = strList36.addAll(0, (java.util.Collection<java.lang.String>) strList42);
        boolean boolean54 = strList22.containsAll((java.util.Collection<java.lang.String>) strList36);
        java.util.Spliterator<java.lang.String> strSpliterator55 = strList36.spliterator();
        char[] charArray56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, "StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer58.setDelimiterChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer58.setDelimiterChar(' ');
        int int63 = strList36.indexOf((java.lang.Object) strTokenizer58);
        int int64 = strTokenizer58.nextIndex();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str14, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strStream27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[hi!]");
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strStream44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strSpliterator51);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strSpliterator55);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
    }

    @Test
    public void test11889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11889");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoreEmptyTokens(false);
        java.lang.String str13 = strTokenizer10.next();
        char[] charArray15 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher17, strMatcher18);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer10.setIgnoredMatcher(strMatcher24);
        int int26 = strTokenizer10.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer10.setQuoteChar('a');
        int int29 = strTokenizer28.nextIndex();
        boolean boolean30 = strTokenizer28.hasNext();
        boolean boolean31 = strTokenizer28.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer28.reset();
        char[] charArray33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, "StrTokenizer[a]");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer35.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer28.setIgnoredMatcher(strMatcher36);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strTokenizer37);
    }

    @Test
    public void test11890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11890");
        char[] charArray0 = null;
        char[] charArray2 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7, strMatcher8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, strMatcher18, strMatcher19);
        char[] charArray22 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher25);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher27, strMatcher28);
        char[] charArray31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setIgnoredMatcher(strMatcher34);
        char[] charArray37 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher40);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher42, strMatcher43);
        char[] charArray46 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher48, strMatcher49);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer50.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher51, strMatcher52);
        int int57 = strMatcher42.isMatch(charArray46, 1, 1, (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray46);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher60, strMatcher61);
        java.lang.String str63 = strTokenizer62.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer62.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = strTokenizer62.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[hi!]", strMatcher34, strMatcher65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer20.setIgnoredMatcher(strMatcher65);
        int int70 = strTokenizer69.size();
        boolean boolean71 = strTokenizer69.hasNext();
        java.lang.Class<?> wildcardClass72 = strTokenizer69.getClass();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a]");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a]");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str63, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test11891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11891");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher7);
        boolean boolean9 = strList2.remove((java.lang.Object) strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[hi!]", '4');
        int int13 = strList2.lastIndexOf((java.lang.Object) '4');
        boolean boolean15 = strList2.add("hi!");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.stream.Stream<java.lang.String> strStream20 = strList18.stream();
        boolean boolean21 = strList18.isEmpty();
        char[] charArray22 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher23);
        java.lang.String[] strArray25 = strTokenizer24.getTokenArray();
        boolean boolean26 = strList18.equals((java.lang.Object) strArray25);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher28, strMatcher29);
        java.lang.String str31 = strTokenizer30.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.setDelimiterString("");
        java.lang.Object obj35 = strTokenizer34.clone();
        java.util.List<java.lang.String> strList36 = strTokenizer34.getTokenList();
        java.util.ListIterator<java.lang.String> strItor38 = strList36.listIterator((int) (short) 0);
        boolean boolean39 = strList18.removeAll((java.util.Collection<java.lang.String>) strList36);
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        boolean boolean44 = strList42.isEmpty();
        java.lang.Object[] objArray45 = strList42.toArray();
        java.lang.String[] strArray48 = new java.lang.String[] { "", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher52, strMatcher53);
        boolean boolean55 = strTokenizer54.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer54.setIgnoredChar('4');
        int int58 = strTokenizer57.nextIndex();
        boolean boolean59 = strList49.equals((java.lang.Object) int58);
        boolean boolean60 = strList42.containsAll((java.util.Collection<java.lang.String>) strList49);
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.stream.Stream<java.lang.String> strStream65 = strList63.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher67, strMatcher68);
        java.lang.String str70 = strTokenizer69.toString();
        java.util.List<java.lang.String> strList71 = strTokenizer69.getTokenList();
        java.lang.Object obj72 = null;
        boolean boolean73 = strList71.remove(obj72);
        boolean boolean74 = strList63.removeAll((java.util.Collection<java.lang.String>) strList71);
        java.util.Spliterator<java.lang.String> strSpliterator75 = strList63.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher77, strMatcher78);
        java.lang.String str80 = strTokenizer79.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer79.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = strTokenizer79.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = strTokenizer79.setEmptyTokenAsNull(false);
        java.util.List<java.lang.String> strList85 = strTokenizer84.getTokenList();
        boolean boolean86 = strList63.remove((java.lang.Object) strList85);
        java.util.ListIterator<java.lang.String> strItor87 = strList63.listIterator();
        boolean boolean88 = strList49.addAll((java.util.Collection<java.lang.String>) strList63);
        strList63.clear();
        boolean boolean91 = strList63.add("StrTokenizer[StrTokenizer[not tokenized yet]]");
        int int92 = strList36.indexOf((java.lang.Object) "StrTokenizer[StrTokenizer[not tokenized yet]]");
        boolean boolean94 = strList36.add("not tokenized yet]");
        boolean boolean95 = strList2.addAll((java.util.Collection<java.lang.String>) strList36);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strStream20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str31, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strItor38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[hi!]");
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strStream65);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str70, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(strSpliterator75);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str80, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertNotNull(strList85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(strItor87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test11892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11892");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("trTokenizer[hi!]", ' ', ' ');
    }

    @Test
    public void test11893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11893");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        int int10 = strList9.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        java.lang.String str15 = strTokenizer14.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setDelimiterString("");
        java.lang.Object obj19 = strTokenizer18.clone();
        java.util.List<java.lang.String> strList20 = strTokenizer18.getTokenList();
        int int21 = strList20.size();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.stream();
        java.lang.Object[] objArray27 = strList24.toArray();
        boolean boolean28 = strList20.removeAll((java.util.Collection<java.lang.String>) strList24);
        boolean boolean29 = strList9.containsAll((java.util.Collection<java.lang.String>) strList20);
        java.util.Spliterator<java.lang.String> strSpliterator30 = strList20.spliterator();
        boolean boolean31 = strList20.isEmpty();
        java.util.stream.Stream<java.lang.String> strStream32 = strList20.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher34, strMatcher35);
        java.lang.String str37 = strTokenizer36.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setDelimiterString("");
        java.lang.Object obj41 = strTokenizer40.clone();
        java.util.List<java.lang.String> strList42 = strTokenizer40.getTokenList();
        int int43 = strList42.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher45, strMatcher46);
        java.lang.String str48 = strTokenizer47.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer47.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer49.setDelimiterString("");
        java.lang.Object obj52 = strTokenizer51.clone();
        java.util.List<java.lang.String> strList53 = strTokenizer51.getTokenList();
        int int54 = strList53.size();
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList57 = new java.util.ArrayList<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.stream.Stream<java.lang.String> strStream59 = strList57.stream();
        java.lang.Object[] objArray60 = strList57.toArray();
        boolean boolean61 = strList53.removeAll((java.util.Collection<java.lang.String>) strList57);
        boolean boolean62 = strList42.containsAll((java.util.Collection<java.lang.String>) strList53);
        java.util.stream.Stream<java.lang.String> strStream63 = strList42.stream();
        java.util.stream.Stream<java.lang.String> strStream64 = strList42.parallelStream();
        strList42.clear();
        boolean boolean66 = strList42.isEmpty();
        boolean boolean67 = strList20.containsAll((java.util.Collection<java.lang.String>) strList42);
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator68 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList20.replaceAll(strUnaryOperator68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str15, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strSpliterator30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strStream32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str37, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str48, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strStream59);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strStream63);
        org.junit.Assert.assertNotNull(strStream64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    }

    @Test
    public void test11894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11894");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray0);
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = strTokenizer1.getQuoteMatcher();
        int int3 = strTokenizer1.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer1.getIgnoredMatcher();
        int int5 = strTokenizer1.previousIndex();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    }

    @Test
    public void test11895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11895");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[a]", '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer3.getQuoteMatcher();
        java.lang.String str5 = strTokenizer3.next();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "StrTokenizer[a]" + "'", str5, "StrTokenizer[a]");
    }

    @Test
    public void test11896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11896");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        char[] charArray10 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher15, strMatcher16);
        int int21 = strMatcher6.isMatch(charArray10, 1, 1, (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.setDelimiterString("StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer22.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer22.getQuoteMatcher();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer22.set("StrTokenizer[, ]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strMatcher26);
    }

    @Test
    public void test11897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11897");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("444 ", '#');
        java.lang.String str3 = strTokenizer2.previousToken();
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test11898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11898");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[a]");
        java.lang.String str2 = strTokenizer1.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        java.lang.String str7 = strTokenizer6.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer6.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer6.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setIgnoreEmptyTokens(false);
        java.lang.String str16 = strTokenizer13.next();
        char[] charArray18 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher23, strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer13.setIgnoredMatcher(strMatcher27);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher30, strMatcher31);
        java.lang.String str33 = strTokenizer32.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer32.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer32.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setQuoteChar('4');
        char[] charArray41 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher43, strMatcher44);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer45.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher46, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer37.reset(charArray41);
        int int56 = strMatcher27.isMatch(charArray41, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer1.reset(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer59.setIgnoreEmptyTokens(false);
        java.lang.String str62 = strTokenizer61.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer61.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer64.reset();
        java.lang.String str66 = strTokenizer64.next();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "StrTokenizer[a]" + "'", str2, "StrTokenizer[a]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str7, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str33, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a]");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "a" + "'", str62, "a");
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "a" + "'", str66, "a");
    }

    @Test
    public void test11899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11899");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("a   ", ' ', 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer3.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strTokenizer3.getIgnoredMatcher();
        int int6 = strTokenizer3.nextIndex();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test11900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11900");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer7.setIgnoreEmptyTokens(false);
        int int10 = strTokenizer7.nextIndex();
        java.lang.String str11 = strTokenizer7.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer7.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer7.setDelimiterString("StrTokenizer[, ]");
        java.lang.String str16 = strTokenizer7.previous();
        int int17 = strTokenizer7.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer7.getQuoteMatcher();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strMatcher18);
    }

    @Test
    public void test11901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11901");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[]", ' ', '#');
        char[] charArray6 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher8, strMatcher9);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer10.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher11, strMatcher12);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray6);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher14, strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer3.setIgnoredMatcher(strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher22, strMatcher23);
        java.lang.String str25 = strTokenizer24.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer24.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer24.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.setIgnoreEmptyTokens(false);
        int int34 = strTokenizer31.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer31.setDelimiterChar('a');
        int int37 = strTokenizer36.size();
        java.lang.Object obj38 = strTokenizer36.clone();
        java.lang.String str39 = strTokenizer36.getContent();
        boolean boolean40 = strTokenizer36.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer36.getTrimmerMatcher();
        char[] charArray43 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher45, strMatcher46);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher48, strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray43);
        int int55 = strMatcher41.isMatch(charArray43, (-1));
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer20.reset(charArray43);
        char[] charArray58 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher60, strMatcher61);
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer62.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, strMatcher63, strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer66.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer67.setTrimmerMatcher(strMatcher68);
        boolean boolean70 = strTokenizer67.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer67.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher71);
        int int73 = strTokenizer72.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer72.reset();
        java.lang.String str75 = strTokenizer72.getContent();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str25, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[a]");
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "a" + "'", str75, "a");
    }

    @Test
    public void test11902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11902");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer3.setDelimiterMatcher(strMatcher9);
        int int11 = strTokenizer10.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer10.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setIgnoreEmptyTokens(false);
        boolean boolean16 = strTokenizer15.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.reset("   ");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strTokenizer18);
    }

    @Test
    public void test11903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11903");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        java.util.ListIterator<java.lang.String> strItor11 = strList9.listIterator((int) (short) 0);
        boolean boolean12 = strList9.isEmpty();
        java.util.List<java.lang.String> strList15 = strList9.subList((int) (short) 0, (int) (short) 1);
        java.util.ListIterator<java.lang.String> strItor16 = strList15.listIterator();
        java.util.Spliterator<java.lang.String> strSpliterator17 = strList15.spliterator();
        java.util.Spliterator<java.lang.String> strSpliterator18 = strList15.spliterator();
        char[] charArray19 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.setIgnoredChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer21.setQuoteChar('#');
        java.util.List<java.lang.String> strList26 = strTokenizer21.getTokenList();
        int int27 = strList15.indexOf((java.lang.Object) strList26);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher29, strMatcher30);
        java.lang.String str32 = strTokenizer31.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setDelimiterString("");
        java.lang.Object obj36 = strTokenizer35.clone();
        java.util.List<java.lang.String> strList37 = strTokenizer35.getTokenList();
        int int38 = strList37.size();
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.stream.Stream<java.lang.String> strStream43 = strList41.stream();
        java.lang.Object[] objArray44 = strList41.toArray();
        boolean boolean45 = strList37.removeAll((java.util.Collection<java.lang.String>) strList41);
        java.util.Iterator<java.lang.String> strItor46 = strList37.iterator();
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.stream.Stream<java.lang.String> strStream51 = strList49.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher53, strMatcher54);
        java.lang.String str56 = strTokenizer55.toString();
        java.util.List<java.lang.String> strList57 = strTokenizer55.getTokenList();
        java.lang.Object obj58 = null;
        boolean boolean59 = strList57.remove(obj58);
        boolean boolean60 = strList49.removeAll((java.util.Collection<java.lang.String>) strList57);
        java.util.Spliterator<java.lang.String> strSpliterator61 = strList49.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher63, strMatcher64);
        java.lang.String str66 = strTokenizer65.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer65.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = strTokenizer65.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer65.setEmptyTokenAsNull(false);
        java.util.List<java.lang.String> strList71 = strTokenizer70.getTokenList();
        boolean boolean72 = strList49.remove((java.lang.Object) strList71);
        java.util.Iterator<java.lang.String> strItor73 = strList71.iterator();
        boolean boolean74 = strList37.retainAll((java.util.Collection<java.lang.String>) strList71);
        boolean boolean75 = strList26.removeAll((java.util.Collection<java.lang.String>) strList71);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strItor11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(strItor16);
        org.junit.Assert.assertNotNull(strSpliterator17);
        org.junit.Assert.assertNotNull(strSpliterator18);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str32, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strStream43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strItor46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strStream51);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str56, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strSpliterator61);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str66, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strItor73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test11904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11904");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        boolean boolean5 = strList2.isEmpty();
        java.lang.Object[] objArray6 = strList2.toArray();
        java.lang.String[] strArray12 = new java.lang.String[] { "StrTokenizer[not tokenized yet]", "hi!", "", "StrTokenizer[not tokenized yet]", "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        boolean boolean15 = strList2.removeAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.String str18 = strList13.set(1, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.reset("hi!");
        java.util.List<java.lang.String> strList25 = strTokenizer22.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        java.lang.String str30 = strTokenizer29.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.setDelimiterString("");
        java.lang.Object obj34 = strTokenizer33.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer33.getQuoteMatcher();
        boolean boolean36 = strList25.contains((java.lang.Object) strMatcher35);
        boolean boolean37 = strList13.addAll((java.util.Collection<java.lang.String>) strList25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("", ' ', ' ');
        java.lang.String str42 = strTokenizer41.previousToken();
        java.lang.String[] strArray43 = strTokenizer41.getTokenArray();
        java.lang.String[] strArray44 = strTokenizer41.getTokenArray();
        boolean boolean45 = strList25.equals((java.lang.Object) strTokenizer41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer41.reset();
        char[] charArray48 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher50, strMatcher51);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer52.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, strMatcher53, strMatcher54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer46.reset(charArray48);
        char[] charArray59 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher61, strMatcher62);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer63.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, strMatcher64, strMatcher65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray59);
        int int68 = strTokenizer67.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer67.setIgnoredMatcher(strMatcher69);
        java.util.List<java.lang.String> strList71 = strTokenizer70.getTokenList();
        boolean boolean72 = strList71.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher74, strMatcher75);
        java.lang.String str77 = strTokenizer76.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer76.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer78.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer80.setIgnoredChar('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = strTokenizer80.getQuoteMatcher();
        boolean boolean84 = strList71.equals((java.lang.Object) strMatcher83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, strMatcher83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray48);
        int int87 = strTokenizer86.previousIndex();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[hi!]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str30, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[a]");
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str77, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
    }

    @Test
    public void test11905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11905");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        java.lang.Object obj9 = strTokenizer8.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer8.setDelimiterChar('a');
        boolean boolean12 = strTokenizer8.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer8.setIgnoredMatcher(strMatcher15);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getTrimmerMatcher();
        java.lang.String str18 = strTokenizer16.getContent();
        java.lang.String str19 = strTokenizer16.nextToken();
        java.lang.String str20 = strTokenizer16.previous();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer16.reset();
        char[] charArray23 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, '4', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer21.reset(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, 'a');
        boolean boolean50 = strTokenizer49.isEmptyTokenAsNull();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test11906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11906");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        boolean boolean11 = strTokenizer10.hasPrevious();
        java.lang.String str12 = strTokenizer10.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer10.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer10.reset("a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setEmptyTokenAsNull(false);
        int int19 = strTokenizer16.nextIndex();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test11907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11907");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        int int11 = strTokenizer10.previousIndex();
        boolean boolean12 = strTokenizer10.isIgnoreEmptyTokens();
        boolean boolean13 = strTokenizer10.hasPrevious();
        char[] charArray15 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher17, strMatcher18);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher30, strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer10.reset(charArray15);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer10.setTrimmerMatcher(strMatcher35);
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.stream.Stream<java.lang.String> strStream41 = strList39.stream();
        boolean boolean42 = strList39.isEmpty();
        char[] charArray43 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher44);
        java.lang.String[] strArray46 = strTokenizer45.getTokenArray();
        boolean boolean47 = strList39.equals((java.lang.Object) strArray46);
        java.util.Spliterator<java.lang.String> strSpliterator48 = strList39.spliterator();
        char[] charArray50 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher52, strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher55, strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray50);
        int int63 = strList39.lastIndexOf((java.lang.Object) charArray50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer10.setQuoteMatcher(strMatcher66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        boolean boolean70 = strTokenizer69.hasNext();
        java.lang.String str71 = strTokenizer69.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher73, strMatcher74);
        java.lang.String str76 = strTokenizer75.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer75.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = strTokenizer75.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer75.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer80.setQuoteChar('4');
        char[] charArray84 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher86, strMatcher87);
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = strTokenizer88.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher90 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer(charArray84, strMatcher89, strMatcher90);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer(charArray84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = new org.apache.commons.lang3.text.StrTokenizer(charArray84, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = strTokenizer80.reset(charArray84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = strTokenizer69.reset(charArray84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer97 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer98 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer99 = strTokenizer10.reset(charArray84);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strStream41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strSpliterator48);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a]");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str76, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[a]");
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strTokenizer95);
        org.junit.Assert.assertNotNull(strTokenizer96);
        org.junit.Assert.assertNotNull(strTokenizer97);
        org.junit.Assert.assertNotNull(strTokenizer98);
        org.junit.Assert.assertNotNull(strTokenizer99);
    }

    @Test
    public void test11908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11908");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, 'a', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setIgnoreEmptyTokens(true);
        boolean boolean6 = strTokenizer5.hasPrevious();
        java.lang.Object obj7 = strTokenizer5.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer5.setQuoteChar(' ');
        boolean boolean10 = strTokenizer5.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer5.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer5.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getDelimiterMatcher();
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strMatcher14);
    }

    @Test
    public void test11909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11909");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        java.util.ListIterator<java.lang.String> strItor11 = strList9.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor12 = strList9.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int15 = strList9.indexOf((java.lang.Object) strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray18 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher23, strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer16.setTrimmerMatcher(strMatcher27);
        int int29 = strList9.indexOf((java.lang.Object) strTokenizer28);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher31, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.reset("hi!");
        java.util.List<java.lang.String> strList36 = strTokenizer33.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher38, strMatcher39);
        java.lang.String str41 = strTokenizer40.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer42.setDelimiterString("");
        java.lang.Object obj45 = strTokenizer44.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer44.getQuoteMatcher();
        boolean boolean47 = strList36.contains((java.lang.Object) strMatcher46);
        boolean boolean48 = strList9.retainAll((java.util.Collection<java.lang.String>) strList36);
        int int49 = strList36.size();
        java.lang.Object[] objArray50 = strList36.toArray();
        java.util.Collection<java.lang.String> strCollection51 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean52 = strList36.addAll(strCollection51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strItor11);
        org.junit.Assert.assertNotNull(strItor12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str41, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[hi!]");
    }

    @Test
    public void test11910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11910");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("", '4', 'a');
        java.lang.String[] strArray4 = strTokenizer3.getTokenArray();
        org.junit.Assert.assertNotNull(strArray4);
    }

    @Test
    public void test11911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11911");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("a", "#a");
    }

    @Test
    public void test11912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11912");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        char[] charArray23 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28, strMatcher29);
        int int34 = strMatcher19.isMatch(charArray23, 1, 1, (int) ' ');
        char[] charArray35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher19, strMatcher38);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher41, strMatcher42);
        java.lang.String str44 = strTokenizer43.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer43.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer43.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.setIgnoreEmptyTokens(false);
        int int53 = strTokenizer50.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer50.setDelimiterChar('a');
        char[] charArray57 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher59, strMatcher60);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer61.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, strMatcher62, strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, strMatcher70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer50.reset(charArray57);
        int int78 = strMatcher19.isMatch(charArray57, (int) (short) 0, (int) ' ', (int) (short) 1);
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray57);
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, ' ', '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, 'a', ' ');
        java.util.List<java.lang.String> strList89 = strTokenizer88.getTokenList();
        java.lang.Class<?> wildcardClass90 = strTokenizer88.getClass();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str44, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a]");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test11913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11913");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("#a444 ", 'a', '4');
        char[] charArray5 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher8);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer9.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray5, strMatcher10, strMatcher11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray5);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray5);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray5);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray5);
        char[] charArray18 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher23, strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray5, strMatcher27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray5);
        char[] charArray30 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher31);
        java.lang.String[] strArray33 = strTokenizer32.getTokenArray();
        java.lang.String[] strArray34 = strTokenizer32.getTokenArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer32.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray5, strMatcher35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer3.reset(charArray5);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray5);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strMatcher38);
    }

    @Test
    public void test11914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11914");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        java.lang.Object obj9 = strTokenizer8.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher11, strMatcher12);
        java.lang.String str14 = strTokenizer13.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer13.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer13.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer13.setDelimiterMatcher(strMatcher19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer8.setQuoteMatcher(strMatcher19);
        int int22 = strTokenizer8.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer8.setIgnoredMatcher(strMatcher23);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher27);
        java.lang.String str29 = strTokenizer28.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer28.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer28.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer28.setEmptyTokenAsNull(false);
        java.lang.Object obj34 = strTokenizer33.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher36, strMatcher37);
        java.lang.String str39 = strTokenizer38.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer38.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer38.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer38.setDelimiterMatcher(strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer33.setQuoteMatcher(strMatcher44);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer33.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer24.setQuoteMatcher(strMatcher47);
        java.lang.String str49 = strTokenizer48.next();
        java.lang.String str50 = strTokenizer48.getContent();
        boolean boolean51 = strTokenizer48.hasNext();
        java.lang.String str52 = strTokenizer48.previous();
        boolean boolean53 = strTokenizer48.hasPrevious();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str14, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str29, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str39, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test11915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11915");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[hi!]", "hi!");
        java.lang.String str4 = strTokenizer3.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setDelimiterString("StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher10, strMatcher11);
        java.lang.String str13 = strTokenizer12.toString();
        java.util.List<java.lang.String> strList14 = strTokenizer12.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer12.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        java.lang.String str22 = strTokenizer21.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer21.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer21.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer28.setIgnoreEmptyTokens(false);
        java.lang.String str31 = strTokenizer28.next();
        char[] charArray33 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher35, strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher38, strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray33);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer28.setIgnoredMatcher(strMatcher42);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher42, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer12.setTrimmerMatcher(strMatcher42);
        char[] charArray47 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray47);
        char[] charArray50 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher52, strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher55, strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, "a");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer48.reset(charArray50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, 'a');
        int int69 = strMatcher42.isMatch(charArray50, 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, "444 ");
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer8.reset(charArray50);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str13, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str22, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a]");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strTokenizer77);
    }

    @Test
    public void test11916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11916");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setDelimiterString("hi!");
        java.util.List<java.lang.String> strList7 = strTokenizer6.getTokenList();
        java.lang.String str8 = strTokenizer6.previousToken();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test11917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11917");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[StrTokenizer[]]", "#a444");
    }

    @Test
    public void test11918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11918");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        int int10 = strTokenizer7.size();
        java.util.List<java.lang.String> strList11 = strTokenizer7.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("a");
        int int14 = strList11.indexOf((java.lang.Object) "a");
        strList11.clear();
        strList11.clear();
        java.lang.Object[] objArray17 = strList11.toArray();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList20 = strList11.subList((int) (short) 100, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
    }

    @Test
    public void test11919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11919");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        java.util.List<java.lang.String> strList10 = strTokenizer8.getTokenList();
        java.lang.Object obj11 = null;
        boolean boolean12 = strList10.remove(obj11);
        boolean boolean13 = strList2.removeAll((java.util.Collection<java.lang.String>) strList10);
        java.util.Spliterator<java.lang.String> strSpliterator14 = strList2.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        java.lang.String str19 = strTokenizer18.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer18.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer18.setEmptyTokenAsNull(false);
        java.util.List<java.lang.String> strList24 = strTokenizer23.getTokenList();
        boolean boolean25 = strList2.remove((java.lang.Object) strList24);
        java.util.Iterator<java.lang.String> strItor26 = strList24.iterator();
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.stream.Stream<java.lang.String> strStream31 = strList29.stream();
        boolean boolean32 = strList29.isEmpty();
        char[] charArray33 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher34);
        java.lang.String[] strArray36 = strTokenizer35.getTokenArray();
        boolean boolean37 = strList29.equals((java.lang.Object) strArray36);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher40);
        java.lang.String str42 = strTokenizer41.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.setDelimiterString("");
        java.lang.Object obj46 = strTokenizer45.clone();
        java.util.List<java.lang.String> strList47 = strTokenizer45.getTokenList();
        java.util.ListIterator<java.lang.String> strItor49 = strList47.listIterator((int) (short) 0);
        boolean boolean50 = strList29.removeAll((java.util.Collection<java.lang.String>) strList47);
        boolean boolean51 = strList24.addAll((java.util.Collection<java.lang.String>) strList29);
        java.util.stream.Stream<java.lang.String> strStream52 = strList24.stream();
        strList24.clear();
        char[] charArray55 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher57, strMatcher58);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher60, strMatcher61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, "StrTokenizer[");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, 'a');
        boolean boolean76 = strList24.remove((java.lang.Object) strTokenizer75);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strSpliterator14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str19, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strItor26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strStream31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str42, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNotNull(strItor49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strStream52);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test11920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11920");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.reset("hi!");
        int int9 = strTokenizer6.nextIndex();
        boolean boolean10 = strList2.equals((java.lang.Object) int9);
        strList2.clear();
        java.util.stream.Stream<java.lang.String> strStream12 = strList2.stream();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.stream.Stream<java.lang.String> strStream17 = strList15.stream();
        boolean boolean18 = strList15.isEmpty();
        java.lang.Object[] objArray19 = strList15.toArray();
        java.lang.String[] strArray25 = new java.lang.String[] { "StrTokenizer[not tokenized yet]", "hi!", "", "StrTokenizer[not tokenized yet]", "hi!" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        boolean boolean28 = strList15.removeAll((java.util.Collection<java.lang.String>) strList26);
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.stream.Stream<java.lang.String> strStream34 = strList32.stream();
        boolean boolean35 = strList32.isEmpty();
        char[] charArray36 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher37);
        java.lang.String[] strArray39 = strTokenizer38.getTokenArray();
        boolean boolean40 = strList32.equals((java.lang.Object) strArray39);
        java.util.Spliterator<java.lang.String> strSpliterator41 = strList32.spliterator();
        java.lang.Object[] objArray42 = strList32.toArray();
        boolean boolean43 = strList26.addAll(0, (java.util.Collection<java.lang.String>) strList32);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher45, strMatcher46);
        java.lang.String str48 = strTokenizer47.toString();
        java.util.List<java.lang.String> strList49 = strTokenizer47.getTokenList();
        boolean boolean50 = strList49.isEmpty();
        java.lang.Object[] objArray51 = strList49.toArray();
        int int52 = strList32.lastIndexOf((java.lang.Object) objArray51);
        boolean boolean53 = strList2.removeAll((java.util.Collection<java.lang.String>) strList32);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher55, strMatcher56);
        java.lang.String str58 = strTokenizer57.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer57.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer59.setDelimiterString("");
        java.lang.Object obj62 = strTokenizer61.clone();
        java.util.List<java.lang.String> strList63 = strTokenizer61.getTokenList();
        int int64 = strList63.size();
        java.util.ListIterator<java.lang.String> strItor65 = strList63.listIterator();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        java.util.List<java.lang.String> strList70 = strTokenizer69.getTokenList();
        boolean boolean71 = strList63.containsAll((java.util.Collection<java.lang.String>) strList70);
        java.util.stream.Stream<java.lang.String> strStream72 = strList63.stream();
        boolean boolean73 = strList32.removeAll((java.util.Collection<java.lang.String>) strList63);
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher75, strMatcher76);
        java.lang.String str78 = strTokenizer77.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer77.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer79.setDelimiterString("");
        java.lang.Object obj82 = strTokenizer81.clone();
        java.util.List<java.lang.String> strList83 = strTokenizer81.getTokenList();
        java.util.ListIterator<java.lang.String> strItor85 = strList83.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor86 = strList83.listIterator();
        boolean boolean87 = strList32.retainAll((java.util.Collection<java.lang.String>) strList83);
        java.lang.Class<?> wildcardClass88 = strList32.getClass();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strStream12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strStream17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[hi!]");
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strStream34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strSpliterator41);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str48, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[hi!]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str58, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(strItor65);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strStream72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str78, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList83);
        org.junit.Assert.assertNotNull(strItor85);
        org.junit.Assert.assertNotNull(strItor86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test11921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11921");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("");
        boolean boolean2 = strTokenizer1.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer1.getIgnoredMatcher();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = strTokenizer1.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strMatcher3);
    }

    @Test
    public void test11922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11922");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        int int10 = strList9.size();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.stream.Stream<java.lang.String> strStream15 = strList13.stream();
        java.lang.Object[] objArray16 = strList13.toArray();
        boolean boolean17 = strList9.removeAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.String[] strArray20 = new java.lang.String[] { "", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher25);
        boolean boolean27 = strTokenizer26.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setIgnoredChar('4');
        int int30 = strTokenizer29.nextIndex();
        boolean boolean31 = strList21.equals((java.lang.Object) int30);
        int int32 = strList21.size();
        boolean boolean33 = strList9.retainAll((java.util.Collection<java.lang.String>) strList21);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.stream.Stream<java.lang.String> strStream38 = strList36.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher40, strMatcher41);
        java.lang.String str43 = strTokenizer42.toString();
        java.util.List<java.lang.String> strList44 = strTokenizer42.getTokenList();
        java.lang.Object obj45 = null;
        boolean boolean46 = strList44.remove(obj45);
        boolean boolean47 = strList36.removeAll((java.util.Collection<java.lang.String>) strList44);
        java.util.Spliterator<java.lang.String> strSpliterator48 = strList36.spliterator();
        boolean boolean49 = strList21.remove((java.lang.Object) strList36);
        boolean boolean51 = strList36.add("StrTokenizer[not tokenized yet]");
        char[] charArray53 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher55, strMatcher56);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer57.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, strMatcher58, strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, '#', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray53);
        int int74 = strList36.lastIndexOf((java.lang.Object) strTokenizer73);
        int int75 = strList36.size();
        strList36.add((int) (short) 1, "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strStream38);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str43, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strSpliterator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[a]");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
    }

    @Test
    public void test11923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11923");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        int int10 = strTokenizer9.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer9.setIgnoredMatcher(strMatcher11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setDelimiterString("hi!");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        java.lang.Object obj16 = strTokenizer14.clone();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test11924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11924");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("a");
        java.util.List<java.lang.String> strList2 = strTokenizer1.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        java.lang.String str7 = strTokenizer6.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer6.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer6.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setIgnoreEmptyTokens(false);
        int int16 = strList2.indexOf((java.lang.Object) strTokenizer13);
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.stream.Stream<java.lang.String> strStream21 = strList19.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher23, strMatcher24);
        java.lang.String str26 = strTokenizer25.toString();
        java.util.List<java.lang.String> strList27 = strTokenizer25.getTokenList();
        java.lang.Object obj28 = null;
        boolean boolean29 = strList27.remove(obj28);
        boolean boolean30 = strList19.removeAll((java.util.Collection<java.lang.String>) strList27);
        java.util.Spliterator<java.lang.String> strSpliterator31 = strList19.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher34);
        java.lang.String str36 = strTokenizer35.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer35.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer35.setEmptyTokenAsNull(false);
        java.util.List<java.lang.String> strList41 = strTokenizer40.getTokenList();
        boolean boolean42 = strList19.remove((java.lang.Object) strList41);
        java.util.Spliterator<java.lang.String> strSpliterator43 = strList41.spliterator();
        boolean boolean44 = strList2.removeAll((java.util.Collection<java.lang.String>) strList41);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher46, strMatcher47);
        java.lang.String str49 = strTokenizer48.toString();
        java.util.List<java.lang.String> strList50 = strTokenizer48.getTokenList();
        java.lang.Object obj51 = null;
        boolean boolean52 = strList50.remove(obj51);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher55);
        boolean boolean57 = strList50.contains((java.lang.Object) "");
        boolean boolean58 = strList41.removeAll((java.util.Collection<java.lang.String>) strList50);
        java.util.stream.Stream<java.lang.String> strStream59 = strList41.parallelStream();
        java.util.stream.Stream<java.lang.String> strStream60 = strList41.parallelStream();
        java.util.stream.Stream<java.lang.String> strStream61 = strList41.parallelStream();
        boolean boolean62 = strList41.isEmpty();
        boolean boolean63 = strList41.isEmpty();
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str7, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strStream21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str26, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strSpliterator31);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str36, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strSpliterator43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str49, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strStream59);
        org.junit.Assert.assertNotNull(strStream60);
        org.junit.Assert.assertNotNull(strStream61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test11925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11925");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset("hi!");
        java.util.List<java.lang.String> strList6 = strTokenizer3.getTokenList();
        char[] charArray8 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher10, strMatcher11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer12.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher13, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, '#', '#');
        int int23 = strList6.lastIndexOf((java.lang.Object) strTokenizer22);
        int int24 = strList6.size();
        java.util.ListIterator<java.lang.String> strItor25 = strList6.listIterator();
        java.lang.Object obj26 = null;
        int int27 = strList6.indexOf(obj26);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a]");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
    }

    @Test
    public void test11926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11926");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer9.reset();
        int int11 = strTokenizer9.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer9.setQuoteMatcher(strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset("StrTokenizer[hi!]");
        int int17 = strTokenizer16.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        java.lang.String str22 = strTokenizer21.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer21.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer21.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.setQuoteChar('4');
        int int29 = strTokenizer28.previousIndex();
        boolean boolean30 = strTokenizer28.isIgnoreEmptyTokens();
        boolean boolean31 = strTokenizer28.hasPrevious();
        char[] charArray33 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher35, strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher38, strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher48, strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer28.reset(charArray33);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        char[] charArray55 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher57, strMatcher58);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher60, strMatcher61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray55);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher53, strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer16.setQuoteMatcher(strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher72, strMatcher73);
        boolean boolean75 = strTokenizer74.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer74.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer74.setQuoteMatcher(strMatcher80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer16.setIgnoredMatcher(strMatcher80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer83.setIgnoredChar('a');
        boolean boolean86 = strTokenizer83.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str22, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a]");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test11927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11927");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        java.lang.String str9 = strTokenizer3.nextToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        boolean boolean15 = strTokenizer14.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer14.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer14.setQuoteMatcher(strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer3.setDelimiterMatcher(strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer23.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer23.setTrimmerMatcher(strMatcher26);
        int int28 = strTokenizer27.nextIndex();
        boolean boolean29 = strTokenizer27.isIgnoreEmptyTokens();
        boolean boolean30 = strTokenizer27.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer27.getTrimmerMatcher();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strMatcher31);
    }

    @Test
    public void test11928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11928");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("StrTokenizer[StrTokenizer[StrTokenizer[hi!]]]");
        org.junit.Assert.assertNotNull(strMatcher1);
    }

    @Test
    public void test11929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11929");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        java.lang.String[] strArray9 = strTokenizer8.getTokenArray();
        char[] charArray11 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, "a");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer8.reset(charArray11);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher34);
        java.lang.String str36 = strTokenizer35.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("");
        java.lang.Object obj40 = strTokenizer39.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer39.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher43, strMatcher44);
        java.lang.String str46 = strTokenizer45.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer45.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer45.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.setIgnoreEmptyTokens(false);
        java.lang.String str55 = strTokenizer52.next();
        char[] charArray57 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher59, strMatcher60);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer61.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, strMatcher62, strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray57);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer65.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer52.setIgnoredMatcher(strMatcher66);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = strTokenizer52.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[hi!]", strMatcher41, strMatcher68);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher71, strMatcher72);
        java.lang.String str74 = strTokenizer73.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer73.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer75.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer77.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = strTokenizer79.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = strTokenizer79.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher68, strMatcher81);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, '4', '4');
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str36, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str46, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a]");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str74, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strMatcher81);
    }

    @Test
    public void test11930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11930");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher17, strMatcher18);
        java.lang.String str20 = strTokenizer19.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.setDelimiterString("");
        java.lang.Object obj24 = strTokenizer23.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer23.getQuoteMatcher();
        char[] charArray27 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher29, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher32, strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, "hi!");
        int int42 = strMatcher25.isMatch(charArray27, (int) (short) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer15.setDelimiterMatcher(strMatcher25);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher45, strMatcher46);
        java.lang.String str48 = strTokenizer47.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer47.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer49.setDelimiterString("");
        java.lang.Object obj52 = strTokenizer51.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer51.getQuoteMatcher();
        char[] charArray55 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher57, strMatcher58);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher60, strMatcher61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, "hi!");
        int int70 = strMatcher53.isMatch(charArray55, (int) (short) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, 'a', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer43.reset(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray55);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str20, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str48, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a]");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strTokenizer77);
    }

    @Test
    public void test11931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11931");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[a]", '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer3.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getQuoteMatcher();
        boolean boolean8 = strTokenizer6.hasPrevious();
        boolean boolean9 = strTokenizer6.hasNext();
        java.lang.String str10 = strTokenizer6.next();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        boolean boolean15 = strList13.isEmpty();
        java.lang.Object[] objArray16 = strList13.toArray();
        java.lang.String[] strArray19 = new java.lang.String[] { "", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher23, strMatcher24);
        boolean boolean26 = strTokenizer25.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer25.setIgnoredChar('4');
        int int29 = strTokenizer28.nextIndex();
        boolean boolean30 = strList20.equals((java.lang.Object) int29);
        boolean boolean31 = strList13.containsAll((java.util.Collection<java.lang.String>) strList20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("hi!", "");
        int int35 = strTokenizer34.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer34.getQuoteMatcher();
        boolean boolean37 = strList20.remove((java.lang.Object) strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer6.setTrimmerMatcher(strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer3.setIgnoredMatcher(strMatcher36);
        int int40 = strTokenizer3.nextIndex();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str10, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!]");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
    }

    @Test
    public void test11932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11932");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher21, strMatcher22);
        java.lang.String str24 = strTokenizer23.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer23.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer23.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer23.setEmptyTokenAsNull(false);
        java.lang.Object obj29 = strTokenizer28.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer28.setQuoteChar('#');
        java.lang.String str32 = strTokenizer28.nextToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer28.setQuoteMatcher(strMatcher33);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str24, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher35);
    }

    @Test
    public void test11933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11933");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        int int10 = strList9.size();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.stream.Stream<java.lang.String> strStream15 = strList13.stream();
        java.lang.Object[] objArray16 = strList13.toArray();
        boolean boolean17 = strList9.removeAll((java.util.Collection<java.lang.String>) strList13);
        java.util.Iterator<java.lang.String> strItor18 = strList9.iterator();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        java.util.stream.Stream<java.lang.String> strStream23 = strList21.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        java.lang.String str28 = strTokenizer27.toString();
        java.util.List<java.lang.String> strList29 = strTokenizer27.getTokenList();
        java.lang.Object obj30 = null;
        boolean boolean31 = strList29.remove(obj30);
        boolean boolean32 = strList21.removeAll((java.util.Collection<java.lang.String>) strList29);
        java.util.Spliterator<java.lang.String> strSpliterator33 = strList21.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher35, strMatcher36);
        java.lang.String str38 = strTokenizer37.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer37.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer37.setEmptyTokenAsNull(false);
        java.util.List<java.lang.String> strList43 = strTokenizer42.getTokenList();
        boolean boolean44 = strList21.remove((java.lang.Object) strList43);
        java.util.Iterator<java.lang.String> strItor45 = strList43.iterator();
        boolean boolean46 = strList9.retainAll((java.util.Collection<java.lang.String>) strList43);
        char[] charArray47 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher48);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer49.getTrimmerMatcher();
        int int51 = strTokenizer49.size();
        java.util.List<java.lang.String> strList52 = strTokenizer49.getTokenList();
        boolean boolean53 = strList43.addAll((java.util.Collection<java.lang.String>) strList52);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strItor18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strStream23);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str28, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strSpliterator33);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str38, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strItor45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test11934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11934");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setDelimiterString("");
        java.lang.Object obj13 = strTokenizer12.clone();
        java.util.List<java.lang.String> strList14 = strTokenizer12.getTokenList();
        java.util.ListIterator<java.lang.String> strItor16 = strList14.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor17 = strList14.listIterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int20 = strList14.indexOf((java.lang.Object) strMatcher19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer3.setDelimiterMatcher(strMatcher19);
        java.util.List<java.lang.String> strList22 = strTokenizer21.getTokenList();
        strList22.clear();
        java.util.Spliterator<java.lang.String> strSpliterator24 = strList22.spliterator();
        boolean boolean25 = strList22.isEmpty();
        char[] charArray26 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher27);
        int int29 = strTokenizer28.previousIndex();
        boolean boolean30 = strTokenizer28.isEmptyTokenAsNull();
        boolean boolean31 = strTokenizer28.isEmptyTokenAsNull();
        int int32 = strList22.indexOf((java.lang.Object) strTokenizer28);
        java.util.Iterator<java.lang.String> strItor33 = strList22.iterator();
        java.util.stream.Stream<java.lang.String> strStream34 = strList22.stream();
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNotNull(strItor16);
        org.junit.Assert.assertNotNull(strItor17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strItor33);
        org.junit.Assert.assertNotNull(strStream34);
    }

    @Test
    public void test11935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11935");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoreEmptyTokens(false);
        int int13 = strTokenizer10.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer10.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer10.getQuoteMatcher();
        char[] charArray18 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher23, strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, '#', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, '4', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer10.reset(charArray18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, 'a', ' ');
        java.lang.String str42 = strTokenizer41.getContent();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "a" + "'", str42, "a");
    }

    @Test
    public void test11936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11936");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.util.List<java.lang.String> strList5 = strTokenizer3.getTokenList();
        boolean boolean6 = strList5.isEmpty();
        boolean boolean7 = strList5.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher9, strMatcher10);
        java.lang.String str12 = strTokenizer11.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setDelimiterString("");
        java.lang.Object obj16 = strTokenizer15.clone();
        java.util.List<java.lang.String> strList17 = strTokenizer15.getTokenList();
        java.util.ListIterator<java.lang.String> strItor19 = strList17.listIterator((int) (short) 0);
        boolean boolean20 = strList5.containsAll((java.util.Collection<java.lang.String>) strList17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        java.util.List<java.lang.String> strList25 = strTokenizer24.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        java.lang.String str30 = strTokenizer29.toString();
        java.util.List<java.lang.String> strList31 = strTokenizer29.getTokenList();
        java.lang.Object obj32 = null;
        boolean boolean33 = strList31.remove(obj32);
        boolean boolean35 = strList31.add("StrTokenizer[not tokenized yet]");
        boolean boolean36 = strList25.containsAll((java.util.Collection<java.lang.String>) strList31);
        boolean boolean37 = strList5.retainAll((java.util.Collection<java.lang.String>) strList31);
        boolean boolean38 = strList31.isEmpty();
        java.util.Spliterator<java.lang.String> strSpliterator39 = strList31.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher42, strMatcher43);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        char[] charArray47 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher49, strMatcher50);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher52, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher45, strMatcher53);
        java.util.List<java.lang.String> strList56 = strTokenizer55.getTokenList();
        java.util.stream.Stream<java.lang.String> strStream57 = strList56.stream();
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.util.stream.Stream<java.lang.String> strStream62 = strList60.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher64, strMatcher65);
        java.lang.String str67 = strTokenizer66.toString();
        java.util.List<java.lang.String> strList68 = strTokenizer66.getTokenList();
        java.lang.Object obj69 = null;
        boolean boolean70 = strList68.remove(obj69);
        boolean boolean71 = strList60.removeAll((java.util.Collection<java.lang.String>) strList68);
        java.util.Spliterator<java.lang.String> strSpliterator72 = strList60.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher74, strMatcher75);
        java.lang.String str77 = strTokenizer76.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer76.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = strTokenizer76.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer76.setEmptyTokenAsNull(false);
        java.util.List<java.lang.String> strList82 = strTokenizer81.getTokenList();
        boolean boolean83 = strList60.remove((java.lang.Object) strList82);
        java.util.Iterator<java.lang.String> strItor84 = strList82.iterator();
        java.util.Spliterator<java.lang.String> strSpliterator85 = strList82.spliterator();
        int int86 = strList56.lastIndexOf((java.lang.Object) strList82);
        boolean boolean87 = strList31.addAll((java.util.Collection<java.lang.String>) strList82);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.String> strItor89 = strList82.listIterator((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str12, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strItor19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str30, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strSpliterator39);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a]");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(strStream57);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strStream62);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str67, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strSpliterator72);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str77, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strItor84);
        org.junit.Assert.assertNotNull(strSpliterator85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test11937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11937");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        int int11 = strTokenizer10.previousIndex();
        boolean boolean12 = strTokenizer10.isIgnoreEmptyTokens();
        int int13 = strTokenizer10.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer10.getDelimiterMatcher();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.stream.Stream<java.lang.String> strStream19 = strList17.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher22);
        boolean boolean24 = strList17.remove((java.lang.Object) strMatcher22);
        java.lang.String str26 = strList17.get(0);
        char[] charArray28 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher30, strMatcher31);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer32.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher33, strMatcher34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher44, strMatcher45);
        java.lang.String str47 = strTokenizer46.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.setDelimiterString("");
        java.lang.Object obj51 = strTokenizer50.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer50.getQuoteMatcher();
        char[] charArray54 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher56, strMatcher57);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer58.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, strMatcher59, strMatcher60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, "hi!");
        int int69 = strMatcher52.isMatch(charArray54, (int) (short) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer42.setDelimiterMatcher(strMatcher52);
        java.lang.String str71 = strTokenizer70.nextToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer70.getTrimmerMatcher();
        boolean boolean73 = strList17.equals((java.lang.Object) strMatcher72);
        char[] charArray75 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher77, strMatcher78);
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = strTokenizer79.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, strMatcher80, strMatcher81);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, '4');
        int int89 = strMatcher72.isMatch(charArray75, (-1), (int) (short) 100, 100);
        int int91 = strMatcher14.isMatch(charArray75, (int) (short) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, '4', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer97 = strTokenizer96.reset();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strStream19);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str47, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a]");
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "a" + "'", str71, "a");
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[a]");
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertNotNull(strTokenizer97);
    }

    @Test
    public void test11938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11938");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '#', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer15.setEmptyTokenAsNull(true);
        java.lang.Object obj22 = strTokenizer21.clone();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test11939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11939");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        java.util.List<java.lang.String> strList10 = strTokenizer8.getTokenList();
        java.lang.Object obj11 = null;
        boolean boolean12 = strList10.remove(obj11);
        boolean boolean13 = strList2.removeAll((java.util.Collection<java.lang.String>) strList10);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher15, strMatcher16);
        java.lang.String str18 = strTokenizer17.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setDelimiterString("");
        java.lang.Object obj22 = strTokenizer21.clone();
        java.util.List<java.lang.String> strList23 = strTokenizer21.getTokenList();
        int int24 = strList23.size();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.stream.Stream<java.lang.String> strStream29 = strList27.stream();
        java.lang.Object[] objArray30 = strList27.toArray();
        boolean boolean31 = strList23.removeAll((java.util.Collection<java.lang.String>) strList27);
        boolean boolean33 = strList23.add("StrTokenizer[hi!]");
        boolean boolean34 = strList10.containsAll((java.util.Collection<java.lang.String>) strList23);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.stream.Stream<java.lang.String> strStream39 = strList37.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher41, strMatcher42);
        java.lang.String str44 = strTokenizer43.toString();
        java.util.List<java.lang.String> strList45 = strTokenizer43.getTokenList();
        java.lang.Object obj46 = null;
        boolean boolean47 = strList45.remove(obj46);
        boolean boolean48 = strList37.removeAll((java.util.Collection<java.lang.String>) strList45);
        java.util.Spliterator<java.lang.String> strSpliterator49 = strList37.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher51, strMatcher52);
        java.lang.String str54 = strTokenizer53.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer53.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer53.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer53.setEmptyTokenAsNull(false);
        java.util.List<java.lang.String> strList59 = strTokenizer58.getTokenList();
        boolean boolean60 = strList37.remove((java.lang.Object) strList59);
        java.util.stream.Stream<java.lang.String> strStream61 = strList37.parallelStream();
        int int62 = strList10.lastIndexOf((java.lang.Object) strList37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        java.util.List<java.lang.String> strList67 = strTokenizer66.getTokenList();
        strList67.clear();
        boolean boolean69 = strList37.removeAll((java.util.Collection<java.lang.String>) strList67);
        boolean boolean70 = strList67.isEmpty();
        char[] charArray72 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher74, strMatcher75);
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = strTokenizer76.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, strMatcher77, strMatcher78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, 'a', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray72);
        int int88 = strList67.indexOf((java.lang.Object) charArray72);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str18, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strStream29);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strStream39);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str44, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strSpliterator49);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str54, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strStream61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[a]");
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
    }

    @Test
    public void test11940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11940");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        java.lang.Object[] objArray5 = strList2.toArray();
        java.lang.Object[] objArray6 = strList2.toArray();
        boolean boolean8 = strList2.add("");
        boolean boolean10 = strList2.add("StrTokenizer[a]");
        boolean boolean11 = strList2.isEmpty();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[hi!]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test11941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11941");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        boolean boolean4 = strList2.isEmpty();
        strList2.clear();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.reset("hi!");
        java.util.List<java.lang.String> strList12 = strTokenizer9.getTokenList();
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, '#', '#');
        int int29 = strList12.lastIndexOf((java.lang.Object) strTokenizer28);
        int int30 = strList12.size();
        boolean boolean31 = strList2.addAll((java.util.Collection<java.lang.String>) strList12);
        java.util.stream.Stream<java.lang.String> strStream32 = strList2.parallelStream();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strStream32);
    }

    @Test
    public void test11942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11942");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        java.util.ListIterator<java.lang.String> strItor11 = strList9.listIterator((int) (short) 0);
        boolean boolean12 = strList9.isEmpty();
        java.util.List<java.lang.String> strList15 = strList9.subList((int) (short) 0, (int) (short) 1);
        java.util.ListIterator<java.lang.String> strItor16 = strList15.listIterator();
        java.util.Spliterator<java.lang.String> strSpliterator17 = strList15.spliterator();
        java.util.Spliterator<java.lang.String> strSpliterator18 = strList15.spliterator();
        char[] charArray20 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher22, strMatcher23);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer24.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, "StrTokenizer[not tokenized yet]");
        java.util.List<java.lang.String> strList34 = strTokenizer33.getTokenList();
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.stream.Stream<java.lang.String> strStream39 = strList37.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher42, strMatcher43);
        java.lang.String str45 = strTokenizer44.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer44.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setDelimiterString("");
        java.lang.Object obj49 = strTokenizer48.clone();
        java.util.List<java.lang.String> strList50 = strTokenizer48.getTokenList();
        int int51 = strList50.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher53, strMatcher54);
        java.lang.String str56 = strTokenizer55.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer55.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer57.setDelimiterString("");
        java.lang.Object obj60 = strTokenizer59.clone();
        java.util.List<java.lang.String> strList61 = strTokenizer59.getTokenList();
        int int62 = strList61.size();
        java.lang.String[] strArray64 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList65 = new java.util.ArrayList<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        java.util.stream.Stream<java.lang.String> strStream67 = strList65.stream();
        java.lang.Object[] objArray68 = strList65.toArray();
        boolean boolean69 = strList61.removeAll((java.util.Collection<java.lang.String>) strList65);
        boolean boolean70 = strList50.containsAll((java.util.Collection<java.lang.String>) strList61);
        java.util.Spliterator<java.lang.String> strSpliterator71 = strList61.spliterator();
        boolean boolean72 = strList37.addAll((int) (byte) 0, (java.util.Collection<java.lang.String>) strList61);
        boolean boolean73 = strList34.addAll((java.util.Collection<java.lang.String>) strList37);
        java.lang.String str75 = strList37.get(0);
        java.util.stream.Stream<java.lang.String> strStream76 = strList37.parallelStream();
        boolean boolean77 = strList15.containsAll((java.util.Collection<java.lang.String>) strList37);
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher79, strMatcher80);
        java.lang.String str82 = strTokenizer81.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer81.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer83.setDelimiterString("");
        java.lang.Object obj86 = strTokenizer85.clone();
        java.util.List<java.lang.String> strList87 = strTokenizer85.getTokenList();
        java.util.ListIterator<java.lang.String> strItor89 = strList87.listIterator((int) (short) 0);
        boolean boolean90 = strList87.isEmpty();
        java.util.Spliterator<java.lang.String> strSpliterator91 = strList87.spliterator();
        boolean boolean92 = strList37.retainAll((java.util.Collection<java.lang.String>) strList87);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strItor11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(strItor16);
        org.junit.Assert.assertNotNull(strSpliterator17);
        org.junit.Assert.assertNotNull(strSpliterator18);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strStream39);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str45, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str56, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strStream67);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strSpliterator71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertNotNull(strStream76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str82, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList87);
        org.junit.Assert.assertNotNull(strItor89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(strSpliterator91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test11943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11943");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        java.util.List<java.lang.String> strList4 = strTokenizer3.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        java.util.List<java.lang.String> strList10 = strTokenizer8.getTokenList();
        java.lang.Object obj11 = null;
        boolean boolean12 = strList10.remove(obj11);
        boolean boolean14 = strList10.add("StrTokenizer[not tokenized yet]");
        boolean boolean15 = strList4.containsAll((java.util.Collection<java.lang.String>) strList10);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.stream.Stream<java.lang.String> strStream20 = strList18.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher22, strMatcher23);
        java.lang.String str25 = strTokenizer24.toString();
        java.util.List<java.lang.String> strList26 = strTokenizer24.getTokenList();
        java.lang.Object obj27 = null;
        boolean boolean28 = strList26.remove(obj27);
        boolean boolean29 = strList18.removeAll((java.util.Collection<java.lang.String>) strList26);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher31, strMatcher32);
        java.lang.String str34 = strTokenizer33.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.setDelimiterString("");
        java.lang.Object obj38 = strTokenizer37.clone();
        java.util.List<java.lang.String> strList39 = strTokenizer37.getTokenList();
        boolean boolean40 = strList18.retainAll((java.util.Collection<java.lang.String>) strList39);
        java.util.ListIterator<java.lang.String> strItor41 = strList18.listIterator();
        boolean boolean42 = strList10.contains((java.lang.Object) strList18);
        java.util.stream.Stream<java.lang.String> strStream43 = strList10.parallelStream();
        java.lang.Object[] objArray44 = strList10.toArray();
        java.lang.Object[] objArray45 = strList10.toArray();
        boolean boolean46 = strList10.isEmpty();
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strStream20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str25, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str34, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strItor41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strStream43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[hi!, StrTokenizer[not tokenized yet]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[hi!, StrTokenizer[not tokenized yet]]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[hi!, StrTokenizer[not tokenized yet]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[hi!, StrTokenizer[not tokenized yet]]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test11944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11944");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setIgnoreEmptyTokens(false);
        java.lang.String str9 = strTokenizer3.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer3.setIgnoreEmptyTokens(true);
        char[] charArray13 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher15, strMatcher16);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher18, strMatcher19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray13);
        char[] charArray26 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher28, strMatcher29);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer30.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher31, strMatcher32);
        char[] charArray35 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher37, strMatcher38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer39.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher40, strMatcher41);
        int int46 = strMatcher31.isMatch(charArray35, 1, 1, (int) ' ');
        char[] charArray47 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher48);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer49.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher31, strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer11.setDelimiterMatcher(strMatcher50);
        char[] charArray53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.reset(charArray53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer54.setQuoteChar(' ');
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a]");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a]");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a]");
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strTokenizer56);
    }

    @Test
    public void test11945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11945");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        java.util.ListIterator<java.lang.String> strItor11 = strList9.listIterator((int) (short) 0);
        boolean boolean12 = strList9.isEmpty();
        java.util.List<java.lang.String> strList15 = strList9.subList((int) (short) 0, (int) (short) 1);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.stream.Stream<java.lang.String> strStream20 = strList18.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher22, strMatcher23);
        java.lang.String str25 = strTokenizer24.toString();
        java.util.List<java.lang.String> strList26 = strTokenizer24.getTokenList();
        java.lang.Object obj27 = null;
        boolean boolean28 = strList26.remove(obj27);
        boolean boolean29 = strList18.removeAll((java.util.Collection<java.lang.String>) strList26);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher31, strMatcher32);
        java.lang.String str34 = strTokenizer33.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.setDelimiterString("");
        java.lang.Object obj38 = strTokenizer37.clone();
        java.util.List<java.lang.String> strList39 = strTokenizer37.getTokenList();
        boolean boolean40 = strList18.retainAll((java.util.Collection<java.lang.String>) strList39);
        java.util.ListIterator<java.lang.String> strItor41 = strList18.listIterator();
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.util.stream.Stream<java.lang.String> strStream46 = strList44.stream();
        boolean boolean47 = strList44.isEmpty();
        java.lang.Object[] objArray48 = strList44.toArray();
        boolean boolean49 = strList18.addAll((java.util.Collection<java.lang.String>) strList44);
        boolean boolean50 = strList15.removeAll((java.util.Collection<java.lang.String>) strList44);
        java.util.stream.Stream<java.lang.String> strStream51 = strList15.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher54, strMatcher55);
        java.lang.String str57 = strTokenizer56.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer58.setDelimiterString("");
        java.lang.Object obj61 = strTokenizer60.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer60.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher62);
        boolean boolean64 = strList15.remove((java.lang.Object) strTokenizer63);
        strList15.add(0, "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str69 = strList15.remove((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strItor11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strStream20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str25, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str34, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strItor41);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strStream46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strStream51);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str57, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test11946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11946");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        char[] charArray10 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher15, strMatcher16);
        int int21 = strMatcher6.isMatch(charArray10, 1, 1, (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher25);
        java.lang.String str27 = strTokenizer26.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer26.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray10);
        java.lang.String str33 = strTokenizer32.next();
        boolean boolean34 = strTokenizer32.isIgnoreEmptyTokens();
        java.util.List<java.lang.String> strList35 = strTokenizer32.getTokenList();
        int int36 = strTokenizer32.previousIndex();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str27, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "a" + "'", str33, "a");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test11947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11947");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer(charArray0);
        char[] charArray3 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher5, strMatcher6);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer7.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, strMatcher8, strMatcher9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, "a");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer1.reset(charArray3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray3);
        java.lang.Class<?> wildcardClass22 = charArray3.getClass();
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[a]");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test11948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11948");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        java.util.ListIterator<java.lang.String> strItor11 = strList9.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor12 = strList9.listIterator();
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        boolean boolean22 = strList9.remove((java.lang.Object) strMatcher19);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher25);
        boolean boolean27 = strTokenizer26.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setIgnoredChar('4');
        boolean boolean30 = strList9.contains((java.lang.Object) strTokenizer26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer26.setDelimiterString("a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer26.setQuoteChar('4');
        boolean boolean35 = strTokenizer26.hasPrevious();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strItor11);
        org.junit.Assert.assertNotNull(strItor12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test11949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11949");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("#a444 ", 'a', '4');
        char[] charArray5 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher8);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer9.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray5, strMatcher10, strMatcher11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray5);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray5);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray5);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray5);
        char[] charArray18 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher23, strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray5, strMatcher27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray5);
        char[] charArray30 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher31);
        java.lang.String[] strArray33 = strTokenizer32.getTokenArray();
        java.lang.String[] strArray34 = strTokenizer32.getTokenArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer32.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray5, strMatcher35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer3.reset(charArray5);
        int int38 = strTokenizer3.nextIndex();
        java.lang.String str39 = strTokenizer3.previousToken();
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNull(str39);
    }

    @Test
    public void test11950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11950");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer7.setIgnoredChar('4');
        char[] charArray13 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher15, strMatcher16);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher18, strMatcher19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray13);
        char[] charArray26 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher28, strMatcher29);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer30.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher31, strMatcher32);
        char[] charArray35 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher37, strMatcher38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer39.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher40, strMatcher41);
        int int46 = strMatcher31.isMatch(charArray35, 1, 1, (int) ' ');
        char[] charArray47 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher48);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer49.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher31, strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer7.reset(charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher61, strMatcher62);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer63.getTrimmerMatcher();
        char[] charArray66 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher68, strMatcher69);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer70.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, strMatcher71, strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher64, strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer58.setDelimiterMatcher(strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer75.setEmptyTokenAsNull(true);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer75.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a]");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a]");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a]");
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a]");
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strTokenizer77);
    }

    @Test
    public void test11951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11951");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("a");
        java.util.List<java.lang.String> strList2 = strTokenizer1.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        java.lang.String str7 = strTokenizer6.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer6.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer6.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setIgnoreEmptyTokens(false);
        int int16 = strList2.indexOf((java.lang.Object) strTokenizer13);
        strList2.clear();
        java.util.Iterator<java.lang.String> strItor18 = strList2.iterator();
        boolean boolean20 = strList2.add("");
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.stream.Stream<java.lang.String> strStream25 = strList23.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher28);
        java.lang.String str30 = strTokenizer29.toString();
        java.util.List<java.lang.String> strList31 = strTokenizer29.getTokenList();
        java.lang.Object obj32 = null;
        boolean boolean33 = strList31.remove(obj32);
        boolean boolean34 = strList23.removeAll((java.util.Collection<java.lang.String>) strList31);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher36, strMatcher37);
        java.lang.String str39 = strTokenizer38.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setDelimiterString("");
        java.lang.Object obj43 = strTokenizer42.clone();
        java.util.List<java.lang.String> strList44 = strTokenizer42.getTokenList();
        boolean boolean45 = strList23.retainAll((java.util.Collection<java.lang.String>) strList44);
        java.util.ListIterator<java.lang.String> strItor46 = strList44.listIterator();
        java.util.stream.Stream<java.lang.String> strStream47 = strList44.parallelStream();
        boolean boolean48 = strList2.containsAll((java.util.Collection<java.lang.String>) strList44);
        java.util.stream.Stream<java.lang.String> strStream49 = strList44.stream();
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str7, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strItor18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strStream25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str30, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str39, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strItor46);
        org.junit.Assert.assertNotNull(strStream47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strStream49);
    }

    @Test
    public void test11952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11952");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        java.lang.String str6 = strTokenizer5.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer5.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer5.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setIgnoreEmptyTokens(false);
        java.lang.String str15 = strTokenizer12.next();
        char[] charArray17 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher22, strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray17);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer25.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer12.setIgnoredMatcher(strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher26, strMatcher28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher26);
        java.lang.Object obj31 = strTokenizer30.clone();
        java.lang.String str32 = strTokenizer30.toString();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer30.add("StrTokenizer[,");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str6, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str32, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test11953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11953");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoreEmptyTokens(false);
        int int13 = strTokenizer10.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer10.setDelimiterChar('a');
        char[] charArray17 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher22, strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer10.reset(charArray17);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.doubleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer10.setQuoteMatcher(strMatcher35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setEmptyTokenAsNull(false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strTokenizer38);
    }

    @Test
    public void test11954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11954");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer7.getQuoteMatcher();
        char[] charArray11 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, "hi!");
        int int26 = strMatcher9.isMatch(charArray11, (int) (short) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher34);
        java.lang.String str36 = strTokenizer35.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("");
        java.lang.Object obj40 = strTokenizer39.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer39.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher43, strMatcher44);
        java.lang.String str46 = strTokenizer45.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer45.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer45.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.setIgnoreEmptyTokens(false);
        java.lang.String str55 = strTokenizer52.next();
        char[] charArray57 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher59, strMatcher60);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer61.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, strMatcher62, strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray57);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer65.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer52.setIgnoredMatcher(strMatcher66);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = strTokenizer52.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[hi!]", strMatcher41, strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer30.setIgnoredMatcher(strMatcher41);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer70.setTrimmerMatcher(strMatcher71);
        boolean boolean73 = strTokenizer70.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer70.reset("StrTokenizer[hi!]");
        java.util.List<java.lang.String> strList76 = strTokenizer70.getTokenList();
        java.lang.Object obj77 = strTokenizer70.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer70.setDelimiterChar(' ');
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str36, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str46, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a]");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer79);
    }

    @Test
    public void test11955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11955");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        java.lang.String str1 = strTokenizer0.getContent();
        boolean boolean2 = strTokenizer0.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        java.lang.String str7 = strTokenizer6.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer6.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer6.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setIgnoreEmptyTokens(false);
        java.lang.String str16 = strTokenizer13.next();
        char[] charArray18 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher23, strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer13.setIgnoredMatcher(strMatcher27);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher30, strMatcher31);
        java.lang.String str33 = strTokenizer32.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer32.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer32.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setQuoteChar('4');
        char[] charArray41 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher43, strMatcher44);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer45.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher46, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer37.reset(charArray41);
        int int56 = strMatcher27.isMatch(charArray41, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", '4', 'a');
        java.lang.String[] strArray61 = strTokenizer60.getTokenArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer60.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher62, strMatcher65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer0.reset(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray41);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray41);
        org.junit.Assert.assertNotNull(strTokenizer0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str7, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str33, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a]");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strMatcher72);
    }

    @Test
    public void test11956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11956");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        java.lang.Object obj9 = strTokenizer8.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer8.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer8.setTrimmerMatcher(strMatcher13);
        java.lang.String str15 = strTokenizer14.getContent();
        java.lang.String str16 = strTokenizer14.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer14.setEmptyTokenAsNull(false);
        int int19 = strTokenizer14.size();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
    }

    @Test
    public void test11957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11957");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        char[] charArray23 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28, strMatcher29);
        int int34 = strMatcher19.isMatch(charArray23, 1, 1, (int) ' ');
        char[] charArray35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher19, strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', '4');
        java.lang.String str54 = strTokenizer53.next();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "a" + "'", str54, "a");
    }

    @Test
    public void test11958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11958");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        boolean boolean4 = strTokenizer3.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.setIgnoredChar('a');
        int int9 = strTokenizer6.nextIndex();
        java.util.List<java.lang.String> strList10 = strTokenizer6.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        java.lang.String str15 = strTokenizer14.toString();
        java.util.List<java.lang.String> strList16 = strTokenizer14.getTokenList();
        boolean boolean17 = strList16.isEmpty();
        boolean boolean18 = strList16.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        java.lang.String str23 = strTokenizer22.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.setDelimiterString("");
        java.lang.Object obj27 = strTokenizer26.clone();
        java.util.List<java.lang.String> strList28 = strTokenizer26.getTokenList();
        java.util.ListIterator<java.lang.String> strItor30 = strList28.listIterator((int) (short) 0);
        boolean boolean31 = strList16.containsAll((java.util.Collection<java.lang.String>) strList28);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher34);
        java.lang.String str36 = strTokenizer35.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("");
        java.lang.Object obj40 = strTokenizer39.clone();
        java.util.List<java.lang.String> strList41 = strTokenizer39.getTokenList();
        int int42 = strList41.size();
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        java.util.stream.Stream<java.lang.String> strStream47 = strList45.stream();
        java.lang.Object[] objArray48 = strList45.toArray();
        boolean boolean49 = strList41.removeAll((java.util.Collection<java.lang.String>) strList45);
        java.lang.String[] strArray52 = new java.lang.String[] { "", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher56, strMatcher57);
        boolean boolean59 = strTokenizer58.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer58.setIgnoredChar('4');
        int int62 = strTokenizer61.nextIndex();
        boolean boolean63 = strList53.equals((java.lang.Object) int62);
        int int64 = strList53.size();
        boolean boolean65 = strList41.retainAll((java.util.Collection<java.lang.String>) strList53);
        boolean boolean66 = strList28.retainAll((java.util.Collection<java.lang.String>) strList53);
        boolean boolean67 = strList10.addAll((java.util.Collection<java.lang.String>) strList28);
        strList10.add(0, "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str73 = strList10.set((int) '#', "StrTokenizer[not tokenized yet]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str15, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str23, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNotNull(strItor30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str36, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strStream47);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2 + "'", int64 == 2);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test11959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11959");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray1);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("a   ");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher31, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setDelimiterString("");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher29, strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        boolean boolean40 = strTokenizer39.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray43 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher45, strMatcher46);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, strMatcher48, strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer51.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer41.setTrimmerMatcher(strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer39.setQuoteMatcher(strMatcher52);
        java.lang.String str55 = strTokenizer54.previousToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer54.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer37.setIgnoredMatcher(strMatcher56);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[a]");
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer57);
    }

    @Test
    public void test11960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11960");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[hi!]", 'a', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.reset("StrTokenizer[]");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setQuoteMatcher(strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer3.setEmptyTokenAsNull(false);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer10.set("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
    }

    @Test
    public void test11961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11961");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        int int10 = strList9.size();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.stream.Stream<java.lang.String> strStream15 = strList13.stream();
        java.lang.Object[] objArray16 = strList13.toArray();
        boolean boolean17 = strList9.removeAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.String[] strArray20 = new java.lang.String[] { "", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher25);
        boolean boolean27 = strTokenizer26.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setIgnoredChar('4');
        int int30 = strTokenizer29.nextIndex();
        boolean boolean31 = strList21.equals((java.lang.Object) int30);
        int int32 = strList21.size();
        boolean boolean33 = strList9.retainAll((java.util.Collection<java.lang.String>) strList21);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.stream.Stream<java.lang.String> strStream38 = strList36.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher40, strMatcher41);
        java.lang.String str43 = strTokenizer42.toString();
        java.util.List<java.lang.String> strList44 = strTokenizer42.getTokenList();
        java.lang.Object obj45 = null;
        boolean boolean46 = strList44.remove(obj45);
        boolean boolean47 = strList36.removeAll((java.util.Collection<java.lang.String>) strList44);
        java.util.Spliterator<java.lang.String> strSpliterator48 = strList36.spliterator();
        boolean boolean49 = strList21.remove((java.lang.Object) strList36);
        boolean boolean51 = strList36.add("StrTokenizer[not tokenized yet]");
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.stream.Stream<java.lang.String> strStream56 = strList54.stream();
        boolean boolean57 = strList54.isEmpty();
        char[] charArray58 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, strMatcher59);
        java.lang.String[] strArray61 = strTokenizer60.getTokenArray();
        boolean boolean62 = strList54.equals((java.lang.Object) strArray61);
        strList54.clear();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'a', 'a');
        java.util.List<java.lang.String> strList68 = strTokenizer67.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher70, strMatcher71);
        java.lang.String str73 = strTokenizer72.toString();
        java.util.List<java.lang.String> strList74 = strTokenizer72.getTokenList();
        java.lang.Object obj75 = null;
        boolean boolean76 = strList74.remove(obj75);
        boolean boolean78 = strList74.add("StrTokenizer[not tokenized yet]");
        boolean boolean79 = strList68.containsAll((java.util.Collection<java.lang.String>) strList74);
        java.lang.Object[] objArray80 = strList68.toArray();
        int int81 = strList68.size();
        boolean boolean82 = strList54.addAll((java.util.Collection<java.lang.String>) strList68);
        java.util.ListIterator<java.lang.String> strItor83 = strList54.listIterator();
        java.lang.String str85 = strList54.remove(0);
        boolean boolean86 = strList36.containsAll((java.util.Collection<java.lang.String>) strList54);
        strList54.clear();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strStream38);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str43, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strSpliterator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strStream56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str73, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[hi!]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(strItor83);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "hi!" + "'", str85, "hi!");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test11962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11962");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[StrTokenizer[hi!]]", '#', 'a');
    }

    @Test
    public void test11963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11963");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer2.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer2.setQuoteChar('4');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer2.add("StrTokenizer[StrTokenizer[not tokenized yet]]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
    }

    @Test
    public void test11964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11964");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        java.lang.String str6 = strTokenizer5.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer5.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer5.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setIgnoreEmptyTokens(false);
        java.lang.String str15 = strTokenizer12.next();
        char[] charArray17 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher22, strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray17);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer25.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer12.setIgnoredMatcher(strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher29, strMatcher30);
        java.lang.String str32 = strTokenizer31.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer31.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer31.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setQuoteChar('4');
        char[] charArray40 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher42, strMatcher43);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher45, strMatcher46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer36.reset(charArray40);
        int int55 = strMatcher26.isMatch(charArray40, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, 'a', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, "a");
        char[] charArray67 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher69, strMatcher70);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer71.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, strMatcher72, strMatcher73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, strMatcher80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[hi!]", strMatcher86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, strMatcher86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer65.setTrimmerMatcher(strMatcher86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer("   ", strMatcher86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[StrTokenizer[]", strMatcher86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = strTokenizer91.setDelimiterChar('a');
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str6, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str32, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[a]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a]");
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertNotNull(strTokenizer93);
    }

    @Test
    public void test11965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11965");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setDelimiterString("hi!");
        java.util.List<java.lang.String> strList7 = strTokenizer6.getTokenList();
        char[] charArray9 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher11, strMatcher12);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher14, strMatcher15);
        char[] charArray18 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher23, strMatcher24);
        int int29 = strMatcher14.isMatch(charArray18, 1, 1, (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, "StrTokenizer[hi!]");
        java.util.List<java.lang.String> strList35 = strTokenizer34.getTokenList();
        boolean boolean36 = strList7.retainAll((java.util.Collection<java.lang.String>) strList35);
        java.util.Spliterator<java.lang.String> strSpliterator37 = strList7.spliterator();
        boolean boolean38 = strList7.isEmpty();
        java.lang.Class<?> wildcardClass39 = strList7.getClass();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strSpliterator37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test11966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11966");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher2, strMatcher3);
        java.lang.String str5 = strTokenizer4.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer4.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer4.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setIgnoreEmptyTokens(false);
        java.lang.String str14 = strTokenizer11.next();
        char[] charArray16 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher18, strMatcher19);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher21, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray16);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer24.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer11.setIgnoredMatcher(strMatcher25);
        int int27 = strTokenizer11.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer11.setQuoteChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer11.getTrimmerMatcher();
        char[] charArray31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setIgnoreEmptyTokens(true);
        boolean boolean37 = strTokenizer36.hasPrevious();
        java.lang.Object obj38 = strTokenizer36.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer36.setQuoteChar(' ');
        java.util.List<java.lang.String> strList41 = strTokenizer40.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer40.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer40.reset("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher47, strMatcher48);
        java.lang.String str50 = strTokenizer49.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer49.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer49.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer49.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer54.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.setIgnoreEmptyTokens(false);
        int int59 = strTokenizer56.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer56.setDelimiterChar('a');
        char[] charArray63 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher65, strMatcher66);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = strTokenizer67.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, strMatcher68, strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, strMatcher76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer56.reset(charArray63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer45.reset(charArray63);
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer("trTokenizer[hi!]", strMatcher30, strMatcher82);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str84 = strTokenizer83.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str5, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str50, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[a]");
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strMatcher82);
    }

    @Test
    public void test11967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11967");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer3.getTrimmerMatcher();
        char[] charArray6 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher8, strMatcher9);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer10.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher11, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer3.reset(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer3.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher22, strMatcher23);
        java.lang.String str25 = strTokenizer24.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer24.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer24.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.setIgnoreEmptyTokens(false);
        java.lang.String str34 = strTokenizer31.next();
        char[] charArray36 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher38, strMatcher39);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer40.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher41, strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray36);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer31.setIgnoredMatcher(strMatcher45);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer20.setQuoteMatcher(strMatcher47);
        int int49 = strTokenizer48.nextIndex();
        int int50 = strTokenizer48.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer48.setIgnoredChar('a');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a]");
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str25, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a]");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer52);
    }

    @Test
    public void test11968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11968");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", ' ');
        char[] charArray22 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher25);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher27, strMatcher28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, "a");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer20.reset(charArray22);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, '#', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, "a   ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer17.reset(charArray22);
        java.lang.String str49 = strTokenizer48.previousToken();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNull(str49);
    }

    @Test
    public void test11969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11969");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, 'a', ' ');
        boolean boolean14 = strTokenizer13.hasPrevious();
        int int15 = strTokenizer13.previousIndex();
        java.lang.String str16 = strTokenizer13.getContent();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "a" + "'", str16, "a");
    }

    @Test
    public void test11970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11970");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher2, strMatcher3);
        java.lang.String str5 = strTokenizer4.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer4.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer4.setEmptyTokenAsNull(false);
        java.lang.Object obj10 = strTokenizer9.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        java.lang.String str15 = strTokenizer14.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer14.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer14.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer14.setDelimiterMatcher(strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer9.setQuoteMatcher(strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.setIgnoredChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer22.setDelimiterChar('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer26.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("   ", strMatcher27);
        java.lang.Object obj29 = strTokenizer28.clone();
        boolean boolean30 = strTokenizer28.hasNext();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str5, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str15, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test11971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11971");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer7.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer7.setDelimiterString("hi!");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer7.set("StrTokenizer[a]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
    }

    @Test
    public void test11972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11972");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("", ' ', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setTrimmerMatcher(strMatcher5);
        char[] charArray8 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher10, strMatcher11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer12.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher13, strMatcher14);
        char[] charArray17 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher22, strMatcher23);
        int int28 = strMatcher13.isMatch(charArray17, 1, 1, (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray17);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher31, strMatcher32);
        java.lang.String str34 = strTokenizer33.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer33.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, 'a', 'a');
        int int45 = strMatcher5.isMatch(charArray17, 2, (int) ' ', 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, "StrTokenizer[a]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, ' ', 'a');
        int int51 = strTokenizer50.previousIndex();
        java.lang.String str52 = strTokenizer50.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer50.setDelimiterChar('4');
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a]");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a]");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str34, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "a" + "'", str52, "a");
        org.junit.Assert.assertNotNull(strTokenizer54);
    }

    @Test
    public void test11973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11973");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        java.util.ListIterator<java.lang.String> strItor11 = strList9.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor12 = strList9.listIterator();
        java.util.Iterator<java.lang.String> strItor13 = strList9.iterator();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("a");
        java.util.List<java.lang.String> strList16 = strTokenizer15.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher18, strMatcher19);
        java.lang.String str21 = strTokenizer20.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer20.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer20.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer25.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setIgnoreEmptyTokens(false);
        int int30 = strList16.indexOf((java.lang.Object) strTokenizer27);
        strList16.clear();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher34);
        java.lang.String str36 = strTokenizer35.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer35.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer35.setEmptyTokenAsNull(false);
        java.lang.Object obj41 = strTokenizer40.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher43, strMatcher44);
        java.lang.String str46 = strTokenizer45.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer45.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer45.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer45.setDelimiterMatcher(strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer40.setQuoteMatcher(strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer53.setIgnoredChar('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer55.setEmptyTokenAsNull(true);
        boolean boolean59 = strList16.remove((java.lang.Object) strTokenizer55);
        boolean boolean60 = strList9.removeAll((java.util.Collection<java.lang.String>) strList16);
        java.util.Iterator<java.lang.String> strItor61 = strList9.iterator();
        java.util.stream.Stream<java.lang.String> strStream62 = strList9.stream();
        int int63 = strList9.size();
        java.util.Spliterator<java.lang.String> strSpliterator64 = strList9.spliterator();
        java.util.Iterator<java.lang.String> strItor65 = strList9.iterator();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList68 = strList9.subList((int) (short) 0, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strItor11);
        org.junit.Assert.assertNotNull(strItor12);
        org.junit.Assert.assertNotNull(strItor13);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str21, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str36, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str46, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strItor61);
        org.junit.Assert.assertNotNull(strStream62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(strSpliterator64);
        org.junit.Assert.assertNotNull(strItor65);
    }

    @Test
    public void test11974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11974");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        int int11 = strTokenizer10.previousIndex();
        boolean boolean12 = strTokenizer10.isIgnoreEmptyTokens();
        boolean boolean13 = strTokenizer10.hasPrevious();
        char[] charArray15 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher17, strMatcher18);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher20, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher30, strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer10.reset(charArray15);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer10.getTrimmerMatcher();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer10.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strMatcher34);
    }

    @Test
    public void test11975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11975");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        boolean boolean12 = strTokenizer11.hasNext();
        java.lang.String str13 = strTokenizer11.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer11.reset("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer15.reset();
        boolean boolean17 = strTokenizer15.hasPrevious();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "a" + "'", str13, "a");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test11976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11976");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setQuoteChar('4');
        int int8 = strTokenizer5.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer5.getTrimmerMatcher();
        char[] charArray11 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, '#', '4');
        int int33 = strMatcher9.isMatch(charArray11, (int) (short) -1, (int) (byte) -1, (int) '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray11);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(strMatcher34);
    }

    @Test
    public void test11977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11977");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.stream.Stream<java.lang.String> strStream4 = strList2.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher6, strMatcher7);
        java.lang.String str9 = strTokenizer8.toString();
        java.util.List<java.lang.String> strList10 = strTokenizer8.getTokenList();
        java.lang.Object obj11 = null;
        boolean boolean12 = strList10.remove(obj11);
        boolean boolean13 = strList2.removeAll((java.util.Collection<java.lang.String>) strList10);
        java.util.Spliterator<java.lang.String> strSpliterator14 = strList2.spliterator();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        boolean boolean19 = strList17.isEmpty();
        java.lang.Object[] objArray20 = strList17.toArray();
        java.lang.Object[] objArray21 = strList2.toArray(objArray20);
        char[] charArray23 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28, strMatcher29);
        char[] charArray32 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher34, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher37, strMatcher38);
        int int43 = strMatcher28.isMatch(charArray32, 1, 1, (int) ' ');
        int int44 = strList2.indexOf((java.lang.Object) ' ');
        java.util.Spliterator<java.lang.String> strSpliterator45 = strList2.spliterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher47, strMatcher48);
        java.lang.String str50 = strTokenizer49.toString();
        java.util.List<java.lang.String> strList51 = strTokenizer49.getTokenList();
        boolean boolean52 = strList51.isEmpty();
        boolean boolean54 = strList51.add("a");
        boolean boolean55 = strList2.containsAll((java.util.Collection<java.lang.String>) strList51);
        boolean boolean56 = strList2.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.String> strItor58 = strList2.listIterator((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strStream4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str9, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strSpliterator14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[null]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[null]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[a]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strSpliterator45);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str50, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test11978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11978");
        char[] charArray6 = new char[] { '#', 'a', '4', '4', '4', ' ' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.reset("StrTokenizer[]");
        int int11 = strTokenizer10.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer10.reset("StrTokenizer[, ]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer13.getQuoteMatcher();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#a444 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#a444 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, a, 4, 4, 4,  ]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strMatcher16);
    }

    @Test
    public void test11979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11979");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher2, strMatcher3);
        java.lang.String str5 = strTokenizer4.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer4.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer4.setEmptyTokenAsNull(false);
        java.lang.Object obj10 = strTokenizer9.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        java.lang.String str15 = strTokenizer14.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer14.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer14.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer14.setDelimiterMatcher(strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer9.setQuoteMatcher(strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.setIgnoredChar('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer24.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer24.getQuoteMatcher();
        char[] charArray28 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher30, strMatcher31);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer32.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher33, strMatcher34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray28);
        char[] charArray41 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher43, strMatcher44);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer45.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher46, strMatcher47);
        char[] charArray50 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher52, strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher55, strMatcher56);
        int int61 = strMatcher46.isMatch(charArray50, 1, 1, (int) ' ');
        char[] charArray62 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, strMatcher63);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = strTokenizer64.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher46, strMatcher65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher26, strMatcher46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer67.setDelimiterChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer69.setDelimiterString("StrTokenizer[not tokenized yet]");
        int int72 = strTokenizer71.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer71.setIgnoredMatcher(strMatcher73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer71.setEmptyTokenAsNull(true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str5, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str15, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a]");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a]");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strTokenizer76);
    }

    @Test
    public void test11980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11980");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.util.List<java.lang.String> strList5 = strTokenizer3.getTokenList();
        java.lang.String[] strArray8 = new java.lang.String[] { "", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        boolean boolean15 = strTokenizer14.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer14.setIgnoredChar('4');
        int int18 = strTokenizer17.nextIndex();
        boolean boolean19 = strList9.equals((java.lang.Object) int18);
        int int20 = strList9.size();
        boolean boolean21 = strList5.containsAll((java.util.Collection<java.lang.String>) strList9);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher23, strMatcher24);
        java.lang.String str26 = strTokenizer25.toString();
        java.util.List<java.lang.String> strList27 = strTokenizer25.getTokenList();
        java.lang.Object obj28 = null;
        boolean boolean29 = strList27.remove(obj28);
        strList27.clear();
        boolean boolean31 = strList9.removeAll((java.util.Collection<java.lang.String>) strList27);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str34 = strList27.set((int) (short) 1, "h");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str26, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test11981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11981");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        int int10 = strList9.size();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.stream.Stream<java.lang.String> strStream15 = strList13.stream();
        java.lang.Object[] objArray16 = strList13.toArray();
        boolean boolean17 = strList9.removeAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.String[] strArray20 = new java.lang.String[] { "", "StrTokenizer[hi!]" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher25);
        boolean boolean27 = strTokenizer26.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer26.setIgnoredChar('4');
        int int30 = strTokenizer29.nextIndex();
        boolean boolean31 = strList21.equals((java.lang.Object) int30);
        int int32 = strList21.size();
        boolean boolean33 = strList9.retainAll((java.util.Collection<java.lang.String>) strList21);
        int int34 = strList21.size();
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.stream.Stream<java.lang.String> strStream39 = strList37.stream();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.reset("hi!");
        int int44 = strTokenizer41.nextIndex();
        boolean boolean45 = strList37.equals((java.lang.Object) int44);
        strList37.clear();
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.stream.Stream<java.lang.String> strStream51 = strList49.stream();
        boolean boolean52 = strList49.isEmpty();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher54, strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.reset("hi!");
        java.util.List<java.lang.String> strList59 = strTokenizer56.getTokenList();
        char[] charArray61 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher63, strMatcher64);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer65.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, strMatcher66, strMatcher67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, '#', '#');
        int int76 = strList59.lastIndexOf((java.lang.Object) strTokenizer75);
        int int77 = strList59.size();
        boolean boolean78 = strList49.retainAll((java.util.Collection<java.lang.String>) strList59);
        int int79 = strList37.indexOf((java.lang.Object) strList59);
        boolean boolean80 = strList21.retainAll((java.util.Collection<java.lang.String>) strList59);
        java.util.Iterator<java.lang.String> strItor81 = strList59.iterator();
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher83, strMatcher84);
        java.lang.String str86 = strTokenizer85.toString();
        java.util.List<java.lang.String> strList87 = strTokenizer85.getTokenList();
        java.lang.Object obj88 = null;
        boolean boolean89 = strList87.remove(obj88);
        org.apache.commons.lang3.text.StrMatcher strMatcher92 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher92);
        boolean boolean94 = strList87.contains((java.lang.Object) "");
        java.util.Spliterator<java.lang.String> strSpliterator95 = strList87.spliterator();
        boolean boolean96 = strList59.removeAll((java.util.Collection<java.lang.String>) strList87);
        int int97 = strList59.size();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str99 = strList59.get((int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strStream39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strStream51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[a]");
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(strItor81);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str86, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(strMatcher92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(strSpliterator95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 0 + "'", int97 == 0);
    }

    @Test
    public void test11982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11982");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.util.List<java.lang.String> strList5 = strTokenizer3.getTokenList();
        java.lang.Object obj6 = null;
        boolean boolean7 = strList5.remove(obj6);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher10);
        boolean boolean12 = strList5.contains((java.lang.Object) "");
        java.util.ListIterator<java.lang.String> strItor14 = strList5.listIterator(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        java.lang.String str19 = strTokenizer18.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setDelimiterString("");
        java.lang.Object obj23 = strTokenizer22.clone();
        java.util.List<java.lang.String> strList24 = strTokenizer22.getTokenList();
        java.util.ListIterator<java.lang.String> strItor26 = strList24.listIterator((int) (short) 0);
        boolean boolean27 = strList24.isEmpty();
        java.util.List<java.lang.String> strList30 = strList24.subList((int) (short) 0, (int) (short) 1);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.stream.Stream<java.lang.String> strStream35 = strList33.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher37, strMatcher38);
        java.lang.String str40 = strTokenizer39.toString();
        java.util.List<java.lang.String> strList41 = strTokenizer39.getTokenList();
        java.lang.Object obj42 = null;
        boolean boolean43 = strList41.remove(obj42);
        boolean boolean44 = strList33.removeAll((java.util.Collection<java.lang.String>) strList41);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher46, strMatcher47);
        java.lang.String str49 = strTokenizer48.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.setDelimiterString("");
        java.lang.Object obj53 = strTokenizer52.clone();
        java.util.List<java.lang.String> strList54 = strTokenizer52.getTokenList();
        boolean boolean55 = strList33.retainAll((java.util.Collection<java.lang.String>) strList54);
        java.util.ListIterator<java.lang.String> strItor56 = strList33.listIterator();
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.stream.Stream<java.lang.String> strStream61 = strList59.stream();
        boolean boolean62 = strList59.isEmpty();
        java.lang.Object[] objArray63 = strList59.toArray();
        boolean boolean64 = strList33.addAll((java.util.Collection<java.lang.String>) strList59);
        boolean boolean65 = strList30.removeAll((java.util.Collection<java.lang.String>) strList59);
        boolean boolean66 = strList5.retainAll((java.util.Collection<java.lang.String>) strList59);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher68, strMatcher69);
        java.lang.String str71 = strTokenizer70.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer70.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer72.setDelimiterString("");
        java.lang.Object obj75 = strTokenizer74.clone();
        java.util.List<java.lang.String> strList76 = strTokenizer74.getTokenList();
        java.util.ListIterator<java.lang.String> strItor78 = strList76.listIterator((int) (short) 0);
        java.util.stream.Stream<java.lang.String> strStream79 = strList76.stream();
        boolean boolean80 = strList59.removeAll((java.util.Collection<java.lang.String>) strList76);
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher82, strMatcher83);
        java.lang.String str85 = strTokenizer84.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer84.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = strTokenizer84.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer84.setEmptyTokenAsNull(false);
        java.lang.Object obj90 = strTokenizer89.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = strTokenizer89.setQuoteChar('#');
        java.lang.String str93 = strTokenizer92.next();
        boolean boolean94 = strList76.contains((java.lang.Object) strTokenizer92);
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator95 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList76.replaceAll(strUnaryOperator95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strItor14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str19, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strItor26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strStream35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str40, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str49, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strItor56);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strStream61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str71, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strItor78);
        org.junit.Assert.assertNotNull(strStream79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str85, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "hi!" + "'", str93, "hi!");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test11983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11983");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer8.reset("");
        boolean boolean13 = strTokenizer8.hasPrevious();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test11984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11984");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        java.lang.Class<?> wildcardClass21 = strTokenizer20.getClass();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test11985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11985");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer7.setIgnoredChar('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer7.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer7.getTrimmerMatcher();
        java.lang.String[] strArray12 = strTokenizer7.getTokenArray();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test11986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11986");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        boolean boolean11 = strTokenizer10.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        java.lang.String str16 = strTokenizer15.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer15.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer15.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.setIgnoreEmptyTokens(false);
        java.lang.String str25 = strTokenizer22.next();
        char[] charArray27 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher29, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher32, strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray27);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer35.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer22.setIgnoredMatcher(strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher40);
        java.lang.String str42 = strTokenizer41.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer41.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer41.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setQuoteChar('4');
        char[] charArray50 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher52, strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher55, strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer46.reset(charArray50);
        int int65 = strMatcher36.isMatch(charArray50, (-1), 0, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer10.setQuoteMatcher(strMatcher36);
        char[] charArray68 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher70, strMatcher71);
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = strTokenizer72.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, strMatcher73, strMatcher74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, '#', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, strMatcher83, strMatcher84);
        int int87 = strMatcher36.isMatch(charArray68, 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, '#', '4');
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str16, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str42, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a]");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[a]");
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(strTokenizer89);
    }

    @Test
    public void test11987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11987");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        java.lang.String str6 = strTokenizer5.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer7.setDelimiterString("");
        java.lang.Object obj10 = strTokenizer9.clone();
        java.util.List<java.lang.String> strList11 = strTokenizer9.getTokenList();
        java.util.ListIterator<java.lang.String> strItor13 = strList11.listIterator((int) (short) 0);
        java.util.ListIterator<java.lang.String> strItor14 = strList11.listIterator();
        char[] charArray16 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher18, strMatcher19);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher21, strMatcher22);
        boolean boolean24 = strList11.remove((java.lang.Object) strMatcher21);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher21, strMatcher25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer27.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer27.setQuoteMatcher(strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.setIgnoredChar('4');
        java.lang.String str33 = strTokenizer32.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer32.setDelimiterString("StrTokenizer[StrTokenizer[]]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str6, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(strItor13);
        org.junit.Assert.assertNotNull(strItor14);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a]");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strTokenizer35);
    }

    @Test
    public void test11988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11988");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        int int10 = strList9.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher12, strMatcher13);
        java.lang.String str15 = strTokenizer14.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setDelimiterString("");
        java.lang.Object obj19 = strTokenizer18.clone();
        java.util.List<java.lang.String> strList20 = strTokenizer18.getTokenList();
        int int21 = strList20.size();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.stream();
        java.lang.Object[] objArray27 = strList24.toArray();
        boolean boolean28 = strList20.removeAll((java.util.Collection<java.lang.String>) strList24);
        boolean boolean29 = strList9.containsAll((java.util.Collection<java.lang.String>) strList20);
        java.util.Spliterator<java.lang.String> strSpliterator30 = strList20.spliterator();
        int int31 = strList20.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher34);
        java.lang.String str36 = strTokenizer35.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer35.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer35.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer35.setDelimiterMatcher(strMatcher41);
        java.lang.Class<?> wildcardClass43 = strTokenizer42.getClass();
        int int44 = strList20.indexOf((java.lang.Object) wildcardClass43);
        java.util.stream.Stream<java.lang.String> strStream45 = strList20.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher47, strMatcher48);
        java.lang.String str50 = strTokenizer49.toString();
        java.util.List<java.lang.String> strList51 = strTokenizer49.getTokenList();
        java.lang.Object obj52 = null;
        boolean boolean53 = strList51.remove(obj52);
        strList51.clear();
        boolean boolean55 = strList20.contains((java.lang.Object) strList51);
        char[] charArray57 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher59, strMatcher60);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer61.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, strMatcher62, strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, '4');
        int int69 = strTokenizer68.previousIndex();
        boolean boolean70 = strList20.remove((java.lang.Object) int69);
        boolean boolean71 = strList20.isEmpty();
        strList20.clear();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str15, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strSpliterator30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str36, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strStream45);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str50, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a]");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test11989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11989");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '#');
        java.lang.String str12 = strTokenizer11.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer11.setQuoteChar('a');
        java.lang.String str15 = strTokenizer14.previousToken();
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "a" + "'", str12, "a");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "a" + "'", str15, "a");
    }

    @Test
    public void test11990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11990");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        java.util.List<java.lang.String> strList5 = strTokenizer3.getTokenList();
        boolean boolean6 = strList5.isEmpty();
        boolean boolean8 = strList5.add("a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("a");
        java.util.List<java.lang.String> strList11 = strTokenizer10.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher13, strMatcher14);
        java.lang.String str16 = strTokenizer15.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer15.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer15.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.setIgnoreEmptyTokens(false);
        int int25 = strList11.indexOf((java.lang.Object) strTokenizer22);
        strList11.clear();
        char[] charArray27 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher28);
        int int30 = strTokenizer29.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.reset();
        java.lang.String str32 = strTokenizer29.nextToken();
        boolean boolean33 = strList11.remove((java.lang.Object) str32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.reset("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setDelimiterString("hi!");
        boolean boolean40 = strList11.equals((java.lang.Object) "hi!");
        boolean boolean41 = strList5.addAll((java.util.Collection<java.lang.String>) strList11);
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.util.stream.Stream<java.lang.String> strStream46 = strList44.stream();
        java.lang.Object[] objArray47 = strList44.toArray();
        java.lang.Object[] objArray48 = strList44.toArray();
        char[] charArray50 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher52, strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher55, strMatcher56);
        char[] charArray59 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher61, strMatcher62);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer63.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, strMatcher64, strMatcher65);
        int int70 = strMatcher55.isMatch(charArray59, 1, 1, (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, "StrTokenizer[hi!]");
        java.util.List<java.lang.String> strList76 = strTokenizer75.getTokenList();
        strList76.clear();
        int int78 = strList44.indexOf((java.lang.Object) strList76);
        java.util.Iterator<java.lang.String> strItor79 = strList44.iterator();
        boolean boolean80 = strList11.removeAll((java.util.Collection<java.lang.String>) strList44);
        // The following exception was thrown during execution in test generation
        try {
            strList44.add((int) 'a', "StrTokenizer[a]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str16, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strStream46);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[hi!]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[hi!]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a]");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[a]");
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(strItor79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test11991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11991");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray2 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher4, strMatcher5);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7, strMatcher8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer10.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer0.setTrimmerMatcher(strMatcher11);
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer12.setDelimiterMatcher(strMatcher23);
        java.lang.String str25 = strTokenizer24.getContent();
        char[] charArray27 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher29, strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher32, strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray27);
        char[] charArray40 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher42, strMatcher43);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher45, strMatcher46);
        char[] charArray49 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher51, strMatcher52);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = strTokenizer53.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher54, strMatcher55);
        int int60 = strMatcher45.isMatch(charArray49, 1, 1, (int) ' ');
        char[] charArray61 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, strMatcher62);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer63.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher45, strMatcher64);
        char[] charArray67 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher69, strMatcher70);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer71.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, strMatcher72, strMatcher73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray67);
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher76);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer24.reset(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer24.setEmptyTokenAsNull(false);
        boolean boolean82 = strTokenizer81.hasPrevious();
        java.util.List<java.lang.String> strList83 = strTokenizer81.getTokenList();
        java.lang.Class<?> wildcardClass84 = strList83.getClass();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a]");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[a]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a]");
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a]");
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(strList83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test11992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11992");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!");
        boolean boolean4 = strTokenizer3.hasNext();
        java.lang.String str5 = strTokenizer3.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[a]", strMatcher1, strMatcher6);
        java.lang.String str8 = strTokenizer7.previousToken();
        java.lang.String str9 = strTokenizer7.next();
        boolean boolean10 = strTokenizer7.hasNext();
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "StrTokenizer[a]" + "'", str9, "StrTokenizer[a]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test11993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11993");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "a");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.setIgnoredChar('a');
        int int20 = strTokenizer19.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer19.getIgnoredMatcher();
        char[] charArray23 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, '4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, "StrTokenizer[, ]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, '#', ' ');
        // The following exception was thrown during execution in test generation
        try {
            int int43 = strMatcher21.isMatch(charArray23, 100, (int) (byte) 100, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strMatcher28);
    }

    @Test
    public void test11994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11994");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher2, strMatcher3);
        java.lang.String str5 = strTokenizer4.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer4.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer4.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer4.setDelimiterMatcher(strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher10);
        boolean boolean13 = strTokenizer12.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer12.setTrimmerMatcher(strMatcher15);
        boolean boolean17 = strTokenizer16.hasPrevious();
        boolean boolean18 = strTokenizer16.isEmptyTokenAsNull();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str5, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test11995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11995");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        boolean boolean4 = strTokenizer3.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.setIgnoredChar('a');
        int int9 = strTokenizer6.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer6.reset("StrTokenizer[not");
        java.lang.String str12 = strTokenizer11.next();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "StrTokenizer[not" + "'", str12, "StrTokenizer[not");
    }

    @Test
    public void test11996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11996");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setDelimiterString("");
        java.util.List<java.lang.String> strList6 = strTokenizer3.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer3.getDelimiterMatcher();
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strMatcher7);
    }

    @Test
    public void test11997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11997");
        char[] charArray1 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher3, strMatcher4);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher6, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray1);
        char[] charArray14 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher16, strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher19, strMatcher20);
        char[] charArray23 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28, strMatcher29);
        int int34 = strMatcher19.isMatch(charArray23, 1, 1, (int) ' ');
        char[] charArray35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray1, strMatcher19, strMatcher38);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher41, strMatcher42);
        java.lang.String str44 = strTokenizer43.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer43.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer43.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.setIgnoreEmptyTokens(false);
        int int53 = strTokenizer50.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer50.setDelimiterChar('a');
        char[] charArray57 = new char[] { 'a' };
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher59, strMatcher60);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer61.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, strMatcher62, strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, '4', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, strMatcher70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer50.reset(charArray57);
        int int78 = strMatcher19.isMatch(charArray57, (int) (short) 0, (int) ' ', (int) (short) 1);
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray57);
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, ' ', '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, 'a', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, ' ', ' ');
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str44, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a]");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strTokenizer85);
    }

    @Test
    public void test11998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11998");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterString("");
        java.lang.Object obj8 = strTokenizer7.clone();
        java.util.List<java.lang.String> strList9 = strTokenizer7.getTokenList();
        int int10 = strList9.size();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.stream.Stream<java.lang.String> strStream15 = strList13.stream();
        java.lang.Object[] objArray16 = strList13.toArray();
        boolean boolean17 = strList9.removeAll((java.util.Collection<java.lang.String>) strList13);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher20);
        boolean boolean22 = strTokenizer21.hasPrevious();
        int int23 = strTokenizer21.nextIndex();
        int int24 = strTokenizer21.previousIndex();
        boolean boolean25 = strList9.remove((java.lang.Object) strTokenizer21);
        strList9.clear();
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        boolean boolean31 = strList29.isEmpty();
        strList29.clear();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher34, strMatcher35);
        java.lang.String str37 = strTokenizer36.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setDelimiterString("");
        java.lang.Object obj41 = strTokenizer40.clone();
        java.util.List<java.lang.String> strList42 = strTokenizer40.getTokenList();
        int int43 = strTokenizer40.size();
        java.util.List<java.lang.String> strList44 = strTokenizer40.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int46 = strList44.lastIndexOf((java.lang.Object) strMatcher45);
        boolean boolean47 = strList29.retainAll((java.util.Collection<java.lang.String>) strList44);
        boolean boolean48 = strList9.retainAll((java.util.Collection<java.lang.String>) strList29);
        strList9.clear();
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.stream.Stream<java.lang.String> strStream54 = strList52.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher57);
        boolean boolean59 = strList52.remove((java.lang.Object) strMatcher57);
        boolean boolean60 = strList52.isEmpty();
        boolean boolean61 = strList9.removeAll((java.util.Collection<java.lang.String>) strList52);
        java.lang.Object[] objArray62 = strList9.toArray();
        java.util.stream.Stream<java.lang.String> strStream63 = strList9.stream();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str37, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strStream54);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertNotNull(strStream63);
    }

    @Test
    public void test11999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11999");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", ' ', '4');
        java.lang.String str4 = strTokenizer3.next();
        boolean boolean5 = strTokenizer3.hasNext();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not" + "'", str4, "StrTokenizer[not");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test12000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test12000");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher1, strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setDelimiterString("hi!");
        java.util.List<java.lang.String> strList7 = strTokenizer6.getTokenList();
        java.util.stream.Stream<java.lang.String> strStream8 = strList7.parallelStream();
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.stream.Stream<java.lang.String> strStream13 = strList11.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher15, strMatcher16);
        java.lang.String str18 = strTokenizer17.toString();
        java.util.List<java.lang.String> strList19 = strTokenizer17.getTokenList();
        java.lang.Object obj20 = null;
        boolean boolean21 = strList19.remove(obj20);
        boolean boolean22 = strList11.removeAll((java.util.Collection<java.lang.String>) strList19);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher25);
        java.lang.String str27 = strTokenizer26.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer28.setDelimiterString("");
        java.lang.Object obj31 = strTokenizer30.clone();
        java.util.List<java.lang.String> strList32 = strTokenizer30.getTokenList();
        boolean boolean33 = strList11.retainAll((java.util.Collection<java.lang.String>) strList32);
        java.util.ListIterator<java.lang.String> strItor34 = strList32.listIterator();
        boolean boolean35 = strList7.contains((java.lang.Object) strItor34);
        java.util.stream.Stream<java.lang.String> strStream36 = strList7.parallelStream();
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator37 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList7.replaceAll(strUnaryOperator37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strStream8);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str18, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str27, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strItor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strStream36);
    }
}

